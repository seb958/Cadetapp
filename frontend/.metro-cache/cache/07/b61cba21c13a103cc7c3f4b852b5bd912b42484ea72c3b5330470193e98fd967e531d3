{"dependencies":[{"name":"./core.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":87,"index":102}}],"key":"mJVVi7YU3vDVLm6ZethtbJGh1KY=","exportNames":["*"],"imports":1}},{"name":"./PlatformChecker.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":103},"end":{"line":4,"column":64,"index":167}}],"key":"6AA7RQghlqlrd3hVWNoLh/rI420=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"updateLayoutAnimations\", {\n    enumerable: true,\n    get: function () {\n      return updateLayoutAnimations;\n    }\n  });\n  var _coreJs = require(_dependencyMap[0], \"./core.js\");\n  var _PlatformCheckerJs = require(_dependencyMap[1], \"./PlatformChecker.js\");\n  function createUpdateManager() {\n    const animations = [];\n    // When a stack is rerendered we reconfigure all the shared elements.\n    // To do that we want them to appear in our batch in the correct order,\n    // so we defer some of the updates to appear at the end of the batch.\n    const deferredAnimations = [];\n    return {\n      update(batchItem, isUnmounting) {\n        if (isUnmounting) {\n          deferredAnimations.push(batchItem);\n        } else {\n          animations.push(batchItem);\n        }\n        if (animations.length + deferredAnimations.length === 1) {\n          (0, _PlatformCheckerJs.isFabric)() ? this.flush() : setImmediate(this.flush);\n        }\n      },\n      flush() {\n        (0, _coreJs.configureLayoutAnimationBatch)(animations.concat(deferredAnimations));\n        animations.length = 0;\n        deferredAnimations.length = 0;\n      }\n    };\n  }\n\n  /**\n   * Lets you update the current configuration of the layout animation or shared\n   * element transition for a given component. Configurations are batched and\n   * applied at the end of the current execution block, right before sending the\n   * response back to native.\n   *\n   * @param viewTag - The tag of the component you'd like to configure.\n   * @param type - The type of the animation you'd like to configure -\n   *   {@link LayoutAnimationType}.\n   * @param config - The animation configuration - {@link LayoutAnimationFunction},\n   *   {@link SharedTransitionAnimationsFunction}, {@link ProgressAnimationCallback}\n   *   or {@link Keyframe}. Passing `undefined` will remove the animation.\n   * @param sharedTransitionTag - The tag of the shared element transition you'd\n   *   like to configure. Passing `undefined` will remove the transition.\n   * @param isUnmounting - Determines whether the configuration should be included\n   *   at the end of the batch, after all the non-deferred configurations (even\n   *   those that were updated later). This is used to retain the correct ordering\n   *   of shared elements. Defaults to `false`.\n   */\n  let updateLayoutAnimations;\n  if ((0, _PlatformCheckerJs.shouldBeUseWeb)()) {\n    updateLayoutAnimations = () => {\n      // no-op\n    };\n  } else {\n    const updateLayoutAnimationsManager = createUpdateManager();\n    updateLayoutAnimations = (viewTag, type, config, sharedTransitionTag, isUnmounting) => updateLayoutAnimationsManager.update({\n      viewTag,\n      type,\n      config: config ? (0, _coreJs.makeShareableCloneRecursive)(config) : undefined,\n      sharedTransitionTag\n    }, isUnmounting);\n  }\n});","lineCount":73,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,49,0,"Object"],[7,8,49,0],[7,9,49,0,"defineProperty"],[7,23,49,0],[7,24,49,0,"exports"],[7,31,49,0],[8,4,49,0,"enumerable"],[8,14,49,0],[9,4,49,0,"get"],[9,7,49,0],[9,18,49,0,"get"],[9,19,49,0],[10,6,49,0],[10,13,49,0,"updateLayoutAnimations"],[10,35,49,0],[11,4,49,0],[12,2,49,0],[13,2,3,0],[13,6,3,0,"_coreJs"],[13,13,3,0],[13,16,3,0,"require"],[13,23,3,0],[13,24,3,0,"_dependencyMap"],[13,38,3,0],[14,2,4,0],[14,6,4,0,"_PlatformCheckerJs"],[14,24,4,0],[14,27,4,0,"require"],[14,34,4,0],[14,35,4,0,"_dependencyMap"],[14,49,4,0],[15,2,5,0],[15,11,5,9,"createUpdateManager"],[15,30,5,28,"createUpdateManager"],[15,31,5,28],[15,33,5,31],[16,4,6,2],[16,10,6,8,"animations"],[16,20,6,18],[16,23,6,21],[16,25,6,23],[17,4,7,2],[18,4,8,2],[19,4,9,2],[20,4,10,2],[20,10,10,8,"deferredAnimations"],[20,28,10,26],[20,31,10,29],[20,33,10,31],[21,4,11,2],[21,11,11,9],[22,6,12,4,"update"],[22,12,12,10,"update"],[22,13,12,11,"batchItem"],[22,22,12,20],[22,24,12,22,"isUnmounting"],[22,36,12,34],[22,38,12,36],[23,8,13,6],[23,12,13,10,"isUnmounting"],[23,24,13,22],[23,26,13,24],[24,10,14,8,"deferredAnimations"],[24,28,14,26],[24,29,14,27,"push"],[24,33,14,31],[24,34,14,32,"batchItem"],[24,43,14,41],[24,44,14,42],[25,8,15,6],[25,9,15,7],[25,15,15,13],[26,10,16,8,"animations"],[26,20,16,18],[26,21,16,19,"push"],[26,25,16,23],[26,26,16,24,"batchItem"],[26,35,16,33],[26,36,16,34],[27,8,17,6],[28,8,18,6],[28,12,18,10,"animations"],[28,22,18,20],[28,23,18,21,"length"],[28,29,18,27],[28,32,18,30,"deferredAnimations"],[28,50,18,48],[28,51,18,49,"length"],[28,57,18,55],[28,62,18,60],[28,63,18,61],[28,65,18,63],[29,10,19,8],[29,14,19,8,"isFabric"],[29,32,19,16],[29,33,19,16,"isFabric"],[29,41,19,16],[29,43,19,17],[29,44,19,18],[29,47,19,21],[29,51,19,25],[29,52,19,26,"flush"],[29,57,19,31],[29,58,19,32],[29,59,19,33],[29,62,19,36,"setImmediate"],[29,74,19,48],[29,75,19,49],[29,79,19,53],[29,80,19,54,"flush"],[29,85,19,59],[29,86,19,60],[30,8,20,6],[31,6,21,4],[31,7,21,5],[32,6,22,4,"flush"],[32,11,22,9,"flush"],[32,12,22,9],[32,14,22,12],[33,8,23,6],[33,12,23,6,"configureLayoutAnimationBatch"],[33,19,23,35],[33,20,23,35,"configureLayoutAnimationBatch"],[33,49,23,35],[33,51,23,36,"animations"],[33,61,23,46],[33,62,23,47,"concat"],[33,68,23,53],[33,69,23,54,"deferredAnimations"],[33,87,23,72],[33,88,23,73],[33,89,23,74],[34,8,24,6,"animations"],[34,18,24,16],[34,19,24,17,"length"],[34,25,24,23],[34,28,24,26],[34,29,24,27],[35,8,25,6,"deferredAnimations"],[35,26,25,24],[35,27,25,25,"length"],[35,33,25,31],[35,36,25,34],[35,37,25,35],[36,6,26,4],[37,4,27,2],[37,5,27,3],[38,2,28,0],[40,2,30,0],[41,0,31,0],[42,0,32,0],[43,0,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,0,40,0],[51,0,41,0],[52,0,42,0],[53,0,43,0],[54,0,44,0],[55,0,45,0],[56,0,46,0],[57,0,47,0],[58,0,48,0],[59,2,49,7],[59,6,49,11,"updateLayoutAnimations"],[59,28,49,33],[60,2,50,0],[60,6,50,4],[60,10,50,4,"shouldBeUseWeb"],[60,28,50,18],[60,29,50,18,"shouldBeUseWeb"],[60,43,50,18],[60,45,50,19],[60,46,50,20],[60,48,50,22],[61,4,51,2,"updateLayoutAnimations"],[61,26,51,24],[61,29,51,27,"updateLayoutAnimations"],[61,30,51,27],[61,35,51,33],[62,6,52,4],[63,4,52,4],[63,5,53,3],[64,2,54,0],[64,3,54,1],[64,9,54,7],[65,4,55,2],[65,10,55,8,"updateLayoutAnimationsManager"],[65,39,55,37],[65,42,55,40,"createUpdateManager"],[65,61,55,59],[65,62,55,60],[65,63,55,61],[66,4,56,2,"updateLayoutAnimations"],[66,26,56,24],[66,29,56,27,"updateLayoutAnimations"],[66,30,56,28,"viewTag"],[66,37,56,35],[66,39,56,37,"type"],[66,43,56,41],[66,45,56,43,"config"],[66,51,56,49],[66,53,56,51,"sharedTransitionTag"],[66,72,56,70],[66,74,56,72,"isUnmounting"],[66,86,56,84],[66,91,56,89,"updateLayoutAnimationsManager"],[66,120,56,118],[66,121,56,119,"update"],[66,127,56,125],[66,128,56,126],[67,6,57,4,"viewTag"],[67,13,57,11],[68,6,58,4,"type"],[68,10,58,8],[69,6,59,4,"config"],[69,12,59,10],[69,14,59,12,"config"],[69,20,59,18],[69,23,59,21],[69,27,59,21,"makeShareableCloneRecursive"],[69,34,59,48],[69,35,59,48,"makeShareableCloneRecursive"],[69,62,59,48],[69,64,59,49,"config"],[69,70,59,55],[69,71,59,56],[69,74,59,59,"undefined"],[69,83,59,68],[70,6,60,4,"sharedTransitionTag"],[71,4,61,2],[71,5,61,3],[71,7,61,5,"isUnmounting"],[71,19,61,17],[71,20,61,18],[72,2,62,0],[73,0,62,1],[73,3]],"functionMap":{"names":["<global>","createUpdateManager","update","flush","updateLayoutAnimations"],"mappings":"AAA;ACI;ICO;KDS;IEC;KFI;CDE;2BIuB;GJE;2BIG;kBJK"},"hasCjsExports":false},"type":"js/module"}]}