{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  exports.hasProperty = hasProperty;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.deepEqual = deepEqual;\n  Object.defineProperty(exports, \"INT32_MAX\", {\n    enumerable: true,\n    get: function () {\n      return INT32_MAX;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    var previousArr = [null];\n    var currentArr = [...array];\n    var transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      var previous = previousArr[i];\n      var transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  }\n\n  // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n  function isFabric() {\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!global?.nativeFabricUIManager;\n  }\n  function isReact19() {\n    return React.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    var localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    var keys1 = Object.keys(obj1);\n    var keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (var key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  var INT32_MAX = 2 ** 31 - 1;\n});","lineCount":108,"map":[[12,2,3,0,"exports"],[12,9,3,0],[12,10,3,0,"toArray"],[12,17,3,0],[12,20,3,0,"toArray"],[12,27,3,0],[13,2,15,0,"exports"],[13,9,15,0],[13,10,15,0,"withPrevAndCurrent"],[13,28,15,0],[13,31,15,0,"withPrevAndCurrent"],[13,49,15,0],[14,2,35,0,"exports"],[14,9,35,0],[14,10,35,0,"hasProperty"],[14,21,35,0],[14,24,35,0,"hasProperty"],[14,35,35,0],[15,2,39,0,"exports"],[15,9,39,0],[15,10,39,0,"isTestEnv"],[15,19,39,0],[15,22,39,0,"isTestEnv"],[15,31,39,0],[16,2,44,0,"exports"],[16,9,44,0],[16,10,44,0,"tagMessage"],[16,20,44,0],[16,23,44,0,"tagMessage"],[16,33,44,0],[17,2,50,0,"exports"],[17,9,50,0],[17,10,50,0,"isFabric"],[17,18,50,0],[17,21,50,0,"isFabric"],[17,29,50,0],[18,2,55,0,"exports"],[18,9,55,0],[18,10,55,0,"isReact19"],[18,19,55,0],[18,22,55,0,"isReact19"],[18,31,55,0],[19,2,59,0,"exports"],[19,9,59,0],[19,10,59,0,"isRemoteDebuggingEnabled"],[19,34,59,0],[19,37,59,0,"isRemoteDebuggingEnabled"],[19,61,59,0],[20,2,78,0,"exports"],[20,9,78,0],[20,10,78,0,"deepEqual"],[20,19,78,0],[20,22,78,0,"deepEqual"],[20,31,78,0],[21,2,108,0,"Object"],[21,8,108,0],[21,9,108,0,"defineProperty"],[21,23,108,0],[21,24,108,0,"exports"],[21,31,108,0],[22,4,108,0,"enumerable"],[22,14,108,0],[23,4,108,0,"get"],[23,7,108,0],[23,18,108,0,"get"],[23,19,108,0],[24,6,108,0],[24,13,108,0,"INT32_MAX"],[24,22,108,0],[25,4,108,0],[26,2,108,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,7],[29,11,3,16,"toArray"],[29,18,3,23,"toArray"],[29,19,3,27,"object"],[29,25,3,42],[29,27,3,49],[30,4,4,2],[30,8,4,6],[30,9,4,7,"Array"],[30,14,4,12],[30,15,4,13,"isArray"],[30,22,4,20],[30,23,4,21,"object"],[30,29,4,27],[30,30,4,28],[30,32,4,30],[31,6,5,4],[31,13,5,11],[31,14,5,12,"object"],[31,20,5,18],[31,21,5,19],[32,4,6,2],[33,4,8,2],[33,11,8,9,"object"],[33,17,8,15],[34,2,9,0],[35,2,15,7],[35,11,15,16,"withPrevAndCurrent"],[35,29,15,34,"withPrevAndCurrent"],[35,30,16,2,"array"],[35,35,16,12],[35,37,17,2,"mapFn"],[35,42,17,48],[35,44,18,17],[36,4,19,2],[36,8,19,8,"previousArr"],[36,19,19,43],[36,22,19,46],[36,23,19,47],[36,27,19,51],[36,28,19,52],[37,4,20,2],[37,8,20,8,"currentArr"],[37,18,20,18],[37,21,20,21],[37,22,20,22],[37,25,20,25,"array"],[37,30,20,30],[37,31,20,31],[38,4,21,2],[38,8,21,8,"transformedArr"],[38,22,21,37],[38,25,21,40],[38,27,21,42],[39,4,22,2,"currentArr"],[39,14,22,12],[39,15,22,13,"forEach"],[39,22,22,20],[39,23,22,21],[39,24,22,22,"current"],[39,31,22,29],[39,33,22,31,"i"],[39,34,22,32],[39,39,22,37],[40,6,23,4],[41,6,24,4],[42,6,25,4],[43,6,26,4],[43,10,26,10,"previous"],[43,18,26,18],[43,21,26,21,"previousArr"],[43,32,26,32],[43,33,26,33,"i"],[43,34,26,34],[43,35,26,57],[44,6,27,4],[44,10,27,10,"transformed"],[44,21,27,21],[44,24,27,24,"mapFn"],[44,29,27,29],[44,30,27,30,"previous"],[44,38,27,38],[44,40,27,40,"current"],[44,47,27,47],[44,48,27,48],[45,6,28,4,"previousArr"],[45,17,28,15],[45,18,28,16,"push"],[45,22,28,20],[45,23,28,21,"transformed"],[45,34,28,32],[45,35,28,33],[46,6,29,4,"transformedArr"],[46,20,29,18],[46,21,29,19,"push"],[46,25,29,23],[46,26,29,24,"transformed"],[46,37,29,35],[46,38,29,36],[47,4,30,2],[47,5,30,3],[47,6,30,4],[48,4,31,2],[48,11,31,9,"transformedArr"],[48,25,31,23],[49,2,32,0],[51,2,34,0],[52,2,35,7],[52,11,35,16,"hasProperty"],[52,22,35,27,"hasProperty"],[52,23,35,28,"object"],[52,29,35,42],[52,31,35,44,"key"],[52,34,35,55],[52,36,35,57],[53,4,36,2],[53,11,36,9,"Object"],[53,17,36,15],[53,18,36,16,"prototype"],[53,27,36,25],[53,28,36,26,"hasOwnProperty"],[53,42,36,40],[53,43,36,41,"call"],[53,47,36,45],[53,48,36,46,"object"],[53,54,36,52],[53,56,36,54,"key"],[53,59,36,57],[53,60,36,58],[54,2,37,0],[55,2,39,7],[55,11,39,16,"isTestEnv"],[55,20,39,25,"isTestEnv"],[55,21,39,25],[55,23,39,37],[56,4,40,2],[57,4,41,2],[57,11,41,9,"hasProperty"],[57,22,41,20],[57,23,41,21,"global"],[57,29,41,27],[57,31,41,29],[57,40,41,38],[57,41,41,39],[57,45,41,43,"process"],[57,52,41,50],[57,53,41,51,"env"],[57,56,41,54],[57,57,41,55,"NODE_ENV"],[57,65,41,63],[57,70,41,68],[57,76,41,74],[58,2,42,0],[59,2,44,7],[59,11,44,16,"tagMessage"],[59,21,44,26,"tagMessage"],[59,22,44,27,"msg"],[59,25,44,38],[59,27,44,40],[60,4,45,2],[60,11,45,9],[60,45,45,43,"msg"],[60,48,45,46],[60,50,45,48],[61,2,46,0],[63,2,48,0],[64,2,49,0],[65,2,50,7],[65,11,50,16,"isFabric"],[65,19,50,24,"isFabric"],[65,20,50,24],[65,22,50,36],[66,4,51,2],[67,4,52,2],[67,11,52,9],[67,12,52,10],[67,13,52,11,"global"],[67,19,52,17],[67,21,52,19,"nativeFabricUIManager"],[67,42,52,40],[68,2,53,0],[69,2,55,7],[69,11,55,16,"isReact19"],[69,20,55,25,"isReact19"],[69,21,55,25],[69,23,55,28],[70,4,56,2],[70,11,56,9,"React"],[70,16,56,14],[70,17,56,14,"default"],[70,24,56,14],[70,25,56,15,"version"],[70,32,56,22],[70,33,56,23,"startsWith"],[70,43,56,33],[70,44,56,34],[70,49,56,39],[70,50,56,40],[71,2,57,0],[72,2,59,7],[72,11,59,16,"isRemoteDebuggingEnabled"],[72,35,59,40,"isRemoteDebuggingEnabled"],[72,36,59,40],[72,38,59,52],[73,4,60,2],[74,4,61,2],[75,4,62,2],[75,8,62,8,"localGlobal"],[75,19,62,19],[75,22,62,22,"global"],[75,28,62,35],[76,4,63,2],[76,11,64,4],[76,12,64,5],[76,13,64,6,"localGlobal"],[76,24,64,17],[76,25,64,18,"nativeCallSyncHook"],[76,43,64,36],[76,47,64,40],[76,48,64,41],[76,49,64,42,"localGlobal"],[76,60,64,53],[76,61,64,54,"__REMOTEDEV__"],[76,74,64,67],[76,79,65,4],[76,80,65,5,"localGlobal"],[76,91,65,16],[76,92,65,17,"RN$Bridgeless"],[76,105,65,30],[77,2,67,0],[79,2,69,0],[80,0,70,0],[81,0,71,0],[82,0,72,0],[83,0,73,0],[84,0,74,0],[85,0,75,0],[86,0,76,0],[87,0,77,0],[88,2,78,7],[88,11,78,16,"deepEqual"],[88,20,78,25,"deepEqual"],[88,21,78,26,"obj1"],[88,25,78,35],[88,27,78,37,"obj2"],[88,31,78,46],[88,33,78,48],[89,4,79,2],[89,8,79,6,"obj1"],[89,12,79,10],[89,17,79,15,"obj2"],[89,21,79,19],[89,23,79,21],[90,6,80,4],[90,13,80,11],[90,17,80,15],[91,4,81,2],[92,4,83,2],[92,8,84,4],[92,15,84,11,"obj1"],[92,19,84,15],[92,24,84,20],[92,32,84,28],[92,36,85,4],[92,43,85,11,"obj2"],[92,47,85,15],[92,52,85,20],[92,60,85,28],[92,64,86,4,"obj1"],[92,68,86,8],[92,73,86,13],[92,77,86,17],[92,81,87,4,"obj2"],[92,85,87,8],[92,90,87,13],[92,94,87,17],[92,96,88,4],[93,6,89,4],[93,13,89,11],[93,18,89,16],[94,4,90,2],[95,4,92,2],[95,8,92,8,"keys1"],[95,13,92,13],[95,16,92,16,"Object"],[95,22,92,22],[95,23,92,23,"keys"],[95,27,92,27],[95,28,92,28,"obj1"],[95,32,92,32],[95,33,92,33],[96,4,93,2],[96,8,93,8,"keys2"],[96,13,93,13],[96,16,93,16,"Object"],[96,22,93,22],[96,23,93,23,"keys"],[96,27,93,27],[96,28,93,28,"obj2"],[96,32,93,32],[96,33,93,33],[97,4,95,2],[97,8,95,6,"keys1"],[97,13,95,11],[97,14,95,12,"length"],[97,20,95,18],[97,25,95,23,"keys2"],[97,30,95,28],[97,31,95,29,"length"],[97,37,95,35],[97,39,95,37],[98,6,96,4],[98,13,96,11],[98,18,96,16],[99,4,97,2],[100,4,99,2],[100,9,99,7],[100,13,99,13,"key"],[100,16,99,16],[100,20,99,20,"keys1"],[100,25,99,25],[100,27,99,27],[101,6,100,4],[101,10,100,8],[101,11,100,9,"keys2"],[101,16,100,14],[101,17,100,15,"includes"],[101,25,100,23],[101,26,100,24,"key"],[101,29,100,27],[101,30,100,28],[101,34,100,32],[101,35,100,33,"deepEqual"],[101,44,100,42],[101,45,100,43,"obj1"],[101,49,100,47],[101,50,100,48,"key"],[101,53,100,51],[101,54,100,52],[101,56,100,54,"obj2"],[101,60,100,58],[101,61,100,59,"key"],[101,64,100,62],[101,65,100,63],[101,66,100,64],[101,68,100,66],[102,8,101,6],[102,15,101,13],[102,20,101,18],[103,6,102,4],[104,4,103,2],[105,4,105,2],[105,11,105,9],[105,15,105,13],[106,2,106,0],[107,2,108,7],[107,6,108,13,"INT32_MAX"],[107,15,108,22],[107,18,108,25],[107,19,108,26],[107,23,108,30],[107,25,108,32],[107,28,108,35],[107,29,108,36],[108,0,108,37],[108,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;OCE;CDM;OEM;qBCO;GDQ;CFE;OIG;CJE;OKE;CLG;OME;CNE;OOI;CPG;OQE;CRE;OSE;CTQ;OUW;CV4B"},"hasCjsExports":false},"type":"js/module"}]}