{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":39,"index":146},"end":{"line":8,"column":64,"index":171}}],"key":"TIRD4n0vm1viGfriWDBtxYTyDXo=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":13,"index":233},"end":{"line":12,"column":32,"index":252}}],"key":"6QJYsgIYyXDoX6Ak1wmI7AHik6U=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":17,"index":272},"end":{"line":14,"column":39,"index":294}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./NodeManager","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":42,"index":339},"end":{"line":16,"column":66,"index":363}}],"key":"F3nYMqO1jf4y4SLdde+ijNjAXe4=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":24,"index":391},"end":{"line":18,"column":54,"index":421}}],"key":"S1M4JF0i9x6zcvs3ggNUoVkhnZ0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[0], \"@egjs/hammerjs\"));\n  var _reactNative = require(_dependencyMap[1], \"react-native-web/dist/index\");\n  var _State = require(_dependencyMap[2], \"../State\");\n  var _constants = require(_dependencyMap[3], \"./constants\");\n  var NodeManager = _interopRequireWildcard(require(_dependencyMap[4], \"./NodeManager\"));\n  var _ghQueueMicrotask = require(_dependencyMap[5], \"../ghQueueMicrotask\");\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n    _getRequireWildcardCache = function () {\n      return cache;\n    };\n    return cache;\n  }\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n    var cache = _getRequireWildcardCache();\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  let gestureInstances = 0;\n  class GestureHandler {\n    get id() {\n      return `${this.name}${this.gestureInstance}`;\n    } // a simple way to check if GestureHandler is NativeViewGestureHandler, since importing it\n    // here to use instanceof would cause import cycle\n\n    get isNative() {\n      return false;\n    }\n    get isDiscrete() {\n      return false;\n    }\n    get shouldEnableGestureOnSetup() {\n      throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n    }\n    constructor() {\n      _defineProperty(this, \"handlerTag\", void 0);\n      _defineProperty(this, \"isGestureRunning\", false);\n      _defineProperty(this, \"view\", null);\n      _defineProperty(this, \"hasCustomActivationCriteria\", void 0);\n      _defineProperty(this, \"hasGestureFailed\", false);\n      _defineProperty(this, \"hammer\", null);\n      _defineProperty(this, \"initialRotation\", null);\n      _defineProperty(this, \"__initialX\", void 0);\n      _defineProperty(this, \"__initialY\", void 0);\n      _defineProperty(this, \"config\", {});\n      _defineProperty(this, \"previousState\", _State.State.UNDETERMINED);\n      _defineProperty(this, \"pendingGestures\", {});\n      _defineProperty(this, \"oldState\", _State.State.UNDETERMINED);\n      _defineProperty(this, \"lastSentState\", null);\n      _defineProperty(this, \"gestureInstance\", void 0);\n      _defineProperty(this, \"_stillWaiting\", void 0);\n      _defineProperty(this, \"propsRef\", void 0);\n      _defineProperty(this, \"ref\", void 0);\n      _defineProperty(this, \"clearSelfAsPending\", () => {\n        if (Array.isArray(this.config.waitFor)) {\n          for (const gesture of this.config.waitFor) {\n            gesture.removePendingGesture(this.id);\n          }\n        }\n      });\n      _defineProperty(this, \"destroy\", () => {\n        this.clearSelfAsPending();\n        if (this.hammer) {\n          this.hammer.stop(false);\n          this.hammer.destroy();\n        }\n        this.hammer = null;\n      });\n      _defineProperty(this, \"isPointInView\", ({\n        x,\n        y\n      }) => {\n        // @ts-ignore FIXME(TS)\n        const rect = this.view.getBoundingClientRect();\n        const pointerInside = x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n        return pointerInside;\n      });\n      _defineProperty(this, \"sendEvent\", nativeEvent => {\n        const {\n          onGestureHandlerEvent,\n          onGestureHandlerStateChange\n        } = this.propsRef.current;\n        const event = this.transformEventData(nativeEvent);\n        invokeNullableMethod(onGestureHandlerEvent, event);\n        if (this.lastSentState !== event.nativeEvent.state) {\n          this.lastSentState = event.nativeEvent.state;\n          invokeNullableMethod(onGestureHandlerStateChange, event);\n        }\n      });\n      _defineProperty(this, \"sync\", () => {\n        const gesture = this.hammer.get(this.name);\n        if (!gesture) return;\n        const enable = (recognizer, inputData) => {\n          if (!this.config.enabled) {\n            this.isGestureRunning = false;\n            this.hasGestureFailed = false;\n            return false;\n          } // Prevent events before the system is ready.\n\n          if (!inputData || !recognizer.options || typeof inputData.maxPointers === 'undefined') {\n            return this.shouldEnableGestureOnSetup;\n          }\n          if (this.hasGestureFailed) {\n            return false;\n          }\n          if (!this.isDiscrete) {\n            if (this.isGestureRunning) {\n              return true;\n            } // The built-in hammer.js \"waitFor\" doesn't work across multiple views.\n            // Only process if there are views to wait for.\n\n            this._stillWaiting = this._getPendingGestures(); // This gesture should continue waiting.\n\n            if (this._stillWaiting.length) {\n              // Check to see if one of the gestures you're waiting for has started.\n              // If it has then the gesture should fail.\n              for (const gesture of this._stillWaiting) {\n                // When the target gesture has started, this gesture must force fail.\n                if (!gesture.isDiscrete && gesture.isGestureRunning) {\n                  this.hasGestureFailed = true;\n                  this.isGestureRunning = false;\n                  return false;\n                }\n              } // This gesture shouldn't start until the others have finished.\n\n              return false;\n            }\n          } // Use default behaviour\n\n          if (!this.hasCustomActivationCriteria) {\n            return true;\n          }\n          const deltaRotation = this.initialRotation == null ? 0 : inputData.rotation - this.initialRotation; // @ts-ignore FIXME(TS)\n\n          const {\n            success,\n            failed\n          } = this.isGestureEnabledForEvent(this.getConfig(), recognizer, {\n            ...inputData,\n            deltaRotation\n          });\n          if (failed) {\n            this.simulateCancelEvent(inputData);\n            this.hasGestureFailed = true;\n          }\n          return success;\n        };\n        const params = this.getHammerConfig(); // @ts-ignore FIXME(TS)\n\n        gesture.set({\n          ...params,\n          enable\n        });\n      });\n      this.gestureInstance = gestureInstances++;\n      this.hasCustomActivationCriteria = false;\n    }\n    getConfig() {\n      return this.config;\n    }\n    onWaitingEnded(_gesture) {}\n    removePendingGesture(id) {\n      delete this.pendingGestures[id];\n    }\n    addPendingGesture(gesture) {\n      this.pendingGestures[gesture.id] = gesture;\n    }\n    isGestureEnabledForEvent(_config, _recognizer, _event) {\n      return {\n        success: true\n      };\n    }\n    get NativeGestureClass() {\n      throw new Error('Must override GestureHandler.NativeGestureClass');\n    }\n    updateHasCustomActivationCriteria(_config) {\n      return true;\n    }\n    updateGestureConfig({\n      enabled = true,\n      ...props\n    }) {\n      this.clearSelfAsPending();\n      this.config = this.ensureConfig({\n        enabled,\n        ...props\n      });\n      this.hasCustomActivationCriteria = this.updateHasCustomActivationCriteria(this.config);\n      if (Array.isArray(this.config.waitFor)) {\n        for (const gesture of this.config.waitFor) {\n          gesture.addPendingGesture(this);\n        }\n      }\n      if (this.hammer) {\n        this.sync();\n      }\n      return this.config;\n    }\n    getState(type) {\n      // @ts-ignore TODO(TS) check if this is needed\n      if (type == 0) {\n        return 0;\n      }\n      return _constants.EventMap[type];\n    }\n    transformEventData(event) {\n      const {\n        eventType,\n        maxPointers: numberOfPointers\n      } = event; // const direction = DirectionMap[ev.direction];\n\n      const changedTouch = event.changedPointers[0];\n      const pointerInside = this.isPointInView({\n        x: changedTouch.clientX,\n        y: changedTouch.clientY\n      }); // TODO(TS) Remove cast after https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50966 is merged.\n\n      const state = this.getState(eventType);\n      if (state !== this.previousState) {\n        this.oldState = this.previousState;\n        this.previousState = state;\n      }\n      return {\n        nativeEvent: {\n          numberOfPointers,\n          state,\n          pointerInside,\n          ...this.transformNativeEvent(event),\n          // onHandlerStateChange only\n          handlerTag: this.handlerTag,\n          target: this.ref,\n          // send oldState only when the state was changed, or is different than ACTIVE\n          // GestureDetector relies on the presence of `oldState` to differentiate between\n          // update events and state change events\n          oldState: state !== this.previousState || state != 4 ? this.oldState : undefined\n        },\n        timeStamp: Date.now()\n      };\n    }\n    transformNativeEvent(_event) {\n      return {};\n    }\n    cancelPendingGestures(event) {\n      for (const gesture of Object.values(this.pendingGestures)) {\n        if (gesture && gesture.isGestureRunning) {\n          gesture.hasGestureFailed = true;\n          gesture.cancelEvent(event);\n        }\n      }\n    }\n    notifyPendingGestures() {\n      for (const gesture of Object.values(this.pendingGestures)) {\n        if (gesture) {\n          gesture.onWaitingEnded(this);\n        }\n      }\n    } // FIXME event is undefined in runtime when firstly invoked (see Draggable example), check other functions taking event as input\n\n    onGestureEnded(event) {\n      this.isGestureRunning = false;\n      this.cancelPendingGestures(event);\n    }\n    forceInvalidate(event) {\n      if (this.isGestureRunning) {\n        this.hasGestureFailed = true;\n        this.cancelEvent(event);\n      }\n    }\n    cancelEvent(event) {\n      this.notifyPendingGestures();\n      this.sendEvent({\n        ...event,\n        eventType: _hammerjs.default.INPUT_CANCEL,\n        isFinal: true\n      });\n      this.onGestureEnded(event);\n    }\n    onRawEvent({\n      isFirst\n    }) {\n      if (isFirst) {\n        this.hasGestureFailed = false;\n      }\n    }\n    shouldUseTouchEvents(config) {\n      var _config$simultaneousH, _config$simultaneousH2;\n      return (_config$simultaneousH = (_config$simultaneousH2 = config.simultaneousHandlers) === null || _config$simultaneousH2 === void 0 ? void 0 : _config$simultaneousH2.some(handler => handler.isNative)) !== null && _config$simultaneousH !== void 0 ? _config$simultaneousH : false;\n    }\n    setView(ref, propsRef) {\n      if (ref == null) {\n        this.destroy();\n        this.view = null;\n        return;\n      } // @ts-ignore window doesn't exist on global type as we don't want to use Node types\n\n      const SUPPORTS_TOUCH = 'ontouchstart' in window;\n      this.propsRef = propsRef;\n      this.ref = ref;\n      this.view = (0, _reactNative.findNodeHandle)(ref); // When the browser starts handling the gesture (e.g. scrolling), it sends a pointercancel event and stops\n      // sending additional pointer events. This is not the case with touch events, so if the gesture is simultaneous\n      // with a NativeGestureHandler, we need to check if touch events are supported and use them if possible.\n\n      this.hammer = SUPPORTS_TOUCH && this.shouldUseTouchEvents(this.config) ? new _hammerjs.default.Manager(this.view, {\n        inputClass: _hammerjs.default.TouchInput\n      }) : new _hammerjs.default.Manager(this.view);\n      this.oldState = _State.State.UNDETERMINED;\n      this.previousState = _State.State.UNDETERMINED;\n      this.lastSentState = null;\n      const {\n        NativeGestureClass\n      } = this; // @ts-ignore TODO(TS)\n\n      const gesture = new NativeGestureClass(this.getHammerConfig());\n      this.hammer.add(gesture);\n      this.hammer.on('hammer.input', ev => {\n        if (!this.config.enabled) {\n          this.hasGestureFailed = false;\n          this.isGestureRunning = false;\n          return;\n        }\n        this.onRawEvent(ev); // TODO: Bacon: Check against something other than null\n        // The isFirst value is not called when the first rotation is calculated.\n\n        if (this.initialRotation === null && ev.rotation !== 0) {\n          this.initialRotation = ev.rotation;\n        }\n        if (ev.isFinal) {\n          // in favor of a willFail otherwise the last frame of the gesture will be captured.\n          setTimeout(() => {\n            this.initialRotation = null;\n            this.hasGestureFailed = false;\n          });\n        }\n      });\n      this.setupEvents();\n      this.sync();\n    }\n    setupEvents() {\n      // TODO(TS) Hammer types aren't exactly that what we get in runtime\n      if (!this.isDiscrete) {\n        this.hammer.on(`${this.name}start`, event => this.onStart(event));\n        this.hammer.on(`${this.name}end ${this.name}cancel`, event => {\n          this.onGestureEnded(event);\n        });\n      }\n      this.hammer.on(this.name, ev => this.onGestureActivated(ev)); // TODO(TS) remove cast after https://github.com/DefinitelyTyped/DefinitelyTyped/pull/50438 is merged\n    }\n    onStart({\n      deltaX,\n      deltaY,\n      rotation\n    }) {\n      // Reset the state for the next gesture\n      this.oldState = _State.State.UNDETERMINED;\n      this.previousState = _State.State.UNDETERMINED;\n      this.lastSentState = null;\n      this.isGestureRunning = true;\n      this.__initialX = deltaX;\n      this.__initialY = deltaY;\n      this.initialRotation = rotation;\n    }\n    onGestureActivated(ev) {\n      this.sendEvent(ev);\n    }\n    onSuccess() {}\n    _getPendingGestures() {\n      if (Array.isArray(this.config.waitFor) && this.config.waitFor.length) {\n        // Get the list of gestures that this gesture is still waiting for.\n        // Use `=== false` in case a ref that isn't a gesture handler is used.\n        const stillWaiting = this.config.waitFor.filter(({\n          hasGestureFailed\n        }) => hasGestureFailed === false);\n        return stillWaiting;\n      }\n      return [];\n    }\n    getHammerConfig() {\n      const pointers = this.config.minPointers === this.config.maxPointers ? this.config.minPointers : 0;\n      return {\n        pointers\n      };\n    }\n    simulateCancelEvent(_inputData) {} // Validate the props\n\n    ensureConfig(config) {\n      const props = {\n        ...config\n      }; // TODO(TS) We use ! to assert that if property is present then value is not empty (null, undefined)\n\n      if ('minDist' in config) {\n        props.minDist = config.minDist;\n        props.minDistSq = props.minDist * props.minDist;\n      }\n      if ('minVelocity' in config) {\n        props.minVelocity = config.minVelocity;\n        props.minVelocitySq = props.minVelocity * props.minVelocity;\n      }\n      if ('maxDist' in config) {\n        props.maxDist = config.maxDist;\n        props.maxDistSq = config.maxDist * config.maxDist;\n      }\n      if ('waitFor' in config) {\n        props.waitFor = asArray(config.waitFor).map(({\n          handlerTag\n        }) => NodeManager.getHandler(handlerTag)).filter(v => v);\n      } else {\n        props.waitFor = null;\n      }\n      if ('simultaneousHandlers' in config) {\n        const shouldUseTouchEvents = this.shouldUseTouchEvents(this.config);\n        props.simultaneousHandlers = asArray(config.simultaneousHandlers).map(handler => {\n          if (typeof handler === 'number') {\n            return NodeManager.getHandler(handler);\n          } else {\n            return NodeManager.getHandler(handler.handlerTag);\n          }\n        }).filter(v => v);\n        if (shouldUseTouchEvents !== this.shouldUseTouchEvents(props)) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            // if the undelying event API needs to be changed, we need to unmount and mount\n            // the hammer instance again.\n            this.destroy();\n            this.setView(this.ref, this.propsRef);\n          });\n        }\n      } else {\n        props.simultaneousHandlers = null;\n      }\n      const configProps = ['minPointers', 'maxPointers', 'minDist', 'maxDist', 'maxDistSq', 'minVelocitySq', 'minDistSq', 'minVelocity', 'failOffsetXStart', 'failOffsetYStart', 'failOffsetXEnd', 'failOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'activeOffsetYStart', 'activeOffsetYEnd'];\n      configProps.forEach(prop => {\n        if (typeof props[prop] === 'undefined') {\n          props[prop] = Number.NaN;\n        }\n      });\n      return props; // TODO(TS) how to convince TS that props are filled?\n    }\n  } // TODO(TS) investigate this method\n  // Used for sending data to a callback or AnimatedEvent\n\n  function invokeNullableMethod(method, event) {\n    if (method) {\n      if (typeof method === 'function') {\n        method(event);\n      } else {\n        // For use with reanimated's AnimatedEvent\n        if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n          const handler = method.__getHandler();\n          invokeNullableMethod(handler, event);\n        } else {\n          if ('__nodeConfig' in method) {\n            const {\n              argMapping\n            } = method.__nodeConfig;\n            if (Array.isArray(argMapping)) {\n              for (const [index, [key, value]] of argMapping.entries()) {\n                if (key in event.nativeEvent) {\n                  // @ts-ignore fix method type\n                  const nativeValue = event.nativeEvent[key];\n                  if (value && value.setValue) {\n                    // Reanimated API\n                    value.setValue(nativeValue);\n                  } else {\n                    // RN Animated API\n                    method.__nodeConfig.argMapping[index] = [key, nativeValue];\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  function asArray(value) {\n    // TODO(TS) use config.waitFor type\n    return value == null ? [] : Array.isArray(value) ? value : [value];\n  }\n  var _default = GestureHandler;\n  exports.default = _default;\n});","lineCount":532,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,8,0],[8,6,8,4,"_hammerjs"],[8,15,8,13],[8,18,8,16,"_interopRequireDefault"],[8,40,8,38],[8,41,8,39,"require"],[8,48,8,46],[8,49,8,46,"_dependencyMap"],[8,63,8,46],[8,84,8,63],[8,85,8,64],[8,86,8,65],[9,2,8,66],[9,6,8,66,"_reactNative"],[9,18,8,66],[9,21,8,66,"require"],[9,28,8,66],[9,29,8,66,"_dependencyMap"],[9,43,8,66],[10,2,12,0],[10,6,12,4,"_State"],[10,12,12,10],[10,15,12,13,"require"],[10,22,12,20],[10,23,12,20,"_dependencyMap"],[10,37,12,20],[10,52,12,31],[10,53,12,32],[11,2,14,0],[11,6,14,4,"_constants"],[11,16,14,14],[11,19,14,17,"require"],[11,26,14,24],[11,27,14,24,"_dependencyMap"],[11,41,14,24],[11,59,14,38],[11,60,14,39],[12,2,16,0],[12,6,16,4,"NodeManager"],[12,17,16,15],[12,20,16,18,"_interopRequireWildcard"],[12,43,16,41],[12,44,16,42,"require"],[12,51,16,49],[12,52,16,49,"_dependencyMap"],[12,66,16,49],[12,86,16,65],[12,87,16,66],[12,88,16,67],[13,2,18,0],[13,6,18,4,"_ghQueueMicrotask"],[13,23,18,21],[13,26,18,24,"require"],[13,33,18,31],[13,34,18,31,"_dependencyMap"],[13,48,18,31],[13,74,18,53],[13,75,18,54],[14,2,20,0],[14,11,20,9,"_getRequireWildcardCache"],[14,35,20,33,"_getRequireWildcardCache"],[14,36,20,33],[14,38,20,36],[15,4,20,38],[15,8,20,42],[15,15,20,49,"WeakMap"],[15,22,20,56],[15,27,20,61],[15,37,20,71],[15,39,20,73],[15,46,20,80],[15,50,20,84],[16,4,20,86],[16,8,20,90,"cache"],[16,13,20,95],[16,16,20,98],[16,20,20,102,"WeakMap"],[16,27,20,109],[16,28,20,110],[16,29,20,111],[17,4,20,113,"_getRequireWildcardCache"],[17,28,20,137],[17,31,20,140],[17,40,20,140,"_getRequireWildcardCache"],[17,41,20,140],[17,43,20,152],[18,6,20,154],[18,13,20,161,"cache"],[18,18,20,166],[19,4,20,168],[19,5,20,169],[20,4,20,171],[20,11,20,178,"cache"],[20,16,20,183],[21,2,20,185],[22,2,22,0],[22,11,22,9,"_interopRequireWildcard"],[22,34,22,32,"_interopRequireWildcard"],[22,35,22,33,"obj"],[22,38,22,36],[22,40,22,38],[23,4,22,40],[23,8,22,44,"obj"],[23,11,22,47],[23,15,22,51,"obj"],[23,18,22,54],[23,19,22,55,"__esModule"],[23,29,22,65],[23,31,22,67],[24,6,22,69],[24,13,22,76,"obj"],[24,16,22,79],[25,4,22,81],[26,4,22,83],[26,8,22,87,"obj"],[26,11,22,90],[26,16,22,95],[26,20,22,99],[26,24,22,103],[26,31,22,110,"obj"],[26,34,22,113],[26,39,22,118],[26,47,22,126],[26,51,22,130],[26,58,22,137,"obj"],[26,61,22,140],[26,66,22,145],[26,76,22,155],[26,78,22,157],[27,6,22,159],[27,13,22,166],[28,8,22,168,"default"],[28,15,22,175],[28,17,22,177,"obj"],[29,6,22,181],[29,7,22,182],[30,4,22,184],[31,4,22,186],[31,8,22,190,"cache"],[31,13,22,195],[31,16,22,198,"_getRequireWildcardCache"],[31,40,22,222],[31,41,22,223],[31,42,22,224],[32,4,22,226],[32,8,22,230,"cache"],[32,13,22,235],[32,17,22,239,"cache"],[32,22,22,244],[32,23,22,245,"has"],[32,26,22,248],[32,27,22,249,"obj"],[32,30,22,252],[32,31,22,253],[32,33,22,255],[33,6,22,257],[33,13,22,264,"cache"],[33,18,22,269],[33,19,22,270,"get"],[33,22,22,273],[33,23,22,274,"obj"],[33,26,22,277],[33,27,22,278],[34,4,22,280],[35,4,22,282],[35,8,22,286,"newObj"],[35,14,22,292],[35,17,22,295],[35,18,22,296],[35,19,22,297],[36,4,22,299],[36,8,22,303,"hasPropertyDescriptor"],[36,29,22,324],[36,32,22,327,"Object"],[36,38,22,333],[36,39,22,334,"defineProperty"],[36,53,22,348],[36,57,22,352,"Object"],[36,63,22,358],[36,64,22,359,"getOwnPropertyDescriptor"],[36,88,22,383],[37,4,22,385],[37,9,22,390],[37,13,22,394,"key"],[37,16,22,397],[37,20,22,401,"obj"],[37,23,22,404],[37,25,22,406],[38,6,22,408],[38,10,22,412,"Object"],[38,16,22,418],[38,17,22,419,"prototype"],[38,26,22,428],[38,27,22,429,"hasOwnProperty"],[38,41,22,443],[38,42,22,444,"call"],[38,46,22,448],[38,47,22,449,"obj"],[38,50,22,452],[38,52,22,454,"key"],[38,55,22,457],[38,56,22,458],[38,58,22,460],[39,8,22,462],[39,12,22,466,"desc"],[39,16,22,470],[39,19,22,473,"hasPropertyDescriptor"],[39,40,22,494],[39,43,22,497,"Object"],[39,49,22,503],[39,50,22,504,"getOwnPropertyDescriptor"],[39,74,22,528],[39,75,22,529,"obj"],[39,78,22,532],[39,80,22,534,"key"],[39,83,22,537],[39,84,22,538],[39,87,22,541],[39,91,22,545],[40,8,22,547],[40,12,22,551,"desc"],[40,16,22,555],[40,21,22,560,"desc"],[40,25,22,564],[40,26,22,565,"get"],[40,29,22,568],[40,33,22,572,"desc"],[40,37,22,576],[40,38,22,577,"set"],[40,41,22,580],[40,42,22,581],[40,44,22,583],[41,10,22,585,"Object"],[41,16,22,591],[41,17,22,592,"defineProperty"],[41,31,22,606],[41,32,22,607,"newObj"],[41,38,22,613],[41,40,22,615,"key"],[41,43,22,618],[41,45,22,620,"desc"],[41,49,22,624],[41,50,22,625],[42,8,22,627],[42,9,22,628],[42,15,22,634],[43,10,22,636,"newObj"],[43,16,22,642],[43,17,22,643,"key"],[43,20,22,646],[43,21,22,647],[43,24,22,650,"obj"],[43,27,22,653],[43,28,22,654,"key"],[43,31,22,657],[43,32,22,658],[44,8,22,660],[45,6,22,662],[46,4,22,664],[47,4,22,666,"newObj"],[47,10,22,672],[47,11,22,673,"default"],[47,18,22,680],[47,21,22,683,"obj"],[47,24,22,686],[48,4,22,688],[48,8,22,692,"cache"],[48,13,22,697],[48,15,22,699],[49,6,22,701,"cache"],[49,11,22,706],[49,12,22,707,"set"],[49,15,22,710],[49,16,22,711,"obj"],[49,19,22,714],[49,21,22,716,"newObj"],[49,27,22,722],[49,28,22,723],[50,4,22,725],[51,4,22,727],[51,11,22,734,"newObj"],[51,17,22,740],[52,2,22,742],[53,2,24,0],[53,11,24,9,"_interopRequireDefault"],[53,33,24,31,"_interopRequireDefault"],[53,34,24,32,"obj"],[53,37,24,35],[53,39,24,37],[54,4,24,39],[54,11,24,46,"obj"],[54,14,24,49],[54,18,24,53,"obj"],[54,21,24,56],[54,22,24,57,"__esModule"],[54,32,24,67],[54,35,24,70,"obj"],[54,38,24,73],[54,41,24,76],[55,6,24,78,"default"],[55,13,24,85],[55,15,24,87,"obj"],[56,4,24,91],[56,5,24,92],[57,2,24,94],[58,2,26,0],[58,11,26,9,"_defineProperty"],[58,26,26,24,"_defineProperty"],[58,27,26,25,"obj"],[58,30,26,28],[58,32,26,30,"key"],[58,35,26,33],[58,37,26,35,"value"],[58,42,26,40],[58,44,26,42],[59,4,26,44],[59,8,26,48,"key"],[59,11,26,51],[59,15,26,55,"obj"],[59,18,26,58],[59,20,26,60],[60,6,26,62,"Object"],[60,12,26,68],[60,13,26,69,"defineProperty"],[60,27,26,83],[60,28,26,84,"obj"],[60,31,26,87],[60,33,26,89,"key"],[60,36,26,92],[60,38,26,94],[61,8,26,96,"value"],[61,13,26,101],[61,15,26,103,"value"],[61,20,26,108],[62,8,26,110,"enumerable"],[62,18,26,120],[62,20,26,122],[62,24,26,126],[63,8,26,128,"configurable"],[63,20,26,140],[63,22,26,142],[63,26,26,146],[64,8,26,148,"writable"],[64,16,26,156],[64,18,26,158],[65,6,26,163],[65,7,26,164],[65,8,26,165],[66,4,26,167],[66,5,26,168],[66,11,26,174],[67,6,26,176,"obj"],[67,9,26,179],[67,10,26,180,"key"],[67,13,26,183],[67,14,26,184],[67,17,26,187,"value"],[67,22,26,192],[68,4,26,194],[69,4,26,196],[69,11,26,203,"obj"],[69,14,26,206],[70,2,26,208],[71,2,28,0],[71,6,28,4,"gestureInstances"],[71,22,28,20],[71,25,28,23],[71,26,28,24],[72,2,30,0],[72,8,30,6,"GestureHandler"],[72,22,30,20],[72,23,30,21],[73,4,31,2],[73,8,31,6,"id"],[73,10,31,8,"id"],[73,11,31,8],[73,13,31,11],[74,6,32,4],[74,13,32,11],[74,16,32,14],[74,20,32,18],[74,21,32,19,"name"],[74,25,32,23],[74,28,32,26],[74,32,32,30],[74,33,32,31,"gestureInstance"],[74,48,32,46],[74,50,32,48],[75,4,33,2],[75,5,33,3],[75,6,33,4],[76,4,34,2],[78,4,37,2],[78,8,37,6,"isNative"],[78,16,37,14,"isNative"],[78,17,37,14],[78,19,37,17],[79,6,38,4],[79,13,38,11],[79,18,38,16],[80,4,39,2],[81,4,41,2],[81,8,41,6,"isDiscrete"],[81,18,41,16,"isDiscrete"],[81,19,41,16],[81,21,41,19],[82,6,42,4],[82,13,42,11],[82,18,42,16],[83,4,43,2],[84,4,45,2],[84,8,45,6,"shouldEnableGestureOnSetup"],[84,34,45,32,"shouldEnableGestureOnSetup"],[84,35,45,32],[84,37,45,35],[85,6,46,4],[85,12,46,10],[85,16,46,14,"Error"],[85,21,46,19],[85,22,46,20],[85,79,46,77],[85,80,46,78],[86,4,47,2],[87,4,49,2,"constructor"],[87,15,49,13,"constructor"],[87,16,49,13],[87,18,49,16],[88,6,50,4,"_defineProperty"],[88,21,50,19],[88,22,50,20],[88,26,50,24],[88,28,50,26],[88,40,50,38],[88,42,50,40],[88,47,50,45],[88,48,50,46],[88,49,50,47],[89,6,52,4,"_defineProperty"],[89,21,52,19],[89,22,52,20],[89,26,52,24],[89,28,52,26],[89,46,52,44],[89,48,52,46],[89,53,52,51],[89,54,52,52],[90,6,54,4,"_defineProperty"],[90,21,54,19],[90,22,54,20],[90,26,54,24],[90,28,54,26],[90,34,54,32],[90,36,54,34],[90,40,54,38],[90,41,54,39],[91,6,56,4,"_defineProperty"],[91,21,56,19],[91,22,56,20],[91,26,56,24],[91,28,56,26],[91,57,56,55],[91,59,56,57],[91,64,56,62],[91,65,56,63],[91,66,56,64],[92,6,58,4,"_defineProperty"],[92,21,58,19],[92,22,58,20],[92,26,58,24],[92,28,58,26],[92,46,58,44],[92,48,58,46],[92,53,58,51],[92,54,58,52],[93,6,60,4,"_defineProperty"],[93,21,60,19],[93,22,60,20],[93,26,60,24],[93,28,60,26],[93,36,60,34],[93,38,60,36],[93,42,60,40],[93,43,60,41],[94,6,62,4,"_defineProperty"],[94,21,62,19],[94,22,62,20],[94,26,62,24],[94,28,62,26],[94,45,62,43],[94,47,62,45],[94,51,62,49],[94,52,62,50],[95,6,64,4,"_defineProperty"],[95,21,64,19],[95,22,64,20],[95,26,64,24],[95,28,64,26],[95,40,64,38],[95,42,64,40],[95,47,64,45],[95,48,64,46],[95,49,64,47],[96,6,66,4,"_defineProperty"],[96,21,66,19],[96,22,66,20],[96,26,66,24],[96,28,66,26],[96,40,66,38],[96,42,66,40],[96,47,66,45],[96,48,66,46],[96,49,66,47],[97,6,68,4,"_defineProperty"],[97,21,68,19],[97,22,68,20],[97,26,68,24],[97,28,68,26],[97,36,68,34],[97,38,68,36],[97,39,68,37],[97,40,68,38],[97,41,68,39],[98,6,70,4,"_defineProperty"],[98,21,70,19],[98,22,70,20],[98,26,70,24],[98,28,70,26],[98,43,70,41],[98,45,70,43,"_State"],[98,51,70,49],[98,52,70,50,"State"],[98,57,70,55],[98,58,70,56,"UNDETERMINED"],[98,70,70,68],[98,71,70,69],[99,6,72,4,"_defineProperty"],[99,21,72,19],[99,22,72,20],[99,26,72,24],[99,28,72,26],[99,45,72,43],[99,47,72,45],[99,48,72,46],[99,49,72,47],[99,50,72,48],[100,6,74,4,"_defineProperty"],[100,21,74,19],[100,22,74,20],[100,26,74,24],[100,28,74,26],[100,38,74,36],[100,40,74,38,"_State"],[100,46,74,44],[100,47,74,45,"State"],[100,52,74,50],[100,53,74,51,"UNDETERMINED"],[100,65,74,63],[100,66,74,64],[101,6,76,4,"_defineProperty"],[101,21,76,19],[101,22,76,20],[101,26,76,24],[101,28,76,26],[101,43,76,41],[101,45,76,43],[101,49,76,47],[101,50,76,48],[102,6,78,4,"_defineProperty"],[102,21,78,19],[102,22,78,20],[102,26,78,24],[102,28,78,26],[102,45,78,43],[102,47,78,45],[102,52,78,50],[102,53,78,51],[102,54,78,52],[103,6,80,4,"_defineProperty"],[103,21,80,19],[103,22,80,20],[103,26,80,24],[103,28,80,26],[103,43,80,41],[103,45,80,43],[103,50,80,48],[103,51,80,49],[103,52,80,50],[104,6,82,4,"_defineProperty"],[104,21,82,19],[104,22,82,20],[104,26,82,24],[104,28,82,26],[104,38,82,36],[104,40,82,38],[104,45,82,43],[104,46,82,44],[104,47,82,45],[105,6,84,4,"_defineProperty"],[105,21,84,19],[105,22,84,20],[105,26,84,24],[105,28,84,26],[105,33,84,31],[105,35,84,33],[105,40,84,38],[105,41,84,39],[105,42,84,40],[106,6,86,4,"_defineProperty"],[106,21,86,19],[106,22,86,20],[106,26,86,24],[106,28,86,26],[106,48,86,46],[106,50,86,48],[106,56,86,54],[107,8,87,6],[107,12,87,10,"Array"],[107,17,87,15],[107,18,87,16,"isArray"],[107,25,87,23],[107,26,87,24],[107,30,87,28],[107,31,87,29,"config"],[107,37,87,35],[107,38,87,36,"waitFor"],[107,45,87,43],[107,46,87,44],[107,48,87,46],[108,10,88,8],[108,15,88,13],[108,21,88,19,"gesture"],[108,28,88,26],[108,32,88,30],[108,36,88,34],[108,37,88,35,"config"],[108,43,88,41],[108,44,88,42,"waitFor"],[108,51,88,49],[108,53,88,51],[109,12,89,10,"gesture"],[109,19,89,17],[109,20,89,18,"removePendingGesture"],[109,40,89,38],[109,41,89,39],[109,45,89,43],[109,46,89,44,"id"],[109,48,89,46],[109,49,89,47],[110,10,90,8],[111,8,91,6],[112,6,92,4],[112,7,92,5],[112,8,92,6],[113,6,94,4,"_defineProperty"],[113,21,94,19],[113,22,94,20],[113,26,94,24],[113,28,94,26],[113,37,94,35],[113,39,94,37],[113,45,94,43],[114,8,95,6],[114,12,95,10],[114,13,95,11,"clearSelfAsPending"],[114,31,95,29],[114,32,95,30],[114,33,95,31],[115,8,97,6],[115,12,97,10],[115,16,97,14],[115,17,97,15,"hammer"],[115,23,97,21],[115,25,97,23],[116,10,98,8],[116,14,98,12],[116,15,98,13,"hammer"],[116,21,98,19],[116,22,98,20,"stop"],[116,26,98,24],[116,27,98,25],[116,32,98,30],[116,33,98,31],[117,10,99,8],[117,14,99,12],[117,15,99,13,"hammer"],[117,21,99,19],[117,22,99,20,"destroy"],[117,29,99,27],[117,30,99,28],[117,31,99,29],[118,8,100,6],[119,8,102,6],[119,12,102,10],[119,13,102,11,"hammer"],[119,19,102,17],[119,22,102,20],[119,26,102,24],[120,6,103,4],[120,7,103,5],[120,8,103,6],[121,6,105,4,"_defineProperty"],[121,21,105,19],[121,22,105,20],[121,26,105,24],[121,28,105,26],[121,43,105,41],[121,45,105,43],[121,46,105,44],[122,8,106,6,"x"],[122,9,106,7],[123,8,107,6,"y"],[124,6,108,4],[124,7,108,5],[124,12,108,10],[125,8,109,6],[126,8,110,6],[126,14,110,12,"rect"],[126,18,110,16],[126,21,110,19],[126,25,110,23],[126,26,110,24,"view"],[126,30,110,28],[126,31,110,29,"getBoundingClientRect"],[126,52,110,50],[126,53,110,51],[126,54,110,52],[127,8,111,6],[127,14,111,12,"pointerInside"],[127,27,111,25],[127,30,111,28,"x"],[127,31,111,29],[127,35,111,33,"rect"],[127,39,111,37],[127,40,111,38,"left"],[127,44,111,42],[127,48,111,46,"x"],[127,49,111,47],[127,53,111,51,"rect"],[127,57,111,55],[127,58,111,56,"right"],[127,63,111,61],[127,67,111,65,"y"],[127,68,111,66],[127,72,111,70,"rect"],[127,76,111,74],[127,77,111,75,"top"],[127,80,111,78],[127,84,111,82,"y"],[127,85,111,83],[127,89,111,87,"rect"],[127,93,111,91],[127,94,111,92,"bottom"],[127,100,111,98],[128,8,112,6],[128,15,112,13,"pointerInside"],[128,28,112,26],[129,6,113,4],[129,7,113,5],[129,8,113,6],[130,6,115,4,"_defineProperty"],[130,21,115,19],[130,22,115,20],[130,26,115,24],[130,28,115,26],[130,39,115,37],[130,41,115,39,"nativeEvent"],[130,52,115,50],[130,56,115,54],[131,8,116,6],[131,14,116,12],[132,10,117,8,"onGestureHandlerEvent"],[132,31,117,29],[133,10,118,8,"onGestureHandlerStateChange"],[134,8,119,6],[134,9,119,7],[134,12,119,10],[134,16,119,14],[134,17,119,15,"propsRef"],[134,25,119,23],[134,26,119,24,"current"],[134,33,119,31],[135,8,120,6],[135,14,120,12,"event"],[135,19,120,17],[135,22,120,20],[135,26,120,24],[135,27,120,25,"transformEventData"],[135,45,120,43],[135,46,120,44,"nativeEvent"],[135,57,120,55],[135,58,120,56],[136,8,121,6,"invokeNullableMethod"],[136,28,121,26],[136,29,121,27,"onGestureHandlerEvent"],[136,50,121,48],[136,52,121,50,"event"],[136,57,121,55],[136,58,121,56],[137,8,123,6],[137,12,123,10],[137,16,123,14],[137,17,123,15,"lastSentState"],[137,30,123,28],[137,35,123,33,"event"],[137,40,123,38],[137,41,123,39,"nativeEvent"],[137,52,123,50],[137,53,123,51,"state"],[137,58,123,56],[137,60,123,58],[138,10,124,8],[138,14,124,12],[138,15,124,13,"lastSentState"],[138,28,124,26],[138,31,124,29,"event"],[138,36,124,34],[138,37,124,35,"nativeEvent"],[138,48,124,46],[138,49,124,47,"state"],[138,54,124,52],[139,10,125,8,"invokeNullableMethod"],[139,30,125,28],[139,31,125,29,"onGestureHandlerStateChange"],[139,58,125,56],[139,60,125,58,"event"],[139,65,125,63],[139,66,125,64],[140,8,126,6],[141,6,127,4],[141,7,127,5],[141,8,127,6],[142,6,129,4,"_defineProperty"],[142,21,129,19],[142,22,129,20],[142,26,129,24],[142,28,129,26],[142,34,129,32],[142,36,129,34],[142,42,129,40],[143,8,130,6],[143,14,130,12,"gesture"],[143,21,130,19],[143,24,130,22],[143,28,130,26],[143,29,130,27,"hammer"],[143,35,130,33],[143,36,130,34,"get"],[143,39,130,37],[143,40,130,38],[143,44,130,42],[143,45,130,43,"name"],[143,49,130,47],[143,50,130,48],[144,8,131,6],[144,12,131,10],[144,13,131,11,"gesture"],[144,20,131,18],[144,22,131,20],[145,8,133,6],[145,14,133,12,"enable"],[145,20,133,18],[145,23,133,21,"enable"],[145,24,133,22,"recognizer"],[145,34,133,32],[145,36,133,34,"inputData"],[145,45,133,43],[145,50,133,48],[146,10,134,8],[146,14,134,12],[146,15,134,13],[146,19,134,17],[146,20,134,18,"config"],[146,26,134,24],[146,27,134,25,"enabled"],[146,34,134,32],[146,36,134,34],[147,12,135,10],[147,16,135,14],[147,17,135,15,"isGestureRunning"],[147,33,135,31],[147,36,135,34],[147,41,135,39],[148,12,136,10],[148,16,136,14],[148,17,136,15,"hasGestureFailed"],[148,33,136,31],[148,36,136,34],[148,41,136,39],[149,12,137,10],[149,19,137,17],[149,24,137,22],[150,10,138,8],[150,11,138,9],[150,12,138,10],[152,10,141,8],[152,14,141,12],[152,15,141,13,"inputData"],[152,24,141,22],[152,28,141,26],[152,29,141,27,"recognizer"],[152,39,141,37],[152,40,141,38,"options"],[152,47,141,45],[152,51,141,49],[152,58,141,56,"inputData"],[152,67,141,65],[152,68,141,66,"maxPointers"],[152,79,141,77],[152,84,141,82],[152,95,141,93],[152,97,141,95],[153,12,142,10],[153,19,142,17],[153,23,142,21],[153,24,142,22,"shouldEnableGestureOnSetup"],[153,50,142,48],[154,10,143,8],[155,10,145,8],[155,14,145,12],[155,18,145,16],[155,19,145,17,"hasGestureFailed"],[155,35,145,33],[155,37,145,35],[156,12,146,10],[156,19,146,17],[156,24,146,22],[157,10,147,8],[158,10,149,8],[158,14,149,12],[158,15,149,13],[158,19,149,17],[158,20,149,18,"isDiscrete"],[158,30,149,28],[158,32,149,30],[159,12,150,10],[159,16,150,14],[159,20,150,18],[159,21,150,19,"isGestureRunning"],[159,37,150,35],[159,39,150,37],[160,14,151,12],[160,21,151,19],[160,25,151,23],[161,12,152,10],[161,13,152,11],[161,14,152,12],[162,12,153,10],[164,12,156,10],[164,16,156,14],[164,17,156,15,"_stillWaiting"],[164,30,156,28],[164,33,156,31],[164,37,156,35],[164,38,156,36,"_getPendingGestures"],[164,57,156,55],[164,58,156,56],[164,59,156,57],[164,60,156,58],[164,61,156,59],[166,12,158,10],[166,16,158,14],[166,20,158,18],[166,21,158,19,"_stillWaiting"],[166,34,158,32],[166,35,158,33,"length"],[166,41,158,39],[166,43,158,41],[167,14,159,12],[168,14,160,12],[169,14,161,12],[169,19,161,17],[169,25,161,23,"gesture"],[169,32,161,30],[169,36,161,34],[169,40,161,38],[169,41,161,39,"_stillWaiting"],[169,54,161,52],[169,56,161,54],[170,16,162,14],[171,16,163,14],[171,20,163,18],[171,21,163,19,"gesture"],[171,28,163,26],[171,29,163,27,"isDiscrete"],[171,39,163,37],[171,43,163,41,"gesture"],[171,50,163,48],[171,51,163,49,"isGestureRunning"],[171,67,163,65],[171,69,163,67],[172,18,164,16],[172,22,164,20],[172,23,164,21,"hasGestureFailed"],[172,39,164,37],[172,42,164,40],[172,46,164,44],[173,18,165,16],[173,22,165,20],[173,23,165,21,"isGestureRunning"],[173,39,165,37],[173,42,165,40],[173,47,165,45],[174,18,166,16],[174,25,166,23],[174,30,166,28],[175,16,167,14],[176,14,168,12],[176,15,168,13],[176,16,168,14],[178,14,171,12],[178,21,171,19],[178,26,171,24],[179,12,172,10],[180,10,173,8],[180,11,173,9],[180,12,173,10],[182,10,176,8],[182,14,176,12],[182,15,176,13],[182,19,176,17],[182,20,176,18,"hasCustomActivationCriteria"],[182,47,176,45],[182,49,176,47],[183,12,177,10],[183,19,177,17],[183,23,177,21],[184,10,178,8],[185,10,180,8],[185,16,180,14,"deltaRotation"],[185,29,180,27],[185,32,180,30],[185,36,180,34],[185,37,180,35,"initialRotation"],[185,52,180,50],[185,56,180,54],[185,60,180,58],[185,63,180,61],[185,64,180,62],[185,67,180,65,"inputData"],[185,76,180,74],[185,77,180,75,"rotation"],[185,85,180,83],[185,88,180,86],[185,92,180,90],[185,93,180,91,"initialRotation"],[185,108,180,106],[185,109,180,107],[185,110,180,108],[187,10,182,8],[187,16,182,14],[188,12,183,10,"success"],[188,19,183,17],[189,12,184,10,"failed"],[190,10,185,8],[190,11,185,9],[190,14,185,12],[190,18,185,16],[190,19,185,17,"isGestureEnabledForEvent"],[190,43,185,41],[190,44,185,42],[190,48,185,46],[190,49,185,47,"getConfig"],[190,58,185,56],[190,59,185,57],[190,60,185,58],[190,62,185,60,"recognizer"],[190,72,185,70],[190,74,185,72],[191,12,185,74],[191,15,185,77,"inputData"],[191,24,185,86],[192,12,186,10,"deltaRotation"],[193,10,187,8],[193,11,187,9],[193,12,187,10],[194,10,189,8],[194,14,189,12,"failed"],[194,20,189,18],[194,22,189,20],[195,12,190,10],[195,16,190,14],[195,17,190,15,"simulateCancelEvent"],[195,36,190,34],[195,37,190,35,"inputData"],[195,46,190,44],[195,47,190,45],[196,12,191,10],[196,16,191,14],[196,17,191,15,"hasGestureFailed"],[196,33,191,31],[196,36,191,34],[196,40,191,38],[197,10,192,8],[198,10,194,8],[198,17,194,15,"success"],[198,24,194,22],[199,8,195,6],[199,9,195,7],[200,8,197,6],[200,14,197,12,"params"],[200,20,197,18],[200,23,197,21],[200,27,197,25],[200,28,197,26,"getHammerConfig"],[200,43,197,41],[200,44,197,42],[200,45,197,43],[200,46,197,44],[200,47,197,45],[202,8,199,6,"gesture"],[202,15,199,13],[202,16,199,14,"set"],[202,19,199,17],[202,20,199,18],[203,10,199,20],[203,13,199,23,"params"],[203,19,199,29],[204,10,200,8,"enable"],[205,8,201,6],[205,9,201,7],[205,10,201,8],[206,6,202,4],[206,7,202,5],[206,8,202,6],[207,6,204,4],[207,10,204,8],[207,11,204,9,"gestureInstance"],[207,26,204,24],[207,29,204,27,"gestureInstances"],[207,45,204,43],[207,47,204,45],[208,6,205,4],[208,10,205,8],[208,11,205,9,"hasCustomActivationCriteria"],[208,38,205,36],[208,41,205,39],[208,46,205,44],[209,4,206,2],[210,4,208,2,"getConfig"],[210,13,208,11,"getConfig"],[210,14,208,11],[210,16,208,14],[211,6,209,4],[211,13,209,11],[211,17,209,15],[211,18,209,16,"config"],[211,24,209,22],[212,4,210,2],[213,4,212,2,"onWaitingEnded"],[213,18,212,16,"onWaitingEnded"],[213,19,212,17,"_gesture"],[213,27,212,25],[213,29,212,27],[213,30,212,28],[214,4,214,2,"removePendingGesture"],[214,24,214,22,"removePendingGesture"],[214,25,214,23,"id"],[214,27,214,25],[214,29,214,27],[215,6,215,4],[215,13,215,11],[215,17,215,15],[215,18,215,16,"pendingGestures"],[215,33,215,31],[215,34,215,32,"id"],[215,36,215,34],[215,37,215,35],[216,4,216,2],[217,4,218,2,"addPendingGesture"],[217,21,218,19,"addPendingGesture"],[217,22,218,20,"gesture"],[217,29,218,27],[217,31,218,29],[218,6,219,4],[218,10,219,8],[218,11,219,9,"pendingGestures"],[218,26,219,24],[218,27,219,25,"gesture"],[218,34,219,32],[218,35,219,33,"id"],[218,37,219,35],[218,38,219,36],[218,41,219,39,"gesture"],[218,48,219,46],[219,4,220,2],[220,4,222,2,"isGestureEnabledForEvent"],[220,28,222,26,"isGestureEnabledForEvent"],[220,29,222,27,"_config"],[220,36,222,34],[220,38,222,36,"_recognizer"],[220,49,222,47],[220,51,222,49,"_event"],[220,57,222,55],[220,59,222,57],[221,6,223,4],[221,13,223,11],[222,8,224,6,"success"],[222,15,224,13],[222,17,224,15],[223,6,225,4],[223,7,225,5],[224,4,226,2],[225,4,228,2],[225,8,228,6,"NativeGestureClass"],[225,26,228,24,"NativeGestureClass"],[225,27,228,24],[225,29,228,27],[226,6,229,4],[226,12,229,10],[226,16,229,14,"Error"],[226,21,229,19],[226,22,229,20],[226,71,229,69],[226,72,229,70],[227,4,230,2],[228,4,232,2,"updateHasCustomActivationCriteria"],[228,37,232,35,"updateHasCustomActivationCriteria"],[228,38,232,36,"_config"],[228,45,232,43],[228,47,232,45],[229,6,233,4],[229,13,233,11],[229,17,233,15],[230,4,234,2],[231,4,236,2,"updateGestureConfig"],[231,23,236,21,"updateGestureConfig"],[231,24,236,22],[232,6,237,4,"enabled"],[232,13,237,11],[232,16,237,14],[232,20,237,18],[233,6,238,4],[233,9,238,7,"props"],[234,4,239,2],[234,5,239,3],[234,7,239,5],[235,6,240,4],[235,10,240,8],[235,11,240,9,"clearSelfAsPending"],[235,29,240,27],[235,30,240,28],[235,31,240,29],[236,6,241,4],[236,10,241,8],[236,11,241,9,"config"],[236,17,241,15],[236,20,241,18],[236,24,241,22],[236,25,241,23,"ensureConfig"],[236,37,241,35],[236,38,241,36],[237,8,242,6,"enabled"],[237,15,242,13],[238,8,243,6],[238,11,243,9,"props"],[239,6,244,4],[239,7,244,5],[239,8,244,6],[240,6,245,4],[240,10,245,8],[240,11,245,9,"hasCustomActivationCriteria"],[240,38,245,36],[240,41,245,39],[240,45,245,43],[240,46,245,44,"updateHasCustomActivationCriteria"],[240,79,245,77],[240,80,245,78],[240,84,245,82],[240,85,245,83,"config"],[240,91,245,89],[240,92,245,90],[241,6,247,4],[241,10,247,8,"Array"],[241,15,247,13],[241,16,247,14,"isArray"],[241,23,247,21],[241,24,247,22],[241,28,247,26],[241,29,247,27,"config"],[241,35,247,33],[241,36,247,34,"waitFor"],[241,43,247,41],[241,44,247,42],[241,46,247,44],[242,8,248,6],[242,13,248,11],[242,19,248,17,"gesture"],[242,26,248,24],[242,30,248,28],[242,34,248,32],[242,35,248,33,"config"],[242,41,248,39],[242,42,248,40,"waitFor"],[242,49,248,47],[242,51,248,49],[243,10,249,8,"gesture"],[243,17,249,15],[243,18,249,16,"addPendingGesture"],[243,35,249,33],[243,36,249,34],[243,40,249,38],[243,41,249,39],[244,8,250,6],[245,6,251,4],[246,6,253,4],[246,10,253,8],[246,14,253,12],[246,15,253,13,"hammer"],[246,21,253,19],[246,23,253,21],[247,8,254,6],[247,12,254,10],[247,13,254,11,"sync"],[247,17,254,15],[247,18,254,16],[247,19,254,17],[248,6,255,4],[249,6,257,4],[249,13,257,11],[249,17,257,15],[249,18,257,16,"config"],[249,24,257,22],[250,4,258,2],[251,4,260,2,"getState"],[251,12,260,10,"getState"],[251,13,260,11,"type"],[251,17,260,15],[251,19,260,17],[252,6,261,4],[253,6,262,4],[253,10,262,8,"type"],[253,14,262,12],[253,18,262,16],[253,19,262,17],[253,21,262,19],[254,8,263,6],[254,15,263,13],[254,16,263,14],[255,6,264,4],[256,6,266,4],[256,13,266,11,"_constants"],[256,23,266,21],[256,24,266,22,"EventMap"],[256,32,266,30],[256,33,266,31,"type"],[256,37,266,35],[256,38,266,36],[257,4,267,2],[258,4,269,2,"transformEventData"],[258,22,269,20,"transformEventData"],[258,23,269,21,"event"],[258,28,269,26],[258,30,269,28],[259,6,270,4],[259,12,270,10],[260,8,271,6,"eventType"],[260,17,271,15],[261,8,272,6,"maxPointers"],[261,19,272,17],[261,21,272,19,"numberOfPointers"],[262,6,273,4],[262,7,273,5],[262,10,273,8,"event"],[262,15,273,13],[262,16,273,14],[262,17,273,15],[264,6,275,4],[264,12,275,10,"changedTouch"],[264,24,275,22],[264,27,275,25,"event"],[264,32,275,30],[264,33,275,31,"changedPointers"],[264,48,275,46],[264,49,275,47],[264,50,275,48],[264,51,275,49],[265,6,276,4],[265,12,276,10,"pointerInside"],[265,25,276,23],[265,28,276,26],[265,32,276,30],[265,33,276,31,"isPointInView"],[265,46,276,44],[265,47,276,45],[266,8,277,6,"x"],[266,9,277,7],[266,11,277,9,"changedTouch"],[266,23,277,21],[266,24,277,22,"clientX"],[266,31,277,29],[267,8,278,6,"y"],[267,9,278,7],[267,11,278,9,"changedTouch"],[267,23,278,21],[267,24,278,22,"clientY"],[268,6,279,4],[268,7,279,5],[268,8,279,6],[268,9,279,7],[268,10,279,8],[270,6,281,4],[270,12,281,10,"state"],[270,17,281,15],[270,20,281,18],[270,24,281,22],[270,25,281,23,"getState"],[270,33,281,31],[270,34,281,32,"eventType"],[270,43,281,41],[270,44,281,42],[271,6,283,4],[271,10,283,8,"state"],[271,15,283,13],[271,20,283,18],[271,24,283,22],[271,25,283,23,"previousState"],[271,38,283,36],[271,40,283,38],[272,8,284,6],[272,12,284,10],[272,13,284,11,"oldState"],[272,21,284,19],[272,24,284,22],[272,28,284,26],[272,29,284,27,"previousState"],[272,42,284,40],[273,8,285,6],[273,12,285,10],[273,13,285,11,"previousState"],[273,26,285,24],[273,29,285,27,"state"],[273,34,285,32],[274,6,286,4],[275,6,288,4],[275,13,288,11],[276,8,289,6,"nativeEvent"],[276,19,289,17],[276,21,289,19],[277,10,290,8,"numberOfPointers"],[277,26,290,24],[278,10,291,8,"state"],[278,15,291,13],[279,10,292,8,"pointerInside"],[279,23,292,21],[280,10,293,8],[280,13,293,11],[280,17,293,15],[280,18,293,16,"transformNativeEvent"],[280,38,293,36],[280,39,293,37,"event"],[280,44,293,42],[280,45,293,43],[281,10,294,8],[282,10,295,8,"handlerTag"],[282,20,295,18],[282,22,295,20],[282,26,295,24],[282,27,295,25,"handlerTag"],[282,37,295,35],[283,10,296,8,"target"],[283,16,296,14],[283,18,296,16],[283,22,296,20],[283,23,296,21,"ref"],[283,26,296,24],[284,10,297,8],[285,10,298,8],[286,10,299,8],[287,10,300,8,"oldState"],[287,18,300,16],[287,20,300,18,"state"],[287,25,300,23],[287,30,300,28],[287,34,300,32],[287,35,300,33,"previousState"],[287,48,300,46],[287,52,300,50,"state"],[287,57,300,55],[287,61,300,59],[287,62,300,60],[287,65,300,63],[287,69,300,67],[287,70,300,68,"oldState"],[287,78,300,76],[287,81,300,79,"undefined"],[288,8,301,6],[288,9,301,7],[289,8,302,6,"timeStamp"],[289,17,302,15],[289,19,302,17,"Date"],[289,23,302,21],[289,24,302,22,"now"],[289,27,302,25],[289,28,302,26],[290,6,303,4],[290,7,303,5],[291,4,304,2],[292,4,306,2,"transformNativeEvent"],[292,24,306,22,"transformNativeEvent"],[292,25,306,23,"_event"],[292,31,306,29],[292,33,306,31],[293,6,307,4],[293,13,307,11],[293,14,307,12],[293,15,307,13],[294,4,308,2],[295,4,310,2,"cancelPendingGestures"],[295,25,310,23,"cancelPendingGestures"],[295,26,310,24,"event"],[295,31,310,29],[295,33,310,31],[296,6,311,4],[296,11,311,9],[296,17,311,15,"gesture"],[296,24,311,22],[296,28,311,26,"Object"],[296,34,311,32],[296,35,311,33,"values"],[296,41,311,39],[296,42,311,40],[296,46,311,44],[296,47,311,45,"pendingGestures"],[296,62,311,60],[296,63,311,61],[296,65,311,63],[297,8,312,6],[297,12,312,10,"gesture"],[297,19,312,17],[297,23,312,21,"gesture"],[297,30,312,28],[297,31,312,29,"isGestureRunning"],[297,47,312,45],[297,49,312,47],[298,10,313,8,"gesture"],[298,17,313,15],[298,18,313,16,"hasGestureFailed"],[298,34,313,32],[298,37,313,35],[298,41,313,39],[299,10,314,8,"gesture"],[299,17,314,15],[299,18,314,16,"cancelEvent"],[299,29,314,27],[299,30,314,28,"event"],[299,35,314,33],[299,36,314,34],[300,8,315,6],[301,6,316,4],[302,4,317,2],[303,4,319,2,"notifyPendingGestures"],[303,25,319,23,"notifyPendingGestures"],[303,26,319,23],[303,28,319,26],[304,6,320,4],[304,11,320,9],[304,17,320,15,"gesture"],[304,24,320,22],[304,28,320,26,"Object"],[304,34,320,32],[304,35,320,33,"values"],[304,41,320,39],[304,42,320,40],[304,46,320,44],[304,47,320,45,"pendingGestures"],[304,62,320,60],[304,63,320,61],[304,65,320,63],[305,8,321,6],[305,12,321,10,"gesture"],[305,19,321,17],[305,21,321,19],[306,10,322,8,"gesture"],[306,17,322,15],[306,18,322,16,"onWaitingEnded"],[306,32,322,30],[306,33,322,31],[306,37,322,35],[306,38,322,36],[307,8,323,6],[308,6,324,4],[309,4,325,2],[309,5,325,3],[309,6,325,4],[311,4,328,2,"onGestureEnded"],[311,18,328,16,"onGestureEnded"],[311,19,328,17,"event"],[311,24,328,22],[311,26,328,24],[312,6,329,4],[312,10,329,8],[312,11,329,9,"isGestureRunning"],[312,27,329,25],[312,30,329,28],[312,35,329,33],[313,6,330,4],[313,10,330,8],[313,11,330,9,"cancelPendingGestures"],[313,32,330,30],[313,33,330,31,"event"],[313,38,330,36],[313,39,330,37],[314,4,331,2],[315,4,333,2,"forceInvalidate"],[315,19,333,17,"forceInvalidate"],[315,20,333,18,"event"],[315,25,333,23],[315,27,333,25],[316,6,334,4],[316,10,334,8],[316,14,334,12],[316,15,334,13,"isGestureRunning"],[316,31,334,29],[316,33,334,31],[317,8,335,6],[317,12,335,10],[317,13,335,11,"hasGestureFailed"],[317,29,335,27],[317,32,335,30],[317,36,335,34],[318,8,336,6],[318,12,336,10],[318,13,336,11,"cancelEvent"],[318,24,336,22],[318,25,336,23,"event"],[318,30,336,28],[318,31,336,29],[319,6,337,4],[320,4,338,2],[321,4,340,2,"cancelEvent"],[321,15,340,13,"cancelEvent"],[321,16,340,14,"event"],[321,21,340,19],[321,23,340,21],[322,6,341,4],[322,10,341,8],[322,11,341,9,"notifyPendingGestures"],[322,32,341,30],[322,33,341,31],[322,34,341,32],[323,6,342,4],[323,10,342,8],[323,11,342,9,"sendEvent"],[323,20,342,18],[323,21,342,19],[324,8,342,21],[324,11,342,24,"event"],[324,16,342,29],[325,8,343,6,"eventType"],[325,17,343,15],[325,19,343,17,"_hammerjs"],[325,28,343,26],[325,29,343,27,"default"],[325,36,343,34],[325,37,343,35,"INPUT_CANCEL"],[325,49,343,47],[326,8,344,6,"isFinal"],[326,15,344,13],[326,17,344,15],[327,6,345,4],[327,7,345,5],[327,8,345,6],[328,6,346,4],[328,10,346,8],[328,11,346,9,"onGestureEnded"],[328,25,346,23],[328,26,346,24,"event"],[328,31,346,29],[328,32,346,30],[329,4,347,2],[330,4,349,2,"onRawEvent"],[330,14,349,12,"onRawEvent"],[330,15,349,13],[331,6,350,4,"isFirst"],[332,4,351,2],[332,5,351,3],[332,7,351,5],[333,6,352,4],[333,10,352,8,"isFirst"],[333,17,352,15],[333,19,352,17],[334,8,353,6],[334,12,353,10],[334,13,353,11,"hasGestureFailed"],[334,29,353,27],[334,32,353,30],[334,37,353,35],[335,6,354,4],[336,4,355,2],[337,4,357,2,"shouldUseTouchEvents"],[337,24,357,22,"shouldUseTouchEvents"],[337,25,357,23,"config"],[337,31,357,29],[337,33,357,31],[338,6,358,4],[338,10,358,8,"_config$simultaneousH"],[338,31,358,29],[338,33,358,31,"_config$simultaneousH2"],[338,55,358,53],[339,6,360,4],[339,13,360,11],[339,14,360,12,"_config$simultaneousH"],[339,35,360,33],[339,38,360,36],[339,39,360,37,"_config$simultaneousH2"],[339,61,360,59],[339,64,360,62,"config"],[339,70,360,68],[339,71,360,69,"simultaneousHandlers"],[339,91,360,89],[339,97,360,95],[339,101,360,99],[339,105,360,103,"_config$simultaneousH2"],[339,127,360,125],[339,132,360,130],[339,137,360,135],[339,138,360,136],[339,141,360,139],[339,146,360,144],[339,147,360,145],[339,150,360,148,"_config$simultaneousH2"],[339,172,360,170],[339,173,360,171,"some"],[339,177,360,175],[339,178,360,176,"handler"],[339,185,360,183],[339,189,360,187,"handler"],[339,196,360,194],[339,197,360,195,"isNative"],[339,205,360,203],[339,206,360,204],[339,212,360,210],[339,216,360,214],[339,220,360,218,"_config$simultaneousH"],[339,241,360,239],[339,246,360,244],[339,251,360,249],[339,252,360,250],[339,255,360,253,"_config$simultaneousH"],[339,276,360,274],[339,279,360,277],[339,284,360,282],[340,4,361,2],[341,4,363,2,"setView"],[341,11,363,9,"setView"],[341,12,363,10,"ref"],[341,15,363,13],[341,17,363,15,"propsRef"],[341,25,363,23],[341,27,363,25],[342,6,364,4],[342,10,364,8,"ref"],[342,13,364,11],[342,17,364,15],[342,21,364,19],[342,23,364,21],[343,8,365,6],[343,12,365,10],[343,13,365,11,"destroy"],[343,20,365,18],[343,21,365,19],[343,22,365,20],[344,8,366,6],[344,12,366,10],[344,13,366,11,"view"],[344,17,366,15],[344,20,366,18],[344,24,366,22],[345,8,367,6],[346,6,368,4],[346,7,368,5],[346,8,368,6],[348,6,371,4],[348,12,371,10,"SUPPORTS_TOUCH"],[348,26,371,24],[348,29,371,28],[348,43,371,42],[348,47,371,46,"window"],[348,53,371,53],[349,6,372,4],[349,10,372,8],[349,11,372,9,"propsRef"],[349,19,372,17],[349,22,372,20,"propsRef"],[349,30,372,28],[350,6,373,4],[350,10,373,8],[350,11,373,9,"ref"],[350,14,373,12],[350,17,373,15,"ref"],[350,20,373,18],[351,6,374,4],[351,10,374,8],[351,11,374,9,"view"],[351,15,374,13],[351,18,374,16],[351,19,374,17],[351,20,374,18],[351,22,374,20,"_reactNative"],[351,34,374,32],[351,35,374,33,"findNodeHandle"],[351,49,374,47],[351,51,374,49,"ref"],[351,54,374,52],[351,55,374,53],[351,56,374,54],[351,57,374,55],[352,6,375,4],[353,6,376,4],[355,6,378,4],[355,10,378,8],[355,11,378,9,"hammer"],[355,17,378,15],[355,20,378,18,"SUPPORTS_TOUCH"],[355,34,378,32],[355,38,378,36],[355,42,378,40],[355,43,378,41,"shouldUseTouchEvents"],[355,63,378,61],[355,64,378,62],[355,68,378,66],[355,69,378,67,"config"],[355,75,378,73],[355,76,378,74],[355,79,378,77],[355,83,378,81,"_hammerjs"],[355,92,378,90],[355,93,378,91,"default"],[355,100,378,98],[355,101,378,99,"Manager"],[355,108,378,106],[355,109,378,107],[355,113,378,111],[355,114,378,112,"view"],[355,118,378,116],[355,120,378,118],[356,8,379,6,"inputClass"],[356,18,379,16],[356,20,379,18,"_hammerjs"],[356,29,379,27],[356,30,379,28,"default"],[356,37,379,35],[356,38,379,36,"TouchInput"],[357,6,380,4],[357,7,380,5],[357,8,380,6],[357,11,380,9],[357,15,380,13,"_hammerjs"],[357,24,380,22],[357,25,380,23,"default"],[357,32,380,30],[357,33,380,31,"Manager"],[357,40,380,38],[357,41,380,39],[357,45,380,43],[357,46,380,44,"view"],[357,50,380,48],[357,51,380,49],[358,6,381,4],[358,10,381,8],[358,11,381,9,"oldState"],[358,19,381,17],[358,22,381,20,"_State"],[358,28,381,26],[358,29,381,27,"State"],[358,34,381,32],[358,35,381,33,"UNDETERMINED"],[358,47,381,45],[359,6,382,4],[359,10,382,8],[359,11,382,9,"previousState"],[359,24,382,22],[359,27,382,25,"_State"],[359,33,382,31],[359,34,382,32,"State"],[359,39,382,37],[359,40,382,38,"UNDETERMINED"],[359,52,382,50],[360,6,383,4],[360,10,383,8],[360,11,383,9,"lastSentState"],[360,24,383,22],[360,27,383,25],[360,31,383,29],[361,6,384,4],[361,12,384,10],[362,8,385,6,"NativeGestureClass"],[363,6,386,4],[363,7,386,5],[363,10,386,8],[363,14,386,12],[363,15,386,13],[363,16,386,14],[365,6,388,4],[365,12,388,10,"gesture"],[365,19,388,17],[365,22,388,20],[365,26,388,24,"NativeGestureClass"],[365,44,388,42],[365,45,388,43],[365,49,388,47],[365,50,388,48,"getHammerConfig"],[365,65,388,63],[365,66,388,64],[365,67,388,65],[365,68,388,66],[366,6,389,4],[366,10,389,8],[366,11,389,9,"hammer"],[366,17,389,15],[366,18,389,16,"add"],[366,21,389,19],[366,22,389,20,"gesture"],[366,29,389,27],[366,30,389,28],[367,6,390,4],[367,10,390,8],[367,11,390,9,"hammer"],[367,17,390,15],[367,18,390,16,"on"],[367,20,390,18],[367,21,390,19],[367,35,390,33],[367,37,390,35,"ev"],[367,39,390,37],[367,43,390,41],[368,8,391,6],[368,12,391,10],[368,13,391,11],[368,17,391,15],[368,18,391,16,"config"],[368,24,391,22],[368,25,391,23,"enabled"],[368,32,391,30],[368,34,391,32],[369,10,392,8],[369,14,392,12],[369,15,392,13,"hasGestureFailed"],[369,31,392,29],[369,34,392,32],[369,39,392,37],[370,10,393,8],[370,14,393,12],[370,15,393,13,"isGestureRunning"],[370,31,393,29],[370,34,393,32],[370,39,393,37],[371,10,394,8],[372,8,395,6],[373,8,397,6],[373,12,397,10],[373,13,397,11,"onRawEvent"],[373,23,397,21],[373,24,397,22,"ev"],[373,26,397,24],[373,27,397,25],[373,28,397,26],[373,29,397,27],[374,8,398,6],[376,8,400,6],[376,12,400,10],[376,16,400,14],[376,17,400,15,"initialRotation"],[376,32,400,30],[376,37,400,35],[376,41,400,39],[376,45,400,43,"ev"],[376,47,400,45],[376,48,400,46,"rotation"],[376,56,400,54],[376,61,400,59],[376,62,400,60],[376,64,400,62],[377,10,401,8],[377,14,401,12],[377,15,401,13,"initialRotation"],[377,30,401,28],[377,33,401,31,"ev"],[377,35,401,33],[377,36,401,34,"rotation"],[377,44,401,42],[378,8,402,6],[379,8,404,6],[379,12,404,10,"ev"],[379,14,404,12],[379,15,404,13,"isFinal"],[379,22,404,20],[379,24,404,22],[380,10,405,8],[381,10,406,8,"setTimeout"],[381,20,406,18],[381,21,406,19],[381,27,406,25],[382,12,407,10],[382,16,407,14],[382,17,407,15,"initialRotation"],[382,32,407,30],[382,35,407,33],[382,39,407,37],[383,12,408,10],[383,16,408,14],[383,17,408,15,"hasGestureFailed"],[383,33,408,31],[383,36,408,34],[383,41,408,39],[384,10,409,8],[384,11,409,9],[384,12,409,10],[385,8,410,6],[386,6,411,4],[386,7,411,5],[386,8,411,6],[387,6,412,4],[387,10,412,8],[387,11,412,9,"setupEvents"],[387,22,412,20],[387,23,412,21],[387,24,412,22],[388,6,413,4],[388,10,413,8],[388,11,413,9,"sync"],[388,15,413,13],[388,16,413,14],[388,17,413,15],[389,4,414,2],[390,4,416,2,"setupEvents"],[390,15,416,13,"setupEvents"],[390,16,416,13],[390,18,416,16],[391,6,417,4],[392,6,418,4],[392,10,418,8],[392,11,418,9],[392,15,418,13],[392,16,418,14,"isDiscrete"],[392,26,418,24],[392,28,418,26],[393,8,419,6],[393,12,419,10],[393,13,419,11,"hammer"],[393,19,419,17],[393,20,419,18,"on"],[393,22,419,20],[393,23,419,21],[393,26,419,24],[393,30,419,28],[393,31,419,29,"name"],[393,35,419,33],[393,42,419,40],[393,44,419,42,"event"],[393,49,419,47],[393,53,419,51],[393,57,419,55],[393,58,419,56,"onStart"],[393,65,419,63],[393,66,419,64,"event"],[393,71,419,69],[393,72,419,70],[393,73,419,71],[394,8,420,6],[394,12,420,10],[394,13,420,11,"hammer"],[394,19,420,17],[394,20,420,18,"on"],[394,22,420,20],[394,23,420,21],[394,26,420,24],[394,30,420,28],[394,31,420,29,"name"],[394,35,420,33],[394,42,420,40],[394,46,420,44],[394,47,420,45,"name"],[394,51,420,49],[394,59,420,57],[394,61,420,59,"event"],[394,66,420,64],[394,70,420,68],[395,10,421,8],[395,14,421,12],[395,15,421,13,"onGestureEnded"],[395,29,421,27],[395,30,421,28,"event"],[395,35,421,33],[395,36,421,34],[396,8,422,6],[396,9,422,7],[396,10,422,8],[397,6,423,4],[398,6,425,4],[398,10,425,8],[398,11,425,9,"hammer"],[398,17,425,15],[398,18,425,16,"on"],[398,20,425,18],[398,21,425,19],[398,25,425,23],[398,26,425,24,"name"],[398,30,425,28],[398,32,425,30,"ev"],[398,34,425,32],[398,38,425,36],[398,42,425,40],[398,43,425,41,"onGestureActivated"],[398,61,425,59],[398,62,425,60,"ev"],[398,64,425,62],[398,65,425,63],[398,66,425,64],[398,67,425,65],[398,68,425,66],[399,4,426,2],[400,4,428,2,"onStart"],[400,11,428,9,"onStart"],[400,12,428,10],[401,6,429,4,"deltaX"],[401,12,429,10],[402,6,430,4,"deltaY"],[402,12,430,10],[403,6,431,4,"rotation"],[404,4,432,2],[404,5,432,3],[404,7,432,5],[405,6,433,4],[406,6,434,4],[406,10,434,8],[406,11,434,9,"oldState"],[406,19,434,17],[406,22,434,20,"_State"],[406,28,434,26],[406,29,434,27,"State"],[406,34,434,32],[406,35,434,33,"UNDETERMINED"],[406,47,434,45],[407,6,435,4],[407,10,435,8],[407,11,435,9,"previousState"],[407,24,435,22],[407,27,435,25,"_State"],[407,33,435,31],[407,34,435,32,"State"],[407,39,435,37],[407,40,435,38,"UNDETERMINED"],[407,52,435,50],[408,6,436,4],[408,10,436,8],[408,11,436,9,"lastSentState"],[408,24,436,22],[408,27,436,25],[408,31,436,29],[409,6,437,4],[409,10,437,8],[409,11,437,9,"isGestureRunning"],[409,27,437,25],[409,30,437,28],[409,34,437,32],[410,6,438,4],[410,10,438,8],[410,11,438,9,"__initialX"],[410,21,438,19],[410,24,438,22,"deltaX"],[410,30,438,28],[411,6,439,4],[411,10,439,8],[411,11,439,9,"__initialY"],[411,21,439,19],[411,24,439,22,"deltaY"],[411,30,439,28],[412,6,440,4],[412,10,440,8],[412,11,440,9,"initialRotation"],[412,26,440,24],[412,29,440,27,"rotation"],[412,37,440,35],[413,4,441,2],[414,4,443,2,"onGestureActivated"],[414,22,443,20,"onGestureActivated"],[414,23,443,21,"ev"],[414,25,443,23],[414,27,443,25],[415,6,444,4],[415,10,444,8],[415,11,444,9,"sendEvent"],[415,20,444,18],[415,21,444,19,"ev"],[415,23,444,21],[415,24,444,22],[416,4,445,2],[417,4,447,2,"onSuccess"],[417,13,447,11,"onSuccess"],[417,14,447,11],[417,16,447,14],[417,17,447,15],[418,4,449,2,"_getPendingGestures"],[418,23,449,21,"_getPendingGestures"],[418,24,449,21],[418,26,449,24],[419,6,450,4],[419,10,450,8,"Array"],[419,15,450,13],[419,16,450,14,"isArray"],[419,23,450,21],[419,24,450,22],[419,28,450,26],[419,29,450,27,"config"],[419,35,450,33],[419,36,450,34,"waitFor"],[419,43,450,41],[419,44,450,42],[419,48,450,46],[419,52,450,50],[419,53,450,51,"config"],[419,59,450,57],[419,60,450,58,"waitFor"],[419,67,450,65],[419,68,450,66,"length"],[419,74,450,72],[419,76,450,74],[420,8,451,6],[421,8,452,6],[422,8,453,6],[422,14,453,12,"stillWaiting"],[422,26,453,24],[422,29,453,27],[422,33,453,31],[422,34,453,32,"config"],[422,40,453,38],[422,41,453,39,"waitFor"],[422,48,453,46],[422,49,453,47,"filter"],[422,55,453,53],[422,56,453,54],[422,57,453,55],[423,10,454,8,"hasGestureFailed"],[424,8,455,6],[424,9,455,7],[424,14,455,12,"hasGestureFailed"],[424,30,455,28],[424,35,455,33],[424,40,455,38],[424,41,455,39],[425,8,456,6],[425,15,456,13,"stillWaiting"],[425,27,456,25],[426,6,457,4],[427,6,459,4],[427,13,459,11],[427,15,459,13],[428,4,460,2],[429,4,462,2,"getHammerConfig"],[429,19,462,17,"getHammerConfig"],[429,20,462,17],[429,22,462,20],[430,6,463,4],[430,12,463,10,"pointers"],[430,20,463,18],[430,23,463,21],[430,27,463,25],[430,28,463,26,"config"],[430,34,463,32],[430,35,463,33,"minPointers"],[430,46,463,44],[430,51,463,49],[430,55,463,53],[430,56,463,54,"config"],[430,62,463,60],[430,63,463,61,"maxPointers"],[430,74,463,72],[430,77,463,75],[430,81,463,79],[430,82,463,80,"config"],[430,88,463,86],[430,89,463,87,"minPointers"],[430,100,463,98],[430,103,463,101],[430,104,463,102],[431,6,464,4],[431,13,464,11],[432,8,465,6,"pointers"],[433,6,466,4],[433,7,466,5],[434,4,467,2],[435,4,469,2,"simulateCancelEvent"],[435,23,469,21,"simulateCancelEvent"],[435,24,469,22,"_inputData"],[435,34,469,32],[435,36,469,34],[435,37,469,35],[435,38,469,36],[435,39,469,37],[437,4,472,2,"ensureConfig"],[437,16,472,14,"ensureConfig"],[437,17,472,15,"config"],[437,23,472,21],[437,25,472,23],[438,6,473,4],[438,12,473,10,"props"],[438,17,473,15],[438,20,473,18],[439,8,473,20],[439,11,473,23,"config"],[440,6,474,4],[440,7,474,5],[440,8,474,6],[440,9,474,7],[442,6,476,4],[442,10,476,8],[442,19,476,17],[442,23,476,21,"config"],[442,29,476,27],[442,31,476,29],[443,8,477,6,"props"],[443,13,477,11],[443,14,477,12,"minDist"],[443,21,477,19],[443,24,477,22,"config"],[443,30,477,28],[443,31,477,29,"minDist"],[443,38,477,36],[444,8,478,6,"props"],[444,13,478,11],[444,14,478,12,"minDistSq"],[444,23,478,21],[444,26,478,24,"props"],[444,31,478,29],[444,32,478,30,"minDist"],[444,39,478,37],[444,42,478,40,"props"],[444,47,478,45],[444,48,478,46,"minDist"],[444,55,478,53],[445,6,479,4],[446,6,481,4],[446,10,481,8],[446,23,481,21],[446,27,481,25,"config"],[446,33,481,31],[446,35,481,33],[447,8,482,6,"props"],[447,13,482,11],[447,14,482,12,"minVelocity"],[447,25,482,23],[447,28,482,26,"config"],[447,34,482,32],[447,35,482,33,"minVelocity"],[447,46,482,44],[448,8,483,6,"props"],[448,13,483,11],[448,14,483,12,"minVelocitySq"],[448,27,483,25],[448,30,483,28,"props"],[448,35,483,33],[448,36,483,34,"minVelocity"],[448,47,483,45],[448,50,483,48,"props"],[448,55,483,53],[448,56,483,54,"minVelocity"],[448,67,483,65],[449,6,484,4],[450,6,486,4],[450,10,486,8],[450,19,486,17],[450,23,486,21,"config"],[450,29,486,27],[450,31,486,29],[451,8,487,6,"props"],[451,13,487,11],[451,14,487,12,"maxDist"],[451,21,487,19],[451,24,487,22,"config"],[451,30,487,28],[451,31,487,29,"maxDist"],[451,38,487,36],[452,8,488,6,"props"],[452,13,488,11],[452,14,488,12,"maxDistSq"],[452,23,488,21],[452,26,488,24,"config"],[452,32,488,30],[452,33,488,31,"maxDist"],[452,40,488,38],[452,43,488,41,"config"],[452,49,488,47],[452,50,488,48,"maxDist"],[452,57,488,55],[453,6,489,4],[454,6,491,4],[454,10,491,8],[454,19,491,17],[454,23,491,21,"config"],[454,29,491,27],[454,31,491,29],[455,8,492,6,"props"],[455,13,492,11],[455,14,492,12,"waitFor"],[455,21,492,19],[455,24,492,22,"asArray"],[455,31,492,29],[455,32,492,30,"config"],[455,38,492,36],[455,39,492,37,"waitFor"],[455,46,492,44],[455,47,492,45],[455,48,492,46,"map"],[455,51,492,49],[455,52,492,50],[455,53,492,51],[456,10,493,8,"handlerTag"],[457,8,494,6],[457,9,494,7],[457,14,494,12,"NodeManager"],[457,25,494,23],[457,26,494,24,"getHandler"],[457,36,494,34],[457,37,494,35,"handlerTag"],[457,47,494,45],[457,48,494,46],[457,49,494,47],[457,50,494,48,"filter"],[457,56,494,54],[457,57,494,55,"v"],[457,58,494,56],[457,62,494,60,"v"],[457,63,494,61],[457,64,494,62],[458,6,495,4],[458,7,495,5],[458,13,495,11],[459,8,496,6,"props"],[459,13,496,11],[459,14,496,12,"waitFor"],[459,21,496,19],[459,24,496,22],[459,28,496,26],[460,6,497,4],[461,6,499,4],[461,10,499,8],[461,32,499,30],[461,36,499,34,"config"],[461,42,499,40],[461,44,499,42],[462,8,500,6],[462,14,500,12,"shouldUseTouchEvents"],[462,34,500,32],[462,37,500,35],[462,41,500,39],[462,42,500,40,"shouldUseTouchEvents"],[462,62,500,60],[462,63,500,61],[462,67,500,65],[462,68,500,66,"config"],[462,74,500,72],[462,75,500,73],[463,8,501,6,"props"],[463,13,501,11],[463,14,501,12,"simultaneousHandlers"],[463,34,501,32],[463,37,501,35,"asArray"],[463,44,501,42],[463,45,501,43,"config"],[463,51,501,49],[463,52,501,50,"simultaneousHandlers"],[463,72,501,70],[463,73,501,71],[463,74,501,72,"map"],[463,77,501,75],[463,78,501,76,"handler"],[463,85,501,83],[463,89,501,87],[464,10,502,8],[464,14,502,12],[464,21,502,19,"handler"],[464,28,502,26],[464,33,502,31],[464,41,502,39],[464,43,502,41],[465,12,503,10],[465,19,503,17,"NodeManager"],[465,30,503,28],[465,31,503,29,"getHandler"],[465,41,503,39],[465,42,503,40,"handler"],[465,49,503,47],[465,50,503,48],[466,10,504,8],[466,11,504,9],[466,17,504,15],[467,12,505,10],[467,19,505,17,"NodeManager"],[467,30,505,28],[467,31,505,29,"getHandler"],[467,41,505,39],[467,42,505,40,"handler"],[467,49,505,47],[467,50,505,48,"handlerTag"],[467,60,505,58],[467,61,505,59],[468,10,506,8],[469,8,507,6],[469,9,507,7],[469,10,507,8],[469,11,507,9,"filter"],[469,17,507,15],[469,18,507,16,"v"],[469,19,507,17],[469,23,507,21,"v"],[469,24,507,22],[469,25,507,23],[470,8,509,6],[470,12,509,10,"shouldUseTouchEvents"],[470,32,509,30],[470,37,509,35],[470,41,509,39],[470,42,509,40,"shouldUseTouchEvents"],[470,62,509,60],[470,63,509,61,"props"],[470,68,509,66],[470,69,509,67],[470,71,509,69],[471,10,510,8],[471,11,510,9],[471,12,510,10],[471,14,510,12,"_ghQueueMicrotask"],[471,31,510,29],[471,32,510,30,"ghQueueMicrotask"],[471,48,510,46],[471,50,510,48],[471,56,510,54],[472,12,511,10],[473,12,512,10],[474,12,513,10],[474,16,513,14],[474,17,513,15,"destroy"],[474,24,513,22],[474,25,513,23],[474,26,513,24],[475,12,514,10],[475,16,514,14],[475,17,514,15,"setView"],[475,24,514,22],[475,25,514,23],[475,29,514,27],[475,30,514,28,"ref"],[475,33,514,31],[475,35,514,33],[475,39,514,37],[475,40,514,38,"propsRef"],[475,48,514,46],[475,49,514,47],[476,10,515,8],[476,11,515,9],[476,12,515,10],[477,8,516,6],[478,6,517,4],[478,7,517,5],[478,13,517,11],[479,8,518,6,"props"],[479,13,518,11],[479,14,518,12,"simultaneousHandlers"],[479,34,518,32],[479,37,518,35],[479,41,518,39],[480,6,519,4],[481,6,521,4],[481,12,521,10,"configProps"],[481,23,521,21],[481,26,521,24],[481,27,521,25],[481,40,521,38],[481,42,521,40],[481,55,521,53],[481,57,521,55],[481,66,521,64],[481,68,521,66],[481,77,521,75],[481,79,521,77],[481,90,521,88],[481,92,521,90],[481,107,521,105],[481,109,521,107],[481,120,521,118],[481,122,521,120],[481,135,521,133],[481,137,521,135],[481,155,521,153],[481,157,521,155],[481,175,521,173],[481,177,521,175],[481,193,521,191],[481,195,521,193],[481,211,521,209],[481,213,521,211],[481,233,521,231],[481,235,521,233],[481,253,521,251],[481,255,521,253],[481,275,521,273],[481,277,521,275],[481,295,521,293],[481,296,521,294],[482,6,522,4,"configProps"],[482,17,522,15],[482,18,522,16,"forEach"],[482,25,522,23],[482,26,522,24,"prop"],[482,30,522,28],[482,34,522,32],[483,8,523,6],[483,12,523,10],[483,19,523,17,"props"],[483,24,523,22],[483,25,523,23,"prop"],[483,29,523,27],[483,30,523,28],[483,35,523,33],[483,46,523,44],[483,48,523,46],[484,10,524,8,"props"],[484,15,524,13],[484,16,524,14,"prop"],[484,20,524,18],[484,21,524,19],[484,24,524,22,"Number"],[484,30,524,28],[484,31,524,29,"NaN"],[484,34,524,32],[485,8,525,6],[486,6,526,4],[486,7,526,5],[486,8,526,6],[487,6,527,4],[487,13,527,11,"props"],[487,18,527,16],[487,19,527,17],[487,20,527,18],[488,4,528,2],[489,2,530,0],[489,3,530,1],[489,4,530,2],[490,2,531,0],[492,2,534,0],[492,11,534,9,"invokeNullableMethod"],[492,31,534,29,"invokeNullableMethod"],[492,32,534,30,"method"],[492,38,534,36],[492,40,534,38,"event"],[492,45,534,43],[492,47,534,45],[493,4,535,2],[493,8,535,6,"method"],[493,14,535,12],[493,16,535,14],[494,6,536,4],[494,10,536,8],[494,17,536,15,"method"],[494,23,536,21],[494,28,536,26],[494,38,536,36],[494,40,536,38],[495,8,537,6,"method"],[495,14,537,12],[495,15,537,13,"event"],[495,20,537,18],[495,21,537,19],[496,6,538,4],[496,7,538,5],[496,13,538,11],[497,8,539,6],[498,8,540,6],[498,12,540,10],[498,26,540,24],[498,30,540,28,"method"],[498,36,540,34],[498,40,540,38],[498,47,540,45,"method"],[498,53,540,51],[498,54,540,52,"__getHandler"],[498,66,540,64],[498,71,540,69],[498,81,540,79],[498,83,540,81],[499,10,541,8],[499,16,541,14,"handler"],[499,23,541,21],[499,26,541,24,"method"],[499,32,541,30],[499,33,541,31,"__getHandler"],[499,45,541,43],[499,46,541,44],[499,47,541,45],[500,10,543,8,"invokeNullableMethod"],[500,30,543,28],[500,31,543,29,"handler"],[500,38,543,36],[500,40,543,38,"event"],[500,45,543,43],[500,46,543,44],[501,8,544,6],[501,9,544,7],[501,15,544,13],[502,10,545,8],[502,14,545,12],[502,28,545,26],[502,32,545,30,"method"],[502,38,545,36],[502,40,545,38],[503,12,546,10],[503,18,546,16],[504,14,547,12,"argMapping"],[505,12,548,10],[505,13,548,11],[505,16,548,14,"method"],[505,22,548,20],[505,23,548,21,"__nodeConfig"],[505,35,548,33],[506,12,550,10],[506,16,550,14,"Array"],[506,21,550,19],[506,22,550,20,"isArray"],[506,29,550,27],[506,30,550,28,"argMapping"],[506,40,550,38],[506,41,550,39],[506,43,550,41],[507,14,551,12],[507,19,551,17],[507,25,551,23],[507,26,551,24,"index"],[507,31,551,29],[507,33,551,31],[507,34,551,32,"key"],[507,37,551,35],[507,39,551,37,"value"],[507,44,551,42],[507,45,551,43],[507,46,551,44],[507,50,551,48,"argMapping"],[507,60,551,58],[507,61,551,59,"entries"],[507,68,551,66],[507,69,551,67],[507,70,551,68],[507,72,551,70],[508,16,552,14],[508,20,552,18,"key"],[508,23,552,21],[508,27,552,25,"event"],[508,32,552,30],[508,33,552,31,"nativeEvent"],[508,44,552,42],[508,46,552,44],[509,18,553,16],[510,18,554,16],[510,24,554,22,"nativeValue"],[510,35,554,33],[510,38,554,36,"event"],[510,43,554,41],[510,44,554,42,"nativeEvent"],[510,55,554,53],[510,56,554,54,"key"],[510,59,554,57],[510,60,554,58],[511,18,556,16],[511,22,556,20,"value"],[511,27,556,25],[511,31,556,29,"value"],[511,36,556,34],[511,37,556,35,"setValue"],[511,45,556,43],[511,47,556,45],[512,20,557,18],[513,20,558,18,"value"],[513,25,558,23],[513,26,558,24,"setValue"],[513,34,558,32],[513,35,558,33,"nativeValue"],[513,46,558,44],[513,47,558,45],[514,18,559,16],[514,19,559,17],[514,25,559,23],[515,20,560,18],[516,20,561,18,"method"],[516,26,561,24],[516,27,561,25,"__nodeConfig"],[516,39,561,37],[516,40,561,38,"argMapping"],[516,50,561,48],[516,51,561,49,"index"],[516,56,561,54],[516,57,561,55],[516,60,561,58],[516,61,561,59,"key"],[516,64,561,62],[516,66,561,64,"nativeValue"],[516,77,561,75],[516,78,561,76],[517,18,562,16],[518,16,563,14],[519,14,564,12],[520,12,565,10],[521,10,566,8],[522,8,567,6],[523,6,568,4],[524,4,569,2],[525,2,570,0],[526,2,572,0],[526,11,572,9,"asArray"],[526,18,572,16,"asArray"],[526,19,572,17,"value"],[526,24,572,22],[526,26,572,24],[527,4,573,2],[528,4,574,2],[528,11,574,9,"value"],[528,16,574,14],[528,20,574,18],[528,24,574,22],[528,27,574,25],[528,29,574,27],[528,32,574,30,"Array"],[528,37,574,35],[528,38,574,36,"isArray"],[528,45,574,43],[528,46,574,44,"value"],[528,51,574,49],[528,52,574,50],[528,55,574,53,"value"],[528,60,574,58],[528,63,574,61],[528,64,574,62,"value"],[528,69,574,67],[528,70,574,68],[529,2,575,0],[530,2,577,0],[530,6,577,4,"_default"],[530,14,577,12],[530,17,577,15,"GestureHandler"],[530,31,577,29],[531,2,578,0,"exports"],[531,9,578,7],[531,10,578,8,"default"],[531,17,578,15],[531,20,578,18,"_default"],[531,28,578,26],[532,0,578,27],[532,3]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard","_interopRequireDefault","_defineProperty","GestureHandler","get__id","get__isNative","get__isDiscrete","get__shouldEnableGestureOnSetup","constructor","_defineProperty$argument_2","enable","getConfig","onWaitingEnded","removePendingGesture","addPendingGesture","isGestureEnabledForEvent","get__NativeGestureClass","updateHasCustomActivationCriteria","updateGestureConfig","getState","transformEventData","transformNativeEvent","cancelPendingGestures","notifyPendingGestures","onGestureEnded","forceInvalidate","cancelEvent","onRawEvent","shouldUseTouchEvents","_config$simultaneousH2.some$argument_0","setView","hammer.on$argument_1","setTimeout$argument_0","setupEvents","onStart","onGestureActivated","onSuccess","_getPendingGestures","config.waitFor.filter$argument_0","getHammerConfig","simulateCancelEvent","ensureConfig","asArray.map$argument_0","asArray.map.filter$argument_0","<anonymous>","configProps.forEach$argument_0","invokeNullableMethod","asArray"],"mappings":"AAA;ACmB,0LD;AEE,uuBF;AGE,+FH;AIE,iNJ;AKI;ECC;GDE;EEI;GFE;EGE;GHE;EIE;GJE;EKE;gDCqC;KDM;qCCE;KDS;2CCE;KDQ;uCCE;KDY;kCCE;qBCI;OD8D;KDO;GLI;EQE;GRE;ESE,2BT;EUE;GVE;EWE;GXE;EYE;GZI;EaE;GbE;EcE;GdE;EeE;GfsB;EgBE;GhBO;EiBE;GjBmC;EkBE;GlBE;EmBE;GnBO;EoBE;GpBM;EqBG;GrBG;EsBE;GtBK;EuBE;GvBO;EwBE;GxBM;EyBE;gLCG,2BD;GzBC;E2BE;mCC2B;mBCgB;SDG;KDE;G3BG;E8BE;0CFG,4BE;2DFC;OEE;8BFG,iCE;G9BC;E+BE;G/Ba;EgCE;GhCE;EiCE,cjC;EkCE;sDCI;sCDE;GlCK;EoCE;GpCK;EqCE,kCrC;EsCG;kDCoB;8CDE,SE,MF;4ECO;ODM,SE,MF;gDGG;SHK;wBIO;KJI;GtCE;CLE;AgDI;ChDoC;AiDE;CjDG"},"hasCjsExports":true},"type":"js/module"}]}