{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":286},"end":{"line":5,"column":31,"index":317}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":390},"end":{"line":7,"column":66,"index":456}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":457},"end":{"line":8,"column":63,"index":520}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":521},"end":{"line":9,"column":33,"index":554}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":555},"end":{"line":10,"column":108,"index":663}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":664},"end":{"line":11,"column":56,"index":720}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":721},"end":{"line":12,"column":64,"index":785}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":786},"end":{"line":13,"column":47,"index":833}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":834},"end":{"line":14,"column":81,"index":915}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":916},"end":{"line":15,"column":43,"index":959}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":960},"end":{"line":16,"column":64,"index":1024}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1025},"end":{"line":17,"column":77,"index":1102}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1103},"end":{"line":18,"column":55,"index":1158}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1159},"end":{"line":19,"column":49,"index":1208}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsUIManager = require(_dependencyMap[2], \"react-native-web/dist/exports/UIManager\");\n  var UIManager = _interopDefault(_reactNativeWebDistExportsUIManager);\n  var _reactNativeWebDistExportsDeviceEventEmitter = require(_dependencyMap[3], \"react-native-web/dist/exports/DeviceEventEmitter\");\n  var DeviceEventEmitter = _interopDefault(_reactNativeWebDistExportsDeviceEventEmitter);\n  var _customDirectEventTypes = require(_dependencyMap[4], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = require(_dependencyMap[5], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[6], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[7], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[8], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[9], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[10], \"../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[11], \"../utils\");\n  var _ActionType = require(_dependencyMap[12], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[13], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[14], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[15], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[16], \"../mountRegistry\");\n  var _UIManagerAny$getView, _UIManagerAny$getView2, _UIManagerAny$getCons;\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const UIManagerAny = UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _utils2.isFabric)() && Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid); // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig); // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n\n  const UIManagerConstants = (_UIManagerAny$getView = (_UIManagerAny$getView2 = UIManagerAny.getViewManagerConfig) === null || _UIManagerAny$getView2 === void 0 ? void 0 : _UIManagerAny$getView2.call(UIManagerAny, 'getConstants')) !== null && _UIManagerAny$getView !== void 0 ? _UIManagerAny$getView : (_UIManagerAny$getCons = UIManagerAny.getConstants) === null || _UIManagerAny$getCons === void 0 ? void 0 : _UIManagerAny$getCons.call(UIManagerAny);\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  } // Wrap JS responder calls and notify gesture handler manager\n\n  const {\n    setJSResponder: oldSetJSResponder = () => {// no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {// no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && Platform.default.OS === 'android'; // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n\n  if (DEV_ON_ANDROID) {\n    DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1; // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      constructor(props) {\n        super(props);\n        _defineProperty(this, \"handlerTag\", void 0);\n        _defineProperty(this, \"config\", void 0);\n        _defineProperty(this, \"propsRef\", void 0);\n        _defineProperty(this, \"isMountedRef\", void 0);\n        _defineProperty(this, \"viewNode\", void 0);\n        _defineProperty(this, \"viewTag\", void 0);\n        _defineProperty(this, \"inspectorToggleListener\", void 0);\n        _defineProperty(this, \"onGestureHandlerEvent\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onGestureEvent === 'function') {\n              var _this$props$onGesture, _this$props;\n              (_this$props$onGesture = (_this$props = this.props).onGestureEvent) === null || _this$props$onGesture === void 0 ? void 0 : _this$props$onGesture.call(_this$props, event);\n            }\n          } else {\n            var _this$props$onGesture2, _this$props2;\n            (_this$props$onGesture2 = (_this$props2 = this.props).onGestureHandlerEvent) === null || _this$props$onGesture2 === void 0 ? void 0 : _this$props$onGesture2.call(_this$props2, event);\n          }\n        });\n        _defineProperty(this, \"onGestureHandlerStateChange\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onHandlerStateChange === 'function') {\n              var _this$props$onHandler, _this$props3;\n              (_this$props$onHandler = (_this$props3 = this.props).onHandlerStateChange) === null || _this$props$onHandler === void 0 ? void 0 : _this$props$onHandler.call(_this$props3, event);\n            }\n            const state = event.nativeEvent.state;\n            const stateEventName = stateToPropMappings[state];\n            const eventHandler = stateEventName && this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            var _this$props$onGesture3, _this$props4;\n            (_this$props$onGesture3 = (_this$props4 = this.props).onGestureHandlerStateChange) === null || _this$props$onGesture3 === void 0 ? void 0 : _this$props$onGesture3.call(_this$props4, event);\n          }\n        });\n        _defineProperty(this, \"refHandler\", node => {\n          var _props;\n          this.viewNode = node;\n          const child = React.Children.only(this.props.children); // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n\n          const ref = (0, _utils2.isReact19)() ? (_props = child.props) === null || _props === void 0 ? void 0 : _props.ref : child === null || child === void 0 ? void 0 : child.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        });\n        _defineProperty(this, \"createGestureHandler\", newConfig => {\n          this.config = newConfig;\n          RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n        });\n        _defineProperty(this, \"attachGestureHandler\", newViewTag => {\n          this.viewTag = newViewTag;\n          if (Platform.default.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n              onGestureEvent: this.onGestureHandlerEvent,\n              onGestureStateChange: this.onGestureHandlerStateChange\n            });\n            const actionType = (() => {\n              var _this$props5, _this$props6;\n              const onGestureEvent = (_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : _this$props5.onGestureEvent;\n              const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              const onHandlerStateChange = (_this$props6 = this.props) === null || _this$props6 === void 0 ? void 0 : _this$props6.onHandlerStateChange;\n              const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n          });\n        });\n        _defineProperty(this, \"updateGestureHandler\", newConfig => {\n          this.config = newConfig;\n          RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        });\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        var _this$inspectorToggle;\n        (_this$inspectorToggle = this.inspectorToggleListener) === null || _this$inspectorToggle === void 0 ? void 0 : _this$inspectorToggle.remove();\n        this.isMountedRef.current = false;\n        if (Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)(); // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props; // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n      setNativeProps(updates) {\n        const mergedProps = Object.assign({}, this.props, updates);\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        var _this$props$testID;\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/React.createElement(_PressabilityDebugView.PressabilityDebugView, {\n            key: \"pressabilityDebugView\",\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }));\n        }\n        return /*#__PURE__*/React.cloneElement(child, Object.assign({\n          ref: this.refHandler,\n          collapsable: false\n        }, (0, _utils2.isTestEnv)() ? {\n          handlerType: name,\n          handlerTag: this.handlerTag,\n          enabled: this.props.enabled\n        } : {}, {\n          testID: (_this$props$testID = this.props.testID) !== null && _this$props$testID !== void 0 ? _this$props$testID : child.props.testID\n        }, events), grandChildren);\n      }\n    }\n    _defineProperty(Handler, \"displayName\", name);\n    _defineProperty(Handler, \"contextType\", GestureHandlerRootViewContext.default);\n    return Handler;\n  }\n});","lineCount":423,"map":[[27,2,118,15,"Object"],[27,8,118,15],[27,9,118,15,"defineProperty"],[27,23,118,15],[27,24,118,15,"exports"],[27,31,118,15],[28,4,118,15,"enumerable"],[28,14,118,15],[29,4,118,15,"get"],[29,7,118,15],[29,18,118,15,"get"],[29,19,118,15],[30,6,118,15],[30,13,118,15,"createHandler"],[30,26,118,15],[31,4,118,15],[32,2,118,15],[33,2,5,0],[33,6,5,0,"_react"],[33,12,5,0],[33,15,5,0,"require"],[33,22,5,0],[33,23,5,0,"_dependencyMap"],[33,37,5,0],[34,2,5,0],[34,6,5,0,"React"],[34,11,5,0],[34,14,5,0,"_interopNamespace"],[34,31,5,0],[34,32,5,0,"_react"],[34,38,5,0],[35,2,5,31],[35,6,5,31,"_reactNativeWebDistExportsPlatform"],[35,40,5,31],[35,43,5,31,"require"],[35,50,5,31],[35,51,5,31,"_dependencyMap"],[35,65,5,31],[36,2,5,31],[36,6,5,31,"Platform"],[36,14,5,31],[36,17,5,31,"_interopDefault"],[36,32,5,31],[36,33,5,31,"_reactNativeWebDistExportsPlatform"],[36,67,5,31],[37,2,5,31],[37,6,5,31,"_reactNativeWebDistExportsUIManager"],[37,41,5,31],[37,44,5,31,"require"],[37,51,5,31],[37,52,5,31,"_dependencyMap"],[37,66,5,31],[38,2,5,31],[38,6,5,31,"UIManager"],[38,15,5,31],[38,18,5,31,"_interopDefault"],[38,33,5,31],[38,34,5,31,"_reactNativeWebDistExportsUIManager"],[38,69,5,31],[39,2,5,31],[39,6,5,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[39,50,5,31],[39,53,5,31,"require"],[39,60,5,31],[39,61,5,31,"_dependencyMap"],[39,75,5,31],[40,2,5,31],[40,6,5,31,"DeviceEventEmitter"],[40,24,5,31],[40,27,5,31,"_interopDefault"],[40,42,5,31],[40,43,5,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[40,87,5,31],[41,2,7,0],[41,6,7,0,"_customDirectEventTypes"],[41,29,7,0],[41,32,7,0,"require"],[41,39,7,0],[41,40,7,0,"_dependencyMap"],[41,54,7,0],[42,2,8,0],[42,6,8,0,"_RNGestureHandlerModule"],[42,29,8,0],[42,32,8,0,"require"],[42,39,8,0],[42,40,8,0,"_dependencyMap"],[42,54,8,0],[43,2,8,0],[43,6,8,0,"RNGestureHandlerModule"],[43,28,8,0],[43,31,8,0,"_interopDefault"],[43,46,8,0],[43,47,8,0,"_RNGestureHandlerModule"],[43,70,8,0],[44,2,9,0],[44,6,9,0,"_State"],[44,12,9,0],[44,15,9,0,"require"],[44,22,9,0],[44,23,9,0,"_dependencyMap"],[44,37,9,0],[45,2,10,0],[45,6,10,0,"_handlersRegistry"],[45,23,10,0],[45,26,10,0,"require"],[45,33,10,0],[45,34,10,0,"_dependencyMap"],[45,48,10,0],[46,2,11,0],[46,6,11,0,"_getNextHandlerTag"],[46,24,11,0],[46,27,11,0,"require"],[46,34,11,0],[46,35,11,0,"_dependencyMap"],[46,49,11,0],[47,2,12,0],[47,6,12,0,"_utils"],[47,12,12,0],[47,15,12,0,"require"],[47,22,12,0],[47,23,12,0,"_dependencyMap"],[47,37,12,0],[48,2,13,0],[48,6,13,0,"_findNodeHandle"],[48,21,13,0],[48,24,13,0,"require"],[48,31,13,0],[48,32,13,0,"_dependencyMap"],[48,46,13,0],[49,2,13,0],[49,6,13,0,"findNodeHandle"],[49,20,13,0],[49,23,13,0,"_interopDefault"],[49,38,13,0],[49,39,13,0,"_findNodeHandle"],[49,54,13,0],[50,2,14,0],[50,6,14,0,"_utils2"],[50,13,14,0],[50,16,14,0,"require"],[50,23,14,0],[50,24,14,0,"_dependencyMap"],[50,38,14,0],[51,2,15,0],[51,6,15,0,"_ActionType"],[51,17,15,0],[51,20,15,0,"require"],[51,27,15,0],[51,28,15,0,"_dependencyMap"],[51,42,15,0],[52,2,16,0],[52,6,16,0,"_PressabilityDebugView"],[52,28,16,0],[52,31,16,0,"require"],[52,38,16,0],[52,39,16,0,"_dependencyMap"],[52,53,16,0],[53,2,17,0],[53,6,17,0,"_GestureHandlerRootViewContext"],[53,36,17,0],[53,39,17,0,"require"],[53,46,17,0],[53,47,17,0,"_dependencyMap"],[53,61,17,0],[54,2,17,0],[54,6,17,0,"GestureHandlerRootViewContext"],[54,35,17,0],[54,38,17,0,"_interopDefault"],[54,53,17,0],[54,54,17,0,"_GestureHandlerRootViewContext"],[54,84,17,0],[55,2,18,0],[55,6,18,0,"_ghQueueMicrotask"],[55,23,18,0],[55,26,18,0,"require"],[55,33,18,0],[55,34,18,0,"_dependencyMap"],[55,48,18,0],[56,2,19,0],[56,6,19,0,"_mountRegistry"],[56,20,19,0],[56,23,19,0,"require"],[56,30,19,0],[56,31,19,0,"_dependencyMap"],[56,45,19,0],[57,2,1,0],[57,6,1,4,"_UIManagerAny$getView"],[57,27,1,25],[57,29,1,27,"_UIManagerAny$getView2"],[57,51,1,49],[57,53,1,51,"_UIManagerAny$getCons"],[57,74,1,72],[58,2,3,0],[58,11,3,9,"_defineProperty"],[58,26,3,24,"_defineProperty"],[58,27,3,25,"obj"],[58,30,3,28],[58,32,3,30,"key"],[58,35,3,33],[58,37,3,35,"value"],[58,42,3,40],[58,44,3,42],[59,4,3,44],[59,8,3,48,"key"],[59,11,3,51],[59,15,3,55,"obj"],[59,18,3,58],[59,20,3,60],[60,6,3,62,"Object"],[60,12,3,68],[60,13,3,69,"defineProperty"],[60,27,3,83],[60,28,3,84,"obj"],[60,31,3,87],[60,33,3,89,"key"],[60,36,3,92],[60,38,3,94],[61,8,3,96,"value"],[61,13,3,101],[61,15,3,103,"value"],[61,20,3,108],[62,8,3,110,"enumerable"],[62,18,3,120],[62,20,3,122],[62,24,3,126],[63,8,3,128,"configurable"],[63,20,3,140],[63,22,3,142],[63,26,3,146],[64,8,3,148,"writable"],[64,16,3,156],[64,18,3,158],[65,6,3,163],[65,7,3,164],[65,8,3,165],[66,4,3,167],[66,5,3,168],[66,11,3,174],[67,6,3,176,"obj"],[67,9,3,179],[67,10,3,180,"key"],[67,13,3,183],[67,14,3,184],[67,17,3,187,"value"],[67,22,3,192],[68,4,3,194],[69,4,3,196],[69,11,3,203,"obj"],[69,14,3,206],[70,2,3,208],[71,2,20,0],[71,8,20,6,"UIManagerAny"],[71,20,20,18],[71,23,20,21,"UIManager"],[71,32,20,30],[71,33,20,30,"default"],[71,40,20,30],[72,2,21,0,"customDirectEventTypes"],[72,25,21,22],[72,26,21,22,"customDirectEventTypes"],[72,48,21,22],[72,49,21,23,"topGestureHandlerEvent"],[72,71,21,45],[72,74,21,48],[73,4,22,2,"registrationName"],[73,20,22,18],[73,22,22,20],[74,2,23,0],[74,3,23,1],[75,2,24,0],[75,8,24,6,"customGHEventsConfigFabricAndroid"],[75,41,24,39],[75,44,24,42],[76,4,25,2,"topOnGestureHandlerEvent"],[76,28,25,26],[76,30,25,28],[77,6,26,4,"registrationName"],[77,22,26,20],[77,24,26,22],[78,4,27,2],[78,5,27,3],[79,4,28,2,"topOnGestureHandlerStateChange"],[79,34,28,32],[79,36,28,34],[80,6,29,4,"registrationName"],[80,22,29,20],[80,24,29,22],[81,4,30,2],[82,2,31,0],[82,3,31,1],[83,2,32,0],[83,8,32,6,"customGHEventsConfig"],[83,28,32,26],[83,31,32,26,"Object"],[83,37,32,26],[83,38,32,26,"assign"],[83,44,32,26],[84,4,33,2,"onGestureHandlerEvent"],[84,25,33,23],[84,27,33,25],[85,6,34,4,"registrationName"],[85,22,34,20],[85,24,34,22],[86,4,35,2],[86,5,35,3],[87,4,36,2,"onGestureHandlerStateChange"],[87,31,36,29],[87,33,36,31],[88,6,37,4,"registrationName"],[88,22,37,20],[88,24,37,22],[89,4,38,2],[90,2,38,3],[90,5,47,6],[90,9,47,6,"isFabric"],[90,16,47,14],[90,17,47,14,"isFabric"],[90,25,47,14],[90,27,47,15],[90,28,47,16],[90,32,47,20,"Platform"],[90,40,47,28],[90,41,47,28,"default"],[90,48,47,28],[90,49,47,29,"OS"],[90,51,47,31],[90,56,47,36],[90,65,47,45],[90,69,47,49,"customGHEventsConfigFabricAndroid"],[90,102,47,82],[90,103,48,1],[90,104,48,2],[90,105,48,3],[91,2,49,0],[92,2,50,0],[93,2,51,0],[95,2,53,0,"UIManagerAny"],[95,14,53,12],[95,15,53,13,"genericDirectEventTypes"],[95,38,53,36],[95,41,53,36,"Object"],[95,47,53,36],[95,48,53,36,"assign"],[95,54,53,36],[95,59,53,44,"UIManagerAny"],[95,71,53,56],[95,72,53,57,"genericDirectEventTypes"],[95,95,53,80],[95,97,54,5,"customGHEventsConfig"],[95,117,54,25],[95,118,55,1],[95,119,55,2],[95,120,55,3],[96,2,56,0],[97,2,57,0],[99,2,59,0],[99,8,59,6,"UIManagerConstants"],[99,26,59,24],[99,29,59,27],[99,30,59,28,"_UIManagerAny$getView"],[99,51,59,49],[99,54,59,52],[99,55,59,53,"_UIManagerAny$getView2"],[99,77,59,75],[99,80,59,78,"UIManagerAny"],[99,92,59,90],[99,93,59,91,"getViewManagerConfig"],[99,113,59,111],[99,119,59,117],[99,123,59,121],[99,127,59,125,"_UIManagerAny$getView2"],[99,149,59,147],[99,154,59,152],[99,159,59,157],[99,160,59,158],[99,163,59,161],[99,168,59,166],[99,169,59,167],[99,172,59,170,"_UIManagerAny$getView2"],[99,194,59,192],[99,195,59,193,"call"],[99,199,59,197],[99,200,59,198,"UIManagerAny"],[99,212,59,210],[99,214,59,212],[99,228,59,226],[99,229,59,227],[99,235,59,233],[99,239,59,237],[99,243,59,241,"_UIManagerAny$getView"],[99,264,59,262],[99,269,59,267],[99,274,59,272],[99,275,59,273],[99,278,59,276,"_UIManagerAny$getView"],[99,299,59,297],[99,302,59,300],[99,303,59,301,"_UIManagerAny$getCons"],[99,324,59,322],[99,327,59,325,"UIManagerAny"],[99,339,59,337],[99,340,59,338,"getConstants"],[99,352,59,350],[99,358,59,356],[99,362,59,360],[99,366,59,364,"_UIManagerAny$getCons"],[99,387,59,385],[99,392,59,390],[99,397,59,395],[99,398,59,396],[99,401,59,399],[99,406,59,404],[99,407,59,405],[99,410,59,408,"_UIManagerAny$getCons"],[99,431,59,429],[99,432,59,430,"call"],[99,436,59,434],[99,437,59,435,"UIManagerAny"],[99,449,59,447],[99,450,59,448],[100,2,61,0],[100,6,61,4,"UIManagerConstants"],[100,24,61,22],[100,26,61,24],[101,4,62,2,"UIManagerConstants"],[101,22,62,20],[101,23,62,21,"genericDirectEventTypes"],[101,46,62,44],[101,49,62,44,"Object"],[101,55,62,44],[101,56,62,44,"assign"],[101,62,62,44],[101,67,62,52,"UIManagerConstants"],[101,85,62,70],[101,86,62,71,"genericDirectEventTypes"],[101,109,62,94],[101,111,63,7,"customGHEventsConfig"],[101,131,63,27],[101,132,64,3],[102,2,65,0],[102,3,65,1],[102,4,65,2],[104,2,68,0],[104,8,68,6],[105,4,69,2,"setJSResponder"],[105,18,69,16],[105,20,69,18,"oldSetJSResponder"],[105,37,69,35],[105,40,69,38,"oldSetJSResponder"],[105,41,69,38],[105,46,69,44],[105,47,69,45],[106,4,69,45],[106,5,70,3],[107,4,71,2,"clearJSResponder"],[107,20,71,18],[107,22,71,20,"oldClearJSResponder"],[107,41,71,39],[107,44,71,42,"oldClearJSResponder"],[107,45,71,42],[107,50,71,48],[107,51,71,49],[108,4,71,49],[109,2,73,0],[109,3,73,1],[109,6,73,4,"UIManagerAny"],[109,18,73,16],[110,2,75,0,"UIManagerAny"],[110,14,75,12],[110,15,75,13,"setJSResponder"],[110,29,75,27],[110,32,75,30],[110,33,75,31,"tag"],[110,36,75,34],[110,38,75,36,"blockNativeResponder"],[110,58,75,56],[110,63,75,61],[111,4,76,2,"RNGestureHandlerModule"],[111,26,76,24],[111,27,76,24,"default"],[111,34,76,24],[111,35,76,25,"handleSetJSResponder"],[111,55,76,45],[111,56,76,46,"tag"],[111,59,76,49],[111,61,76,51,"blockNativeResponder"],[111,81,76,71],[111,82,76,72],[112,4,77,2,"oldSetJSResponder"],[112,21,77,19],[112,22,77,20,"tag"],[112,25,77,23],[112,27,77,25,"blockNativeResponder"],[112,47,77,45],[112,48,77,46],[113,2,78,0],[113,3,78,1],[114,2,80,0,"UIManagerAny"],[114,14,80,12],[114,15,80,13,"clearJSResponder"],[114,31,80,29],[114,34,80,32],[114,40,80,38],[115,4,81,2,"RNGestureHandlerModule"],[115,26,81,24],[115,27,81,24,"default"],[115,34,81,24],[115,35,81,25,"handleClearJSResponder"],[115,57,81,47],[115,58,81,48],[115,59,81,49],[116,4,82,2,"oldClearJSResponder"],[116,23,82,21],[116,24,82,22],[116,25,82,23],[117,2,83,0],[117,3,83,1],[118,2,85,0],[118,6,85,4,"allowTouches"],[118,18,85,16],[118,21,85,19],[118,25,85,23],[119,2,86,0],[119,8,86,6,"DEV_ON_ANDROID"],[119,22,86,20],[119,25,86,23,"__DEV__"],[119,32,86,30],[119,36,86,34,"Platform"],[119,44,86,42],[119,45,86,42,"default"],[119,52,86,42],[119,53,86,43,"OS"],[119,55,86,45],[119,60,86,50],[119,69,86,59],[119,70,86,60],[119,71,86,61],[120,2,87,0],[122,2,89,0],[122,6,89,4,"DEV_ON_ANDROID"],[122,20,89,18],[122,22,89,20],[123,4,90,2,"DeviceEventEmitter"],[123,22,90,20],[123,23,90,20,"default"],[123,30,90,20],[123,31,90,21,"addListener"],[123,42,90,32],[123,43,90,33],[123,67,90,57],[123,69,90,59],[123,75,90,65],[124,6,91,4,"allowTouches"],[124,18,91,16],[124,21,91,19],[124,22,91,20,"allowTouches"],[124,34,91,32],[125,4,92,2],[125,5,92,3],[125,6,92,4],[126,2,93,0],[127,2,95,0],[127,11,95,9,"hasUnresolvedRefs"],[127,28,95,26,"hasUnresolvedRefs"],[127,29,95,27,"props"],[127,34,95,32],[127,36,95,34],[128,4,96,2],[129,4,97,2],[129,10,97,8,"extract"],[129,17,97,15],[129,20,97,18,"refs"],[129,24,97,22],[129,28,97,26],[130,6,98,4],[130,10,98,8],[130,11,98,9,"Array"],[130,16,98,14],[130,17,98,15,"isArray"],[130,24,98,22],[130,25,98,23,"refs"],[130,29,98,27],[130,30,98,28],[130,32,98,30],[131,8,99,6],[131,15,99,13,"refs"],[131,19,99,17],[131,23,99,21,"refs"],[131,27,99,25],[131,28,99,26,"current"],[131,35,99,33],[131,40,99,38],[131,44,99,42],[132,6,100,4],[133,6,102,4],[133,13,102,11,"refs"],[133,17,102,15],[133,18,102,16,"some"],[133,22,102,20],[133,23,102,21,"r"],[133,24,102,22],[133,28,102,26,"r"],[133,29,102,27],[133,33,102,31,"r"],[133,34,102,32],[133,35,102,33,"current"],[133,42,102,40],[133,47,102,45],[133,51,102,49],[133,52,102,50],[134,4,103,2],[134,5,103,3],[135,4,105,2],[135,11,105,9,"extract"],[135,18,105,16],[135,19,105,17,"props"],[135,24,105,22],[135,25,105,23],[135,47,105,45],[135,48,105,46],[135,49,105,47],[135,53,105,51,"extract"],[135,60,105,58],[135,61,105,59,"props"],[135,66,105,64],[135,67,105,65],[135,76,105,74],[135,77,105,75],[135,78,105,76],[136,2,106,0],[137,2,108,0],[137,8,108,6,"stateToPropMappings"],[137,27,108,25],[137,30,108,28],[138,4,109,2],[138,5,109,3,"State"],[138,11,109,8],[138,12,109,8,"State"],[138,17,109,8],[138,18,109,9,"UNDETERMINED"],[138,30,109,21],[138,33,109,24,"undefined"],[138,42,109,33],[139,4,110,2],[139,5,110,3,"State"],[139,11,110,8],[139,12,110,8,"State"],[139,17,110,8],[139,18,110,9,"BEGAN"],[139,23,110,14],[139,26,110,17],[139,35,110,26],[140,4,111,2],[140,5,111,3,"State"],[140,11,111,8],[140,12,111,8,"State"],[140,17,111,8],[140,18,111,9,"FAILED"],[140,24,111,15],[140,27,111,18],[140,37,111,28],[141,4,112,2],[141,5,112,3,"State"],[141,11,112,8],[141,12,112,8,"State"],[141,17,112,8],[141,18,112,9,"CANCELLED"],[141,27,112,18],[141,30,112,21],[141,43,112,34],[142,4,113,2],[142,5,113,3,"State"],[142,11,113,8],[142,12,113,8,"State"],[142,17,113,8],[142,18,113,9,"ACTIVE"],[142,24,113,15],[142,27,113,18],[142,40,113,31],[143,4,114,2],[143,5,114,3,"State"],[143,11,114,8],[143,12,114,8,"State"],[143,17,114,8],[143,18,114,9,"END"],[143,21,114,12],[143,24,114,15],[144,2,115,0],[144,3,115,1],[145,2,116,0],[145,8,116,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[145,35,116,33],[145,38,116,36],[145,39,116,37],[145,40,116,38],[145,41,116,39],[147,2,118,15],[147,11,118,24,"createHandler"],[147,24,118,37,"createHandler"],[147,25,118,38],[148,4,119,2,"name"],[148,8,119,6],[149,4,120,2,"allowedProps"],[149,16,120,14],[149,19,120,17],[149,21,120,19],[150,4,121,2,"config"],[150,10,121,8],[150,13,121,11],[150,14,121,12],[150,15,121,13],[151,4,122,2,"transformProps"],[151,18,122,16],[152,4,123,2,"customNativeProps"],[152,21,123,19],[152,24,123,22],[153,2,124,0],[153,3,124,1],[153,5,124,3],[154,4,125,2],[154,10,125,8,"Handler"],[154,17,125,15],[154,26,125,24,"React"],[154,31,125,29],[154,32,125,30,"Component"],[154,41,125,39],[154,42,125,40],[155,6,126,4,"constructor"],[155,17,126,15,"constructor"],[155,18,126,16,"props"],[155,23,126,21],[155,25,126,23],[156,8,127,6],[156,13,127,11],[156,14,127,12,"props"],[156,19,127,17],[156,20,127,18],[157,8,129,6,"_defineProperty"],[157,23,129,21],[157,24,129,22],[157,28,129,26],[157,30,129,28],[157,42,129,40],[157,44,129,42],[157,49,129,47],[157,50,129,48],[157,51,129,49],[158,8,131,6,"_defineProperty"],[158,23,131,21],[158,24,131,22],[158,28,131,26],[158,30,131,28],[158,38,131,36],[158,40,131,38],[158,45,131,43],[158,46,131,44],[158,47,131,45],[159,8,133,6,"_defineProperty"],[159,23,133,21],[159,24,133,22],[159,28,133,26],[159,30,133,28],[159,40,133,38],[159,42,133,40],[159,47,133,45],[159,48,133,46],[159,49,133,47],[160,8,135,6,"_defineProperty"],[160,23,135,21],[160,24,135,22],[160,28,135,26],[160,30,135,28],[160,44,135,42],[160,46,135,44],[160,51,135,49],[160,52,135,50],[160,53,135,51],[161,8,137,6,"_defineProperty"],[161,23,137,21],[161,24,137,22],[161,28,137,26],[161,30,137,28],[161,40,137,38],[161,42,137,40],[161,47,137,45],[161,48,137,46],[161,49,137,47],[162,8,139,6,"_defineProperty"],[162,23,139,21],[162,24,139,22],[162,28,139,26],[162,30,139,28],[162,39,139,37],[162,41,139,39],[162,46,139,44],[162,47,139,45],[162,48,139,46],[163,8,141,6,"_defineProperty"],[163,23,141,21],[163,24,141,22],[163,28,141,26],[163,30,141,28],[163,55,141,53],[163,57,141,55],[163,62,141,60],[163,63,141,61],[163,64,141,62],[164,8,143,6,"_defineProperty"],[164,23,143,21],[164,24,143,22],[164,28,143,26],[164,30,143,28],[164,53,143,51],[164,55,143,53,"event"],[164,60,143,58],[164,64,143,62],[165,10,144,8],[165,14,144,12,"event"],[165,19,144,17],[165,20,144,18,"nativeEvent"],[165,31,144,29],[165,32,144,30,"handlerTag"],[165,42,144,40],[165,47,144,45],[165,51,144,49],[165,52,144,50,"handlerTag"],[165,62,144,60],[165,64,144,62],[166,12,145,10],[166,16,145,14],[166,23,145,21],[166,27,145,25],[166,28,145,26,"props"],[166,33,145,31],[166,34,145,32,"onGestureEvent"],[166,48,145,46],[166,53,145,51],[166,63,145,61],[166,65,145,63],[167,14,146,12],[167,18,146,16,"_this$props$onGesture"],[167,39,146,37],[167,41,146,39,"_this$props"],[167,52,146,50],[168,14,148,12],[168,15,148,13,"_this$props$onGesture"],[168,36,148,34],[168,39,148,37],[168,40,148,38,"_this$props"],[168,51,148,49],[168,54,148,52],[168,58,148,56],[168,59,148,57,"props"],[168,64,148,62],[168,66,148,64,"onGestureEvent"],[168,80,148,78],[168,86,148,84],[168,90,148,88],[168,94,148,92,"_this$props$onGesture"],[168,115,148,113],[168,120,148,118],[168,125,148,123],[168,126,148,124],[168,129,148,127],[168,134,148,132],[168,135,148,133],[168,138,148,136,"_this$props$onGesture"],[168,159,148,157],[168,160,148,158,"call"],[168,164,148,162],[168,165,148,163,"_this$props"],[168,176,148,174],[168,178,148,176,"event"],[168,183,148,181],[168,184,148,182],[169,12,149,10],[170,10,150,8],[170,11,150,9],[170,17,150,15],[171,12,151,10],[171,16,151,14,"_this$props$onGesture2"],[171,38,151,36],[171,40,151,38,"_this$props2"],[171,52,151,50],[172,12,153,10],[172,13,153,11,"_this$props$onGesture2"],[172,35,153,33],[172,38,153,36],[172,39,153,37,"_this$props2"],[172,51,153,49],[172,54,153,52],[172,58,153,56],[172,59,153,57,"props"],[172,64,153,62],[172,66,153,64,"onGestureHandlerEvent"],[172,87,153,85],[172,93,153,91],[172,97,153,95],[172,101,153,99,"_this$props$onGesture2"],[172,123,153,121],[172,128,153,126],[172,133,153,131],[172,134,153,132],[172,137,153,135],[172,142,153,140],[172,143,153,141],[172,146,153,144,"_this$props$onGesture2"],[172,168,153,166],[172,169,153,167,"call"],[172,173,153,171],[172,174,153,172,"_this$props2"],[172,186,153,184],[172,188,153,186,"event"],[172,193,153,191],[172,194,153,192],[173,10,154,8],[174,8,155,6],[174,9,155,7],[174,10,155,8],[175,8,157,6,"_defineProperty"],[175,23,157,21],[175,24,157,22],[175,28,157,26],[175,30,157,28],[175,59,157,57],[175,61,157,59,"event"],[175,66,157,64],[175,70,157,68],[176,10,158,8],[176,14,158,12,"event"],[176,19,158,17],[176,20,158,18,"nativeEvent"],[176,31,158,29],[176,32,158,30,"handlerTag"],[176,42,158,40],[176,47,158,45],[176,51,158,49],[176,52,158,50,"handlerTag"],[176,62,158,60],[176,64,158,62],[177,12,159,10],[177,16,159,14],[177,23,159,21],[177,27,159,25],[177,28,159,26,"props"],[177,33,159,31],[177,34,159,32,"onHandlerStateChange"],[177,54,159,52],[177,59,159,57],[177,69,159,67],[177,71,159,69],[178,14,160,12],[178,18,160,16,"_this$props$onHandler"],[178,39,160,37],[178,41,160,39,"_this$props3"],[178,53,160,51],[179,14,162,12],[179,15,162,13,"_this$props$onHandler"],[179,36,162,34],[179,39,162,37],[179,40,162,38,"_this$props3"],[179,52,162,50],[179,55,162,53],[179,59,162,57],[179,60,162,58,"props"],[179,65,162,63],[179,67,162,65,"onHandlerStateChange"],[179,87,162,85],[179,93,162,91],[179,97,162,95],[179,101,162,99,"_this$props$onHandler"],[179,122,162,120],[179,127,162,125],[179,132,162,130],[179,133,162,131],[179,136,162,134],[179,141,162,139],[179,142,162,140],[179,145,162,143,"_this$props$onHandler"],[179,166,162,164],[179,167,162,165,"call"],[179,171,162,169],[179,172,162,170,"_this$props3"],[179,184,162,182],[179,186,162,184,"event"],[179,191,162,189],[179,192,162,190],[180,12,163,10],[181,12,165,10],[181,18,165,16,"state"],[181,23,165,21],[181,26,165,24,"event"],[181,31,165,29],[181,32,165,30,"nativeEvent"],[181,43,165,41],[181,44,165,42,"state"],[181,49,165,47],[182,12,166,10],[182,18,166,16,"stateEventName"],[182,32,166,30],[182,35,166,33,"stateToPropMappings"],[182,54,166,52],[182,55,166,53,"state"],[182,60,166,58],[182,61,166,59],[183,12,167,10],[183,18,167,16,"eventHandler"],[183,30,167,28],[183,33,167,31,"stateEventName"],[183,47,167,45],[183,51,167,49],[183,55,167,53],[183,56,167,54,"props"],[183,61,167,59],[183,62,167,60,"stateEventName"],[183,76,167,74],[183,77,167,75],[184,12,169,10],[184,16,169,14,"eventHandler"],[184,28,169,26],[184,32,169,30],[184,39,169,37,"eventHandler"],[184,51,169,49],[184,56,169,54],[184,66,169,64],[184,68,169,66],[185,14,170,12,"eventHandler"],[185,26,170,24],[185,27,170,25,"event"],[185,32,170,30],[185,33,170,31],[186,12,171,10],[187,10,172,8],[187,11,172,9],[187,17,172,15],[188,12,173,10],[188,16,173,14,"_this$props$onGesture3"],[188,38,173,36],[188,40,173,38,"_this$props4"],[188,52,173,50],[189,12,175,10],[189,13,175,11,"_this$props$onGesture3"],[189,35,175,33],[189,38,175,36],[189,39,175,37,"_this$props4"],[189,51,175,49],[189,54,175,52],[189,58,175,56],[189,59,175,57,"props"],[189,64,175,62],[189,66,175,64,"onGestureHandlerStateChange"],[189,93,175,91],[189,99,175,97],[189,103,175,101],[189,107,175,105,"_this$props$onGesture3"],[189,129,175,127],[189,134,175,132],[189,139,175,137],[189,140,175,138],[189,143,175,141],[189,148,175,146],[189,149,175,147],[189,152,175,150,"_this$props$onGesture3"],[189,174,175,172],[189,175,175,173,"call"],[189,179,175,177],[189,180,175,178,"_this$props4"],[189,192,175,190],[189,194,175,192,"event"],[189,199,175,197],[189,200,175,198],[190,10,176,8],[191,8,177,6],[191,9,177,7],[191,10,177,8],[192,8,179,6,"_defineProperty"],[192,23,179,21],[192,24,179,22],[192,28,179,26],[192,30,179,28],[192,42,179,40],[192,44,179,42,"node"],[192,48,179,46],[192,52,179,50],[193,10,180,8],[193,14,180,12,"_props"],[193,20,180,18],[194,10,182,8],[194,14,182,12],[194,15,182,13,"viewNode"],[194,23,182,21],[194,26,182,24,"node"],[194,30,182,28],[195,10,183,8],[195,16,183,14,"child"],[195,21,183,19],[195,24,183,22,"React"],[195,29,183,27],[195,30,183,28,"Children"],[195,38,183,36],[195,39,183,37,"only"],[195,43,183,41],[195,44,183,42],[195,48,183,46],[195,49,183,47,"props"],[195,54,183,52],[195,55,183,53,"children"],[195,63,183,61],[195,64,183,62],[195,65,183,63],[195,66,183,64],[196,10,184,8],[198,10,186,8],[198,16,186,14,"ref"],[198,19,186,17],[198,22,186,20],[198,26,186,20,"isReact19"],[198,33,186,29],[198,34,186,29,"isReact19"],[198,43,186,29],[198,45,186,30],[198,46,186,31],[198,49,186,34],[198,50,186,35,"_props"],[198,56,186,41],[198,59,186,44,"child"],[198,64,186,49],[198,65,186,50,"props"],[198,70,186,55],[198,76,186,61],[198,80,186,65],[198,84,186,69,"_props"],[198,90,186,75],[198,95,186,80],[198,100,186,85],[198,101,186,86],[198,104,186,89],[198,109,186,94],[198,110,186,95],[198,113,186,98,"_props"],[198,119,186,104],[198,120,186,105,"ref"],[198,123,186,108],[198,126,186,111,"child"],[198,131,186,116],[198,136,186,121],[198,140,186,125],[198,144,186,129,"child"],[198,149,186,134],[198,154,186,139],[198,159,186,144],[198,160,186,145],[198,163,186,148],[198,168,186,153],[198,169,186,154],[198,172,186,157,"child"],[198,177,186,162],[198,178,186,163,"ref"],[198,181,186,166],[199,10,188,8],[199,14,188,12],[199,15,188,13,"ref"],[199,18,188,16],[199,20,188,18],[200,12,189,10],[201,10,190,8],[202,10,192,8],[202,14,192,12],[202,21,192,19,"ref"],[202,24,192,22],[202,29,192,27],[202,39,192,37],[202,41,192,39],[203,12,193,10,"ref"],[203,15,193,13],[203,16,193,14,"node"],[203,20,193,18],[203,21,193,19],[204,10,194,8],[204,11,194,9],[204,17,194,15],[205,12,195,10,"ref"],[205,15,195,13],[205,16,195,14,"current"],[205,23,195,21],[205,26,195,24,"node"],[205,30,195,28],[206,10,196,8],[207,8,197,6],[207,9,197,7],[207,10,197,8],[208,8,199,6,"_defineProperty"],[208,23,199,21],[208,24,199,22],[208,28,199,26],[208,30,199,28],[208,52,199,50],[208,54,199,52,"newConfig"],[208,63,199,61],[208,67,199,65],[209,10,200,8],[209,14,200,12],[209,15,200,13,"config"],[209,21,200,19],[209,24,200,22,"newConfig"],[209,33,200,31],[210,10,201,8,"RNGestureHandlerModule"],[210,32,201,30],[210,33,201,30,"default"],[210,40,201,30],[210,41,201,31,"createGestureHandler"],[210,61,201,51],[210,62,201,52,"name"],[210,66,201,56],[210,68,201,58],[210,72,201,62],[210,73,201,63,"handlerTag"],[210,83,201,73],[210,85,201,75,"newConfig"],[210,94,201,84],[210,95,201,85],[211,8,202,6],[211,9,202,7],[211,10,202,8],[212,8,204,6,"_defineProperty"],[212,23,204,21],[212,24,204,22],[212,28,204,26],[212,30,204,28],[212,52,204,50],[212,54,204,52,"newViewTag"],[212,64,204,62],[212,68,204,66],[213,10,205,8],[213,14,205,12],[213,15,205,13,"viewTag"],[213,22,205,20],[213,25,205,23,"newViewTag"],[213,35,205,33],[214,10,207,8],[214,14,207,12,"Platform"],[214,22,207,20],[214,23,207,20,"default"],[214,30,207,20],[214,31,207,21,"OS"],[214,33,207,23],[214,38,207,28],[214,43,207,33],[214,45,207,35],[215,12,208,10],[216,12,209,10,"RNGestureHandlerModule"],[216,34,209,32],[216,35,209,32,"default"],[216,42,209,32],[216,43,209,33,"attachGestureHandler"],[216,63,209,53],[216,64,209,54],[216,68,209,58],[216,69,209,59,"handlerTag"],[216,79,209,69],[216,81,209,71,"newViewTag"],[216,91,209,81],[216,93,209,83,"ActionType"],[216,104,209,93],[216,105,209,93,"ActionType"],[216,115,209,93],[216,116,209,94,"JS_FUNCTION_OLD_API"],[216,135,209,113],[217,12,209,115],[218,12,210,10],[218,16,210,14],[218,17,210,15,"propsRef"],[218,25,210,23],[218,26,210,24],[219,10,211,8],[219,11,211,9],[219,17,211,15],[220,12,212,10],[220,16,212,10,"registerOldGestureHandler"],[220,33,212,35],[220,34,212,35,"registerOldGestureHandler"],[220,59,212,35],[220,61,212,36],[220,65,212,40],[220,66,212,41,"handlerTag"],[220,76,212,51],[220,78,212,53],[221,14,213,12,"onGestureEvent"],[221,28,213,26],[221,30,213,28],[221,34,213,32],[221,35,213,33,"onGestureHandlerEvent"],[221,56,213,54],[222,14,214,12,"onGestureStateChange"],[222,34,214,32],[222,36,214,34],[222,40,214,38],[222,41,214,39,"onGestureHandlerStateChange"],[223,12,215,10],[223,13,215,11],[223,14,215,12],[224,12,217,10],[224,18,217,16,"actionType"],[224,28,217,26],[224,31,217,29],[224,32,217,30],[224,38,217,36],[225,14,218,12],[225,18,218,16,"_this$props5"],[225,30,218,28],[225,32,218,30,"_this$props6"],[225,44,218,42],[226,14,220,12],[226,20,220,18,"onGestureEvent"],[226,34,220,32],[226,37,220,35],[226,38,220,36,"_this$props5"],[226,50,220,48],[226,53,220,51],[226,57,220,55],[226,58,220,56,"props"],[226,63,220,61],[226,69,220,67],[226,73,220,71],[226,77,220,75,"_this$props5"],[226,89,220,87],[226,94,220,92],[226,99,220,97],[226,100,220,98],[226,103,220,101],[226,108,220,106],[226,109,220,107],[226,112,220,110,"_this$props5"],[226,124,220,122],[226,125,220,123,"onGestureEvent"],[226,139,220,137],[227,14,221,12],[227,20,221,18,"isGestureHandlerWorklet"],[227,43,221,41],[227,46,221,44,"onGestureEvent"],[227,60,221,58],[227,65,221,63],[227,74,221,72],[227,78,221,76,"onGestureEvent"],[227,92,221,90],[227,96,221,94],[227,117,221,115],[227,121,221,119,"onGestureEvent"],[227,135,221,133],[227,136,221,134],[228,14,222,12],[228,20,222,18,"onHandlerStateChange"],[228,40,222,38],[228,43,222,41],[228,44,222,42,"_this$props6"],[228,56,222,54],[228,59,222,57],[228,63,222,61],[228,64,222,62,"props"],[228,69,222,67],[228,75,222,73],[228,79,222,77],[228,83,222,81,"_this$props6"],[228,95,222,93],[228,100,222,98],[228,105,222,103],[228,106,222,104],[228,109,222,107],[228,114,222,112],[228,115,222,113],[228,118,222,116,"_this$props6"],[228,130,222,128],[228,131,222,129,"onHandlerStateChange"],[228,151,222,149],[229,14,223,12],[229,20,223,18,"isStateChangeHandlerWorklet"],[229,47,223,45],[229,50,223,48,"onHandlerStateChange"],[229,70,223,68],[229,75,223,73],[229,84,223,82],[229,88,223,86,"onHandlerStateChange"],[229,108,223,106],[229,112,223,110],[229,133,223,131],[229,137,223,135,"onHandlerStateChange"],[229,157,223,155],[229,158,223,156],[230,14,224,12],[230,20,224,18,"isReanimatedHandler"],[230,39,224,37],[230,42,224,40,"isGestureHandlerWorklet"],[230,65,224,63],[230,69,224,67,"isStateChangeHandlerWorklet"],[230,96,224,94],[231,14,226,12],[231,18,226,16,"isReanimatedHandler"],[231,37,226,35],[231,39,226,37],[232,16,227,14],[233,16,228,14],[233,23,228,21,"ActionType"],[233,34,228,31],[233,35,228,31,"ActionType"],[233,45,228,31],[233,46,228,32,"REANIMATED_WORKLET"],[233,64,228,50],[234,14,229,12],[234,15,229,13],[234,21,229,19],[234,25,229,23,"onGestureEvent"],[234,39,229,37],[234,43,229,41],[234,55,229,53],[234,59,229,57,"onGestureEvent"],[234,73,229,71],[234,75,229,73],[235,16,230,14],[236,16,231,14],[236,23,231,21,"ActionType"],[236,34,231,31],[236,35,231,31,"ActionType"],[236,45,231,31],[236,46,231,32,"NATIVE_ANIMATED_EVENT"],[236,67,231,53],[237,14,232,12],[237,15,232,13],[237,21,232,19],[238,16,233,14],[239,16,234,14],[239,23,234,21,"ActionType"],[239,34,234,31],[239,35,234,31,"ActionType"],[239,45,234,31],[239,46,234,32,"JS_FUNCTION_OLD_API"],[239,65,234,51],[240,14,235,12],[241,12,236,10],[241,13,236,11],[241,15,236,13],[241,16,236,14],[242,12,238,10,"RNGestureHandlerModule"],[242,34,238,32],[242,35,238,32,"default"],[242,42,238,32],[242,43,238,33,"attachGestureHandler"],[242,63,238,53],[242,64,238,54],[242,68,238,58],[242,69,238,59,"handlerTag"],[242,79,238,69],[242,81,238,71,"newViewTag"],[242,91,238,81],[242,93,238,83,"actionType"],[242,103,238,93],[242,104,238,94],[243,10,239,8],[244,10,241,8],[244,14,241,8,"scheduleFlushOperations"],[244,20,241,31],[244,21,241,31,"scheduleFlushOperations"],[244,44,241,31],[244,46,241,32],[244,47,241,33],[245,10,242,8],[245,14,242,8,"ghQueueMicrotask"],[245,31,242,24],[245,32,242,24,"ghQueueMicrotask"],[245,48,242,24],[245,50,242,25],[245,56,242,31],[246,12,243,10,"MountRegistry"],[246,26,243,23],[246,27,243,23,"MountRegistry"],[246,40,243,23],[246,41,243,24,"gestureHandlerWillMount"],[246,64,243,47],[246,65,243,48],[246,69,243,52],[246,70,243,53],[247,10,244,8],[247,11,244,9],[247,12,244,10],[248,8,245,6],[248,9,245,7],[248,10,245,8],[249,8,247,6,"_defineProperty"],[249,23,247,21],[249,24,247,22],[249,28,247,26],[249,30,247,28],[249,52,247,50],[249,54,247,52,"newConfig"],[249,63,247,61],[249,67,247,65],[250,10,248,8],[250,14,248,12],[250,15,248,13,"config"],[250,21,248,19],[250,24,248,22,"newConfig"],[250,33,248,31],[251,10,249,8,"RNGestureHandlerModule"],[251,32,249,30],[251,33,249,30,"default"],[251,40,249,30],[251,41,249,31,"updateGestureHandler"],[251,61,249,51],[251,62,249,52],[251,66,249,56],[251,67,249,57,"handlerTag"],[251,77,249,67],[251,79,249,69,"newConfig"],[251,88,249,78],[251,89,249,79],[252,10,250,8],[252,14,250,8,"scheduleFlushOperations"],[252,20,250,31],[252,21,250,31,"scheduleFlushOperations"],[252,44,250,31],[252,46,250,32],[252,47,250,33],[253,8,251,6],[253,9,251,7],[253,10,251,8],[254,8,253,6],[254,12,253,10],[254,13,253,11,"handlerTag"],[254,23,253,21],[254,26,253,24],[254,30,253,24,"getNextHandlerTag"],[254,48,253,41],[254,49,253,41,"getNextHandlerTag"],[254,66,253,41],[254,68,253,42],[254,69,253,43],[255,8,254,6],[255,12,254,10],[255,13,254,11,"config"],[255,19,254,17],[255,22,254,20],[255,23,254,21],[255,24,254,22],[256,8,255,6],[256,12,255,10],[256,13,255,11,"propsRef"],[256,21,255,19],[256,24,255,22],[256,37,255,35,"React"],[256,42,255,40],[256,43,255,41,"createRef"],[256,52,255,50],[256,53,255,51],[256,54,255,52],[257,8,256,6],[257,12,256,10],[257,13,256,11,"isMountedRef"],[257,25,256,23],[257,28,256,26],[257,41,256,39,"React"],[257,46,256,44],[257,47,256,45,"createRef"],[257,56,256,54],[257,57,256,55],[257,58,256,56],[258,8,257,6],[258,12,257,10],[258,13,257,11,"state"],[258,18,257,16],[258,21,257,19],[259,10,258,8,"allowTouches"],[260,8,259,6],[260,9,259,7],[261,8,261,6],[261,12,261,10,"props"],[261,17,261,15],[261,18,261,16,"id"],[261,20,261,18],[261,22,261,20],[262,10,262,8],[262,14,262,12,"handlerIDToTag"],[262,31,262,26],[262,32,262,26,"handlerIDToTag"],[262,46,262,26],[262,47,262,27,"props"],[262,52,262,32],[262,53,262,33,"id"],[262,55,262,35],[262,56,262,36],[262,61,262,41,"undefined"],[262,70,262,50],[262,72,262,52],[263,12,263,10],[263,18,263,16],[263,22,263,20,"Error"],[263,27,263,25],[263,28,263,26],[263,48,263,46,"props"],[263,53,263,51],[263,54,263,52,"id"],[263,56,263,54],[263,78,263,76],[263,79,263,77],[264,10,264,8],[265,10,266,8,"handlerIDToTag"],[265,27,266,22],[265,28,266,22,"handlerIDToTag"],[265,42,266,22],[265,43,266,23,"props"],[265,48,266,28],[265,49,266,29,"id"],[265,51,266,31],[265,52,266,32],[265,55,266,35],[265,59,266,39],[265,60,266,40,"handlerTag"],[265,70,266,50],[266,8,267,6],[267,6,268,4],[268,6,270,4,"componentDidMount"],[268,23,270,21,"componentDidMount"],[268,24,270,21],[268,26,270,24],[269,8,271,6],[269,14,271,12,"props"],[269,19,271,17],[269,22,271,20],[269,26,271,24],[269,27,271,25,"props"],[269,32,271,30],[270,8,272,6],[270,12,272,10],[270,13,272,11,"isMountedRef"],[270,25,272,23],[270,26,272,24,"current"],[270,33,272,31],[270,36,272,34],[270,40,272,38],[271,8,274,6],[271,12,274,10,"DEV_ON_ANDROID"],[271,26,274,24],[271,28,274,26],[272,10,275,8],[272,14,275,12],[272,15,275,13,"inspectorToggleListener"],[272,38,275,36],[272,41,275,39,"DeviceEventEmitter"],[272,59,275,57],[272,60,275,57,"default"],[272,67,275,57],[272,68,275,58,"addListener"],[272,79,275,69],[272,80,275,70],[272,104,275,94],[272,106,275,96],[272,112,275,102],[273,12,276,10],[273,16,276,14],[273,17,276,15,"setState"],[273,25,276,23],[273,26,276,24,"_"],[273,27,276,25],[273,32,276,30],[274,14,277,12,"allowTouches"],[275,12,278,10],[275,13,278,11],[275,14,278,12],[275,15,278,13],[276,12,279,10],[276,16,279,14],[276,17,279,15,"update"],[276,23,279,21],[276,24,279,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[276,51,279,49],[276,52,279,50],[277,10,280,8],[277,11,280,9],[277,12,280,10],[278,8,281,6],[279,8,283,6],[279,12,283,10,"hasUnresolvedRefs"],[279,29,283,27],[279,30,283,28,"props"],[279,35,283,33],[279,36,283,34],[279,38,283,36],[280,10,284,8],[281,10,285,8],[282,10,286,8],[283,10,287,8],[284,10,288,8],[285,10,289,8],[286,10,290,8],[286,14,290,8,"ghQueueMicrotask"],[286,31,290,24],[286,32,290,24,"ghQueueMicrotask"],[286,48,290,24],[286,50,290,25],[286,56,290,31],[287,12,291,10],[287,16,291,14],[287,17,291,15,"update"],[287,23,291,21],[287,24,291,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[287,51,291,49],[287,52,291,50],[288,10,292,8],[288,11,292,9],[288,12,292,10],[289,8,293,6],[290,8,295,6],[290,12,295,10],[290,13,295,11,"createGestureHandler"],[290,33,295,31],[290,34,295,32],[290,38,295,32,"filterConfig"],[290,44,295,44],[290,45,295,44,"filterConfig"],[290,57,295,44],[290,59,295,45,"transformProps"],[290,73,295,59],[290,76,295,62,"transformProps"],[290,90,295,76],[290,91,295,77],[290,95,295,81],[290,96,295,82,"props"],[290,101,295,87],[290,102,295,88],[290,105,295,91],[290,109,295,95],[290,110,295,96,"props"],[290,115,295,101],[290,117,295,103],[290,118,295,104],[290,121,295,107,"allowedProps"],[290,133,295,119],[290,135,295,121],[290,138,295,124,"customNativeProps"],[290,155,295,141],[290,156,295,142],[290,158,295,144,"config"],[290,164,295,150],[290,165,295,151],[290,166,295,152],[291,8,297,6],[291,12,297,10],[291,13,297,11],[291,17,297,15],[291,18,297,16,"viewNode"],[291,26,297,24],[291,28,297,26],[292,10,298,8],[292,16,298,14],[292,20,298,18,"Error"],[292,25,298,23],[292,26,298,24],[292,73,298,71,"Handler"],[292,80,298,78],[292,81,298,79,"displayName"],[292,92,298,90],[292,152,298,150],[292,153,298,151],[293,8,299,6],[294,8,301,6],[294,12,301,10],[294,13,301,11,"attachGestureHandler"],[294,33,301,31],[294,34,301,32],[294,38,301,32,"findNodeHandle"],[294,52,301,46],[294,53,301,46,"default"],[294,60,301,46],[294,62,301,47],[294,66,301,51],[294,67,301,52,"viewNode"],[294,75,301,60],[294,76,301,61],[294,77,301,62],[294,78,301,63],[294,79,301,64],[295,6,302,4],[296,6,304,4,"componentDidUpdate"],[296,24,304,22,"componentDidUpdate"],[296,25,304,22],[296,27,304,25],[297,8,305,6],[297,14,305,12,"viewTag"],[297,21,305,19],[297,24,305,22],[297,28,305,22,"findNodeHandle"],[297,42,305,36],[297,43,305,36,"default"],[297,50,305,36],[297,52,305,37],[297,56,305,41],[297,57,305,42,"viewNode"],[297,65,305,50],[297,66,305,51],[298,8,307,6],[298,12,307,10],[298,16,307,14],[298,17,307,15,"viewTag"],[298,24,307,22],[298,29,307,27,"viewTag"],[298,36,307,34],[298,38,307,36],[299,10,308,8],[299,14,308,12],[299,15,308,13,"attachGestureHandler"],[299,35,308,33],[299,36,308,34,"viewTag"],[299,43,308,41],[299,44,308,42],[299,45,308,43],[299,46,308,44],[300,8,309,6],[301,8,311,6],[301,12,311,10],[301,13,311,11,"update"],[301,19,311,17],[301,20,311,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[301,47,311,45],[301,48,311,46],[302,6,312,4],[303,6,314,4,"componentWillUnmount"],[303,26,314,24,"componentWillUnmount"],[303,27,314,24],[303,29,314,27],[304,8,315,6],[304,12,315,10,"_this$inspectorToggle"],[304,33,315,31],[305,8,317,6],[305,9,317,7,"_this$inspectorToggle"],[305,30,317,28],[305,33,317,31],[305,37,317,35],[305,38,317,36,"inspectorToggleListener"],[305,61,317,59],[305,67,317,65],[305,71,317,69],[305,75,317,73,"_this$inspectorToggle"],[305,96,317,94],[305,101,317,99],[305,106,317,104],[305,107,317,105],[305,110,317,108],[305,115,317,113],[305,116,317,114],[305,119,317,117,"_this$inspectorToggle"],[305,140,317,138],[305,141,317,139,"remove"],[305,147,317,145],[305,148,317,146],[305,149,317,147],[306,8,318,6],[306,12,318,10],[306,13,318,11,"isMountedRef"],[306,25,318,23],[306,26,318,24,"current"],[306,33,318,31],[306,36,318,34],[306,41,318,39],[307,8,320,6],[307,12,320,10,"Platform"],[307,20,320,18],[307,21,320,18,"default"],[307,28,320,18],[307,29,320,19,"OS"],[307,31,320,21],[307,36,320,26],[307,41,320,31],[307,43,320,33],[308,10,321,8],[308,14,321,8,"unregisterOldGestureHandler"],[308,31,321,35],[308,32,321,35,"unregisterOldGestureHandler"],[308,59,321,35],[308,61,321,36],[308,65,321,40],[308,66,321,41,"handlerTag"],[308,76,321,51],[308,77,321,52],[309,8,322,6],[310,8,324,6,"RNGestureHandlerModule"],[310,30,324,28],[310,31,324,28,"default"],[310,38,324,28],[310,39,324,29,"dropGestureHandler"],[310,57,324,47],[310,58,324,48],[310,62,324,52],[310,63,324,53,"handlerTag"],[310,73,324,63],[310,74,324,64],[311,8,325,6],[311,12,325,6,"scheduleFlushOperations"],[311,18,325,29],[311,19,325,29,"scheduleFlushOperations"],[311,42,325,29],[311,44,325,30],[311,45,325,31],[311,46,325,32],[311,47,325,33],[313,8,327,6],[313,14,327,12,"handlerID"],[313,23,327,21],[313,26,327,24],[313,30,327,28],[313,31,327,29,"props"],[313,36,327,34],[313,37,327,35,"id"],[313,39,327,37],[314,8,329,6],[314,12,329,10,"handlerID"],[314,21,329,19],[314,23,329,21],[315,10,330,8],[316,10,331,8],[316,17,331,15,"handlerIDToTag"],[316,34,331,29],[316,35,331,29,"handlerIDToTag"],[316,49,331,29],[316,50,331,30,"handlerID"],[316,59,331,39],[316,60,331,40],[317,8,332,6],[318,8,334,6,"MountRegistry"],[318,22,334,19],[318,23,334,19,"MountRegistry"],[318,36,334,19],[318,37,334,20,"gestureHandlerWillUnmount"],[318,62,334,45],[318,63,334,46],[318,67,334,50],[318,68,334,51],[319,6,335,4],[320,6,337,4,"update"],[320,12,337,10,"update"],[320,13,337,11,"remainingTries"],[320,27,337,25],[320,29,337,27],[321,8,338,6],[321,12,338,10],[321,13,338,11],[321,17,338,15],[321,18,338,16,"isMountedRef"],[321,30,338,28],[321,31,338,29,"current"],[321,38,338,36],[321,40,338,38],[322,10,339,8],[323,8,340,6],[324,8,342,6],[324,14,342,12,"props"],[324,19,342,17],[324,22,342,20],[324,26,342,24],[324,27,342,25,"props"],[324,32,342,30],[324,33,342,31],[324,34,342,32],[325,8,343,6],[326,8,344,6],[328,8,346,6],[328,12,346,10,"hasUnresolvedRefs"],[328,29,346,27],[328,30,346,28,"props"],[328,35,346,33],[328,36,346,34],[328,40,346,38,"remainingTries"],[328,54,346,52],[328,57,346,55],[328,58,346,56],[328,60,346,58],[329,10,347,8],[329,14,347,8,"ghQueueMicrotask"],[329,31,347,24],[329,32,347,24,"ghQueueMicrotask"],[329,48,347,24],[329,50,347,25],[329,56,347,31],[330,12,348,10],[330,16,348,14],[330,17,348,15,"update"],[330,23,348,21],[330,24,348,22,"remainingTries"],[330,38,348,36],[330,41,348,39],[330,42,348,40],[330,43,348,41],[331,10,349,8],[331,11,349,9],[331,12,349,10],[332,8,350,6],[332,9,350,7],[332,15,350,13],[333,10,351,8],[333,16,351,14,"newConfig"],[333,25,351,23],[333,28,351,26],[333,32,351,26,"filterConfig"],[333,38,351,38],[333,39,351,38,"filterConfig"],[333,51,351,38],[333,53,351,39,"transformProps"],[333,67,351,53],[333,70,351,56,"transformProps"],[333,84,351,70],[333,85,351,71],[333,89,351,75],[333,90,351,76,"props"],[333,95,351,81],[333,96,351,82],[333,99,351,85],[333,103,351,89],[333,104,351,90,"props"],[333,109,351,95],[333,111,351,97],[333,112,351,98],[333,115,351,101,"allowedProps"],[333,127,351,113],[333,129,351,115],[333,132,351,118,"customNativeProps"],[333,149,351,135],[333,150,351,136],[333,152,351,138,"config"],[333,158,351,144],[333,159,351,145],[334,10,353,8],[334,14,353,12],[334,15,353,13],[334,19,353,13,"deepEqual"],[334,26,353,22],[334,27,353,22,"deepEqual"],[334,36,353,22],[334,38,353,23],[334,42,353,27],[334,43,353,28,"config"],[334,49,353,34],[334,51,353,36,"newConfig"],[334,60,353,45],[334,61,353,46],[334,63,353,48],[335,12,354,10],[335,16,354,14],[335,17,354,15,"updateGestureHandler"],[335,37,354,35],[335,38,354,36,"newConfig"],[335,47,354,45],[335,48,354,46],[336,10,355,8],[337,8,356,6],[338,6,357,4],[339,6,359,4,"setNativeProps"],[339,20,359,18,"setNativeProps"],[339,21,359,19,"updates"],[339,28,359,26],[339,30,359,28],[340,8,360,6],[340,14,360,12,"mergedProps"],[340,25,360,23],[340,28,360,23,"Object"],[340,34,360,23],[340,35,360,23,"assign"],[340,41,360,23],[340,46,360,31],[340,50,360,35],[340,51,360,36,"props"],[340,56,360,41],[340,58,361,11,"updates"],[340,65,361,18],[340,66,362,7],[341,8,363,6],[341,14,363,12,"newConfig"],[341,23,363,21],[341,26,363,24],[341,30,363,24,"filterConfig"],[341,36,363,36],[341,37,363,36,"filterConfig"],[341,49,363,36],[341,51,363,37,"transformProps"],[341,65,363,51],[341,68,363,54,"transformProps"],[341,82,363,68],[341,83,363,69,"mergedProps"],[341,94,363,80],[341,95,363,81],[341,98,363,84,"mergedProps"],[341,109,363,95],[341,111,363,97],[341,112,363,98],[341,115,363,101,"allowedProps"],[341,127,363,113],[341,129,363,115],[341,132,363,118,"customNativeProps"],[341,149,363,135],[341,150,363,136],[341,152,363,138,"config"],[341,158,363,144],[341,159,363,145],[342,8,364,6],[342,12,364,10],[342,13,364,11,"updateGestureHandler"],[342,33,364,31],[342,34,364,32,"newConfig"],[342,43,364,41],[342,44,364,42],[343,6,365,4],[344,6,367,4,"render"],[344,12,367,10,"render"],[344,13,367,10],[344,15,367,13],[345,8,368,6],[345,12,368,10,"_this$props$testID"],[345,30,368,28],[346,8,370,6],[346,12,370,10,"__DEV__"],[346,19,370,17],[346,23,370,21],[346,24,370,22],[346,28,370,26],[346,29,370,27,"context"],[346,36,370,34],[346,40,370,38],[346,41,370,39],[346,45,370,39,"isTestEnv"],[346,52,370,48],[346,53,370,48,"isTestEnv"],[346,62,370,48],[346,64,370,49],[346,65,370,50],[346,69,370,54,"Platform"],[346,77,370,62],[346,78,370,62,"default"],[346,85,370,62],[346,86,370,63,"OS"],[346,88,370,65],[346,93,370,70],[346,98,370,75],[346,100,370,77],[347,10,371,8],[347,16,371,14],[347,20,371,18,"Error"],[347,25,371,23],[347,26,371,24,"name"],[347,30,371,28],[347,33,371,31],[347,234,371,232],[347,235,371,233],[348,8,372,6],[349,8,374,6],[349,12,374,10,"gestureEventHandler"],[349,31,374,29],[349,34,374,32],[349,38,374,36],[349,39,374,37,"onGestureHandlerEvent"],[349,60,374,58],[349,61,374,59],[349,62,374,60],[351,8,376,6],[351,14,376,12],[352,10,377,8,"onGestureEvent"],[352,24,377,22],[353,10,378,8,"onGestureHandlerEvent"],[354,8,379,6],[354,9,379,7],[354,12,379,10],[354,16,379,14],[354,17,379,15,"props"],[354,22,379,20],[355,8,381,6],[355,12,381,10,"onGestureEvent"],[355,26,381,24],[355,30,381,28],[355,37,381,35,"onGestureEvent"],[355,51,381,49],[355,56,381,54],[355,66,381,64],[355,68,381,66],[356,10,382,8],[357,10,383,8],[358,10,384,8],[359,10,385,8],[359,14,385,12,"onGestureHandlerEvent"],[359,35,385,33],[359,37,385,35],[360,12,386,10],[360,18,386,16],[360,22,386,20,"Error"],[360,27,386,25],[360,28,386,26],[360,101,386,99],[360,102,386,100],[361,10,387,8],[362,10,389,8,"gestureEventHandler"],[362,29,389,27],[362,32,389,30,"onGestureEvent"],[362,46,389,44],[363,8,390,6],[363,9,390,7],[363,15,390,13],[364,10,391,8],[364,14,391,12,"onGestureHandlerEvent"],[364,35,391,33],[364,39,391,37],[364,46,391,44,"onGestureHandlerEvent"],[364,67,391,65],[364,72,391,70],[364,82,391,80],[364,84,391,82],[365,12,392,10],[365,18,392,16],[365,22,392,20,"Error"],[365,27,392,25],[365,28,392,26],[365,101,392,99],[365,102,392,100],[366,10,393,8],[367,8,394,6],[368,8,396,6],[368,12,396,10,"gestureStateEventHandler"],[368,36,396,34],[368,39,396,37],[368,43,396,41],[368,44,396,42,"onGestureHandlerStateChange"],[368,71,396,69],[368,72,396,70],[368,73,396,71],[370,8,398,6],[370,14,398,12],[371,10,399,8,"onHandlerStateChange"],[371,30,399,28],[372,10,400,8,"onGestureHandlerStateChange"],[373,8,401,6],[373,9,401,7],[373,12,401,10],[373,16,401,14],[373,17,401,15,"props"],[373,22,401,20],[374,8,403,6],[374,12,403,10,"onHandlerStateChange"],[374,32,403,30],[374,36,403,34],[374,43,403,41,"onHandlerStateChange"],[374,63,403,61],[374,68,403,66],[374,78,403,76],[374,80,403,78],[375,10,404,8],[376,10,405,8],[377,10,406,8],[378,10,407,8],[378,14,407,12,"onGestureHandlerStateChange"],[378,41,407,39],[378,43,407,41],[379,12,408,10],[379,18,408,16],[379,22,408,20,"Error"],[379,27,408,25],[379,28,408,26],[379,101,408,99],[379,102,408,100],[380,10,409,8],[381,10,411,8,"gestureStateEventHandler"],[381,34,411,32],[381,37,411,35,"onHandlerStateChange"],[381,57,411,55],[382,8,412,6],[382,9,412,7],[382,15,412,13],[383,10,413,8],[383,14,413,12,"onGestureHandlerStateChange"],[383,41,413,39],[383,45,413,43],[383,52,413,50,"onGestureHandlerStateChange"],[383,79,413,77],[383,84,413,82],[383,94,413,92],[383,96,413,94],[384,12,414,10],[384,18,414,16],[384,22,414,20,"Error"],[384,27,414,25],[384,28,414,26],[384,101,414,99],[384,102,414,100],[385,10,415,8],[386,8,416,6],[387,8,418,6],[387,14,418,12,"events"],[387,20,418,18],[387,23,418,21],[388,10,419,8,"onGestureHandlerEvent"],[388,31,419,29],[388,33,419,31],[388,37,419,35],[388,38,419,36,"state"],[388,43,419,41],[388,44,419,42,"allowTouches"],[388,56,419,54],[388,59,419,57,"gestureEventHandler"],[388,78,419,76],[388,81,419,79,"undefined"],[388,90,419,88],[389,10,420,8,"onGestureHandlerStateChange"],[389,37,420,35],[389,39,420,37],[389,43,420,41],[389,44,420,42,"state"],[389,49,420,47],[389,50,420,48,"allowTouches"],[389,62,420,60],[389,65,420,63,"gestureStateEventHandler"],[389,89,420,87],[389,92,420,90,"undefined"],[390,8,421,6],[390,9,421,7],[391,8,422,6],[391,12,422,10],[391,13,422,11,"propsRef"],[391,21,422,19],[391,22,422,20,"current"],[391,29,422,27],[391,32,422,30,"events"],[391,38,422,36],[392,8,423,6],[392,12,423,10,"child"],[392,17,423,15],[392,20,423,18],[392,24,423,22],[393,8,425,6],[393,12,425,10],[394,10,426,8,"child"],[394,15,426,13],[394,18,426,16,"React"],[394,23,426,21],[394,24,426,22,"Children"],[394,32,426,30],[394,33,426,31,"only"],[394,37,426,35],[394,38,426,36],[394,42,426,40],[394,43,426,41,"props"],[394,48,426,46],[394,49,426,47,"children"],[394,57,426,55],[394,58,426,56],[395,8,427,6],[395,9,427,7],[395,10,427,8],[395,17,427,15,"e"],[395,18,427,16],[395,20,427,18],[396,10,428,8],[396,16,428,14],[396,20,428,18,"Error"],[396,25,428,23],[396,26,428,24],[396,30,428,24,"tagMessage"],[396,37,428,34],[396,38,428,34,"tagMessage"],[396,48,428,34],[396,50,428,35],[396,53,428,38,"name"],[396,57,428,42],[396,213,428,198],[396,214,428,199],[396,215,428,200],[397,8,429,6],[398,8,431,6],[398,12,431,10,"grandChildren"],[398,25,431,23],[398,28,431,26,"child"],[398,33,431,31],[398,34,431,32,"props"],[398,39,431,37],[398,40,431,38,"children"],[398,48,431,46],[399,8,433,6],[399,12,433,10,"__DEV__"],[399,19,433,17],[399,23,433,21,"child"],[399,28,433,26],[399,29,433,27,"type"],[399,33,433,31],[399,38,433,36,"child"],[399,43,433,41],[399,44,433,42,"type"],[399,48,433,46],[399,53,433,51],[399,77,433,75],[399,81,433,79,"child"],[399,86,433,84],[399,87,433,85,"type"],[399,91,433,89],[399,92,433,90,"name"],[399,96,433,94],[399,101,433,99],[399,107,433,105],[399,111,433,109,"child"],[399,116,433,114],[399,117,433,115,"type"],[399,121,433,119],[399,122,433,120,"displayName"],[399,133,433,131],[399,138,433,136],[399,144,433,142],[399,145,433,143],[399,147,433,145],[400,10,434,8,"grandChildren"],[400,23,434,21],[400,26,434,24,"React"],[400,31,434,29],[400,32,434,30,"Children"],[400,40,434,38],[400,41,434,39,"toArray"],[400,48,434,46],[400,49,434,47,"grandChildren"],[400,62,434,60],[400,63,434,61],[401,10,435,8,"grandChildren"],[401,23,435,21],[401,24,435,22,"push"],[401,28,435,26],[401,29,435,28],[401,42,435,41,"React"],[401,47,435,46],[401,48,435,47,"createElement"],[401,61,435,60],[401,62,435,61,"PressabilityDebugView"],[401,84,435,82],[401,85,435,82,"PressabilityDebugView"],[401,106,435,82],[401,108,435,84],[402,12,436,10,"key"],[402,15,436,13],[402,17,436,15],[402,40,436,38],[403,12,437,10,"color"],[403,17,437,15],[403,19,437,17],[403,38,437,36],[404,12,438,10,"hitSlop"],[404,19,438,17],[404,21,438,19,"child"],[404,26,438,24],[404,27,438,25,"props"],[404,32,438,30],[404,33,438,31,"hitSlop"],[405,10,439,8],[405,11,439,9],[405,12,439,10],[405,13,439,11],[406,8,440,6],[407,8,442,6],[407,15,442,13],[407,28,442,26,"React"],[407,33,442,31],[407,34,442,32,"cloneElement"],[407,46,442,44],[407,47,442,45,"child"],[407,52,442,50],[407,54,442,50,"Object"],[407,60,442,50],[407,61,442,50,"assign"],[407,67,442,50],[408,10,443,8,"ref"],[408,13,443,11],[408,15,443,13],[408,19,443,17],[408,20,443,18,"refHandler"],[408,30,443,28],[409,10,444,8,"collapsable"],[409,21,444,19],[409,23,444,21],[410,8,444,26],[410,11,445,12],[410,15,445,12,"isTestEnv"],[410,22,445,21],[410,23,445,21,"isTestEnv"],[410,32,445,21],[410,34,445,22],[410,35,445,23],[410,38,445,26],[411,10,446,10,"handlerType"],[411,21,446,21],[411,23,446,23,"name"],[411,27,446,27],[412,10,447,10,"handlerTag"],[412,20,447,20],[412,22,447,22],[412,26,447,26],[412,27,447,27,"handlerTag"],[412,37,447,37],[413,10,448,10,"enabled"],[413,17,448,17],[413,19,448,19],[413,23,448,23],[413,24,448,24,"props"],[413,29,448,29],[413,30,448,30,"enabled"],[414,8,449,8],[414,9,449,9],[414,12,449,12],[414,13,449,13],[414,14,449,14],[415,10,450,8,"testID"],[415,16,450,14],[415,18,450,16],[415,19,450,17,"_this$props$testID"],[415,37,450,35],[415,40,450,38],[415,44,450,42],[415,45,450,43,"props"],[415,50,450,48],[415,51,450,49,"testID"],[415,57,450,55],[415,63,450,61],[415,67,450,65],[415,71,450,69,"_this$props$testID"],[415,89,450,87],[415,94,450,92],[415,99,450,97],[415,100,450,98],[415,103,450,101,"_this$props$testID"],[415,121,450,119],[415,124,450,122,"child"],[415,129,450,127],[415,130,450,128,"props"],[415,135,450,133],[415,136,450,134,"testID"],[416,8,450,140],[416,11,451,11,"events"],[416,17,451,17],[416,20,452,9,"grandChildren"],[416,33,452,22],[416,34,452,23],[417,6,453,4],[418,4,455,2],[419,4,457,2,"_defineProperty"],[419,19,457,17],[419,20,457,18,"Handler"],[419,27,457,25],[419,29,457,27],[419,42,457,40],[419,44,457,42,"name"],[419,48,457,46],[419,49,457,47],[420,4,459,2,"_defineProperty"],[420,19,459,17],[420,20,459,18,"Handler"],[420,27,459,25],[420,29,459,27],[420,42,459,40],[420,44,459,42,"GestureHandlerRootViewContext"],[420,73,459,71],[420,74,459,71,"default"],[420,81,459,71],[420,82,459,72],[421,4,461,2],[421,11,461,9,"Handler"],[421,18,461,16],[422,2,462,0],[423,0,462,1],[423,3]],"functionMap":{"names":["<global>","_defineProperty","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","_defineProperty$argument_2","ghQueueMicrotask$argument_0","Handler#componentDidMount","setState$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACE,iND;sCEkE;GFC;0CEC;GFC;8BGG;CHG;gCIE;CJG;2DKO;GLE;AMG;kBCE;qBCK,4BD;GDC;CNG;eSY;ECO;ICC;qDCiB;ODY;2DCE;ODoB;0CCE;ODkB;oDCE;ODG;oDCE;8BVa;WUmB;yBCM;SDE;ODC;oDCE;ODI;KDiB;IIE;gGTK;wBUC;YVE;SSE;yBDU;SCE;KJU;IME;KNQ;IOE;KPqB;IQE;yBLU;SKE;KRQ;ISE;KTM;IUE;KVsF;GDE;CTO"},"hasCjsExports":false},"type":"js/module"}]}