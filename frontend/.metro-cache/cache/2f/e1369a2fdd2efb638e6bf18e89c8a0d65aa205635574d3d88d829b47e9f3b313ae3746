{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":37},"end":{"line":2,"column":108,"index":145}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":146},"end":{"line":3,"column":62,"index":208}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":209},"end":{"line":4,"column":80,"index":289}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":290},"end":{"line":5,"column":33,"index":323}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _constants = require(_dependencyMap[1], \"./constants\");\n  var _DraggingGestureHandler = require(_dependencyMap[2], \"./DraggingGestureHandler\");\n  var DraggingGestureHandler = _interopDefault(_DraggingGestureHandler);\n  var _utils = require(_dependencyMap[3], \"./utils\");\n  var _State = require(_dependencyMap[4], \"../State\");\n  class PanGestureHandler extends DraggingGestureHandler.default {\n    get name() {\n      return 'pan';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Pan;\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        direction: this.getDirection()\n      };\n    }\n    getState(type) {\n      const nextState = super.getState(type); // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n      return nextState;\n    }\n    getDirection() {\n      const config = this.getConfig();\n      const {\n        activeOffsetXStart,\n        activeOffsetXEnd,\n        activeOffsetYStart,\n        activeOffsetYEnd,\n        minDist\n      } = config;\n      let directions = [];\n      let horizontalDirections = [];\n      if (!(0, _utils.isnan)(minDist)) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      if (!(0, _utils.isnan)(activeOffsetXStart)) {\n        horizontalDirections.push(Hammer.default.DIRECTION_LEFT);\n      }\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) {\n        horizontalDirections.push(Hammer.default.DIRECTION_RIGHT);\n      }\n      if (horizontalDirections.length === 2) {\n        horizontalDirections = [Hammer.default.DIRECTION_HORIZONTAL];\n      }\n      directions = directions.concat(horizontalDirections);\n      let verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) {\n        verticalDirections.push(Hammer.default.DIRECTION_UP);\n      }\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) {\n        verticalDirections.push(Hammer.default.DIRECTION_DOWN);\n      }\n      if (verticalDirections.length === 2) {\n        verticalDirections = [Hammer.default.DIRECTION_VERTICAL];\n      }\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return Hammer.default.DIRECTION_NONE;\n      }\n      if (directions[0] === Hammer.default.DIRECTION_HORIZONTAL && directions[1] === Hammer.default.DIRECTION_VERTICAL) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    shouldFailUnderCustomCriteria({\n      deltaX,\n      deltaY\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n    shouldActivateUnderCustomCriteria({\n      deltaX,\n      deltaY,\n      velocity\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n    shouldMultiFingerPanFail({\n      pointerLength,\n      scale,\n      deltaRotation\n    }) {\n      if (pointerLength <= 1) {\n        return false;\n      } // Test if the pan had too much pinching or rotating.\n\n      const deltaScale = Math.abs(scale - 1);\n      const absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      return false;\n    }\n    updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n    isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      const velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }\n  var _default = PanGestureHandler;\n});","lineCount":178,"map":[[12,2,193,0,"Object"],[12,8,193,0],[12,9,193,0,"defineProperty"],[12,23,193,0],[12,24,193,0,"exports"],[12,31,193,0],[13,4,193,0,"enumerable"],[13,14,193,0],[14,4,193,0,"get"],[14,7,193,0],[14,18,193,0,"get"],[14,19,193,0],[15,6,193,0],[15,13,193,0,"_default"],[15,21,193,0],[16,4,193,0],[17,2,193,0],[18,2,1,0],[18,6,1,0,"_egjsHammerjs"],[18,19,1,0],[18,22,1,0,"require"],[18,29,1,0],[18,30,1,0,"_dependencyMap"],[18,44,1,0],[19,2,1,0],[19,6,1,0,"Hammer"],[19,12,1,0],[19,15,1,0,"_interopDefault"],[19,30,1,0],[19,31,1,0,"_egjsHammerjs"],[19,44,1,0],[20,2,2,0],[20,6,2,0,"_constants"],[20,16,2,0],[20,19,2,0,"require"],[20,26,2,0],[20,27,2,0,"_dependencyMap"],[20,41,2,0],[21,2,3,0],[21,6,3,0,"_DraggingGestureHandler"],[21,29,3,0],[21,32,3,0,"require"],[21,39,3,0],[21,40,3,0,"_dependencyMap"],[21,54,3,0],[22,2,3,0],[22,6,3,0,"DraggingGestureHandler"],[22,28,3,0],[22,31,3,0,"_interopDefault"],[22,46,3,0],[22,47,3,0,"_DraggingGestureHandler"],[22,70,3,0],[23,2,4,0],[23,6,4,0,"_utils"],[23,12,4,0],[23,15,4,0,"require"],[23,22,4,0],[23,23,4,0,"_dependencyMap"],[23,37,4,0],[24,2,5,0],[24,6,5,0,"_State"],[24,12,5,0],[24,15,5,0,"require"],[24,22,5,0],[24,23,5,0,"_dependencyMap"],[24,37,5,0],[25,2,7,0],[25,8,7,6,"PanGestureHandler"],[25,25,7,23],[25,34,7,32,"DraggingGestureHandler"],[25,56,7,54],[25,57,7,54,"default"],[25,64,7,54],[25,65,7,55],[26,4,8,2],[26,8,8,6,"name"],[26,12,8,10,"name"],[26,13,8,10],[26,15,8,13],[27,6,9,4],[27,13,9,11],[27,18,9,16],[28,4,10,2],[29,4,12,2],[29,8,12,6,"NativeGestureClass"],[29,26,12,24,"NativeGestureClass"],[29,27,12,24],[29,29,12,27],[30,6,13,4],[30,13,13,11,"Hammer"],[30,19,13,17],[30,20,13,17,"default"],[30,27,13,17],[30,28,13,18,"Pan"],[30,31,13,21],[31,4,14,2],[32,4,16,2,"getHammerConfig"],[32,19,16,17,"getHammerConfig"],[32,20,16,17],[32,22,16,20],[33,6,17,4],[33,13,17,11],[34,8,17,13],[34,11,17,16],[34,16,17,21],[34,17,17,22,"getHammerConfig"],[34,32,17,37],[34,33,17,38],[34,34,17,39],[35,8,18,6,"direction"],[35,17,18,15],[35,19,18,17],[35,23,18,21],[35,24,18,22,"getDirection"],[35,36,18,34],[35,37,18,35],[36,6,19,4],[36,7,19,5],[37,4,20,2],[38,4,22,2,"getState"],[38,12,22,10,"getState"],[38,13,22,11,"type"],[38,17,22,15],[38,19,22,17],[39,6,23,4],[39,12,23,10,"nextState"],[39,21,23,19],[39,24,23,22],[39,29,23,27],[39,30,23,28,"getState"],[39,38,23,36],[39,39,23,37,"type"],[39,43,23,41],[39,44,23,42],[39,45,23,43],[39,46,23,44],[41,6,25,4],[41,10,25,8],[41,14,25,12],[41,15,25,13,"previousState"],[41,28,25,26],[41,33,25,31,"State"],[41,39,25,36],[41,40,25,36,"State"],[41,45,25,36],[41,46,25,37,"UNDETERMINED"],[41,58,25,49],[41,62,25,53,"nextState"],[41,71,25,62],[41,76,25,67,"State"],[41,82,25,72],[41,83,25,72,"State"],[41,88,25,72],[41,89,25,73,"ACTIVE"],[41,95,25,79],[41,97,25,81],[42,8,26,6],[42,15,26,13,"State"],[42,21,26,18],[42,22,26,18,"State"],[42,27,26,18],[42,28,26,19,"BEGAN"],[42,33,26,24],[43,6,27,4],[44,6,29,4],[44,13,29,11,"nextState"],[44,22,29,20],[45,4,30,2],[46,4,32,2,"getDirection"],[46,16,32,14,"getDirection"],[46,17,32,14],[46,19,32,17],[47,6,33,4],[47,12,33,10,"config"],[47,18,33,16],[47,21,33,19],[47,25,33,23],[47,26,33,24,"getConfig"],[47,35,33,33],[47,36,33,34],[47,37,33,35],[48,6,34,4],[48,12,34,10],[49,8,35,6,"activeOffsetXStart"],[49,26,35,24],[50,8,36,6,"activeOffsetXEnd"],[50,24,36,22],[51,8,37,6,"activeOffsetYStart"],[51,26,37,24],[52,8,38,6,"activeOffsetYEnd"],[52,24,38,22],[53,8,39,6,"minDist"],[54,6,40,4],[54,7,40,5],[54,10,40,8,"config"],[54,16,40,14],[55,6,41,4],[55,10,41,8,"directions"],[55,20,41,18],[55,23,41,21],[55,25,41,23],[56,6,42,4],[56,10,42,8,"horizontalDirections"],[56,30,42,28],[56,33,42,31],[56,35,42,33],[57,6,44,4],[57,10,44,8],[57,11,44,9],[57,15,44,9,"isnan"],[57,21,44,14],[57,22,44,14,"isnan"],[57,27,44,14],[57,29,44,15,"minDist"],[57,36,44,22],[57,37,44,23],[57,39,44,25],[58,8,45,6],[58,15,45,13,"Hammer"],[58,21,45,19],[58,22,45,19,"default"],[58,29,45,19],[58,30,45,20,"DIRECTION_ALL"],[58,43,45,33],[59,6,46,4],[60,6,48,4],[60,10,48,8],[60,11,48,9],[60,15,48,9,"isnan"],[60,21,48,14],[60,22,48,14,"isnan"],[60,27,48,14],[60,29,48,15,"activeOffsetXStart"],[60,47,48,33],[60,48,48,34],[60,50,48,36],[61,8,49,6,"horizontalDirections"],[61,28,49,26],[61,29,49,27,"push"],[61,33,49,31],[61,34,49,32,"Hammer"],[61,40,49,38],[61,41,49,38,"default"],[61,48,49,38],[61,49,49,39,"DIRECTION_LEFT"],[61,63,49,53],[61,64,49,54],[62,6,50,4],[63,6,52,4],[63,10,52,8],[63,11,52,9],[63,15,52,9,"isnan"],[63,21,52,14],[63,22,52,14,"isnan"],[63,27,52,14],[63,29,52,15,"activeOffsetXEnd"],[63,45,52,31],[63,46,52,32],[63,48,52,34],[64,8,53,6,"horizontalDirections"],[64,28,53,26],[64,29,53,27,"push"],[64,33,53,31],[64,34,53,32,"Hammer"],[64,40,53,38],[64,41,53,38,"default"],[64,48,53,38],[64,49,53,39,"DIRECTION_RIGHT"],[64,64,53,54],[64,65,53,55],[65,6,54,4],[66,6,56,4],[66,10,56,8,"horizontalDirections"],[66,30,56,28],[66,31,56,29,"length"],[66,37,56,35],[66,42,56,40],[66,43,56,41],[66,45,56,43],[67,8,57,6,"horizontalDirections"],[67,28,57,26],[67,31,57,29],[67,32,57,30,"Hammer"],[67,38,57,36],[67,39,57,36,"default"],[67,46,57,36],[67,47,57,37,"DIRECTION_HORIZONTAL"],[67,67,57,57],[67,68,57,58],[68,6,58,4],[69,6,60,4,"directions"],[69,16,60,14],[69,19,60,17,"directions"],[69,29,60,27],[69,30,60,28,"concat"],[69,36,60,34],[69,37,60,35,"horizontalDirections"],[69,57,60,55],[69,58,60,56],[70,6,61,4],[70,10,61,8,"verticalDirections"],[70,28,61,26],[70,31,61,29],[70,33,61,31],[71,6,63,4],[71,10,63,8],[71,11,63,9],[71,15,63,9,"isnan"],[71,21,63,14],[71,22,63,14,"isnan"],[71,27,63,14],[71,29,63,15,"activeOffsetYStart"],[71,47,63,33],[71,48,63,34],[71,50,63,36],[72,8,64,6,"verticalDirections"],[72,26,64,24],[72,27,64,25,"push"],[72,31,64,29],[72,32,64,30,"Hammer"],[72,38,64,36],[72,39,64,36,"default"],[72,46,64,36],[72,47,64,37,"DIRECTION_UP"],[72,59,64,49],[72,60,64,50],[73,6,65,4],[74,6,67,4],[74,10,67,8],[74,11,67,9],[74,15,67,9,"isnan"],[74,21,67,14],[74,22,67,14,"isnan"],[74,27,67,14],[74,29,67,15,"activeOffsetYEnd"],[74,45,67,31],[74,46,67,32],[74,48,67,34],[75,8,68,6,"verticalDirections"],[75,26,68,24],[75,27,68,25,"push"],[75,31,68,29],[75,32,68,30,"Hammer"],[75,38,68,36],[75,39,68,36,"default"],[75,46,68,36],[75,47,68,37,"DIRECTION_DOWN"],[75,61,68,51],[75,62,68,52],[76,6,69,4],[77,6,71,4],[77,10,71,8,"verticalDirections"],[77,28,71,26],[77,29,71,27,"length"],[77,35,71,33],[77,40,71,38],[77,41,71,39],[77,43,71,41],[78,8,72,6,"verticalDirections"],[78,26,72,24],[78,29,72,27],[78,30,72,28,"Hammer"],[78,36,72,34],[78,37,72,34,"default"],[78,44,72,34],[78,45,72,35,"DIRECTION_VERTICAL"],[78,63,72,53],[78,64,72,54],[79,6,73,4],[80,6,75,4,"directions"],[80,16,75,14],[80,19,75,17,"directions"],[80,29,75,27],[80,30,75,28,"concat"],[80,36,75,34],[80,37,75,35,"verticalDirections"],[80,55,75,53],[80,56,75,54],[81,6,77,4],[81,10,77,8],[81,11,77,9,"directions"],[81,21,77,19],[81,22,77,20,"length"],[81,28,77,26],[81,30,77,28],[82,8,78,6],[82,15,78,13,"Hammer"],[82,21,78,19],[82,22,78,19,"default"],[82,29,78,19],[82,30,78,20,"DIRECTION_NONE"],[82,44,78,34],[83,6,79,4],[84,6,81,4],[84,10,81,8,"directions"],[84,20,81,18],[84,21,81,19],[84,22,81,20],[84,23,81,21],[84,28,81,26,"Hammer"],[84,34,81,32],[84,35,81,32,"default"],[84,42,81,32],[84,43,81,33,"DIRECTION_HORIZONTAL"],[84,63,81,53],[84,67,81,57,"directions"],[84,77,81,67],[84,78,81,68],[84,79,81,69],[84,80,81,70],[84,85,81,75,"Hammer"],[84,91,81,81],[84,92,81,81,"default"],[84,99,81,81],[84,100,81,82,"DIRECTION_VERTICAL"],[84,118,81,100],[84,120,81,102],[85,8,82,6],[85,15,82,13,"Hammer"],[85,21,82,19],[85,22,82,19,"default"],[85,29,82,19],[85,30,82,20,"DIRECTION_ALL"],[85,43,82,33],[86,6,83,4],[87,6,85,4],[87,10,85,8,"horizontalDirections"],[87,30,85,28],[87,31,85,29,"length"],[87,37,85,35],[87,41,85,39,"verticalDirections"],[87,59,85,57],[87,60,85,58,"length"],[87,66,85,64],[87,68,85,66],[88,8,86,6],[88,15,86,13,"Hammer"],[88,21,86,19],[88,22,86,19,"default"],[88,29,86,19],[88,30,86,20,"DIRECTION_ALL"],[88,43,86,33],[89,6,87,4],[90,6,89,4],[90,13,89,11,"directions"],[90,23,89,21],[90,24,89,22],[90,25,89,23],[90,26,89,24],[91,4,90,2],[92,4,92,2,"getConfig"],[92,13,92,11,"getConfig"],[92,14,92,11],[92,16,92,14],[93,6,93,4],[93,10,93,8],[93,11,93,9],[93,15,93,13],[93,16,93,14,"hasCustomActivationCriteria"],[93,43,93,41],[93,45,93,43],[94,8,94,6],[95,8,95,6],[96,8,96,6],[96,15,96,13],[97,10,97,8,"minDistSq"],[97,19,97,17],[97,21,97,19],[98,8,98,6],[98,9,98,7],[99,6,99,4],[100,6,101,4],[100,13,101,11],[100,17,101,15],[100,18,101,16,"config"],[100,24,101,22],[101,4,102,2],[102,4,104,2,"shouldFailUnderCustomCriteria"],[102,33,104,31,"shouldFailUnderCustomCriteria"],[102,34,104,32],[103,6,105,4,"deltaX"],[103,12,105,10],[104,6,106,4,"deltaY"],[105,4,107,2],[105,5,107,3],[105,7,107,5,"criteria"],[105,15,107,13],[105,17,107,15],[106,6,108,4],[106,13,108,11],[106,14,108,12],[106,18,108,12,"isnan"],[106,24,108,17],[106,25,108,17,"isnan"],[106,30,108,17],[106,32,108,18,"criteria"],[106,40,108,26],[106,41,108,27,"failOffsetXStart"],[106,57,108,43],[106,58,108,44],[106,62,108,48,"deltaX"],[106,68,108,54],[106,71,108,57,"criteria"],[106,79,108,65],[106,80,108,66,"failOffsetXStart"],[106,96,108,82],[106,100,108,86],[106,101,108,87],[106,105,108,87,"isnan"],[106,111,108,92],[106,112,108,92,"isnan"],[106,117,108,92],[106,119,108,93,"criteria"],[106,127,108,101],[106,128,108,102,"failOffsetXEnd"],[106,142,108,116],[106,143,108,117],[106,147,108,121,"deltaX"],[106,153,108,127],[106,156,108,130,"criteria"],[106,164,108,138],[106,165,108,139,"failOffsetXEnd"],[106,179,108,153],[106,183,108,157],[106,184,108,158],[106,188,108,158,"isnan"],[106,194,108,163],[106,195,108,163,"isnan"],[106,200,108,163],[106,202,108,164,"criteria"],[106,210,108,172],[106,211,108,173,"failOffsetYStart"],[106,227,108,189],[106,228,108,190],[106,232,108,194,"deltaY"],[106,238,108,200],[106,241,108,203,"criteria"],[106,249,108,211],[106,250,108,212,"failOffsetYStart"],[106,266,108,228],[106,270,108,232],[106,271,108,233],[106,275,108,233,"isnan"],[106,281,108,238],[106,282,108,238,"isnan"],[106,287,108,238],[106,289,108,239,"criteria"],[106,297,108,247],[106,298,108,248,"failOffsetYEnd"],[106,312,108,262],[106,313,108,263],[106,317,108,267,"deltaY"],[106,323,108,273],[106,326,108,276,"criteria"],[106,334,108,284],[106,335,108,285,"failOffsetYEnd"],[106,349,108,299],[107,4,109,2],[108,4,111,2,"shouldActivateUnderCustomCriteria"],[108,37,111,35,"shouldActivateUnderCustomCriteria"],[108,38,111,36],[109,6,112,4,"deltaX"],[109,12,112,10],[110,6,113,4,"deltaY"],[110,12,113,10],[111,6,114,4,"velocity"],[112,4,115,2],[112,5,115,3],[112,7,115,5,"criteria"],[112,15,115,13],[112,17,115,15],[113,6,116,4],[113,13,116,11],[113,14,116,12],[113,18,116,12,"isnan"],[113,24,116,17],[113,25,116,17,"isnan"],[113,30,116,17],[113,32,116,18,"criteria"],[113,40,116,26],[113,41,116,27,"activeOffsetXStart"],[113,59,116,45],[113,60,116,46],[113,64,116,50,"deltaX"],[113,70,116,56],[113,73,116,59,"criteria"],[113,81,116,67],[113,82,116,68,"activeOffsetXStart"],[113,100,116,86],[113,104,116,90],[113,105,116,91],[113,109,116,91,"isnan"],[113,115,116,96],[113,116,116,96,"isnan"],[113,121,116,96],[113,123,116,97,"criteria"],[113,131,116,105],[113,132,116,106,"activeOffsetXEnd"],[113,148,116,122],[113,149,116,123],[113,153,116,127,"deltaX"],[113,159,116,133],[113,162,116,136,"criteria"],[113,170,116,144],[113,171,116,145,"activeOffsetXEnd"],[113,187,116,161],[113,191,116,165],[113,192,116,166],[113,196,116,166,"isnan"],[113,202,116,171],[113,203,116,171,"isnan"],[113,208,116,171],[113,210,116,172,"criteria"],[113,218,116,180],[113,219,116,181,"activeOffsetYStart"],[113,237,116,199],[113,238,116,200],[113,242,116,204,"deltaY"],[113,248,116,210],[113,251,116,213,"criteria"],[113,259,116,221],[113,260,116,222,"activeOffsetYStart"],[113,278,116,240],[113,282,116,244],[113,283,116,245],[113,287,116,245,"isnan"],[113,293,116,250],[113,294,116,250,"isnan"],[113,299,116,250],[113,301,116,251,"criteria"],[113,309,116,259],[113,310,116,260,"activeOffsetYEnd"],[113,326,116,276],[113,327,116,277],[113,331,116,281,"deltaY"],[113,337,116,287],[113,340,116,290,"criteria"],[113,348,116,298],[113,349,116,299,"activeOffsetYEnd"],[113,365,116,315],[113,369,116,319],[113,373,116,319,"TEST_MIN_IF_NOT_NAN"],[113,379,116,338],[113,380,116,338,"TEST_MIN_IF_NOT_NAN"],[113,399,116,338],[113,401,116,339],[113,405,116,339,"VEC_LEN_SQ"],[113,411,116,349],[113,412,116,349,"VEC_LEN_SQ"],[113,422,116,349],[113,424,116,350],[114,8,117,6,"x"],[114,9,117,7],[114,11,117,9,"deltaX"],[114,17,117,15],[115,8,118,6,"y"],[115,9,118,7],[115,11,118,9,"deltaY"],[116,6,119,4],[116,7,119,5],[116,8,119,6],[116,10,119,8,"criteria"],[116,18,119,16],[116,19,119,17,"minDistSq"],[116,28,119,26],[116,29,119,27],[116,33,119,31],[116,37,119,31,"TEST_MIN_IF_NOT_NAN"],[116,43,119,50],[116,44,119,50,"TEST_MIN_IF_NOT_NAN"],[116,63,119,50],[116,65,119,51,"velocity"],[116,73,119,59],[116,74,119,60,"x"],[116,75,119,61],[116,77,119,63,"criteria"],[116,85,119,71],[116,86,119,72,"minVelocityX"],[116,98,119,84],[116,99,119,85],[116,103,119,89],[116,107,119,89,"TEST_MIN_IF_NOT_NAN"],[116,113,119,108],[116,114,119,108,"TEST_MIN_IF_NOT_NAN"],[116,133,119,108],[116,135,119,109,"velocity"],[116,143,119,117],[116,144,119,118,"y"],[116,145,119,119],[116,147,119,121,"criteria"],[116,155,119,129],[116,156,119,130,"minVelocityY"],[116,168,119,142],[116,169,119,143],[116,173,119,147],[116,177,119,147,"TEST_MIN_IF_NOT_NAN"],[116,183,119,166],[116,184,119,166,"TEST_MIN_IF_NOT_NAN"],[116,203,119,166],[116,205,119,167],[116,209,119,167,"VEC_LEN_SQ"],[116,215,119,177],[116,216,119,177,"VEC_LEN_SQ"],[116,226,119,177],[116,228,119,178,"velocity"],[116,236,119,186],[116,237,119,187],[116,239,119,189,"criteria"],[116,247,119,197],[116,248,119,198,"minVelocitySq"],[116,261,119,211],[116,262,119,212],[117,4,120,2],[118,4,122,2,"shouldMultiFingerPanFail"],[118,28,122,26,"shouldMultiFingerPanFail"],[118,29,122,27],[119,6,123,4,"pointerLength"],[119,19,123,17],[120,6,124,4,"scale"],[120,11,124,9],[121,6,125,4,"deltaRotation"],[122,4,126,2],[122,5,126,3],[122,7,126,5],[123,6,127,4],[123,10,127,8,"pointerLength"],[123,23,127,21],[123,27,127,25],[123,28,127,26],[123,30,127,28],[124,8,128,6],[124,15,128,13],[124,20,128,18],[125,6,129,4],[125,7,129,5],[125,8,129,6],[127,6,132,4],[127,12,132,10,"deltaScale"],[127,22,132,20],[127,25,132,23,"Math"],[127,29,132,27],[127,30,132,28,"abs"],[127,33,132,31],[127,34,132,32,"scale"],[127,39,132,37],[127,42,132,40],[127,43,132,41],[127,44,132,42],[128,6,133,4],[128,12,133,10,"absDeltaRotation"],[128,28,133,26],[128,31,133,29,"Math"],[128,35,133,33],[128,36,133,34,"abs"],[128,39,133,37],[128,40,133,38,"deltaRotation"],[128,53,133,51],[128,54,133,52],[129,6,135,4],[129,10,135,8,"deltaScale"],[129,20,135,18],[129,23,135,21,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[129,33,135,57],[129,34,135,57,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[129,70,135,57],[129,72,135,59],[130,8,136,6],[131,8,137,6],[132,8,138,6],[132,15,138,13],[132,19,138,17],[133,6,139,4],[134,6,141,4],[134,10,141,8,"absDeltaRotation"],[134,26,141,24],[134,29,141,27,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[134,39,141,66],[134,40,141,66,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[134,79,141,66],[134,81,141,68],[135,8,142,6],[136,8,143,6],[137,8,144,6],[137,15,144,13],[137,19,144,17],[138,6,145,4],[139,6,147,4],[139,13,147,11],[139,18,147,16],[140,4,148,2],[141,4,150,2,"updateHasCustomActivationCriteria"],[141,37,150,35,"updateHasCustomActivationCriteria"],[141,38,150,36,"criteria"],[141,46,150,44],[141,48,150,46],[142,6,151,4],[142,13,151,11],[142,17,151,11,"isValidNumber"],[142,23,151,24],[142,24,151,24,"isValidNumber"],[142,37,151,24],[142,39,151,25,"criteria"],[142,47,151,33],[142,48,151,34,"minDistSq"],[142,57,151,43],[142,58,151,44],[142,62,151,48],[142,66,151,48,"isValidNumber"],[142,72,151,61],[142,73,151,61,"isValidNumber"],[142,86,151,61],[142,88,151,62,"criteria"],[142,96,151,70],[142,97,151,71,"minVelocityX"],[142,109,151,83],[142,110,151,84],[142,114,151,88],[142,118,151,88,"isValidNumber"],[142,124,151,101],[142,125,151,101,"isValidNumber"],[142,138,151,101],[142,140,151,102,"criteria"],[142,148,151,110],[142,149,151,111,"minVelocityY"],[142,161,151,123],[142,162,151,124],[142,166,151,128],[142,170,151,128,"isValidNumber"],[142,176,151,141],[142,177,151,141,"isValidNumber"],[142,190,151,141],[142,192,151,142,"criteria"],[142,200,151,150],[142,201,151,151,"minVelocitySq"],[142,214,151,164],[142,215,151,165],[142,219,151,169],[142,223,151,169,"isValidNumber"],[142,229,151,182],[142,230,151,182,"isValidNumber"],[142,243,151,182],[142,245,151,183,"criteria"],[142,253,151,191],[142,254,151,192,"activeOffsetXStart"],[142,272,151,210],[142,273,151,211],[142,277,151,215],[142,281,151,215,"isValidNumber"],[142,287,151,228],[142,288,151,228,"isValidNumber"],[142,301,151,228],[142,303,151,229,"criteria"],[142,311,151,237],[142,312,151,238,"activeOffsetXEnd"],[142,328,151,254],[142,329,151,255],[142,333,151,259],[142,337,151,259,"isValidNumber"],[142,343,151,272],[142,344,151,272,"isValidNumber"],[142,357,151,272],[142,359,151,273,"criteria"],[142,367,151,281],[142,368,151,282,"activeOffsetYStart"],[142,386,151,300],[142,387,151,301],[142,391,151,305],[142,395,151,305,"isValidNumber"],[142,401,151,318],[142,402,151,318,"isValidNumber"],[142,415,151,318],[142,417,151,319,"criteria"],[142,425,151,327],[142,426,151,328,"activeOffsetYEnd"],[142,442,151,344],[142,443,151,345],[143,4,152,2],[144,4,154,2,"isGestureEnabledForEvent"],[144,28,154,26,"isGestureEnabledForEvent"],[144,29,154,27,"props"],[144,34,154,32],[144,36,154,34,"_recognizer"],[144,47,154,45],[144,49,154,47,"inputData"],[144,58,154,56],[144,60,154,58],[145,6,155,4],[145,10,155,8],[145,14,155,12],[145,15,155,13,"shouldFailUnderCustomCriteria"],[145,44,155,42],[145,45,155,43,"inputData"],[145,54,155,52],[145,56,155,54,"props"],[145,61,155,59],[145,62,155,60],[145,64,155,62],[146,8,156,6],[146,15,156,13],[147,10,157,8,"failed"],[147,16,157,14],[147,18,157,16],[148,8,158,6],[148,9,158,7],[149,6,159,4],[150,6,161,4],[150,12,161,10,"velocity"],[150,20,161,18],[150,23,161,21],[151,8,162,6,"x"],[151,9,162,7],[151,11,162,9,"inputData"],[151,20,162,18],[151,21,162,19,"velocityX"],[151,30,162,28],[152,8,163,6,"y"],[152,9,163,7],[152,11,163,9,"inputData"],[152,20,163,18],[152,21,163,19,"velocityY"],[153,6,164,4],[153,7,164,5],[154,6,166,4],[154,10,166,8],[154,14,166,12],[154,15,166,13,"hasCustomActivationCriteria"],[154,42,166,40],[154,46,166,44],[154,50,166,48],[154,51,166,49,"shouldActivateUnderCustomCriteria"],[154,84,166,82],[154,85,166,83],[155,8,167,6,"deltaX"],[155,14,167,12],[155,16,167,14,"inputData"],[155,25,167,23],[155,26,167,24,"deltaX"],[155,32,167,30],[156,8,168,6,"deltaY"],[156,14,168,12],[156,16,168,14,"inputData"],[156,25,168,23],[156,26,168,24,"deltaY"],[156,32,168,30],[157,8,169,6,"velocity"],[158,6,170,4],[158,7,170,5],[158,9,170,7,"props"],[158,14,170,12],[158,15,170,13],[158,17,170,15],[159,8,171,6],[159,12,171,10],[159,16,171,14],[159,17,171,15,"shouldMultiFingerPanFail"],[159,41,171,39],[159,42,171,40],[160,10,172,8,"pointerLength"],[160,23,172,21],[160,25,172,23,"inputData"],[160,34,172,32],[160,35,172,33,"maxPointers"],[160,46,172,44],[161,10,173,8,"scale"],[161,15,173,13],[161,17,173,15,"inputData"],[161,26,173,24],[161,27,173,25,"scale"],[161,32,173,30],[162,10,174,8,"deltaRotation"],[162,23,174,21],[162,25,174,23,"inputData"],[162,34,174,32],[162,35,174,33,"deltaRotation"],[163,8,175,6],[163,9,175,7],[163,10,175,8],[163,12,175,10],[164,10,176,8],[164,17,176,15],[165,12,177,10,"failed"],[165,18,177,16],[165,20,177,18],[166,10,178,8],[166,11,178,9],[167,8,179,6],[168,8,181,6],[168,15,181,13],[169,10,182,8,"success"],[169,17,182,15],[169,19,182,17],[170,8,183,6],[170,9,183,7],[171,6,184,4],[172,6,186,4],[172,13,186,11],[173,8,187,6,"success"],[173,15,187,13],[173,17,187,15],[174,6,188,4],[174,7,188,5],[175,4,189,2],[176,2,191,0],[177,2,193,0],[177,6,193,0,"_default"],[177,14,193,0],[177,17,193,15,"PanGestureHandler"],[177,34,193,32],[178,0,193,33],[178,3]],"functionMap":{"names":["<global>","PanGestureHandler","get__name","get__NativeGestureClass","getHammerConfig","getState","getDirection","getConfig","shouldFailUnderCustomCriteria","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","updateHasCustomActivationCriteria","isGestureEnabledForEvent"],"mappings":"AAA;ACM;ECC;GDE;EEE;GFE;EGE;GHI;EIE;GJQ;EKE;GL0D;EME;GNU;EOE;GPK;EQE;GRS;ESE;GT0B;EUE;GVE;EWE;GXmC;CDE"},"hasCjsExports":false},"type":"js/module"}]}