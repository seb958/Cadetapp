{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":108,"index":160}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":161},"end":{"line":5,"column":62,"index":223}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":224},"end":{"line":6,"column":80,"index":304}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":305},"end":{"line":7,"column":33,"index":338}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _constants = require(_dependencyMap[1], \"./constants\");\n  var _DraggingGestureHandler = require(_dependencyMap[2], \"./DraggingGestureHandler\");\n  var DraggingGestureHandler = _interopDefault(_DraggingGestureHandler);\n  var _utils = require(_dependencyMap[3], \"./utils\");\n  var _State = require(_dependencyMap[4], \"../State\");\n  class PanGestureHandler extends DraggingGestureHandler.default {\n    get name() {\n      return 'pan';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Pan;\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        direction: this.getDirection()\n      };\n    }\n    getState(type) {\n      const nextState = super.getState(type);\n      // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n      return nextState;\n    }\n    getDirection() {\n      const config = this.getConfig();\n      const {\n        activeOffsetXStart,\n        activeOffsetXEnd,\n        activeOffsetYStart,\n        activeOffsetYEnd,\n        minDist\n      } = config;\n      let directions = [];\n      let horizontalDirections = [];\n      if (!(0, _utils.isnan)(minDist)) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      if (!(0, _utils.isnan)(activeOffsetXStart)) {\n        horizontalDirections.push(Hammer.default.DIRECTION_LEFT);\n      }\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) {\n        horizontalDirections.push(Hammer.default.DIRECTION_RIGHT);\n      }\n      if (horizontalDirections.length === 2) {\n        horizontalDirections = [Hammer.default.DIRECTION_HORIZONTAL];\n      }\n      directions = directions.concat(horizontalDirections);\n      let verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) {\n        verticalDirections.push(Hammer.default.DIRECTION_UP);\n      }\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) {\n        verticalDirections.push(Hammer.default.DIRECTION_DOWN);\n      }\n      if (verticalDirections.length === 2) {\n        verticalDirections = [Hammer.default.DIRECTION_VERTICAL];\n      }\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return Hammer.default.DIRECTION_NONE;\n      }\n      if (directions[0] === Hammer.default.DIRECTION_HORIZONTAL && directions[1] === Hammer.default.DIRECTION_VERTICAL) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    shouldFailUnderCustomCriteria({\n      deltaX,\n      deltaY\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n    shouldActivateUnderCustomCriteria({\n      deltaX,\n      deltaY,\n      velocity\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n    shouldMultiFingerPanFail({\n      pointerLength,\n      scale,\n      deltaRotation\n    }) {\n      if (pointerLength <= 1) {\n        return false;\n      }\n\n      // Test if the pan had too much pinching or rotating.\n      const deltaScale = Math.abs(scale - 1);\n      const absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      return false;\n    }\n    updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n    isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      const velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }\n  var _default = PanGestureHandler;\n});","lineCount":179,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,161,0,"Object"],[12,8,161,0],[12,9,161,0,"defineProperty"],[12,23,161,0],[12,24,161,0,"exports"],[12,31,161,0],[13,4,161,0,"enumerable"],[13,14,161,0],[14,4,161,0,"get"],[14,7,161,0],[14,18,161,0,"get"],[14,19,161,0],[15,6,161,0],[15,13,161,0,"_default"],[15,21,161,0],[16,4,161,0],[17,2,161,0],[18,2,3,0],[18,6,3,0,"_egjsHammerjs"],[18,19,3,0],[18,22,3,0,"require"],[18,29,3,0],[18,30,3,0,"_dependencyMap"],[18,44,3,0],[19,2,3,0],[19,6,3,0,"Hammer"],[19,12,3,0],[19,15,3,0,"_interopDefault"],[19,30,3,0],[19,31,3,0,"_egjsHammerjs"],[19,44,3,0],[20,2,4,0],[20,6,4,0,"_constants"],[20,16,4,0],[20,19,4,0,"require"],[20,26,4,0],[20,27,4,0,"_dependencyMap"],[20,41,4,0],[21,2,5,0],[21,6,5,0,"_DraggingGestureHandler"],[21,29,5,0],[21,32,5,0,"require"],[21,39,5,0],[21,40,5,0,"_dependencyMap"],[21,54,5,0],[22,2,5,0],[22,6,5,0,"DraggingGestureHandler"],[22,28,5,0],[22,31,5,0,"_interopDefault"],[22,46,5,0],[22,47,5,0,"_DraggingGestureHandler"],[22,70,5,0],[23,2,6,0],[23,6,6,0,"_utils"],[23,12,6,0],[23,15,6,0,"require"],[23,22,6,0],[23,23,6,0,"_dependencyMap"],[23,37,6,0],[24,2,7,0],[24,6,7,0,"_State"],[24,12,7,0],[24,15,7,0,"require"],[24,22,7,0],[24,23,7,0,"_dependencyMap"],[24,37,7,0],[25,2,8,0],[25,8,8,6,"PanGestureHandler"],[25,25,8,23],[25,34,8,32,"DraggingGestureHandler"],[25,56,8,54],[25,57,8,54,"default"],[25,64,8,54],[25,65,8,55],[26,4,9,2],[26,8,9,6,"name"],[26,12,9,10,"name"],[26,13,9,10],[26,15,9,13],[27,6,10,4],[27,13,10,11],[27,18,10,16],[28,4,11,2],[29,4,12,2],[29,8,12,6,"NativeGestureClass"],[29,26,12,24,"NativeGestureClass"],[29,27,12,24],[29,29,12,27],[30,6,13,4],[30,13,13,11,"Hammer"],[30,19,13,17],[30,20,13,17,"default"],[30,27,13,17],[30,28,13,18,"Pan"],[30,31,13,21],[31,4,14,2],[32,4,15,2,"getHammerConfig"],[32,19,15,17,"getHammerConfig"],[32,20,15,17],[32,22,15,20],[33,6,16,4],[33,13,16,11],[34,8,17,6],[34,11,17,9],[34,16,17,14],[34,17,17,15,"getHammerConfig"],[34,32,17,30],[34,33,17,31],[34,34,17,32],[35,8,18,6,"direction"],[35,17,18,15],[35,19,18,17],[35,23,18,21],[35,24,18,22,"getDirection"],[35,36,18,34],[35,37,18,35],[36,6,19,4],[36,7,19,5],[37,4,20,2],[38,4,21,2,"getState"],[38,12,21,10,"getState"],[38,13,21,11,"type"],[38,17,21,15],[38,19,21,17],[39,6,22,4],[39,12,22,10,"nextState"],[39,21,22,19],[39,24,22,22],[39,29,22,27],[39,30,22,28,"getState"],[39,38,22,36],[39,39,22,37,"type"],[39,43,22,41],[39,44,22,42],[40,6,23,4],[41,6,24,4],[41,10,24,8],[41,14,24,12],[41,15,24,13,"previousState"],[41,28,24,26],[41,33,24,31,"State"],[41,39,24,36],[41,40,24,36,"State"],[41,45,24,36],[41,46,24,37,"UNDETERMINED"],[41,58,24,49],[41,62,24,53,"nextState"],[41,71,24,62],[41,76,24,67,"State"],[41,82,24,72],[41,83,24,72,"State"],[41,88,24,72],[41,89,24,73,"ACTIVE"],[41,95,24,79],[41,97,24,81],[42,8,25,6],[42,15,25,13,"State"],[42,21,25,18],[42,22,25,18,"State"],[42,27,25,18],[42,28,25,19,"BEGAN"],[42,33,25,24],[43,6,26,4],[44,6,27,4],[44,13,27,11,"nextState"],[44,22,27,20],[45,4,28,2],[46,4,29,2,"getDirection"],[46,16,29,14,"getDirection"],[46,17,29,14],[46,19,29,17],[47,6,30,4],[47,12,30,10,"config"],[47,18,30,16],[47,21,30,19],[47,25,30,23],[47,26,30,24,"getConfig"],[47,35,30,33],[47,36,30,34],[47,37,30,35],[48,6,31,4],[48,12,31,10],[49,8,32,6,"activeOffsetXStart"],[49,26,32,24],[50,8,33,6,"activeOffsetXEnd"],[50,24,33,22],[51,8,34,6,"activeOffsetYStart"],[51,26,34,24],[52,8,35,6,"activeOffsetYEnd"],[52,24,35,22],[53,8,36,6,"minDist"],[54,6,37,4],[54,7,37,5],[54,10,37,8,"config"],[54,16,37,14],[55,6,38,4],[55,10,38,8,"directions"],[55,20,38,18],[55,23,38,21],[55,25,38,23],[56,6,39,4],[56,10,39,8,"horizontalDirections"],[56,30,39,28],[56,33,39,31],[56,35,39,33],[57,6,40,4],[57,10,40,8],[57,11,40,9],[57,15,40,9,"isnan"],[57,21,40,14],[57,22,40,14,"isnan"],[57,27,40,14],[57,29,40,15,"minDist"],[57,36,40,22],[57,37,40,23],[57,39,40,25],[58,8,41,6],[58,15,41,13,"Hammer"],[58,21,41,19],[58,22,41,19,"default"],[58,29,41,19],[58,30,41,20,"DIRECTION_ALL"],[58,43,41,33],[59,6,42,4],[60,6,43,4],[60,10,43,8],[60,11,43,9],[60,15,43,9,"isnan"],[60,21,43,14],[60,22,43,14,"isnan"],[60,27,43,14],[60,29,43,15,"activeOffsetXStart"],[60,47,43,33],[60,48,43,34],[60,50,43,36],[61,8,44,6,"horizontalDirections"],[61,28,44,26],[61,29,44,27,"push"],[61,33,44,31],[61,34,44,32,"Hammer"],[61,40,44,38],[61,41,44,38,"default"],[61,48,44,38],[61,49,44,39,"DIRECTION_LEFT"],[61,63,44,53],[61,64,44,54],[62,6,45,4],[63,6,46,4],[63,10,46,8],[63,11,46,9],[63,15,46,9,"isnan"],[63,21,46,14],[63,22,46,14,"isnan"],[63,27,46,14],[63,29,46,15,"activeOffsetXEnd"],[63,45,46,31],[63,46,46,32],[63,48,46,34],[64,8,47,6,"horizontalDirections"],[64,28,47,26],[64,29,47,27,"push"],[64,33,47,31],[64,34,47,32,"Hammer"],[64,40,47,38],[64,41,47,38,"default"],[64,48,47,38],[64,49,47,39,"DIRECTION_RIGHT"],[64,64,47,54],[64,65,47,55],[65,6,48,4],[66,6,49,4],[66,10,49,8,"horizontalDirections"],[66,30,49,28],[66,31,49,29,"length"],[66,37,49,35],[66,42,49,40],[66,43,49,41],[66,45,49,43],[67,8,50,6,"horizontalDirections"],[67,28,50,26],[67,31,50,29],[67,32,50,30,"Hammer"],[67,38,50,36],[67,39,50,36,"default"],[67,46,50,36],[67,47,50,37,"DIRECTION_HORIZONTAL"],[67,67,50,57],[67,68,50,58],[68,6,51,4],[69,6,52,4,"directions"],[69,16,52,14],[69,19,52,17,"directions"],[69,29,52,27],[69,30,52,28,"concat"],[69,36,52,34],[69,37,52,35,"horizontalDirections"],[69,57,52,55],[69,58,52,56],[70,6,53,4],[70,10,53,8,"verticalDirections"],[70,28,53,26],[70,31,53,29],[70,33,53,31],[71,6,54,4],[71,10,54,8],[71,11,54,9],[71,15,54,9,"isnan"],[71,21,54,14],[71,22,54,14,"isnan"],[71,27,54,14],[71,29,54,15,"activeOffsetYStart"],[71,47,54,33],[71,48,54,34],[71,50,54,36],[72,8,55,6,"verticalDirections"],[72,26,55,24],[72,27,55,25,"push"],[72,31,55,29],[72,32,55,30,"Hammer"],[72,38,55,36],[72,39,55,36,"default"],[72,46,55,36],[72,47,55,37,"DIRECTION_UP"],[72,59,55,49],[72,60,55,50],[73,6,56,4],[74,6,57,4],[74,10,57,8],[74,11,57,9],[74,15,57,9,"isnan"],[74,21,57,14],[74,22,57,14,"isnan"],[74,27,57,14],[74,29,57,15,"activeOffsetYEnd"],[74,45,57,31],[74,46,57,32],[74,48,57,34],[75,8,58,6,"verticalDirections"],[75,26,58,24],[75,27,58,25,"push"],[75,31,58,29],[75,32,58,30,"Hammer"],[75,38,58,36],[75,39,58,36,"default"],[75,46,58,36],[75,47,58,37,"DIRECTION_DOWN"],[75,61,58,51],[75,62,58,52],[76,6,59,4],[77,6,60,4],[77,10,60,8,"verticalDirections"],[77,28,60,26],[77,29,60,27,"length"],[77,35,60,33],[77,40,60,38],[77,41,60,39],[77,43,60,41],[78,8,61,6,"verticalDirections"],[78,26,61,24],[78,29,61,27],[78,30,61,28,"Hammer"],[78,36,61,34],[78,37,61,34,"default"],[78,44,61,34],[78,45,61,35,"DIRECTION_VERTICAL"],[78,63,61,53],[78,64,61,54],[79,6,62,4],[80,6,63,4,"directions"],[80,16,63,14],[80,19,63,17,"directions"],[80,29,63,27],[80,30,63,28,"concat"],[80,36,63,34],[80,37,63,35,"verticalDirections"],[80,55,63,53],[80,56,63,54],[81,6,64,4],[81,10,64,8],[81,11,64,9,"directions"],[81,21,64,19],[81,22,64,20,"length"],[81,28,64,26],[81,30,64,28],[82,8,65,6],[82,15,65,13,"Hammer"],[82,21,65,19],[82,22,65,19,"default"],[82,29,65,19],[82,30,65,20,"DIRECTION_NONE"],[82,44,65,34],[83,6,66,4],[84,6,67,4],[84,10,67,8,"directions"],[84,20,67,18],[84,21,67,19],[84,22,67,20],[84,23,67,21],[84,28,67,26,"Hammer"],[84,34,67,32],[84,35,67,32,"default"],[84,42,67,32],[84,43,67,33,"DIRECTION_HORIZONTAL"],[84,63,67,53],[84,67,67,57,"directions"],[84,77,67,67],[84,78,67,68],[84,79,67,69],[84,80,67,70],[84,85,67,75,"Hammer"],[84,91,67,81],[84,92,67,81,"default"],[84,99,67,81],[84,100,67,82,"DIRECTION_VERTICAL"],[84,118,67,100],[84,120,67,102],[85,8,68,6],[85,15,68,13,"Hammer"],[85,21,68,19],[85,22,68,19,"default"],[85,29,68,19],[85,30,68,20,"DIRECTION_ALL"],[85,43,68,33],[86,6,69,4],[87,6,70,4],[87,10,70,8,"horizontalDirections"],[87,30,70,28],[87,31,70,29,"length"],[87,37,70,35],[87,41,70,39,"verticalDirections"],[87,59,70,57],[87,60,70,58,"length"],[87,66,70,64],[87,68,70,66],[88,8,71,6],[88,15,71,13,"Hammer"],[88,21,71,19],[88,22,71,19,"default"],[88,29,71,19],[88,30,71,20,"DIRECTION_ALL"],[88,43,71,33],[89,6,72,4],[90,6,73,4],[90,13,73,11,"directions"],[90,23,73,21],[90,24,73,22],[90,25,73,23],[90,26,73,24],[91,4,74,2],[92,4,75,2,"getConfig"],[92,13,75,11,"getConfig"],[92,14,75,11],[92,16,75,14],[93,6,76,4],[93,10,76,8],[93,11,76,9],[93,15,76,13],[93,16,76,14,"hasCustomActivationCriteria"],[93,43,76,41],[93,45,76,43],[94,8,77,6],[95,8,78,6],[96,8,79,6],[96,15,79,13],[97,10,80,8,"minDistSq"],[97,19,80,17],[97,21,80,19],[98,8,81,6],[98,9,81,7],[99,6,82,4],[100,6,83,4],[100,13,83,11],[100,17,83,15],[100,18,83,16,"config"],[100,24,83,22],[101,4,84,2],[102,4,85,2,"shouldFailUnderCustomCriteria"],[102,33,85,31,"shouldFailUnderCustomCriteria"],[102,34,85,32],[103,6,86,4,"deltaX"],[103,12,86,10],[104,6,87,4,"deltaY"],[105,4,88,2],[105,5,88,3],[105,7,88,5,"criteria"],[105,15,88,13],[105,17,88,15],[106,6,89,4],[106,13,89,11],[106,14,89,12],[106,18,89,12,"isnan"],[106,24,89,17],[106,25,89,17,"isnan"],[106,30,89,17],[106,32,89,18,"criteria"],[106,40,89,26],[106,41,89,27,"failOffsetXStart"],[106,57,89,43],[106,58,89,44],[106,62,89,48,"deltaX"],[106,68,89,54],[106,71,89,57,"criteria"],[106,79,89,65],[106,80,89,66,"failOffsetXStart"],[106,96,89,82],[106,100,89,86],[106,101,89,87],[106,105,89,87,"isnan"],[106,111,89,92],[106,112,89,92,"isnan"],[106,117,89,92],[106,119,89,93,"criteria"],[106,127,89,101],[106,128,89,102,"failOffsetXEnd"],[106,142,89,116],[106,143,89,117],[106,147,89,121,"deltaX"],[106,153,89,127],[106,156,89,130,"criteria"],[106,164,89,138],[106,165,89,139,"failOffsetXEnd"],[106,179,89,153],[106,183,89,157],[106,184,89,158],[106,188,89,158,"isnan"],[106,194,89,163],[106,195,89,163,"isnan"],[106,200,89,163],[106,202,89,164,"criteria"],[106,210,89,172],[106,211,89,173,"failOffsetYStart"],[106,227,89,189],[106,228,89,190],[106,232,89,194,"deltaY"],[106,238,89,200],[106,241,89,203,"criteria"],[106,249,89,211],[106,250,89,212,"failOffsetYStart"],[106,266,89,228],[106,270,89,232],[106,271,89,233],[106,275,89,233,"isnan"],[106,281,89,238],[106,282,89,238,"isnan"],[106,287,89,238],[106,289,89,239,"criteria"],[106,297,89,247],[106,298,89,248,"failOffsetYEnd"],[106,312,89,262],[106,313,89,263],[106,317,89,267,"deltaY"],[106,323,89,273],[106,326,89,276,"criteria"],[106,334,89,284],[106,335,89,285,"failOffsetYEnd"],[106,349,89,299],[107,4,90,2],[108,4,91,2,"shouldActivateUnderCustomCriteria"],[108,37,91,35,"shouldActivateUnderCustomCriteria"],[108,38,91,36],[109,6,92,4,"deltaX"],[109,12,92,10],[110,6,93,4,"deltaY"],[110,12,93,10],[111,6,94,4,"velocity"],[112,4,95,2],[112,5,95,3],[112,7,95,5,"criteria"],[112,15,95,13],[112,17,95,15],[113,6,96,4],[113,13,96,11],[113,14,96,12],[113,18,96,12,"isnan"],[113,24,96,17],[113,25,96,17,"isnan"],[113,30,96,17],[113,32,96,18,"criteria"],[113,40,96,26],[113,41,96,27,"activeOffsetXStart"],[113,59,96,45],[113,60,96,46],[113,64,96,50,"deltaX"],[113,70,96,56],[113,73,96,59,"criteria"],[113,81,96,67],[113,82,96,68,"activeOffsetXStart"],[113,100,96,86],[113,104,96,90],[113,105,96,91],[113,109,96,91,"isnan"],[113,115,96,96],[113,116,96,96,"isnan"],[113,121,96,96],[113,123,96,97,"criteria"],[113,131,96,105],[113,132,96,106,"activeOffsetXEnd"],[113,148,96,122],[113,149,96,123],[113,153,96,127,"deltaX"],[113,159,96,133],[113,162,96,136,"criteria"],[113,170,96,144],[113,171,96,145,"activeOffsetXEnd"],[113,187,96,161],[113,191,96,165],[113,192,96,166],[113,196,96,166,"isnan"],[113,202,96,171],[113,203,96,171,"isnan"],[113,208,96,171],[113,210,96,172,"criteria"],[113,218,96,180],[113,219,96,181,"activeOffsetYStart"],[113,237,96,199],[113,238,96,200],[113,242,96,204,"deltaY"],[113,248,96,210],[113,251,96,213,"criteria"],[113,259,96,221],[113,260,96,222,"activeOffsetYStart"],[113,278,96,240],[113,282,96,244],[113,283,96,245],[113,287,96,245,"isnan"],[113,293,96,250],[113,294,96,250,"isnan"],[113,299,96,250],[113,301,96,251,"criteria"],[113,309,96,259],[113,310,96,260,"activeOffsetYEnd"],[113,326,96,276],[113,327,96,277],[113,331,96,281,"deltaY"],[113,337,96,287],[113,340,96,290,"criteria"],[113,348,96,298],[113,349,96,299,"activeOffsetYEnd"],[113,365,96,315],[113,369,96,319],[113,373,96,319,"TEST_MIN_IF_NOT_NAN"],[113,379,96,338],[113,380,96,338,"TEST_MIN_IF_NOT_NAN"],[113,399,96,338],[113,401,96,339],[113,405,96,339,"VEC_LEN_SQ"],[113,411,96,349],[113,412,96,349,"VEC_LEN_SQ"],[113,422,96,349],[113,424,96,350],[114,8,97,6,"x"],[114,9,97,7],[114,11,97,9,"deltaX"],[114,17,97,15],[115,8,98,6,"y"],[115,9,98,7],[115,11,98,9,"deltaY"],[116,6,99,4],[116,7,99,5],[116,8,99,6],[116,10,99,8,"criteria"],[116,18,99,16],[116,19,99,17,"minDistSq"],[116,28,99,26],[116,29,99,27],[116,33,99,31],[116,37,99,31,"TEST_MIN_IF_NOT_NAN"],[116,43,99,50],[116,44,99,50,"TEST_MIN_IF_NOT_NAN"],[116,63,99,50],[116,65,99,51,"velocity"],[116,73,99,59],[116,74,99,60,"x"],[116,75,99,61],[116,77,99,63,"criteria"],[116,85,99,71],[116,86,99,72,"minVelocityX"],[116,98,99,84],[116,99,99,85],[116,103,99,89],[116,107,99,89,"TEST_MIN_IF_NOT_NAN"],[116,113,99,108],[116,114,99,108,"TEST_MIN_IF_NOT_NAN"],[116,133,99,108],[116,135,99,109,"velocity"],[116,143,99,117],[116,144,99,118,"y"],[116,145,99,119],[116,147,99,121,"criteria"],[116,155,99,129],[116,156,99,130,"minVelocityY"],[116,168,99,142],[116,169,99,143],[116,173,99,147],[116,177,99,147,"TEST_MIN_IF_NOT_NAN"],[116,183,99,166],[116,184,99,166,"TEST_MIN_IF_NOT_NAN"],[116,203,99,166],[116,205,99,167],[116,209,99,167,"VEC_LEN_SQ"],[116,215,99,177],[116,216,99,177,"VEC_LEN_SQ"],[116,226,99,177],[116,228,99,178,"velocity"],[116,236,99,186],[116,237,99,187],[116,239,99,189,"criteria"],[116,247,99,197],[116,248,99,198,"minVelocitySq"],[116,261,99,211],[116,262,99,212],[117,4,100,2],[118,4,101,2,"shouldMultiFingerPanFail"],[118,28,101,26,"shouldMultiFingerPanFail"],[118,29,101,27],[119,6,102,4,"pointerLength"],[119,19,102,17],[120,6,103,4,"scale"],[120,11,103,9],[121,6,104,4,"deltaRotation"],[122,4,105,2],[122,5,105,3],[122,7,105,5],[123,6,106,4],[123,10,106,8,"pointerLength"],[123,23,106,21],[123,27,106,25],[123,28,106,26],[123,30,106,28],[124,8,107,6],[124,15,107,13],[124,20,107,18],[125,6,108,4],[127,6,110,4],[128,6,111,4],[128,12,111,10,"deltaScale"],[128,22,111,20],[128,25,111,23,"Math"],[128,29,111,27],[128,30,111,28,"abs"],[128,33,111,31],[128,34,111,32,"scale"],[128,39,111,37],[128,42,111,40],[128,43,111,41],[128,44,111,42],[129,6,112,4],[129,12,112,10,"absDeltaRotation"],[129,28,112,26],[129,31,112,29,"Math"],[129,35,112,33],[129,36,112,34,"abs"],[129,39,112,37],[129,40,112,38,"deltaRotation"],[129,53,112,51],[129,54,112,52],[130,6,113,4],[130,10,113,8,"deltaScale"],[130,20,113,18],[130,23,113,21,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[130,33,113,57],[130,34,113,57,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[130,70,113,57],[130,72,113,59],[131,8,114,6],[132,8,115,6],[133,8,116,6],[133,15,116,13],[133,19,116,17],[134,6,117,4],[135,6,118,4],[135,10,118,8,"absDeltaRotation"],[135,26,118,24],[135,29,118,27,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[135,39,118,66],[135,40,118,66,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[135,79,118,66],[135,81,118,68],[136,8,119,6],[137,8,120,6],[138,8,121,6],[138,15,121,13],[138,19,121,17],[139,6,122,4],[140,6,123,4],[140,13,123,11],[140,18,123,16],[141,4,124,2],[142,4,125,2,"updateHasCustomActivationCriteria"],[142,37,125,35,"updateHasCustomActivationCriteria"],[142,38,125,36,"criteria"],[142,46,125,44],[142,48,125,46],[143,6,126,4],[143,13,126,11],[143,17,126,11,"isValidNumber"],[143,23,126,24],[143,24,126,24,"isValidNumber"],[143,37,126,24],[143,39,126,25,"criteria"],[143,47,126,33],[143,48,126,34,"minDistSq"],[143,57,126,43],[143,58,126,44],[143,62,126,48],[143,66,126,48,"isValidNumber"],[143,72,126,61],[143,73,126,61,"isValidNumber"],[143,86,126,61],[143,88,126,62,"criteria"],[143,96,126,70],[143,97,126,71,"minVelocityX"],[143,109,126,83],[143,110,126,84],[143,114,126,88],[143,118,126,88,"isValidNumber"],[143,124,126,101],[143,125,126,101,"isValidNumber"],[143,138,126,101],[143,140,126,102,"criteria"],[143,148,126,110],[143,149,126,111,"minVelocityY"],[143,161,126,123],[143,162,126,124],[143,166,126,128],[143,170,126,128,"isValidNumber"],[143,176,126,141],[143,177,126,141,"isValidNumber"],[143,190,126,141],[143,192,126,142,"criteria"],[143,200,126,150],[143,201,126,151,"minVelocitySq"],[143,214,126,164],[143,215,126,165],[143,219,126,169],[143,223,126,169,"isValidNumber"],[143,229,126,182],[143,230,126,182,"isValidNumber"],[143,243,126,182],[143,245,126,183,"criteria"],[143,253,126,191],[143,254,126,192,"activeOffsetXStart"],[143,272,126,210],[143,273,126,211],[143,277,126,215],[143,281,126,215,"isValidNumber"],[143,287,126,228],[143,288,126,228,"isValidNumber"],[143,301,126,228],[143,303,126,229,"criteria"],[143,311,126,237],[143,312,126,238,"activeOffsetXEnd"],[143,328,126,254],[143,329,126,255],[143,333,126,259],[143,337,126,259,"isValidNumber"],[143,343,126,272],[143,344,126,272,"isValidNumber"],[143,357,126,272],[143,359,126,273,"criteria"],[143,367,126,281],[143,368,126,282,"activeOffsetYStart"],[143,386,126,300],[143,387,126,301],[143,391,126,305],[143,395,126,305,"isValidNumber"],[143,401,126,318],[143,402,126,318,"isValidNumber"],[143,415,126,318],[143,417,126,319,"criteria"],[143,425,126,327],[143,426,126,328,"activeOffsetYEnd"],[143,442,126,344],[143,443,126,345],[144,4,127,2],[145,4,128,2,"isGestureEnabledForEvent"],[145,28,128,26,"isGestureEnabledForEvent"],[145,29,128,27,"props"],[145,34,128,32],[145,36,128,34,"_recognizer"],[145,47,128,45],[145,49,128,47,"inputData"],[145,58,128,56],[145,60,128,58],[146,6,129,4],[146,10,129,8],[146,14,129,12],[146,15,129,13,"shouldFailUnderCustomCriteria"],[146,44,129,42],[146,45,129,43,"inputData"],[146,54,129,52],[146,56,129,54,"props"],[146,61,129,59],[146,62,129,60],[146,64,129,62],[147,8,130,6],[147,15,130,13],[148,10,131,8,"failed"],[148,16,131,14],[148,18,131,16],[149,8,132,6],[149,9,132,7],[150,6,133,4],[151,6,134,4],[151,12,134,10,"velocity"],[151,20,134,18],[151,23,134,21],[152,8,135,6,"x"],[152,9,135,7],[152,11,135,9,"inputData"],[152,20,135,18],[152,21,135,19,"velocityX"],[152,30,135,28],[153,8,136,6,"y"],[153,9,136,7],[153,11,136,9,"inputData"],[153,20,136,18],[153,21,136,19,"velocityY"],[154,6,137,4],[154,7,137,5],[155,6,138,4],[155,10,138,8],[155,14,138,12],[155,15,138,13,"hasCustomActivationCriteria"],[155,42,138,40],[155,46,138,44],[155,50,138,48],[155,51,138,49,"shouldActivateUnderCustomCriteria"],[155,84,138,82],[155,85,138,83],[156,8,139,6,"deltaX"],[156,14,139,12],[156,16,139,14,"inputData"],[156,25,139,23],[156,26,139,24,"deltaX"],[156,32,139,30],[157,8,140,6,"deltaY"],[157,14,140,12],[157,16,140,14,"inputData"],[157,25,140,23],[157,26,140,24,"deltaY"],[157,32,140,30],[158,8,141,6,"velocity"],[159,6,142,4],[159,7,142,5],[159,9,142,7,"props"],[159,14,142,12],[159,15,142,13],[159,17,142,15],[160,8,143,6],[160,12,143,10],[160,16,143,14],[160,17,143,15,"shouldMultiFingerPanFail"],[160,41,143,39],[160,42,143,40],[161,10,144,8,"pointerLength"],[161,23,144,21],[161,25,144,23,"inputData"],[161,34,144,32],[161,35,144,33,"maxPointers"],[161,46,144,44],[162,10,145,8,"scale"],[162,15,145,13],[162,17,145,15,"inputData"],[162,26,145,24],[162,27,145,25,"scale"],[162,32,145,30],[163,10,146,8,"deltaRotation"],[163,23,146,21],[163,25,146,23,"inputData"],[163,34,146,32],[163,35,146,33,"deltaRotation"],[164,8,147,6],[164,9,147,7],[164,10,147,8],[164,12,147,10],[165,10,148,8],[165,17,148,15],[166,12,149,10,"failed"],[166,18,149,16],[166,20,149,18],[167,10,150,8],[167,11,150,9],[168,8,151,6],[169,8,152,6],[169,15,152,13],[170,10,153,8,"success"],[170,17,153,15],[170,19,153,17],[171,8,154,6],[171,9,154,7],[172,6,155,4],[173,6,156,4],[173,13,156,11],[174,8,157,6,"success"],[174,15,157,13],[174,17,157,15],[175,6,158,4],[175,7,158,5],[176,4,159,2],[177,2,160,0],[178,2,161,0],[178,6,161,0,"_default"],[178,14,161,0],[178,17,161,15,"PanGestureHandler"],[178,34,161,32],[179,0,161,33],[179,3]],"functionMap":{"names":["<global>","PanGestureHandler","get__name","get__NativeGestureClass","getHammerConfig","getState","getDirection","getConfig","shouldFailUnderCustomCriteria","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","updateHasCustomActivationCriteria","isGestureEnabledForEvent"],"mappings":"AAA;ACO;ECC;GDE;EEC;GFE;EGC;GHK;EIC;GJO;EKC;GL6C;EMC;GNS;EOC;GPK;EQC;GRS;ESC;GTuB;EUC;GVE;EWC;GX+B;CDC"},"hasCjsExports":false},"type":"js/module"}]}