{"dependencies":[{"name":"../getNextHandlerTag","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":25,"index":209},"end":{"line":8,"column":56,"index":240}}],"key":"KIZmhsnmTiJp1so9G89LIFKgbLc=","exportNames":["*"],"imports":1}},{"name":"../../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":13,"index":256},"end":{"line":10,"column":35,"index":278}}],"key":"/gxgMVIBQIOS9WgzAWnJsYriGvM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ContinousBaseGesture = exports.BaseGesture = exports.Gesture = exports.CALLBACK_TYPE = void 0;\n  var _getNextHandlerTag = require(_dependencyMap[0], \"../getNextHandlerTag\");\n  var _utils = require(_dependencyMap[1], \"../../utils\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const CALLBACK_TYPE = {\n    UNDEFINED: 0,\n    BEGAN: 1,\n    START: 2,\n    UPDATE: 3,\n    CHANGE: 4,\n    END: 5,\n    FINALIZE: 6,\n    TOUCHES_DOWN: 7,\n    TOUCHES_MOVE: 8,\n    TOUCHES_UP: 9,\n    TOUCHES_CANCELLED: 10\n  }; // Allow using CALLBACK_TYPE as object and type\n  // eslint-disable-next-line @typescript-eslint/no-redeclare\n\n  exports.CALLBACK_TYPE = CALLBACK_TYPE;\n  class Gesture {}\n  exports.Gesture = Gesture;\n  let nextGestureId = 0;\n  class BaseGesture extends Gesture {\n    constructor() {\n      super(); // Used to check whether the gesture config has been updated when wrapping it\n      // with `useMemo`. Since every config will have a unique id, when the dependencies\n      // don't change, the config won't be recreated and the id will stay the same.\n      // If the id is different, it means that the config has changed and the gesture\n      // needs to be updated.\n\n      _defineProperty(this, \"gestureId\", -1);\n      _defineProperty(this, \"handlerTag\", -1);\n      _defineProperty(this, \"handlerName\", '');\n      _defineProperty(this, \"config\", {});\n      _defineProperty(this, \"handlers\", {\n        gestureId: -1,\n        handlerTag: -1,\n        isWorklet: []\n      });\n      this.gestureId = nextGestureId++;\n      this.handlers.gestureId = this.gestureId;\n    }\n    addDependency(key, gesture) {\n      const value = this.config[key];\n      this.config[key] = value ? Array().concat(value, gesture) : [gesture];\n    }\n    /**\n     * Sets a `ref` to the gesture object, allowing for interoperability with the old API.\n     * @param ref\n     */\n\n    withRef(ref) {\n      this.config.ref = ref;\n      return this;\n    } // eslint-disable-next-line @typescript-eslint/ban-types\n\n    isWorklet(callback) {\n      // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n      return callback.__workletHash !== undefined;\n    }\n    /**\n     * Set the callback that is being called when given gesture handler starts receiving touches.\n     * At the moment of this callback the handler is in `BEGAN` state and we don't know yet if it will recognize the gesture at all.\n     * @param callback\n     */\n\n    onBegin(callback) {\n      this.handlers.onBegin = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the callback that is being called when the gesture is recognized by the handler and it transitions to the `ACTIVE` state.\n     * @param callback\n     */\n\n    onStart(callback) {\n      this.handlers.onStart = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the callback that is being called when the gesture that was recognized by the handler finishes and handler reaches `END` state.\n     * It will be called only if the handler was previously in the `ACTIVE` state.\n     * @param callback\n     */\n\n    onEnd(callback) {\n      this.handlers.onEnd = callback; // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n\n      this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the callback that is being called when the handler finalizes handling gesture - the gesture was recognized and has finished or it failed to recognize.\n     * @param callback\n     */\n\n    onFinalize(callback) {\n      this.handlers.onFinalize = callback; // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n\n      this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the `onTouchesDown` callback which is called every time a pointer is placed on the screen.\n     * @param callback\n     */\n\n    onTouchesDown(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesDown = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the `onTouchesMove` callback which is called every time a pointer is moved on the screen.\n     * @param callback\n     */\n\n    onTouchesMove(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesMove = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the `onTouchesUp` callback which is called every time a pointer is lifted from the screen.\n     * @param callback\n     */\n\n    onTouchesUp(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesUp = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the `onTouchesCancelled` callback which is called every time a pointer stops being tracked, for example when the gesture finishes.\n     * @param callback\n     */\n\n    onTouchesCancelled(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesCancelled = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Indicates whether the given handler should be analyzing stream of touch events or not.\n     * @param enabled\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#enabledvalue-boolean\n     */\n\n    enabled(enabled) {\n      this.config.enabled = enabled;\n      return this;\n    }\n    /**\n     * When true the handler will cancel or fail recognition (depending on its current state) whenever the finger leaves the area of the connected view.\n     * @param value\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#shouldcancelwhenoutsidevalue-boolean\n     */\n\n    shouldCancelWhenOutside(value) {\n      this.config.shouldCancelWhenOutside = value;\n      return this;\n    }\n    /**\n     * This parameter enables control over what part of the connected view area can be used to begin recognizing the gesture.\n     * When a negative number is provided the bounds of the view will reduce the area by the given number of points in each of the sides evenly.\n     * @param hitSlop\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#hitslopsettings\n     */\n\n    hitSlop(hitSlop) {\n      this.config.hitSlop = hitSlop;\n      return this;\n    }\n    /**\n     * #### Web only\n     * This parameter allows to specify which `cursor` should be used when gesture activates.\n     * Supports all CSS cursor values (e.g. `\"grab\"`, `\"zoom-in\"`). Default value is set to `\"auto\"`.\n     * @param activeCursor\n     */\n\n    activeCursor(activeCursor) {\n      this.config.activeCursor = activeCursor;\n      return this;\n    }\n    /**\n     * #### Web & Android only\n     * Allows users to choose which mouse button should handler respond to.\n     * Arguments can be combined using `|` operator, e.g. `mouseButton(MouseButton.LEFT | MouseButton.RIGHT)`.\n     * Default value is set to `MouseButton.LEFT`.\n     * @param mouseButton\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#mousebuttonvalue-mousebutton-web--android-only\n     */\n\n    mouseButton(mouseButton) {\n      this.config.mouseButton = mouseButton;\n      return this;\n    }\n    /**\n     * When `react-native-reanimated` is installed, the callbacks passed to the gestures are automatically workletized and run on the UI thread when called.\n     * This option allows for changing this behavior: when `true`, all the callbacks will be run on the JS thread instead of the UI thread, regardless of whether they are worklets or not.\n     * Defaults to `false`.\n     * @param runOnJS\n     */\n\n    runOnJS(runOnJS) {\n      this.config.runOnJS = runOnJS;\n      return this;\n    }\n    /**\n     * Allows gestures across different components to be recognized simultaneously.\n     * @param gestures\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneouswithexternalgesture\n     */\n\n    simultaneousWithExternalGesture(...gestures) {\n      for (const gesture of gestures) {\n        this.addDependency('simultaneousWith', gesture);\n      }\n      return this;\n    }\n    /**\n     * Allows to delay activation of the handler until all handlers passed as arguments to this method fail (or don't begin at all).\n     * @param gestures\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#requireexternalgesturetofail\n     */\n\n    requireExternalGestureToFail(...gestures) {\n      for (const gesture of gestures) {\n        this.addDependency('requireToFail', gesture);\n      }\n      return this;\n    }\n    /**\n     * Works similarily to `requireExternalGestureToFail` but the direction of the relation is reversed - instead of being one-to-many relation, it's many-to-one.\n     * @param gestures\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#blocksexternalgesture\n     */\n\n    blocksExternalGesture(...gestures) {\n      for (const gesture of gestures) {\n        this.addDependency('blocksHandlers', gesture);\n      }\n      return this;\n    }\n    /**\n     * Sets a `testID` property for gesture object, allowing for querying for it in tests.\n     * @param id\n     */\n\n    withTestId(id) {\n      this.config.testId = id;\n      return this;\n    }\n    /**\n     * #### iOS only\n     * When `true`, the handler will cancel touches for native UI components (`UIButton`, `UISwitch`, etc) it's attached to when it becomes `ACTIVE`.\n     * Default value is `true`.\n     * @param value\n     */\n\n    cancelsTouchesInView(value) {\n      this.config.cancelsTouchesInView = value;\n      return this;\n    }\n    initialize() {\n      this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n      this.handlers = {\n        ...this.handlers,\n        handlerTag: this.handlerTag\n      };\n      if (this.config.ref) {\n        this.config.ref.current = this;\n      }\n    }\n    toGestureArray() {\n      return [this];\n    } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    prepare() {}\n    get shouldUseReanimated() {\n      // Use Reanimated when runOnJS isn't set explicitly,\n      // all defined callbacks are worklets\n      // and remote debugging is disabled\n      return this.config.runOnJS !== true && !this.handlers.isWorklet.includes(false) && !(0, _utils.isRemoteDebuggingEnabled)();\n    }\n  }\n  exports.BaseGesture = BaseGesture;\n  class ContinousBaseGesture extends BaseGesture {\n    /**\n     * Set the callback that is being called every time the gesture receives an update while it's active.\n     * @param callback\n     */\n    onUpdate(callback) {\n      this.handlers.onUpdate = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the callback that is being called every time the gesture receives an update while it's active.\n     * This callback will receive information about change in value in relation to the last received event.\n     * @param callback\n     */\n\n    onChange(callback) {\n      this.handlers.onChange = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * When `true` the handler will not activate by itself even if its activation criteria are met.\n     * Instead you can manipulate its state using state manager.\n     * @param manualActivation\n     */\n\n    manualActivation(manualActivation) {\n      this.config.manualActivation = manualActivation;\n      return this;\n    }\n  }\n  exports.ContinousBaseGesture = ContinousBaseGesture;\n});","lineCount":346,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"ContinousBaseGesture"],[7,30,6,28],[7,33,6,31,"exports"],[7,40,6,38],[7,41,6,39,"BaseGesture"],[7,52,6,50],[7,55,6,53,"exports"],[7,62,6,60],[7,63,6,61,"Gesture"],[7,70,6,68],[7,73,6,71,"exports"],[7,80,6,78],[7,81,6,79,"CALLBACK_TYPE"],[7,94,6,92],[7,97,6,95],[7,102,6,100],[7,103,6,101],[8,2,8,0],[8,6,8,4,"_getNextHandlerTag"],[8,24,8,22],[8,27,8,25,"require"],[8,34,8,32],[8,35,8,32,"_dependencyMap"],[8,49,8,32],[8,76,8,55],[8,77,8,56],[9,2,10,0],[9,6,10,4,"_utils"],[9,12,10,10],[9,15,10,13,"require"],[9,22,10,20],[9,23,10,20,"_dependencyMap"],[9,37,10,20],[9,55,10,34],[9,56,10,35],[10,2,12,0],[10,11,12,9,"_defineProperty"],[10,26,12,24,"_defineProperty"],[10,27,12,25,"obj"],[10,30,12,28],[10,32,12,30,"key"],[10,35,12,33],[10,37,12,35,"value"],[10,42,12,40],[10,44,12,42],[11,4,12,44],[11,8,12,48,"key"],[11,11,12,51],[11,15,12,55,"obj"],[11,18,12,58],[11,20,12,60],[12,6,12,62,"Object"],[12,12,12,68],[12,13,12,69,"defineProperty"],[12,27,12,83],[12,28,12,84,"obj"],[12,31,12,87],[12,33,12,89,"key"],[12,36,12,92],[12,38,12,94],[13,8,12,96,"value"],[13,13,12,101],[13,15,12,103,"value"],[13,20,12,108],[14,8,12,110,"enumerable"],[14,18,12,120],[14,20,12,122],[14,24,12,126],[15,8,12,128,"configurable"],[15,20,12,140],[15,22,12,142],[15,26,12,146],[16,8,12,148,"writable"],[16,16,12,156],[16,18,12,158],[17,6,12,163],[17,7,12,164],[17,8,12,165],[18,4,12,167],[18,5,12,168],[18,11,12,174],[19,6,12,176,"obj"],[19,9,12,179],[19,10,12,180,"key"],[19,13,12,183],[19,14,12,184],[19,17,12,187,"value"],[19,22,12,192],[20,4,12,194],[21,4,12,196],[21,11,12,203,"obj"],[21,14,12,206],[22,2,12,208],[23,2,14,0],[23,8,14,6,"CALLBACK_TYPE"],[23,21,14,19],[23,24,14,22],[24,4,15,2,"UNDEFINED"],[24,13,15,11],[24,15,15,13],[24,16,15,14],[25,4,16,2,"BEGAN"],[25,9,16,7],[25,11,16,9],[25,12,16,10],[26,4,17,2,"START"],[26,9,17,7],[26,11,17,9],[26,12,17,10],[27,4,18,2,"UPDATE"],[27,10,18,8],[27,12,18,10],[27,13,18,11],[28,4,19,2,"CHANGE"],[28,10,19,8],[28,12,19,10],[28,13,19,11],[29,4,20,2,"END"],[29,7,20,5],[29,9,20,7],[29,10,20,8],[30,4,21,2,"FINALIZE"],[30,12,21,10],[30,14,21,12],[30,15,21,13],[31,4,22,2,"TOUCHES_DOWN"],[31,16,22,14],[31,18,22,16],[31,19,22,17],[32,4,23,2,"TOUCHES_MOVE"],[32,16,23,14],[32,18,23,16],[32,19,23,17],[33,4,24,2,"TOUCHES_UP"],[33,14,24,12],[33,16,24,14],[33,17,24,15],[34,4,25,2,"TOUCHES_CANCELLED"],[34,21,25,19],[34,23,25,21],[35,2,26,0],[35,3,26,1],[35,4,26,2],[35,5,26,3],[36,2,27,0],[38,2,29,0,"exports"],[38,9,29,7],[38,10,29,8,"CALLBACK_TYPE"],[38,23,29,21],[38,26,29,24,"CALLBACK_TYPE"],[38,39,29,37],[39,2,31,0],[39,8,31,6,"Gesture"],[39,15,31,13],[39,16,31,14],[40,2,33,0,"exports"],[40,9,33,7],[40,10,33,8,"Gesture"],[40,17,33,15],[40,20,33,18,"Gesture"],[40,27,33,25],[41,2,34,0],[41,6,34,4,"nextGestureId"],[41,19,34,17],[41,22,34,20],[41,23,34,21],[42,2,36,0],[42,8,36,6,"BaseGesture"],[42,19,36,17],[42,28,36,26,"Gesture"],[42,35,36,33],[42,36,36,34],[43,4,37,2,"constructor"],[43,15,37,13,"constructor"],[43,16,37,13],[43,18,37,16],[44,6,38,4],[44,11,38,9],[44,12,38,10],[44,13,38,11],[44,14,38,12],[44,15,38,13],[45,6,39,4],[46,6,40,4],[47,6,41,4],[48,6,42,4],[50,6,44,4,"_defineProperty"],[50,21,44,19],[50,22,44,20],[50,26,44,24],[50,28,44,26],[50,39,44,37],[50,41,44,39],[50,42,44,40],[50,43,44,41],[50,44,44,42],[51,6,46,4,"_defineProperty"],[51,21,46,19],[51,22,46,20],[51,26,46,24],[51,28,46,26],[51,40,46,38],[51,42,46,40],[51,43,46,41],[51,44,46,42],[51,45,46,43],[52,6,48,4,"_defineProperty"],[52,21,48,19],[52,22,48,20],[52,26,48,24],[52,28,48,26],[52,41,48,39],[52,43,48,41],[52,45,48,43],[52,46,48,44],[53,6,50,4,"_defineProperty"],[53,21,50,19],[53,22,50,20],[53,26,50,24],[53,28,50,26],[53,36,50,34],[53,38,50,36],[53,39,50,37],[53,40,50,38],[53,41,50,39],[54,6,52,4,"_defineProperty"],[54,21,52,19],[54,22,52,20],[54,26,52,24],[54,28,52,26],[54,38,52,36],[54,40,52,38],[55,8,53,6,"gestureId"],[55,17,53,15],[55,19,53,17],[55,20,53,18],[55,21,53,19],[56,8,54,6,"handlerTag"],[56,18,54,16],[56,20,54,18],[56,21,54,19],[56,22,54,20],[57,8,55,6,"isWorklet"],[57,17,55,15],[57,19,55,17],[58,6,56,4],[58,7,56,5],[58,8,56,6],[59,6,58,4],[59,10,58,8],[59,11,58,9,"gestureId"],[59,20,58,18],[59,23,58,21,"nextGestureId"],[59,36,58,34],[59,38,58,36],[60,6,59,4],[60,10,59,8],[60,11,59,9,"handlers"],[60,19,59,17],[60,20,59,18,"gestureId"],[60,29,59,27],[60,32,59,30],[60,36,59,34],[60,37,59,35,"gestureId"],[60,46,59,44],[61,4,60,2],[62,4,62,2,"addDependency"],[62,17,62,15,"addDependency"],[62,18,62,16,"key"],[62,21,62,19],[62,23,62,21,"gesture"],[62,30,62,28],[62,32,62,30],[63,6,63,4],[63,12,63,10,"value"],[63,17,63,15],[63,20,63,18],[63,24,63,22],[63,25,63,23,"config"],[63,31,63,29],[63,32,63,30,"key"],[63,35,63,33],[63,36,63,34],[64,6,64,4],[64,10,64,8],[64,11,64,9,"config"],[64,17,64,15],[64,18,64,16,"key"],[64,21,64,19],[64,22,64,20],[64,25,64,23,"value"],[64,30,64,28],[64,33,64,31,"Array"],[64,38,64,36],[64,39,64,37],[64,40,64,38],[64,41,64,39,"concat"],[64,47,64,45],[64,48,64,46,"value"],[64,53,64,51],[64,55,64,53,"gesture"],[64,62,64,60],[64,63,64,61],[64,66,64,64],[64,67,64,65,"gesture"],[64,74,64,72],[64,75,64,73],[65,4,65,2],[66,4,66,2],[67,0,67,0],[68,0,68,0],[69,0,69,0],[71,4,72,2,"withRef"],[71,11,72,9,"withRef"],[71,12,72,10,"ref"],[71,15,72,13],[71,17,72,15],[72,6,73,4],[72,10,73,8],[72,11,73,9,"config"],[72,17,73,15],[72,18,73,16,"ref"],[72,21,73,19],[72,24,73,22,"ref"],[72,27,73,25],[73,6,74,4],[73,13,74,11],[73,17,74,15],[74,4,75,2],[74,5,75,3],[74,6,75,4],[76,4,78,2,"isWorklet"],[76,13,78,11,"isWorklet"],[76,14,78,12,"callback"],[76,22,78,20],[76,24,78,22],[77,6,79,4],[78,6,80,4],[78,13,80,11,"callback"],[78,21,80,19],[78,22,80,20,"__workletHash"],[78,35,80,33],[78,40,80,38,"undefined"],[78,49,80,47],[79,4,81,2],[80,4,82,2],[81,0,83,0],[82,0,84,0],[83,0,85,0],[84,0,86,0],[86,4,89,2,"onBegin"],[86,11,89,9,"onBegin"],[86,12,89,10,"callback"],[86,20,89,18],[86,22,89,20],[87,6,90,4],[87,10,90,8],[87,11,90,9,"handlers"],[87,19,90,17],[87,20,90,18,"onBegin"],[87,27,90,25],[87,30,90,28,"callback"],[87,38,90,36],[88,6,91,4],[88,10,91,8],[88,11,91,9,"handlers"],[88,19,91,17],[88,20,91,18,"isWorklet"],[88,29,91,27],[88,30,91,28,"CALLBACK_TYPE"],[88,43,91,41],[88,44,91,42,"BEGAN"],[88,49,91,47],[88,50,91,48],[88,53,91,51],[88,57,91,55],[88,58,91,56,"isWorklet"],[88,67,91,65],[88,68,91,66,"callback"],[88,76,91,74],[88,77,91,75],[89,6,92,4],[89,13,92,11],[89,17,92,15],[90,4,93,2],[91,4,94,2],[92,0,95,0],[93,0,96,0],[94,0,97,0],[96,4,100,2,"onStart"],[96,11,100,9,"onStart"],[96,12,100,10,"callback"],[96,20,100,18],[96,22,100,20],[97,6,101,4],[97,10,101,8],[97,11,101,9,"handlers"],[97,19,101,17],[97,20,101,18,"onStart"],[97,27,101,25],[97,30,101,28,"callback"],[97,38,101,36],[98,6,102,4],[98,10,102,8],[98,11,102,9,"handlers"],[98,19,102,17],[98,20,102,18,"isWorklet"],[98,29,102,27],[98,30,102,28,"CALLBACK_TYPE"],[98,43,102,41],[98,44,102,42,"START"],[98,49,102,47],[98,50,102,48],[98,53,102,51],[98,57,102,55],[98,58,102,56,"isWorklet"],[98,67,102,65],[98,68,102,66,"callback"],[98,76,102,74],[98,77,102,75],[99,6,103,4],[99,13,103,11],[99,17,103,15],[100,4,104,2],[101,4,105,2],[102,0,106,0],[103,0,107,0],[104,0,108,0],[105,0,109,0],[107,4,112,2,"onEnd"],[107,9,112,7,"onEnd"],[107,10,112,8,"callback"],[107,18,112,16],[107,20,112,18],[108,6,113,4],[108,10,113,8],[108,11,113,9,"handlers"],[108,19,113,17],[108,20,113,18,"onEnd"],[108,25,113,23],[108,28,113,26,"callback"],[108,36,113,34],[108,37,113,35],[108,38,113,36],[110,6,115,4],[110,10,115,8],[110,11,115,9,"handlers"],[110,19,115,17],[110,20,115,18,"isWorklet"],[110,29,115,27],[110,30,115,28,"CALLBACK_TYPE"],[110,43,115,41],[110,44,115,42,"END"],[110,47,115,45],[110,48,115,46],[110,51,115,49],[110,55,115,53],[110,56,115,54,"isWorklet"],[110,65,115,63],[110,66,115,64,"callback"],[110,74,115,72],[110,75,115,73],[111,6,116,4],[111,13,116,11],[111,17,116,15],[112,4,117,2],[113,4,118,2],[114,0,119,0],[115,0,120,0],[116,0,121,0],[118,4,124,2,"onFinalize"],[118,14,124,12,"onFinalize"],[118,15,124,13,"callback"],[118,23,124,21],[118,25,124,23],[119,6,125,4],[119,10,125,8],[119,11,125,9,"handlers"],[119,19,125,17],[119,20,125,18,"onFinalize"],[119,30,125,28],[119,33,125,31,"callback"],[119,41,125,39],[119,42,125,40],[119,43,125,41],[121,6,127,4],[121,10,127,8],[121,11,127,9,"handlers"],[121,19,127,17],[121,20,127,18,"isWorklet"],[121,29,127,27],[121,30,127,28,"CALLBACK_TYPE"],[121,43,127,41],[121,44,127,42,"FINALIZE"],[121,52,127,50],[121,53,127,51],[121,56,127,54],[121,60,127,58],[121,61,127,59,"isWorklet"],[121,70,127,68],[121,71,127,69,"callback"],[121,79,127,77],[121,80,127,78],[122,6,128,4],[122,13,128,11],[122,17,128,15],[123,4,129,2],[124,4,130,2],[125,0,131,0],[126,0,132,0],[127,0,133,0],[129,4,136,2,"onTouchesDown"],[129,17,136,15,"onTouchesDown"],[129,18,136,16,"callback"],[129,26,136,24],[129,28,136,26],[130,6,137,4],[130,10,137,8],[130,11,137,9,"config"],[130,17,137,15],[130,18,137,16,"needsPointerData"],[130,34,137,32],[130,37,137,35],[130,41,137,39],[131,6,138,4],[131,10,138,8],[131,11,138,9,"handlers"],[131,19,138,17],[131,20,138,18,"onTouchesDown"],[131,33,138,31],[131,36,138,34,"callback"],[131,44,138,42],[132,6,139,4],[132,10,139,8],[132,11,139,9,"handlers"],[132,19,139,17],[132,20,139,18,"isWorklet"],[132,29,139,27],[132,30,139,28,"CALLBACK_TYPE"],[132,43,139,41],[132,44,139,42,"TOUCHES_DOWN"],[132,56,139,54],[132,57,139,55],[132,60,139,58],[132,64,139,62],[132,65,139,63,"isWorklet"],[132,74,139,72],[132,75,139,73,"callback"],[132,83,139,81],[132,84,139,82],[133,6,140,4],[133,13,140,11],[133,17,140,15],[134,4,141,2],[135,4,142,2],[136,0,143,0],[137,0,144,0],[138,0,145,0],[140,4,148,2,"onTouchesMove"],[140,17,148,15,"onTouchesMove"],[140,18,148,16,"callback"],[140,26,148,24],[140,28,148,26],[141,6,149,4],[141,10,149,8],[141,11,149,9,"config"],[141,17,149,15],[141,18,149,16,"needsPointerData"],[141,34,149,32],[141,37,149,35],[141,41,149,39],[142,6,150,4],[142,10,150,8],[142,11,150,9,"handlers"],[142,19,150,17],[142,20,150,18,"onTouchesMove"],[142,33,150,31],[142,36,150,34,"callback"],[142,44,150,42],[143,6,151,4],[143,10,151,8],[143,11,151,9,"handlers"],[143,19,151,17],[143,20,151,18,"isWorklet"],[143,29,151,27],[143,30,151,28,"CALLBACK_TYPE"],[143,43,151,41],[143,44,151,42,"TOUCHES_MOVE"],[143,56,151,54],[143,57,151,55],[143,60,151,58],[143,64,151,62],[143,65,151,63,"isWorklet"],[143,74,151,72],[143,75,151,73,"callback"],[143,83,151,81],[143,84,151,82],[144,6,152,4],[144,13,152,11],[144,17,152,15],[145,4,153,2],[146,4,154,2],[147,0,155,0],[148,0,156,0],[149,0,157,0],[151,4,160,2,"onTouchesUp"],[151,15,160,13,"onTouchesUp"],[151,16,160,14,"callback"],[151,24,160,22],[151,26,160,24],[152,6,161,4],[152,10,161,8],[152,11,161,9,"config"],[152,17,161,15],[152,18,161,16,"needsPointerData"],[152,34,161,32],[152,37,161,35],[152,41,161,39],[153,6,162,4],[153,10,162,8],[153,11,162,9,"handlers"],[153,19,162,17],[153,20,162,18,"onTouchesUp"],[153,31,162,29],[153,34,162,32,"callback"],[153,42,162,40],[154,6,163,4],[154,10,163,8],[154,11,163,9,"handlers"],[154,19,163,17],[154,20,163,18,"isWorklet"],[154,29,163,27],[154,30,163,28,"CALLBACK_TYPE"],[154,43,163,41],[154,44,163,42,"TOUCHES_UP"],[154,54,163,52],[154,55,163,53],[154,58,163,56],[154,62,163,60],[154,63,163,61,"isWorklet"],[154,72,163,70],[154,73,163,71,"callback"],[154,81,163,79],[154,82,163,80],[155,6,164,4],[155,13,164,11],[155,17,164,15],[156,4,165,2],[157,4,166,2],[158,0,167,0],[159,0,168,0],[160,0,169,0],[162,4,172,2,"onTouchesCancelled"],[162,22,172,20,"onTouchesCancelled"],[162,23,172,21,"callback"],[162,31,172,29],[162,33,172,31],[163,6,173,4],[163,10,173,8],[163,11,173,9,"config"],[163,17,173,15],[163,18,173,16,"needsPointerData"],[163,34,173,32],[163,37,173,35],[163,41,173,39],[164,6,174,4],[164,10,174,8],[164,11,174,9,"handlers"],[164,19,174,17],[164,20,174,18,"onTouchesCancelled"],[164,38,174,36],[164,41,174,39,"callback"],[164,49,174,47],[165,6,175,4],[165,10,175,8],[165,11,175,9,"handlers"],[165,19,175,17],[165,20,175,18,"isWorklet"],[165,29,175,27],[165,30,175,28,"CALLBACK_TYPE"],[165,43,175,41],[165,44,175,42,"TOUCHES_CANCELLED"],[165,61,175,59],[165,62,175,60],[165,65,175,63],[165,69,175,67],[165,70,175,68,"isWorklet"],[165,79,175,77],[165,80,175,78,"callback"],[165,88,175,86],[165,89,175,87],[166,6,176,4],[166,13,176,11],[166,17,176,15],[167,4,177,2],[168,4,178,2],[169,0,179,0],[170,0,180,0],[171,0,181,0],[172,0,182,0],[174,4,185,2,"enabled"],[174,11,185,9,"enabled"],[174,12,185,10,"enabled"],[174,19,185,17],[174,21,185,19],[175,6,186,4],[175,10,186,8],[175,11,186,9,"config"],[175,17,186,15],[175,18,186,16,"enabled"],[175,25,186,23],[175,28,186,26,"enabled"],[175,35,186,33],[176,6,187,4],[176,13,187,11],[176,17,187,15],[177,4,188,2],[178,4,189,2],[179,0,190,0],[180,0,191,0],[181,0,192,0],[182,0,193,0],[184,4,196,2,"shouldCancelWhenOutside"],[184,27,196,25,"shouldCancelWhenOutside"],[184,28,196,26,"value"],[184,33,196,31],[184,35,196,33],[185,6,197,4],[185,10,197,8],[185,11,197,9,"config"],[185,17,197,15],[185,18,197,16,"shouldCancelWhenOutside"],[185,41,197,39],[185,44,197,42,"value"],[185,49,197,47],[186,6,198,4],[186,13,198,11],[186,17,198,15],[187,4,199,2],[188,4,200,2],[189,0,201,0],[190,0,202,0],[191,0,203,0],[192,0,204,0],[193,0,205,0],[195,4,208,2,"hitSlop"],[195,11,208,9,"hitSlop"],[195,12,208,10,"hitSlop"],[195,19,208,17],[195,21,208,19],[196,6,209,4],[196,10,209,8],[196,11,209,9,"config"],[196,17,209,15],[196,18,209,16,"hitSlop"],[196,25,209,23],[196,28,209,26,"hitSlop"],[196,35,209,33],[197,6,210,4],[197,13,210,11],[197,17,210,15],[198,4,211,2],[199,4,212,2],[200,0,213,0],[201,0,214,0],[202,0,215,0],[203,0,216,0],[204,0,217,0],[206,4,220,2,"activeCursor"],[206,16,220,14,"activeCursor"],[206,17,220,15,"activeCursor"],[206,29,220,27],[206,31,220,29],[207,6,221,4],[207,10,221,8],[207,11,221,9,"config"],[207,17,221,15],[207,18,221,16,"activeCursor"],[207,30,221,28],[207,33,221,31,"activeCursor"],[207,45,221,43],[208,6,222,4],[208,13,222,11],[208,17,222,15],[209,4,223,2],[210,4,224,2],[211,0,225,0],[212,0,226,0],[213,0,227,0],[214,0,228,0],[215,0,229,0],[216,0,230,0],[217,0,231,0],[219,4,234,2,"mouseButton"],[219,15,234,13,"mouseButton"],[219,16,234,14,"mouseButton"],[219,27,234,25],[219,29,234,27],[220,6,235,4],[220,10,235,8],[220,11,235,9,"config"],[220,17,235,15],[220,18,235,16,"mouseButton"],[220,29,235,27],[220,32,235,30,"mouseButton"],[220,43,235,41],[221,6,236,4],[221,13,236,11],[221,17,236,15],[222,4,237,2],[223,4,238,2],[224,0,239,0],[225,0,240,0],[226,0,241,0],[227,0,242,0],[228,0,243,0],[230,4,246,2,"runOnJS"],[230,11,246,9,"runOnJS"],[230,12,246,10,"runOnJS"],[230,19,246,17],[230,21,246,19],[231,6,247,4],[231,10,247,8],[231,11,247,9,"config"],[231,17,247,15],[231,18,247,16,"runOnJS"],[231,25,247,23],[231,28,247,26,"runOnJS"],[231,35,247,33],[232,6,248,4],[232,13,248,11],[232,17,248,15],[233,4,249,2],[234,4,250,2],[235,0,251,0],[236,0,252,0],[237,0,253,0],[238,0,254,0],[240,4,257,2,"simultaneousWithExternalGesture"],[240,35,257,33,"simultaneousWithExternalGesture"],[240,36,257,34],[240,39,257,37,"gestures"],[240,47,257,45],[240,49,257,47],[241,6,258,4],[241,11,258,9],[241,17,258,15,"gesture"],[241,24,258,22],[241,28,258,26,"gestures"],[241,36,258,34],[241,38,258,36],[242,8,259,6],[242,12,259,10],[242,13,259,11,"addDependency"],[242,26,259,24],[242,27,259,25],[242,45,259,43],[242,47,259,45,"gesture"],[242,54,259,52],[242,55,259,53],[243,6,260,4],[244,6,262,4],[244,13,262,11],[244,17,262,15],[245,4,263,2],[246,4,264,2],[247,0,265,0],[248,0,266,0],[249,0,267,0],[250,0,268,0],[252,4,271,2,"requireExternalGestureToFail"],[252,32,271,30,"requireExternalGestureToFail"],[252,33,271,31],[252,36,271,34,"gestures"],[252,44,271,42],[252,46,271,44],[253,6,272,4],[253,11,272,9],[253,17,272,15,"gesture"],[253,24,272,22],[253,28,272,26,"gestures"],[253,36,272,34],[253,38,272,36],[254,8,273,6],[254,12,273,10],[254,13,273,11,"addDependency"],[254,26,273,24],[254,27,273,25],[254,42,273,40],[254,44,273,42,"gesture"],[254,51,273,49],[254,52,273,50],[255,6,274,4],[256,6,276,4],[256,13,276,11],[256,17,276,15],[257,4,277,2],[258,4,278,2],[259,0,279,0],[260,0,280,0],[261,0,281,0],[262,0,282,0],[264,4,285,2,"blocksExternalGesture"],[264,25,285,23,"blocksExternalGesture"],[264,26,285,24],[264,29,285,27,"gestures"],[264,37,285,35],[264,39,285,37],[265,6,286,4],[265,11,286,9],[265,17,286,15,"gesture"],[265,24,286,22],[265,28,286,26,"gestures"],[265,36,286,34],[265,38,286,36],[266,8,287,6],[266,12,287,10],[266,13,287,11,"addDependency"],[266,26,287,24],[266,27,287,25],[266,43,287,41],[266,45,287,43,"gesture"],[266,52,287,50],[266,53,287,51],[267,6,288,4],[268,6,290,4],[268,13,290,11],[268,17,290,15],[269,4,291,2],[270,4,292,2],[271,0,293,0],[272,0,294,0],[273,0,295,0],[275,4,298,2,"withTestId"],[275,14,298,12,"withTestId"],[275,15,298,13,"id"],[275,17,298,15],[275,19,298,17],[276,6,299,4],[276,10,299,8],[276,11,299,9,"config"],[276,17,299,15],[276,18,299,16,"testId"],[276,24,299,22],[276,27,299,25,"id"],[276,29,299,27],[277,6,300,4],[277,13,300,11],[277,17,300,15],[278,4,301,2],[279,4,302,2],[280,0,303,0],[281,0,304,0],[282,0,305,0],[283,0,306,0],[284,0,307,0],[286,4,310,2,"cancelsTouchesInView"],[286,24,310,22,"cancelsTouchesInView"],[286,25,310,23,"value"],[286,30,310,28],[286,32,310,30],[287,6,311,4],[287,10,311,8],[287,11,311,9,"config"],[287,17,311,15],[287,18,311,16,"cancelsTouchesInView"],[287,38,311,36],[287,41,311,39,"value"],[287,46,311,44],[288,6,312,4],[288,13,312,11],[288,17,312,15],[289,4,313,2],[290,4,315,2,"initialize"],[290,14,315,12,"initialize"],[290,15,315,12],[290,17,315,15],[291,6,316,4],[291,10,316,8],[291,11,316,9,"handlerTag"],[291,21,316,19],[291,24,316,22],[291,25,316,23],[291,26,316,24],[291,28,316,26,"_getNextHandlerTag"],[291,46,316,44],[291,47,316,45,"getNextHandlerTag"],[291,64,316,62],[291,66,316,64],[291,67,316,65],[292,6,317,4],[292,10,317,8],[292,11,317,9,"handlers"],[292,19,317,17],[292,22,317,20],[293,8,317,22],[293,11,317,25],[293,15,317,29],[293,16,317,30,"handlers"],[293,24,317,38],[294,8,318,6,"handlerTag"],[294,18,318,16],[294,20,318,18],[294,24,318,22],[294,25,318,23,"handlerTag"],[295,6,319,4],[295,7,319,5],[296,6,321,4],[296,10,321,8],[296,14,321,12],[296,15,321,13,"config"],[296,21,321,19],[296,22,321,20,"ref"],[296,25,321,23],[296,27,321,25],[297,8,322,6],[297,12,322,10],[297,13,322,11,"config"],[297,19,322,17],[297,20,322,18,"ref"],[297,23,322,21],[297,24,322,22,"current"],[297,31,322,29],[297,34,322,32],[297,38,322,36],[298,6,323,4],[299,4,324,2],[300,4,326,2,"toGestureArray"],[300,18,326,16,"toGestureArray"],[300,19,326,16],[300,21,326,19],[301,6,327,4],[301,13,327,11],[301,14,327,12],[301,18,327,16],[301,19,327,17],[302,4,328,2],[302,5,328,3],[302,6,328,4],[304,4,331,2,"prepare"],[304,11,331,9,"prepare"],[304,12,331,9],[304,14,331,12],[304,15,331,13],[305,4,333,2],[305,8,333,6,"shouldUseReanimated"],[305,27,333,25,"shouldUseReanimated"],[305,28,333,25],[305,30,333,28],[306,6,334,4],[307,6,335,4],[308,6,336,4],[309,6,337,4],[309,13,337,11],[309,17,337,15],[309,18,337,16,"config"],[309,24,337,22],[309,25,337,23,"runOnJS"],[309,32,337,30],[309,37,337,35],[309,41,337,39],[309,45,337,43],[309,46,337,44],[309,50,337,48],[309,51,337,49,"handlers"],[309,59,337,57],[309,60,337,58,"isWorklet"],[309,69,337,67],[309,70,337,68,"includes"],[309,78,337,76],[309,79,337,77],[309,84,337,82],[309,85,337,83],[309,89,337,87],[309,90,337,88],[309,91,337,89],[309,92,337,90],[309,94,337,92,"_utils"],[309,100,337,98],[309,101,337,99,"isRemoteDebuggingEnabled"],[309,125,337,123],[309,127,337,125],[309,128,337,126],[310,4,338,2],[311,2,340,0],[312,2,342,0,"exports"],[312,9,342,7],[312,10,342,8,"BaseGesture"],[312,21,342,19],[312,24,342,22,"BaseGesture"],[312,35,342,33],[313,2,344,0],[313,8,344,6,"ContinousBaseGesture"],[313,28,344,26],[313,37,344,35,"BaseGesture"],[313,48,344,46],[313,49,344,47],[314,4,345,2],[315,0,346,0],[316,0,347,0],[317,0,348,0],[318,4,349,2,"onUpdate"],[318,12,349,10,"onUpdate"],[318,13,349,11,"callback"],[318,21,349,19],[318,23,349,21],[319,6,350,4],[319,10,350,8],[319,11,350,9,"handlers"],[319,19,350,17],[319,20,350,18,"onUpdate"],[319,28,350,26],[319,31,350,29,"callback"],[319,39,350,37],[320,6,351,4],[320,10,351,8],[320,11,351,9,"handlers"],[320,19,351,17],[320,20,351,18,"isWorklet"],[320,29,351,27],[320,30,351,28,"CALLBACK_TYPE"],[320,43,351,41],[320,44,351,42,"UPDATE"],[320,50,351,48],[320,51,351,49],[320,54,351,52],[320,58,351,56],[320,59,351,57,"isWorklet"],[320,68,351,66],[320,69,351,67,"callback"],[320,77,351,75],[320,78,351,76],[321,6,352,4],[321,13,352,11],[321,17,352,15],[322,4,353,2],[323,4,354,2],[324,0,355,0],[325,0,356,0],[326,0,357,0],[327,0,358,0],[329,4,361,2,"onChange"],[329,12,361,10,"onChange"],[329,13,361,11,"callback"],[329,21,361,19],[329,23,361,21],[330,6,362,4],[330,10,362,8],[330,11,362,9,"handlers"],[330,19,362,17],[330,20,362,18,"onChange"],[330,28,362,26],[330,31,362,29,"callback"],[330,39,362,37],[331,6,363,4],[331,10,363,8],[331,11,363,9,"handlers"],[331,19,363,17],[331,20,363,18,"isWorklet"],[331,29,363,27],[331,30,363,28,"CALLBACK_TYPE"],[331,43,363,41],[331,44,363,42,"CHANGE"],[331,50,363,48],[331,51,363,49],[331,54,363,52],[331,58,363,56],[331,59,363,57,"isWorklet"],[331,68,363,66],[331,69,363,67,"callback"],[331,77,363,75],[331,78,363,76],[332,6,364,4],[332,13,364,11],[332,17,364,15],[333,4,365,2],[334,4,366,2],[335,0,367,0],[336,0,368,0],[337,0,369,0],[338,0,370,0],[340,4,373,2,"manualActivation"],[340,20,373,18,"manualActivation"],[340,21,373,19,"manualActivation"],[340,37,373,35],[340,39,373,37],[341,6,374,4],[341,10,374,8],[341,11,374,9,"config"],[341,17,374,15],[341,18,374,16,"manualActivation"],[341,34,374,32],[341,37,374,35,"manualActivation"],[341,53,374,51],[342,6,375,4],[342,13,375,11],[342,17,375,15],[343,4,376,2],[344,2,378,0],[345,2,380,0,"exports"],[345,9,380,7],[345,10,380,8,"ContinousBaseGesture"],[345,30,380,28],[345,33,380,31,"ContinousBaseGesture"],[345,53,380,51],[346,0,380,52],[346,3]],"functionMap":{"names":["<global>","_defineProperty","Gesture","BaseGesture","BaseGesture#constructor","BaseGesture#addDependency","BaseGesture#withRef","BaseGesture#isWorklet","BaseGesture#onBegin","BaseGesture#onStart","BaseGesture#onEnd","BaseGesture#onFinalize","BaseGesture#onTouchesDown","BaseGesture#onTouchesMove","BaseGesture#onTouchesUp","BaseGesture#onTouchesCancelled","BaseGesture#enabled","BaseGesture#shouldCancelWhenOutside","BaseGesture#hitSlop","BaseGesture#activeCursor","BaseGesture#mouseButton","BaseGesture#runOnJS","BaseGesture#simultaneousWithExternalGesture","BaseGesture#requireExternalGestureToFail","BaseGesture#blocksExternalGesture","BaseGesture#withTestId","BaseGesture#cancelsTouchesInView","BaseGesture#initialize","BaseGesture#toGestureArray","BaseGesture#prepare","BaseGesture#get__shouldUseReanimated","ContinousBaseGesture","ContinousBaseGesture#onUpdate","ContinousBaseGesture#onChange","ContinousBaseGesture#manualActivation"],"mappings":"AAA;ACW,iND;AEmB,gBF;AGK;ECC;GDuB;EEE;GFG;EGO;GHG;EIG;GJG;EKQ;GLI;EMO;GNI;EOQ;GPK;EQO;GRK;ESO;GTK;EUO;GVK;EWO;GXK;EYO;GZK;EaQ;GbG;EcQ;GdG;EeS;GfG;EgBS;GhBG;EiBW;GjBG;EkBS;GlBG;EmBQ;GnBM;EoBQ;GpBM;EqBQ;GrBM;EsBO;GtBG;EuBS;GvBG;EwBE;GxBS;EyBE;GzBE;E0BG,Y1B;E2BE;G3BK;CHE;A+BI;ECK;GDI;EEQ;GFI;EGQ;GHG;C/BE"},"hasCjsExports":true},"type":"js/module"}]}