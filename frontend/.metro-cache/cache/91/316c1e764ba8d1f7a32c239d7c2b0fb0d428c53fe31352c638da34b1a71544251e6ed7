{"dependencies":[{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":56},"end":{"line":4,"column":55,"index":111}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"],"imports":1}},{"name":"../gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":112},"end":{"line":5,"column":41,"index":153}}],"key":"tAi+3DTq2/XlM2rT1I9X7ektuV0=","exportNames":["*"],"imports":1}},{"name":"../../FlingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":154},"end":{"line":6,"column":69,"index":223}}],"key":"m7drCniziiNjEu9Grhe6bV/AFd0=","exportNames":["*"],"imports":1}},{"name":"../../ForceTouchGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":224},"end":{"line":7,"column":79,"index":303}}],"key":"Zs82FqJFIcjv50A58P90bQbMZ6s=","exportNames":["*"],"imports":1}},{"name":"../../LongPressGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":304},"end":{"line":8,"column":77,"index":381}}],"key":"xLOe4E3z7HzpJ/yq6aTNrEbuZio=","exportNames":["*"],"imports":1}},{"name":"../../PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":382},"end":{"line":9,"column":101,"index":483}}],"key":"bk07O1d6H26279U6oqqnjaS7c4c=","exportNames":["*"],"imports":1}},{"name":"../../TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":484},"end":{"line":10,"column":65,"index":549}}],"key":"ZqoHIcC0SF6bf3AIHltJPu1k9xI=","exportNames":["*"],"imports":1}},{"name":"../hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":550},"end":{"line":11,"column":59,"index":609}}],"key":"2DA6Vfuec14INlrI/GwdOE0FAK4=","exportNames":["*"],"imports":1}},{"name":"../../NativeViewGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":610},"end":{"line":12,"column":79,"index":689}}],"key":"FiQaORn3aiHBJrGlJ2FeE26dr38=","exportNames":["*"],"imports":1}},{"name":"../../gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":690},"end":{"line":13,"column":81,"index":771}}],"key":"iYkm+MgDTErKT5jbMC97JfuzH7k=","exportNames":["*"],"imports":1}},{"name":"../../../EnableNewWebImplementation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":772},"end":{"line":14,"column":84,"index":856}}],"key":"eaIoOU9/v4mL1aA6FJZKxHzRNGE=","exportNames":["*"],"imports":1}},{"name":"../../../RNRenderer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":857},"end":{"line":15,"column":49,"index":906}}],"key":"dd5GIUVDNjn2BlVM36KIcGPscVA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":907},"end":{"line":16,"column":54,"index":961}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":962},"end":{"line":17,"column":50,"index":1012}}],"key":"55E8XkeO+dzLnJh3bfoVrgRwD58=","exportNames":["*"],"imports":1}},{"name":"../eventReceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1013},"end":{"line":18,"column":57,"index":1070}}],"key":"5nSvdaEKN+h/ZTz2T/BGCtOX48A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"ALLOWED_PROPS\", {\n    enumerable: true,\n    get: function () {\n      return ALLOWED_PROPS;\n    }\n  });\n  exports.extractGestureRelations = extractGestureRelations;\n  exports.checkGestureCallbacksForWorklets = checkGestureCallbacksForWorklets;\n  exports.validateDetectorChildren = validateDetectorChildren;\n  exports.useForceRender = useForceRender;\n  exports.useWebEventHandlers = useWebEventHandlers;\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[0], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _utils = require(_dependencyMap[1], \"../../../utils\");\n  var _gesture = require(_dependencyMap[2], \"../gesture\");\n  var _FlingGestureHandler = require(_dependencyMap[3], \"../../FlingGestureHandler\");\n  var _ForceTouchGestureHandler = require(_dependencyMap[4], \"../../ForceTouchGestureHandler\");\n  var _LongPressGestureHandler = require(_dependencyMap[5], \"../../LongPressGestureHandler\");\n  var _PanGestureHandler = require(_dependencyMap[6], \"../../PanGestureHandler\");\n  var _TapGestureHandler = require(_dependencyMap[7], \"../../TapGestureHandler\");\n  var _hoverGesture = require(_dependencyMap[8], \"../hoverGesture\");\n  var _NativeViewGestureHandler = require(_dependencyMap[9], \"../../NativeViewGestureHandler\");\n  var _gestureHandlerCommon = require(_dependencyMap[10], \"../../gestureHandlerCommon\");\n  var _EnableNewWebImplementation = require(_dependencyMap[11], \"../../../EnableNewWebImplementation\");\n  var _RNRenderer = require(_dependencyMap[12], \"../../../RNRenderer\");\n  var _react = require(_dependencyMap[13], \"react\");\n  var _reanimatedWrapper = require(_dependencyMap[14], \"../reanimatedWrapper\");\n  var _eventReceiver = require(_dependencyMap[15], \"../eventReceiver\");\n  const ALLOWED_PROPS = [..._gestureHandlerCommon.baseGestureHandlerWithDetectorProps, ..._TapGestureHandler.tapGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerCustomNativeProps, ..._LongPressGestureHandler.longPressGestureHandlerProps, ..._ForceTouchGestureHandler.forceTouchGestureHandlerProps, ..._FlingGestureHandler.flingGestureHandlerProps, ..._hoverGesture.hoverGestureHandlerProps, ..._NativeViewGestureHandler.nativeViewGestureHandlerProps];\n  function convertToHandlerTag(ref) {\n    if (typeof ref === 'number') {\n      return ref;\n    } else if (ref instanceof _gesture.BaseGesture) {\n      return ref.handlerTag;\n    } else {\n      // @ts-ignore in this case it should be a ref either to gesture object or\n      // a gesture handler component, in both cases handlerTag property exists\n      return ref.current?.handlerTag ?? -1;\n    }\n  }\n  function extractValidHandlerTags(interactionGroup) {\n    return interactionGroup?.map(convertToHandlerTag)?.filter(tag => tag > 0) ?? [];\n  }\n  function extractGestureRelations(gesture) {\n    const requireToFail = extractValidHandlerTags(gesture.config.requireToFail);\n    const simultaneousWith = extractValidHandlerTags(gesture.config.simultaneousWith);\n    const blocksHandlers = extractValidHandlerTags(gesture.config.blocksHandlers);\n    return {\n      waitFor: requireToFail,\n      simultaneousHandlers: simultaneousWith,\n      blocksHandlers: blocksHandlers\n    };\n  }\n  function checkGestureCallbacksForWorklets(gesture) {\n    if (!__DEV__) {\n      return;\n    }\n    // If a gesture is explicitly marked to run on the JS thread there is no need to check\n    // if callbacks are worklets as the user is aware they will be ran on the JS thread\n    if (gesture.config.runOnJS) {\n      return;\n    }\n    const areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n    const areSomeWorklets = gesture.handlers.isWorklet.includes(true);\n\n    // If some of the callbacks are worklets and some are not, and the gesture is not\n    // explicitly marked with `.runOnJS(true)` show an error\n    if (areSomeNotWorklets && areSomeWorklets) {\n      console.error((0, _utils.tagMessage)(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n    }\n    if (_reanimatedWrapper.Reanimated === undefined) {\n      // If Reanimated is not available, we can't run worklets, so we shouldn't show the warning\n      return;\n    }\n    const areAllNotWorklets = !areSomeWorklets && areSomeNotWorklets;\n    // If none of the callbacks are worklets and the gesture is not explicitly marked with\n    // `.runOnJS(true)` show a warning\n    if (areAllNotWorklets && !(0, _utils.isTestEnv)()) {\n      console.warn((0, _utils.tagMessage)(`None of the callbacks in the gesture are worklets. If you wish to run them on the JS thread use '.runOnJS(true)' modifier on the gesture to make this explicit. Otherwise, mark the callbacks as 'worklet' to run them on the UI thread.`));\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function validateDetectorChildren(ref) {\n    // Finds the first native view under the Wrap component and traverses the fiber tree upwards\n    // to check whether there is more than one native view as a pseudo-direct child of GestureDetector\n    // i.e. this is not ok:\n    //            Wrap\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    //\n    // but this is fine:\n    //            Wrap\n    //             |\n    //         NativeView\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    if (__DEV__ && Platform.default.OS !== 'web') {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const wrapType =\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternals.elementType;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      let instance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      while (instance && instance.elementType !== wrapType) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (instance.sibling) {\n          throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        instance = instance.return;\n      }\n    }\n  }\n  function useForceRender() {\n    const [renderState, setRenderState] = (0, _react.useState)(false);\n    const forceRender = (0, _react.useCallback)(() => {\n      setRenderState(!renderState);\n    }, [renderState, setRenderState]);\n    return forceRender;\n  }\n  function useWebEventHandlers() {\n    return (0, _react.useRef)({\n      onGestureHandlerEvent: e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      },\n      onGestureHandlerStateChange: (0, _EnableNewWebImplementation.isNewWebImplementationEnabled)() ? e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      } : undefined\n    });\n  }\n});","lineCount":155,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,19,0,"Object"],[12,8,19,0],[12,9,19,0,"defineProperty"],[12,23,19,0],[12,24,19,0,"exports"],[12,31,19,0],[13,4,19,0,"enumerable"],[13,14,19,0],[14,4,19,0,"get"],[14,7,19,0],[14,18,19,0,"get"],[14,19,19,0],[15,6,19,0],[15,13,19,0,"ALLOWED_PROPS"],[15,26,19,0],[16,4,19,0],[17,2,19,0],[18,2,34,0,"exports"],[18,9,34,0],[18,10,34,0,"extractGestureRelations"],[18,33,34,0],[18,36,34,0,"extractGestureRelations"],[18,59,34,0],[19,2,44,0,"exports"],[19,9,44,0],[19,10,44,0,"checkGestureCallbacksForWorklets"],[19,42,44,0],[19,45,44,0,"checkGestureCallbacksForWorklets"],[19,77,44,0],[20,2,74,0,"exports"],[20,9,74,0],[20,10,74,0,"validateDetectorChildren"],[20,34,74,0],[20,37,74,0,"validateDetectorChildren"],[20,61,74,0],[21,2,117,0,"exports"],[21,9,117,0],[21,10,117,0,"useForceRender"],[21,24,117,0],[21,27,117,0,"useForceRender"],[21,41,117,0],[22,2,124,0,"exports"],[22,9,124,0],[22,10,124,0,"useWebEventHandlers"],[22,29,124,0],[22,32,124,0,"useWebEventHandlers"],[22,51,124,0],[23,2,133,1],[23,6,133,1,"_reactNativeWebDistExportsPlatform"],[23,40,133,1],[23,43,133,1,"require"],[23,50,133,1],[23,51,133,1,"_dependencyMap"],[23,65,133,1],[24,2,133,1],[24,6,133,1,"Platform"],[24,14,133,1],[24,17,133,1,"_interopDefault"],[24,32,133,1],[24,33,133,1,"_reactNativeWebDistExportsPlatform"],[24,67,133,1],[25,2,4,0],[25,6,4,0,"_utils"],[25,12,4,0],[25,15,4,0,"require"],[25,22,4,0],[25,23,4,0,"_dependencyMap"],[25,37,4,0],[26,2,5,0],[26,6,5,0,"_gesture"],[26,14,5,0],[26,17,5,0,"require"],[26,24,5,0],[26,25,5,0,"_dependencyMap"],[26,39,5,0],[27,2,6,0],[27,6,6,0,"_FlingGestureHandler"],[27,26,6,0],[27,29,6,0,"require"],[27,36,6,0],[27,37,6,0,"_dependencyMap"],[27,51,6,0],[28,2,7,0],[28,6,7,0,"_ForceTouchGestureHandler"],[28,31,7,0],[28,34,7,0,"require"],[28,41,7,0],[28,42,7,0,"_dependencyMap"],[28,56,7,0],[29,2,8,0],[29,6,8,0,"_LongPressGestureHandler"],[29,30,8,0],[29,33,8,0,"require"],[29,40,8,0],[29,41,8,0,"_dependencyMap"],[29,55,8,0],[30,2,9,0],[30,6,9,0,"_PanGestureHandler"],[30,24,9,0],[30,27,9,0,"require"],[30,34,9,0],[30,35,9,0,"_dependencyMap"],[30,49,9,0],[31,2,10,0],[31,6,10,0,"_TapGestureHandler"],[31,24,10,0],[31,27,10,0,"require"],[31,34,10,0],[31,35,10,0,"_dependencyMap"],[31,49,10,0],[32,2,11,0],[32,6,11,0,"_hoverGesture"],[32,19,11,0],[32,22,11,0,"require"],[32,29,11,0],[32,30,11,0,"_dependencyMap"],[32,44,11,0],[33,2,12,0],[33,6,12,0,"_NativeViewGestureHandler"],[33,31,12,0],[33,34,12,0,"require"],[33,41,12,0],[33,42,12,0,"_dependencyMap"],[33,56,12,0],[34,2,13,0],[34,6,13,0,"_gestureHandlerCommon"],[34,27,13,0],[34,30,13,0,"require"],[34,37,13,0],[34,38,13,0,"_dependencyMap"],[34,52,13,0],[35,2,14,0],[35,6,14,0,"_EnableNewWebImplementation"],[35,33,14,0],[35,36,14,0,"require"],[35,43,14,0],[35,44,14,0,"_dependencyMap"],[35,58,14,0],[36,2,15,0],[36,6,15,0,"_RNRenderer"],[36,17,15,0],[36,20,15,0,"require"],[36,27,15,0],[36,28,15,0,"_dependencyMap"],[36,42,15,0],[37,2,16,0],[37,6,16,0,"_react"],[37,12,16,0],[37,15,16,0,"require"],[37,22,16,0],[37,23,16,0,"_dependencyMap"],[37,37,16,0],[38,2,17,0],[38,6,17,0,"_reanimatedWrapper"],[38,24,17,0],[38,27,17,0,"require"],[38,34,17,0],[38,35,17,0,"_dependencyMap"],[38,49,17,0],[39,2,18,0],[39,6,18,0,"_eventReceiver"],[39,20,18,0],[39,23,18,0,"require"],[39,30,18,0],[39,31,18,0,"_dependencyMap"],[39,45,18,0],[40,2,19,7],[40,8,19,13,"ALLOWED_PROPS"],[40,21,19,26],[40,24,19,29],[40,25,19,30],[40,28,19,33,"baseGestureHandlerWithDetectorProps"],[40,49,19,68],[40,50,19,68,"baseGestureHandlerWithDetectorProps"],[40,85,19,68],[40,87,19,70],[40,90,19,73,"tapGestureHandlerProps"],[40,108,19,95],[40,109,19,95,"tapGestureHandlerProps"],[40,131,19,95],[40,133,19,97],[40,136,19,100,"panGestureHandlerProps"],[40,154,19,122],[40,155,19,122,"panGestureHandlerProps"],[40,177,19,122],[40,179,19,124],[40,182,19,127,"panGestureHandlerCustomNativeProps"],[40,200,19,161],[40,201,19,161,"panGestureHandlerCustomNativeProps"],[40,235,19,161],[40,237,19,163],[40,240,19,166,"longPressGestureHandlerProps"],[40,264,19,194],[40,265,19,194,"longPressGestureHandlerProps"],[40,293,19,194],[40,295,19,196],[40,298,19,199,"forceTouchGestureHandlerProps"],[40,323,19,228],[40,324,19,228,"forceTouchGestureHandlerProps"],[40,353,19,228],[40,355,19,230],[40,358,19,233,"flingGestureHandlerProps"],[40,378,19,257],[40,379,19,257,"flingGestureHandlerProps"],[40,403,19,257],[40,405,19,259],[40,408,19,262,"hoverGestureHandlerProps"],[40,421,19,286],[40,422,19,286,"hoverGestureHandlerProps"],[40,446,19,286],[40,448,19,288],[40,451,19,291,"nativeViewGestureHandlerProps"],[40,476,19,320],[40,477,19,320,"nativeViewGestureHandlerProps"],[40,506,19,320],[40,507,19,321],[41,2,20,0],[41,11,20,9,"convertToHandlerTag"],[41,30,20,28,"convertToHandlerTag"],[41,31,20,29,"ref"],[41,34,20,32],[41,36,20,34],[42,4,21,2],[42,8,21,6],[42,15,21,13,"ref"],[42,18,21,16],[42,23,21,21],[42,31,21,29],[42,33,21,31],[43,6,22,4],[43,13,22,11,"ref"],[43,16,22,14],[44,4,23,2],[44,5,23,3],[44,11,23,9],[44,15,23,13,"ref"],[44,18,23,16],[44,30,23,28,"BaseGesture"],[44,38,23,39],[44,39,23,39,"BaseGesture"],[44,50,23,39],[44,52,23,41],[45,6,24,4],[45,13,24,11,"ref"],[45,16,24,14],[45,17,24,15,"handlerTag"],[45,27,24,25],[46,4,25,2],[46,5,25,3],[46,11,25,9],[47,6,26,4],[48,6,27,4],[49,6,28,4],[49,13,28,11,"ref"],[49,16,28,14],[49,17,28,15,"current"],[49,24,28,22],[49,26,28,24,"handlerTag"],[49,36,28,34],[49,40,28,38],[49,41,28,39],[49,42,28,40],[50,4,29,2],[51,2,30,0],[52,2,31,0],[52,11,31,9,"extractValidHandlerTags"],[52,34,31,32,"extractValidHandlerTags"],[52,35,31,33,"interactionGroup"],[52,51,31,49],[52,53,31,51],[53,4,32,2],[53,11,32,9,"interactionGroup"],[53,27,32,25],[53,29,32,27,"map"],[53,32,32,30],[53,33,32,31,"convertToHandlerTag"],[53,52,32,50],[53,53,32,51],[53,55,32,53,"filter"],[53,61,32,59],[53,62,32,60,"tag"],[53,65,32,63],[53,69,32,67,"tag"],[53,72,32,70],[53,75,32,73],[53,76,32,74],[53,77,32,75],[53,81,32,79],[53,83,32,81],[54,2,33,0],[55,2,34,7],[55,11,34,16,"extractGestureRelations"],[55,34,34,39,"extractGestureRelations"],[55,35,34,40,"gesture"],[55,42,34,47],[55,44,34,49],[56,4,35,2],[56,10,35,8,"requireToFail"],[56,23,35,21],[56,26,35,24,"extractValidHandlerTags"],[56,49,35,47],[56,50,35,48,"gesture"],[56,57,35,55],[56,58,35,56,"config"],[56,64,35,62],[56,65,35,63,"requireToFail"],[56,78,35,76],[56,79,35,77],[57,4,36,2],[57,10,36,8,"simultaneousWith"],[57,26,36,24],[57,29,36,27,"extractValidHandlerTags"],[57,52,36,50],[57,53,36,51,"gesture"],[57,60,36,58],[57,61,36,59,"config"],[57,67,36,65],[57,68,36,66,"simultaneousWith"],[57,84,36,82],[57,85,36,83],[58,4,37,2],[58,10,37,8,"blocksHandlers"],[58,24,37,22],[58,27,37,25,"extractValidHandlerTags"],[58,50,37,48],[58,51,37,49,"gesture"],[58,58,37,56],[58,59,37,57,"config"],[58,65,37,63],[58,66,37,64,"blocksHandlers"],[58,80,37,78],[58,81,37,79],[59,4,38,2],[59,11,38,9],[60,6,39,4,"waitFor"],[60,13,39,11],[60,15,39,13,"requireToFail"],[60,28,39,26],[61,6,40,4,"simultaneousHandlers"],[61,26,40,24],[61,28,40,26,"simultaneousWith"],[61,44,40,42],[62,6,41,4,"blocksHandlers"],[62,20,41,18],[62,22,41,20,"blocksHandlers"],[63,4,42,2],[63,5,42,3],[64,2,43,0],[65,2,44,7],[65,11,44,16,"checkGestureCallbacksForWorklets"],[65,43,44,48,"checkGestureCallbacksForWorklets"],[65,44,44,49,"gesture"],[65,51,44,56],[65,53,44,58],[66,4,45,2],[66,8,45,6],[66,9,45,7,"__DEV__"],[66,16,45,14],[66,18,45,16],[67,6,46,4],[68,4,47,2],[69,4,48,2],[70,4,49,2],[71,4,50,2],[71,8,50,6,"gesture"],[71,15,50,13],[71,16,50,14,"config"],[71,22,50,20],[71,23,50,21,"runOnJS"],[71,30,50,28],[71,32,50,30],[72,6,51,4],[73,4,52,2],[74,4,53,2],[74,10,53,8,"areSomeNotWorklets"],[74,28,53,26],[74,31,53,29,"gesture"],[74,38,53,36],[74,39,53,37,"handlers"],[74,47,53,45],[74,48,53,46,"isWorklet"],[74,57,53,55],[74,58,53,56,"includes"],[74,66,53,64],[74,67,53,65],[74,72,53,70],[74,73,53,71],[75,4,54,2],[75,10,54,8,"areSomeWorklets"],[75,25,54,23],[75,28,54,26,"gesture"],[75,35,54,33],[75,36,54,34,"handlers"],[75,44,54,42],[75,45,54,43,"isWorklet"],[75,54,54,52],[75,55,54,53,"includes"],[75,63,54,61],[75,64,54,62],[75,68,54,66],[75,69,54,67],[77,4,56,2],[78,4,57,2],[79,4,58,2],[79,8,58,6,"areSomeNotWorklets"],[79,26,58,24],[79,30,58,28,"areSomeWorklets"],[79,45,58,43],[79,47,58,45],[80,6,59,4,"console"],[80,13,59,11],[80,14,59,12,"error"],[80,19,59,17],[80,20,59,18],[80,24,59,18,"tagMessage"],[80,30,59,28],[80,31,59,28,"tagMessage"],[80,41,59,28],[80,43,59,29],[80,310,59,296],[80,311,59,297],[80,312,59,298],[81,4,60,2],[82,4,61,2],[82,8,61,6,"Reanimated"],[82,26,61,16],[82,27,61,16,"Reanimated"],[82,37,61,16],[82,42,61,21,"undefined"],[82,51,61,30],[82,53,61,32],[83,6,62,4],[84,6,63,4],[85,4,64,2],[86,4,65,2],[86,10,65,8,"areAllNotWorklets"],[86,27,65,25],[86,30,65,28],[86,31,65,29,"areSomeWorklets"],[86,46,65,44],[86,50,65,48,"areSomeNotWorklets"],[86,68,65,66],[87,4,66,2],[88,4,67,2],[89,4,68,2],[89,8,68,6,"areAllNotWorklets"],[89,25,68,23],[89,29,68,27],[89,30,68,28],[89,34,68,28,"isTestEnv"],[89,40,68,37],[89,41,68,37,"isTestEnv"],[89,50,68,37],[89,52,68,38],[89,53,68,39],[89,55,68,41],[90,6,69,4,"console"],[90,13,69,11],[90,14,69,12,"warn"],[90,18,69,16],[90,19,69,17],[90,23,69,17,"tagMessage"],[90,29,69,27],[90,30,69,27,"tagMessage"],[90,40,69,27],[90,42,69,28],[90,276,69,262],[90,277,69,263],[90,278,69,264],[91,4,70,2],[92,2,71,0],[94,2,73,0],[95,2,74,7],[95,11,74,16,"validateDetectorChildren"],[95,35,74,40,"validateDetectorChildren"],[95,36,74,41,"ref"],[95,39,74,44],[95,41,74,46],[96,4,75,2],[97,4,76,2],[98,4,77,2],[99,4,78,2],[100,4,79,2],[101,4,80,2],[102,4,81,2],[103,4,82,2],[104,4,83,2],[105,4,84,2],[106,4,85,2],[107,4,86,2],[108,4,87,2],[109,4,88,2],[110,4,89,2],[111,4,90,2],[112,4,91,2],[113,4,92,2],[114,4,93,2],[115,4,94,2],[116,4,95,2],[117,4,96,2],[117,8,96,6,"__DEV__"],[117,15,96,13],[117,19,96,17,"Platform"],[117,27,96,25],[117,28,96,25,"default"],[117,35,96,25],[117,36,96,26,"OS"],[117,38,96,28],[117,43,96,33],[117,48,96,38],[117,50,96,40],[118,6,97,4],[119,6,98,4],[119,12,98,10,"wrapType"],[119,20,98,18],[120,6,99,4],[121,6,100,4,"ref"],[121,9,100,7],[121,10,100,8,"_reactInternals"],[121,25,100,23],[121,26,100,24,"elementType"],[121,37,100,35],[123,6,102,4],[124,6,103,4],[124,10,103,8,"instance"],[124,18,103,16],[124,21,103,19,"RNRenderer"],[124,32,103,29],[124,33,103,29,"RNRenderer"],[124,43,103,29],[124,44,103,30,"findHostInstance_DEPRECATED"],[124,71,103,57],[124,72,103,58,"ref"],[124,75,103,61],[124,76,103,62],[124,77,103,63,"_internalFiberInstanceHandleDEV"],[124,108,103,94],[126,6,105,4],[127,6,106,4],[127,13,106,11,"instance"],[127,21,106,19],[127,25,106,23,"instance"],[127,33,106,31],[127,34,106,32,"elementType"],[127,45,106,43],[127,50,106,48,"wrapType"],[127,58,106,56],[127,60,106,58],[128,8,107,6],[129,8,108,6],[129,12,108,10,"instance"],[129,20,108,18],[129,21,108,19,"sibling"],[129,28,108,26],[129,30,108,28],[130,10,109,8],[130,16,109,14],[130,20,109,18,"Error"],[130,25,109,23],[130,26,109,24],[130,269,109,267],[130,270,109,268],[131,8,110,6],[133,8,112,6],[134,8,113,6,"instance"],[134,16,113,14],[134,19,113,17,"instance"],[134,27,113,25],[134,28,113,26,"return"],[134,34,113,32],[135,6,114,4],[136,4,115,2],[137,2,116,0],[138,2,117,7],[138,11,117,16,"useForceRender"],[138,25,117,30,"useForceRender"],[138,26,117,30],[138,28,117,33],[139,4,118,2],[139,10,118,8],[139,11,118,9,"renderState"],[139,22,118,20],[139,24,118,22,"setRenderState"],[139,38,118,36],[139,39,118,37],[139,42,118,40],[139,46,118,40,"useState"],[139,52,118,48],[139,53,118,48,"useState"],[139,61,118,48],[139,63,118,49],[139,68,118,54],[139,69,118,55],[140,4,119,2],[140,10,119,8,"forceRender"],[140,21,119,19],[140,24,119,22],[140,28,119,22,"useCallback"],[140,34,119,33],[140,35,119,33,"useCallback"],[140,46,119,33],[140,48,119,34],[140,54,119,40],[141,6,120,4,"setRenderState"],[141,20,120,18],[141,21,120,19],[141,22,120,20,"renderState"],[141,33,120,31],[141,34,120,32],[142,4,121,2],[142,5,121,3],[142,7,121,5],[142,8,121,6,"renderState"],[142,19,121,17],[142,21,121,19,"setRenderState"],[142,35,121,33],[142,36,121,34],[142,37,121,35],[143,4,122,2],[143,11,122,9,"forceRender"],[143,22,122,20],[144,2,123,0],[145,2,124,7],[145,11,124,16,"useWebEventHandlers"],[145,30,124,35,"useWebEventHandlers"],[145,31,124,35],[145,33,124,38],[146,4,125,2],[146,11,125,9],[146,15,125,9,"useRef"],[146,21,125,15],[146,22,125,15,"useRef"],[146,28,125,15],[146,30,125,16],[147,6,126,4,"onGestureHandlerEvent"],[147,27,126,25],[147,29,126,27,"e"],[147,30,126,28],[147,34,126,32],[148,8,127,6],[148,12,127,6,"onGestureHandlerEvent"],[148,26,127,27],[148,27,127,27,"onGestureHandlerEvent"],[148,48,127,27],[148,50,127,28,"e"],[148,51,127,29],[148,52,127,30,"nativeEvent"],[148,63,127,41],[148,64,127,42],[149,6,128,4],[149,7,128,5],[150,6,129,4,"onGestureHandlerStateChange"],[150,33,129,31],[150,35,129,33],[150,39,129,33,"isNewWebImplementationEnabled"],[150,66,129,62],[150,67,129,62,"isNewWebImplementationEnabled"],[150,96,129,62],[150,98,129,63],[150,99,129,64],[150,102,129,67,"e"],[150,103,129,68],[150,107,129,72],[151,8,130,6],[151,12,130,6,"onGestureHandlerEvent"],[151,26,130,27],[151,27,130,27,"onGestureHandlerEvent"],[151,48,130,27],[151,50,130,28,"e"],[151,51,130,29],[151,52,130,30,"nativeEvent"],[151,63,130,41],[151,64,130,42],[152,6,131,4],[152,7,131,5],[152,10,131,8,"undefined"],[153,4,132,2],[153,5,132,3],[153,6,132,4],[154,2,133,0],[155,0,133,1],[155,3]],"functionMap":{"names":["<global>","convertToHandlerTag","extractValidHandlerTags","interactionGroup.map.filter$argument_0","extractGestureRelations","checkGestureCallbacksForWorklets","validateDetectorChildren","useForceRender","forceRender","useWebEventHandlers","useRef$argument_0.onGestureHandlerEvent","<anonymous>"],"mappings":"AAA;ACmB;CDU;AEC;4DCC,cD;CFC;OIC;CJS;OKC;CL2B;OMG;CN0C;OOC;kCCE;GDE;CPE;OSC;2BCE;KDE;mEEC;KFE;CTE"},"hasCjsExports":false},"type":"js/module"}]}