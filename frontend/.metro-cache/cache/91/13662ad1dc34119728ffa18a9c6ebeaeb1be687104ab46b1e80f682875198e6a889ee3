{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":62,"index":114}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":115},"end":{"line":5,"column":32,"index":147}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"shouldCancelWhenOutside\", \"maxDeltaX\", \"maxDeltaY\", \"numberOfTaps\", \"minDurationMs\", \"maxDelayMs\", \"maxDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _egjsHammerjs = require(_dependencyMap[1], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _DiscreteGestureHandler = require(_dependencyMap[2], \"./DiscreteGestureHandler\");\n  var DiscreteGestureHandler = _interopDefault(_DiscreteGestureHandler);\n  var _utils = require(_dependencyMap[3], \"./utils\");\n  class TapGestureHandler extends DiscreteGestureHandler.default {\n    _shouldFireEndEvent = null;\n    // TODO unused?\n    get name() {\n      return 'tap';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Tap;\n    }\n    get maxDelayMs() {\n      // @ts-ignore TODO(TS) trace down config\n      return (0, _utils.isnan)(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n    }\n    simulateCancelEvent(inputData) {\n      if (this.isGestureRunning) {\n        this.cancelEvent(inputData);\n      }\n    }\n    onGestureActivated(ev) {\n      if (this.isGestureRunning) {\n        this.onSuccessfulTap(ev);\n      }\n    }\n    onSuccessfulTap = ev => {\n      if (this._getPendingGestures().length) {\n        this._shouldFireEndEvent = ev;\n        return;\n      }\n      if (ev.eventType === Hammer.default.INPUT_END) {\n        this.sendEvent(Object.assign({}, ev, {\n          eventType: Hammer.default.INPUT_MOVE\n        }));\n      }\n      // When handler gets activated it will turn into State.END immediately.\n      this.sendEvent(Object.assign({}, ev, {\n        isFinal: true\n      }));\n      this.onGestureEnded(ev);\n    };\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n\n      // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n      if (!this.hasGestureFailed && !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore TODO(TS) trace down config\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n      if (ev.isFinal && ev.maxPointers > 1) {\n        setTimeout(() => {\n          // Handle case where one finger presses slightly\n          // after the first finger on a multi-tap event\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n      if (this.hasGestureFailed) {\n        return;\n      }\n      // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n      if (ev.isFinal) {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (ev.maxPointers > 1) {\n          setTimeout(() => {\n            if (this.isGestureRunning) {\n              this.cancelEvent(ev);\n            }\n          });\n        }\n\n        // Clear last timer\n        clearTimeout(this._timer);\n        // Create time out for multi-taps.\n        this._timer = setTimeout(() => {\n          this.hasGestureFailed = true;\n          this.cancelEvent(ev);\n        }, this.maxDelayMs);\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore TODO(TS) trace down config\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        event: this.name,\n        // @ts-ignore TODO(TS) trace down config\n        taps: (0, _utils.isnan)(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n        interval: this.maxDelayMs,\n        time:\n        // @ts-ignore TODO(TS) trace down config\n        (0, _utils.isnan)(this.config.maxDurationMs) || this.config.maxDurationMs == null ? 250 :\n        // @ts-ignore TODO(TS) trace down config\n        this.config.maxDurationMs\n      });\n    }\n    updateGestureConfig(_ref) {\n      let {\n          shouldCancelWhenOutside = true,\n          maxDeltaX = Number.NaN,\n          maxDeltaY = Number.NaN,\n          numberOfTaps = 1,\n          minDurationMs = 525,\n          maxDelayMs = Number.NaN,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n          maxDurationMs = Number.NaN,\n          maxDist = 2,\n          minPointers = 1,\n          maxPointers = 1\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      return super.updateGestureConfig(Object.assign({\n        shouldCancelWhenOutside,\n        numberOfTaps,\n        maxDeltaX,\n        maxDeltaY,\n        minDurationMs,\n        maxDelayMs,\n        maxDist,\n        minPointers,\n        maxPointers\n      }, props));\n    }\n    onGestureEnded(...props) {\n      clearTimeout(this._timer);\n      // @ts-ignore TODO(TS) check how onGestureEnded works\n      super.onGestureEnded(...props);\n    }\n    onWaitingEnded(_gesture) {\n      if (this._shouldFireEndEvent) {\n        this.onSuccessfulTap(this._shouldFireEndEvent);\n        this._shouldFireEndEvent = null;\n      }\n    }\n  }\n  var _default = TapGestureHandler;\n});","lineCount":177,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,8,1,13,"_excluded"],[4,17,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13],[8,11,1,13,"_interopDefault"],[8,27,1,13,"e"],[8,28,1,13],[9,4,1,13],[9,11,1,13,"e"],[9,12,1,13],[9,16,1,13,"e"],[9,17,1,13],[9,18,1,13,"__esModule"],[9,28,1,13],[9,31,1,13,"e"],[9,32,1,13],[10,6,1,13,"default"],[10,13,1,13],[10,15,1,13,"e"],[11,4,1,13],[12,2,1,13],[13,2,159,0,"Object"],[13,8,159,0],[13,9,159,0,"defineProperty"],[13,23,159,0],[13,24,159,0,"exports"],[13,31,159,0],[14,4,159,0,"enumerable"],[14,14,159,0],[15,4,159,0,"get"],[15,7,159,0],[15,18,159,0,"get"],[15,19,159,0],[16,6,159,0],[16,13,159,0,"_default"],[16,21,159,0],[17,4,159,0],[18,2,159,0],[19,2,159,33],[19,6,159,33,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[19,54,159,33],[19,57,159,33,"require"],[19,64,159,33],[19,65,159,33,"_dependencyMap"],[19,79,159,33],[20,2,159,33],[20,6,159,33,"_objectWithoutPropertiesLoose"],[20,35,159,33],[20,38,159,33,"_interopDefault"],[20,53,159,33],[20,54,159,33,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[20,102,159,33],[21,2,3,0],[21,6,3,0,"_egjsHammerjs"],[21,19,3,0],[21,22,3,0,"require"],[21,29,3,0],[21,30,3,0,"_dependencyMap"],[21,44,3,0],[22,2,3,0],[22,6,3,0,"Hammer"],[22,12,3,0],[22,15,3,0,"_interopDefault"],[22,30,3,0],[22,31,3,0,"_egjsHammerjs"],[22,44,3,0],[23,2,4,0],[23,6,4,0,"_DiscreteGestureHandler"],[23,29,4,0],[23,32,4,0,"require"],[23,39,4,0],[23,40,4,0,"_dependencyMap"],[23,54,4,0],[24,2,4,0],[24,6,4,0,"DiscreteGestureHandler"],[24,28,4,0],[24,31,4,0,"_interopDefault"],[24,46,4,0],[24,47,4,0,"_DiscreteGestureHandler"],[24,70,4,0],[25,2,5,0],[25,6,5,0,"_utils"],[25,12,5,0],[25,15,5,0,"require"],[25,22,5,0],[25,23,5,0,"_dependencyMap"],[25,37,5,0],[26,2,6,0],[26,8,6,6,"TapGestureHandler"],[26,25,6,23],[26,34,6,32,"DiscreteGestureHandler"],[26,56,6,54],[26,57,6,54,"default"],[26,64,6,54],[26,65,6,55],[27,4,7,2,"_shouldFireEndEvent"],[27,23,7,21],[27,26,7,24],[27,30,7,28],[28,4,8,2],[29,4,9,2],[29,8,9,6,"name"],[29,12,9,10,"name"],[29,13,9,10],[29,15,9,13],[30,6,10,4],[30,13,10,11],[30,18,10,16],[31,4,11,2],[32,4,12,2],[32,8,12,6,"NativeGestureClass"],[32,26,12,24,"NativeGestureClass"],[32,27,12,24],[32,29,12,27],[33,6,13,4],[33,13,13,11,"Hammer"],[33,19,13,17],[33,20,13,17,"default"],[33,27,13,17],[33,28,13,18,"Tap"],[33,31,13,21],[34,4,14,2],[35,4,15,2],[35,8,15,6,"maxDelayMs"],[35,18,15,16,"maxDelayMs"],[35,19,15,16],[35,21,15,19],[36,6,16,4],[37,6,17,4],[37,13,17,11],[37,17,17,11,"isnan"],[37,23,17,16],[37,24,17,16,"isnan"],[37,29,17,16],[37,31,17,17],[37,35,17,21],[37,36,17,22,"config"],[37,42,17,28],[37,43,17,29,"maxDelayMs"],[37,53,17,39],[37,54,17,40],[37,57,17,43],[37,60,17,46],[37,63,17,49],[37,67,17,53],[37,68,17,54,"config"],[37,74,17,60],[37,75,17,61,"maxDelayMs"],[37,85,17,71],[38,4,18,2],[39,4,19,2,"simulateCancelEvent"],[39,23,19,21,"simulateCancelEvent"],[39,24,19,22,"inputData"],[39,33,19,31],[39,35,19,33],[40,6,20,4],[40,10,20,8],[40,14,20,12],[40,15,20,13,"isGestureRunning"],[40,31,20,29],[40,33,20,31],[41,8,21,6],[41,12,21,10],[41,13,21,11,"cancelEvent"],[41,24,21,22],[41,25,21,23,"inputData"],[41,34,21,32],[41,35,21,33],[42,6,22,4],[43,4,23,2],[44,4,24,2,"onGestureActivated"],[44,22,24,20,"onGestureActivated"],[44,23,24,21,"ev"],[44,25,24,23],[44,27,24,25],[45,6,25,4],[45,10,25,8],[45,14,25,12],[45,15,25,13,"isGestureRunning"],[45,31,25,29],[45,33,25,31],[46,8,26,6],[46,12,26,10],[46,13,26,11,"onSuccessfulTap"],[46,28,26,26],[46,29,26,27,"ev"],[46,31,26,29],[46,32,26,30],[47,6,27,4],[48,4,28,2],[49,4,29,2,"onSuccessfulTap"],[49,19,29,17],[49,22,29,20,"ev"],[49,24,29,22],[49,28,29,26],[50,6,30,4],[50,10,30,8],[50,14,30,12],[50,15,30,13,"_getPendingGestures"],[50,34,30,32],[50,35,30,33],[50,36,30,34],[50,37,30,35,"length"],[50,43,30,41],[50,45,30,43],[51,8,31,6],[51,12,31,10],[51,13,31,11,"_shouldFireEndEvent"],[51,32,31,30],[51,35,31,33,"ev"],[51,37,31,35],[52,8,32,6],[53,6,33,4],[54,6,34,4],[54,10,34,8,"ev"],[54,12,34,10],[54,13,34,11,"eventType"],[54,22,34,20],[54,27,34,25,"Hammer"],[54,33,34,31],[54,34,34,31,"default"],[54,41,34,31],[54,42,34,32,"INPUT_END"],[54,51,34,41],[54,53,34,43],[55,8,35,6],[55,12,35,10],[55,13,35,11,"sendEvent"],[55,22,35,20],[55,23,35,20,"Object"],[55,29,35,20],[55,30,35,20,"assign"],[55,36,35,20],[55,41,36,11,"ev"],[55,43,36,13],[56,10,37,8,"eventType"],[56,19,37,17],[56,21,37,19,"Hammer"],[56,27,37,25],[56,28,37,25,"default"],[56,35,37,25],[56,36,37,26,"INPUT_MOVE"],[57,8,37,36],[57,10,38,7],[57,11,38,8],[58,6,39,4],[59,6,40,4],[60,6,41,4],[60,10,41,8],[60,11,41,9,"sendEvent"],[60,20,41,18],[60,21,41,18,"Object"],[60,27,41,18],[60,28,41,18,"assign"],[60,34,41,18],[60,39,42,9,"ev"],[60,41,42,11],[61,8,43,6,"isFinal"],[61,15,43,13],[61,17,43,15],[62,6,43,19],[62,8,44,5],[62,9,44,6],[63,6,45,4],[63,10,45,8],[63,11,45,9,"onGestureEnded"],[63,25,45,23],[63,26,45,24,"ev"],[63,28,45,26],[63,29,45,27],[64,4,46,2],[64,5,46,3],[65,4,47,2,"onRawEvent"],[65,14,47,12,"onRawEvent"],[65,15,47,13,"ev"],[65,17,47,15],[65,19,47,17],[66,6,48,4],[66,11,48,9],[66,12,48,10,"onRawEvent"],[66,22,48,20],[66,23,48,21,"ev"],[66,25,48,23],[66,26,48,24],[68,6,50,4],[69,6,51,4],[69,10,51,8],[69,11,51,9],[69,15,51,13],[69,16,51,14,"hasGestureFailed"],[69,32,51,30],[69,36,51,34],[69,37,51,35],[69,41,51,39],[69,42,51,40,"isGestureRunning"],[69,58,51,56],[70,6,52,4],[71,6,53,4],[71,7,53,5,"ev"],[71,9,53,7],[71,10,53,8,"isFinal"],[71,17,53,15],[71,19,53,17],[72,8,54,6],[73,8,55,6],[73,14,55,12,"gesture"],[73,21,55,19],[73,24,55,22],[73,28,55,26],[73,29,55,27,"hammer"],[73,35,55,33],[73,36,55,34,"get"],[73,39,55,37],[73,40,55,38],[73,44,55,42],[73,45,55,43,"name"],[73,49,55,47],[73,50,55,48],[74,8,56,6],[75,8,57,6],[75,12,57,10,"gesture"],[75,19,57,17],[75,20,57,18,"options"],[75,27,57,25],[75,28,57,26,"enable"],[75,34,57,32],[75,35,57,33,"gesture"],[75,42,57,40],[75,44,57,42,"ev"],[75,46,57,44],[75,47,57,45],[75,49,57,47],[76,10,58,8,"clearTimeout"],[76,22,58,20],[76,23,58,21],[76,27,58,25],[76,28,58,26,"_multiTapTimer"],[76,42,58,40],[76,43,58,41],[77,10,59,8],[77,14,59,12],[77,15,59,13,"onStart"],[77,22,59,20],[77,23,59,21,"ev"],[77,25,59,23],[77,26,59,24],[78,10,60,8],[78,14,60,12],[78,15,60,13,"sendEvent"],[78,24,60,22],[78,25,60,23,"ev"],[78,27,60,25],[78,28,60,26],[79,8,61,6],[80,6,62,4],[81,6,63,4],[81,10,63,8,"ev"],[81,12,63,10],[81,13,63,11,"isFinal"],[81,20,63,18],[81,24,63,22,"ev"],[81,26,63,24],[81,27,63,25,"maxPointers"],[81,38,63,36],[81,41,63,39],[81,42,63,40],[81,44,63,42],[82,8,64,6,"setTimeout"],[82,18,64,16],[82,19,64,17],[82,25,64,23],[83,10,65,8],[84,10,66,8],[85,10,67,8],[85,14,67,12],[85,18,67,16],[85,19,67,17,"isGestureRunning"],[85,35,67,33],[85,37,67,35],[86,12,68,10],[86,16,68,14],[86,17,68,15,"cancelEvent"],[86,28,68,26],[86,29,68,27,"ev"],[86,31,68,29],[86,32,68,30],[87,10,69,8],[88,8,70,6],[88,9,70,7],[88,10,70,8],[89,6,71,4],[90,6,72,4],[90,10,72,8],[90,14,72,12],[90,15,72,13,"hasGestureFailed"],[90,31,72,29],[90,33,72,31],[91,8,73,6],[92,6,74,4],[93,6,75,4],[94,6,76,4],[95,6,77,4],[95,10,77,8,"ev"],[95,12,77,10],[95,13,77,11,"isFinal"],[95,20,77,18],[95,22,77,20],[96,8,78,6],[97,8,79,6],[98,8,80,6],[98,12,80,10,"ev"],[98,14,80,12],[98,15,80,13,"maxPointers"],[98,26,80,24],[98,29,80,27],[98,30,80,28],[98,32,80,30],[99,10,81,8,"setTimeout"],[99,20,81,18],[99,21,81,19],[99,27,81,25],[100,12,82,10],[100,16,82,14],[100,20,82,18],[100,21,82,19,"isGestureRunning"],[100,37,82,35],[100,39,82,37],[101,14,83,12],[101,18,83,16],[101,19,83,17,"cancelEvent"],[101,30,83,28],[101,31,83,29,"ev"],[101,33,83,31],[101,34,83,32],[102,12,84,10],[103,10,85,8],[103,11,85,9],[103,12,85,10],[104,8,86,6],[106,8,88,6],[107,8,89,6,"clearTimeout"],[107,20,89,18],[107,21,89,19],[107,25,89,23],[107,26,89,24,"_timer"],[107,32,89,30],[107,33,89,31],[108,8,90,6],[109,8,91,6],[109,12,91,10],[109,13,91,11,"_timer"],[109,19,91,17],[109,22,91,20,"setTimeout"],[109,32,91,30],[109,33,91,31],[109,39,91,37],[110,10,92,8],[110,14,92,12],[110,15,92,13,"hasGestureFailed"],[110,31,92,29],[110,34,92,32],[110,38,92,36],[111,10,93,8],[111,14,93,12],[111,15,93,13,"cancelEvent"],[111,26,93,24],[111,27,93,25,"ev"],[111,29,93,27],[111,30,93,28],[112,8,94,6],[112,9,94,7],[112,11,94,9],[112,15,94,13],[112,16,94,14,"maxDelayMs"],[112,26,94,24],[112,27,94,25],[113,6,95,4],[113,7,95,5],[113,13,95,11],[113,17,95,15],[113,18,95,16],[113,22,95,20],[113,23,95,21,"hasGestureFailed"],[113,39,95,37],[113,43,95,41],[113,44,95,42],[113,48,95,46],[113,49,95,47,"isGestureRunning"],[113,65,95,63],[113,67,95,65],[114,8,96,6],[115,8,97,6],[115,14,97,12,"gesture"],[115,21,97,19],[115,24,97,22],[115,28,97,26],[115,29,97,27,"hammer"],[115,35,97,33],[115,36,97,34,"get"],[115,39,97,37],[115,40,97,38],[115,44,97,42],[115,45,97,43,"name"],[115,49,97,47],[115,50,97,48],[116,8,98,6],[117,8,99,6],[117,12,99,10,"gesture"],[117,19,99,17],[117,20,99,18,"options"],[117,27,99,25],[117,28,99,26,"enable"],[117,34,99,32],[117,35,99,33,"gesture"],[117,42,99,40],[117,44,99,42,"ev"],[117,46,99,44],[117,47,99,45],[117,49,99,47],[118,10,100,8,"clearTimeout"],[118,22,100,20],[118,23,100,21],[118,27,100,25],[118,28,100,26,"_multiTapTimer"],[118,42,100,40],[118,43,100,41],[119,10,101,8],[119,14,101,12],[119,15,101,13,"onStart"],[119,22,101,20],[119,23,101,21,"ev"],[119,25,101,23],[119,26,101,24],[120,10,102,8],[120,14,102,12],[120,15,102,13,"sendEvent"],[120,24,102,22],[120,25,102,23,"ev"],[120,27,102,25],[120,28,102,26],[121,8,103,6],[122,6,104,4],[123,4,105,2],[124,4,106,2,"getHammerConfig"],[124,19,106,17,"getHammerConfig"],[124,20,106,17],[124,22,106,20],[125,6,107,4],[125,13,107,4,"Object"],[125,19,107,4],[125,20,107,4,"assign"],[125,26,107,4],[125,31,108,9],[125,36,108,14],[125,37,108,15,"getHammerConfig"],[125,52,108,30],[125,53,108,31],[125,54,108,32],[126,8,109,6,"event"],[126,13,109,11],[126,15,109,13],[126,19,109,17],[126,20,109,18,"name"],[126,24,109,22],[127,8,110,6],[128,8,111,6,"taps"],[128,12,111,10],[128,14,111,12],[128,18,111,12,"isnan"],[128,24,111,17],[128,25,111,17,"isnan"],[128,30,111,17],[128,32,111,18],[128,36,111,22],[128,37,111,23,"config"],[128,43,111,29],[128,44,111,30,"numberOfTaps"],[128,56,111,42],[128,57,111,43],[128,60,111,46],[128,61,111,47],[128,64,111,50],[128,68,111,54],[128,69,111,55,"config"],[128,75,111,61],[128,76,111,62,"numberOfTaps"],[128,88,111,74],[129,8,112,6,"interval"],[129,16,112,14],[129,18,112,16],[129,22,112,20],[129,23,112,21,"maxDelayMs"],[129,33,112,31],[130,8,113,6,"time"],[130,12,113,10],[131,8,114,6],[132,8,115,6],[132,12,115,6,"isnan"],[132,18,115,11],[132,19,115,11,"isnan"],[132,24,115,11],[132,26,115,12],[132,30,115,16],[132,31,115,17,"config"],[132,37,115,23],[132,38,115,24,"maxDurationMs"],[132,51,115,37],[132,52,115,38],[132,56,115,42],[132,60,115,46],[132,61,115,47,"config"],[132,67,115,53],[132,68,115,54,"maxDurationMs"],[132,81,115,67],[132,85,115,71],[132,89,115,75],[132,92,115,78],[132,95,115,81],[133,8,116,6],[134,8,117,6],[134,12,117,10],[134,13,117,11,"config"],[134,19,117,17],[134,20,117,18,"maxDurationMs"],[135,6,117,31],[136,4,119,2],[137,4,120,2,"updateGestureConfig"],[137,23,120,21,"updateGestureConfig"],[137,24,120,21,"_ref"],[137,28,120,21],[137,30,133,5],[138,6,133,5],[138,10,120,22],[139,10,121,4,"shouldCancelWhenOutside"],[139,33,121,27],[139,36,121,30],[139,40,121,34],[140,10,122,4,"maxDeltaX"],[140,19,122,13],[140,22,122,16,"Number"],[140,28,122,22],[140,29,122,23,"NaN"],[140,32,122,26],[141,10,123,4,"maxDeltaY"],[141,19,123,13],[141,22,123,16,"Number"],[141,28,123,22],[141,29,123,23,"NaN"],[141,32,123,26],[142,10,124,4,"numberOfTaps"],[142,22,124,16],[142,25,124,19],[142,26,124,20],[143,10,125,4,"minDurationMs"],[143,23,125,17],[143,26,125,20],[143,29,125,23],[144,10,126,4,"maxDelayMs"],[144,20,126,14],[144,23,126,17,"Number"],[144,29,126,23],[144,30,126,24,"NaN"],[144,33,126,27],[145,10,127,4],[146,10,128,4,"maxDurationMs"],[146,23,128,17],[146,26,128,20,"Number"],[146,32,128,26],[146,33,128,27,"NaN"],[146,36,128,30],[147,10,129,4,"maxDist"],[147,17,129,11],[147,20,129,14],[147,21,129,15],[148,10,130,4,"minPointers"],[148,21,130,15],[148,24,130,18],[148,25,130,19],[149,10,131,4,"maxPointers"],[149,21,131,15],[149,24,131,18],[150,8,133,2],[150,9,133,3],[150,12,133,3,"_ref"],[150,16,133,3],[151,8,132,7,"props"],[151,13,132,12],[151,20,132,12,"_objectWithoutPropertiesLoose"],[151,49,132,12],[151,50,132,12,"default"],[151,57,132,12],[151,59,132,12,"_ref"],[151,63,132,12],[151,65,132,12,"_excluded"],[151,74,132,12],[152,6,134,4],[152,13,134,11],[152,18,134,16],[152,19,134,17,"updateGestureConfig"],[152,38,134,36],[152,39,134,36,"Object"],[152,45,134,36],[152,46,134,36,"assign"],[152,52,134,36],[153,8,135,6,"shouldCancelWhenOutside"],[153,31,135,29],[154,8,136,6,"numberOfTaps"],[154,20,136,18],[155,8,137,6,"maxDeltaX"],[155,17,137,15],[156,8,138,6,"maxDeltaY"],[156,17,138,15],[157,8,139,6,"minDurationMs"],[157,21,139,19],[158,8,140,6,"maxDelayMs"],[158,18,140,16],[159,8,141,6,"maxDist"],[159,15,141,13],[160,8,142,6,"minPointers"],[160,19,142,17],[161,8,143,6,"maxPointers"],[162,6,143,17],[162,9,144,9,"props"],[162,14,144,14],[162,15,145,5],[162,16,145,6],[163,4,146,2],[164,4,147,2,"onGestureEnded"],[164,18,147,16,"onGestureEnded"],[164,19,147,17],[164,22,147,20,"props"],[164,27,147,25],[164,29,147,27],[165,6,148,4,"clearTimeout"],[165,18,148,16],[165,19,148,17],[165,23,148,21],[165,24,148,22,"_timer"],[165,30,148,28],[165,31,148,29],[166,6,149,4],[167,6,150,4],[167,11,150,9],[167,12,150,10,"onGestureEnded"],[167,26,150,24],[167,27,150,25],[167,30,150,28,"props"],[167,35,150,33],[167,36,150,34],[168,4,151,2],[169,4,152,2,"onWaitingEnded"],[169,18,152,16,"onWaitingEnded"],[169,19,152,17,"_gesture"],[169,27,152,25],[169,29,152,27],[170,6,153,4],[170,10,153,8],[170,14,153,12],[170,15,153,13,"_shouldFireEndEvent"],[170,34,153,32],[170,36,153,34],[171,8,154,6],[171,12,154,10],[171,13,154,11,"onSuccessfulTap"],[171,28,154,26],[171,29,154,27],[171,33,154,31],[171,34,154,32,"_shouldFireEndEvent"],[171,53,154,51],[171,54,154,52],[172,8,155,6],[172,12,155,10],[172,13,155,11,"_shouldFireEndEvent"],[172,32,155,30],[172,35,155,33],[172,39,155,37],[173,6,156,4],[174,4,157,2],[175,2,158,0],[176,2,159,0],[176,6,159,0,"_default"],[176,14,159,0],[176,17,159,15,"TapGestureHandler"],[176,34,159,32],[177,0,159,33],[177,3]],"functionMap":{"names":["<global>","TapGestureHandler","get__name","get__NativeGestureClass","get__maxDelayMs","simulateCancelEvent","onGestureActivated","onSuccessfulTap","onRawEvent","setTimeout$argument_0","getHammerConfig","updateGestureConfig","onGestureEnded","onWaitingEnded"],"mappings":"AAA;ACK;ECG;GDE;EEC;GFE;EGC;GHG;EIC;GJI;EKC;GLI;oBMC;GNiB;EOC;iBCiB;ODM;mBCW;SDI;+BCM;ODG;GPW;ESC;GTa;EUC;GV0B;EWC;GXI;EYC;GZK;CDC"},"hasCjsExports":false},"type":"js/module"}]}