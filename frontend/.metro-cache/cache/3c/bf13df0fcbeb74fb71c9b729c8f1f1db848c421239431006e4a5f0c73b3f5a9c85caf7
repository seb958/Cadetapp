{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":87,"index":135}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":177},"end":{"line":4,"column":53,"index":230}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ=","exportNames":["*"],"imports":1}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":231},"end":{"line":5,"column":43,"index":274}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"],"imports":1}},{"name":"../../../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":275},"end":{"line":6,"column":83,"index":358}}],"key":"v6b9cfauRqYeWu9wWOEUTyMIHSA=","exportNames":["*"],"imports":1}},{"name":"./useAnimatedGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":359},"end":{"line":7,"column":58,"index":417}}],"key":"2qsvw/0Wn5ZQ0k+d9VbJV8PW2us=","exportNames":["*"],"imports":1}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":418},"end":{"line":8,"column":50,"index":468}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0=","exportNames":["*"],"imports":1}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":469},"end":{"line":9,"column":52,"index":521}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo=","exportNames":["*"],"imports":1}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":522},"end":{"line":10,"column":46,"index":568}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":569},"end":{"line":11,"column":46,"index":615}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"./Wrap","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":616},"end":{"line":12,"column":44,"index":660}}],"key":"3O9fTt6BDgaEKEy9t1chSR0HFNQ=","exportNames":["*"],"imports":1}},{"name":"./useDetectorUpdater","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":661},"end":{"line":13,"column":58,"index":719}}],"key":"707zRwYZ3uzpHSm+Rwc2R1MvfJw=","exportNames":["*"],"imports":1}},{"name":"./useViewRefHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":720},"end":{"line":14,"column":56,"index":776}}],"key":"tm4O9dzaDCUn7KS1TB05c8nzNaA=","exportNames":["*"],"imports":1}},{"name":"./useMountReactions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":777},"end":{"line":15,"column":56,"index":833}}],"key":"PrdD1p6YXRuOP5neQrVF/37n7P4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"GestureDetector\", {\n    enumerable: true,\n    get: function () {\n      return GestureDetector;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _findNodeHandle = require(_dependencyMap[2], \"../../../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils = require(_dependencyMap[3], \"../../../utils\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[4], \"../../../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _useAnimatedGesture = require(_dependencyMap[5], \"./useAnimatedGesture\");\n  var _attachHandlers = require(_dependencyMap[6], \"./attachHandlers\");\n  var _needsToReattach = require(_dependencyMap[7], \"./needsToReattach\");\n  var _dropHandlers = require(_dependencyMap[8], \"./dropHandlers\");\n  var _utils2 = require(_dependencyMap[9], \"./utils\");\n  var _Wrap = require(_dependencyMap[10], \"./Wrap\");\n  var _useDetectorUpdater = require(_dependencyMap[11], \"./useDetectorUpdater\");\n  var _useViewRefHandler = require(_dependencyMap[12], \"./useViewRefHandler\");\n  var _useMountReactions = require(_dependencyMap[13], \"./useMountReactions\");\n  /* eslint-disable react/no-unused-prop-types */\n\n  function propagateDetectorConfig(props, gesture) {\n    const keysToPropagate = ['userSelect', 'enableContextMenu', 'touchAction'];\n    for (const key of keysToPropagate) {\n      const value = props[key];\n      if (value === undefined) {\n        continue;\n      }\n      for (const g of gesture.toGestureArray()) {\n        const config = g.config;\n        config[key] = value;\n      }\n    }\n  }\n\n  /**\n   * `GestureDetector` is responsible for creating and updating native gesture handlers based on the config of provided gesture.\n   *\n   * ### Props\n   * - `gesture`\n   * - `userSelect` (**Web only**)\n   * - `enableContextMenu` (**Web only**)\n   * - `touchAction` (**Web only**)\n   *\n   * ### Remarks\n   * - Gesture Detector will use first native view in its subtree to recognize gestures, however if this view is used only to group its children it may get automatically collapsed.\n   * - Using the same instance of a gesture across multiple Gesture Detectors is not possible.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture-detector\n   */\n  const GestureDetector = props => {\n    const rootViewContext = (0, _react.useContext)(GestureHandlerRootViewContext.default);\n    if (__DEV__ && !rootViewContext && !(0, _utils.isTestEnv)() && Platform.default.OS !== 'web') {\n      throw new Error('GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n    } // Gesture config should be wrapped with useMemo to prevent unnecessary re-renders\n\n    const gestureConfig = props.gesture;\n    propagateDetectorConfig(props, gestureConfig);\n    const gesturesToAttach = (0, _react.useMemo)(() => gestureConfig.toGestureArray(), [gestureConfig]);\n    const shouldUseReanimated = gesturesToAttach.some(g => g.shouldUseReanimated);\n    const webEventHandlersRef = (0, _utils2.useWebEventHandlers)(); // Store state in ref to prevent unnecessary renders\n\n    const state = (0, _react.useRef)({\n      firstRender: true,\n      viewRef: null,\n      previousViewTag: -1,\n      forceRebuildReanimatedEvent: false\n    }).current;\n    const preparedGesture = React.default.useRef({\n      attachedGestures: [],\n      animatedEventHandler: null,\n      animatedHandlers: null,\n      shouldUseReanimated: shouldUseReanimated,\n      isMounted: false\n    }).current;\n    const updateAttachedGestures = (0, _useDetectorUpdater.useDetectorUpdater)(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef);\n    const refHandler = (0, _useViewRefHandler.useViewRefHandler)(state, updateAttachedGestures); // Reanimated event should be rebuilt only when gestures are reattached, otherwise\n    // config update will be enough as all necessary items are stored in shared values anyway\n\n    const needsToRebuildReanimatedEvent = state.firstRender || state.forceRebuildReanimatedEvent || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach);\n    state.forceRebuildReanimatedEvent = false;\n    (0, _useAnimatedGesture.useAnimatedGesture)(preparedGesture, needsToRebuildReanimatedEvent);\n    (0, _react.useLayoutEffect)(() => {\n      const viewTag = (0, findNodeHandle.default)(state.viewRef);\n      preparedGesture.isMounted = true;\n      (0, _attachHandlers.attachHandlers)({\n        preparedGesture,\n        gestureConfig,\n        gesturesToAttach,\n        webEventHandlersRef,\n        viewTag\n      });\n      return () => {\n        preparedGesture.isMounted = false;\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n      };\n    }, []);\n    (0, _react.useEffect)(() => {\n      if (state.firstRender) {\n        state.firstRender = false;\n      } else {\n        updateAttachedGestures();\n      }\n    }, [props]);\n    (0, _useMountReactions.useMountReactions)(updateAttachedGestures, preparedGesture);\n    if (shouldUseReanimated) {\n      return /*#__PURE__*/React.default.createElement(_Wrap.AnimatedWrap, {\n        ref: refHandler,\n        onGestureHandlerEvent: preparedGesture.animatedEventHandler\n      }, props.children);\n    } else {\n      return /*#__PURE__*/React.default.createElement(_Wrap.Wrap, {\n        ref: refHandler\n      }, props.children);\n    }\n  };\n});","lineCount":133,"map":[[12,2,49,0,"Object"],[12,8,49,0],[12,9,49,0,"defineProperty"],[12,23,49,0],[12,24,49,0,"exports"],[12,31,49,0],[13,4,49,0,"enumerable"],[13,14,49,0],[14,4,49,0,"get"],[14,7,49,0],[14,18,49,0,"get"],[14,19,49,0],[15,6,49,0],[15,13,49,0,"GestureDetector"],[15,28,49,0],[16,4,49,0],[17,2,49,0],[18,2,2,0],[18,6,2,0,"_react"],[18,12,2,0],[18,15,2,0,"require"],[18,22,2,0],[18,23,2,0,"_dependencyMap"],[18,37,2,0],[19,2,2,0],[19,6,2,0,"React"],[19,11,2,0],[19,14,2,0,"_interopDefault"],[19,29,2,0],[19,30,2,0,"_react"],[19,36,2,0],[20,2,2,87],[20,6,2,87,"_reactNativeWebDistExportsPlatform"],[20,40,2,87],[20,43,2,87,"require"],[20,50,2,87],[20,51,2,87,"_dependencyMap"],[20,65,2,87],[21,2,2,87],[21,6,2,87,"Platform"],[21,14,2,87],[21,17,2,87,"_interopDefault"],[21,32,2,87],[21,33,2,87,"_reactNativeWebDistExportsPlatform"],[21,67,2,87],[22,2,4,0],[22,6,4,0,"_findNodeHandle"],[22,21,4,0],[22,24,4,0,"require"],[22,31,4,0],[22,32,4,0,"_dependencyMap"],[22,46,4,0],[23,2,4,0],[23,6,4,0,"findNodeHandle"],[23,20,4,0],[23,23,4,0,"_interopDefault"],[23,38,4,0],[23,39,4,0,"_findNodeHandle"],[23,54,4,0],[24,2,5,0],[24,6,5,0,"_utils"],[24,12,5,0],[24,15,5,0,"require"],[24,22,5,0],[24,23,5,0,"_dependencyMap"],[24,37,5,0],[25,2,6,0],[25,6,6,0,"_GestureHandlerRootViewContext"],[25,36,6,0],[25,39,6,0,"require"],[25,46,6,0],[25,47,6,0,"_dependencyMap"],[25,61,6,0],[26,2,6,0],[26,6,6,0,"GestureHandlerRootViewContext"],[26,35,6,0],[26,38,6,0,"_interopDefault"],[26,53,6,0],[26,54,6,0,"_GestureHandlerRootViewContext"],[26,84,6,0],[27,2,7,0],[27,6,7,0,"_useAnimatedGesture"],[27,25,7,0],[27,28,7,0,"require"],[27,35,7,0],[27,36,7,0,"_dependencyMap"],[27,50,7,0],[28,2,8,0],[28,6,8,0,"_attachHandlers"],[28,21,8,0],[28,24,8,0,"require"],[28,31,8,0],[28,32,8,0,"_dependencyMap"],[28,46,8,0],[29,2,9,0],[29,6,9,0,"_needsToReattach"],[29,22,9,0],[29,25,9,0,"require"],[29,32,9,0],[29,33,9,0,"_dependencyMap"],[29,47,9,0],[30,2,10,0],[30,6,10,0,"_dropHandlers"],[30,19,10,0],[30,22,10,0,"require"],[30,29,10,0],[30,30,10,0,"_dependencyMap"],[30,44,10,0],[31,2,11,0],[31,6,11,0,"_utils2"],[31,13,11,0],[31,16,11,0,"require"],[31,23,11,0],[31,24,11,0,"_dependencyMap"],[31,38,11,0],[32,2,12,0],[32,6,12,0,"_Wrap"],[32,11,12,0],[32,14,12,0,"require"],[32,21,12,0],[32,22,12,0,"_dependencyMap"],[32,36,12,0],[33,2,13,0],[33,6,13,0,"_useDetectorUpdater"],[33,25,13,0],[33,28,13,0,"require"],[33,35,13,0],[33,36,13,0,"_dependencyMap"],[33,50,13,0],[34,2,14,0],[34,6,14,0,"_useViewRefHandler"],[34,24,14,0],[34,27,14,0,"require"],[34,34,14,0],[34,35,14,0,"_dependencyMap"],[34,49,14,0],[35,2,15,0],[35,6,15,0,"_useMountReactions"],[35,24,15,0],[35,27,15,0,"require"],[35,34,15,0],[35,35,15,0,"_dependencyMap"],[35,49,15,0],[36,2,1,0],[38,2,17,0],[38,11,17,9,"propagateDetectorConfig"],[38,34,17,32,"propagateDetectorConfig"],[38,35,17,33,"props"],[38,40,17,38],[38,42,17,40,"gesture"],[38,49,17,47],[38,51,17,49],[39,4,18,2],[39,10,18,8,"keysToPropagate"],[39,25,18,23],[39,28,18,26],[39,29,18,27],[39,41,18,39],[39,43,18,41],[39,62,18,60],[39,64,18,62],[39,77,18,75],[39,78,18,76],[40,4,20,2],[40,9,20,7],[40,15,20,13,"key"],[40,18,20,16],[40,22,20,20,"keysToPropagate"],[40,37,20,35],[40,39,20,37],[41,6,21,4],[41,12,21,10,"value"],[41,17,21,15],[41,20,21,18,"props"],[41,25,21,23],[41,26,21,24,"key"],[41,29,21,27],[41,30,21,28],[42,6,23,4],[42,10,23,8,"value"],[42,15,23,13],[42,20,23,18,"undefined"],[42,29,23,27],[42,31,23,29],[43,8,24,6],[44,6,25,4],[45,6,27,4],[45,11,27,9],[45,17,27,15,"g"],[45,18,27,16],[45,22,27,20,"gesture"],[45,29,27,27],[45,30,27,28,"toGestureArray"],[45,44,27,42],[45,45,27,43],[45,46,27,44],[45,48,27,46],[46,8,28,6],[46,14,28,12,"config"],[46,20,28,18],[46,23,28,21,"g"],[46,24,28,22],[46,25,28,23,"config"],[46,31,28,29],[47,8,29,6,"config"],[47,14,29,12],[47,15,29,13,"key"],[47,18,29,16],[47,19,29,17],[47,22,29,20,"value"],[47,27,29,25],[48,6,30,4],[49,4,31,2],[50,2,32,0],[52,2,34,0],[53,0,35,0],[54,0,36,0],[55,0,37,0],[56,0,38,0],[57,0,39,0],[58,0,40,0],[59,0,41,0],[60,0,42,0],[61,0,43,0],[62,0,44,0],[63,0,45,0],[64,0,46,0],[65,0,47,0],[66,0,48,0],[67,2,49,7],[67,8,49,13,"GestureDetector"],[67,23,49,28],[67,26,49,31,"props"],[67,31,49,36],[67,35,49,40],[68,4,50,2],[68,10,50,8,"rootViewContext"],[68,25,50,23],[68,28,50,26],[68,32,50,26,"useContext"],[68,38,50,36],[68,39,50,36,"useContext"],[68,49,50,36],[68,51,50,37,"GestureHandlerRootViewContext"],[68,80,50,66],[68,81,50,66,"default"],[68,88,50,66],[68,89,50,67],[69,4,52,2],[69,8,52,6,"__DEV__"],[69,15,52,13],[69,19,52,17],[69,20,52,18,"rootViewContext"],[69,35,52,33],[69,39,52,37],[69,40,52,38],[69,44,52,38,"isTestEnv"],[69,50,52,47],[69,51,52,47,"isTestEnv"],[69,60,52,47],[69,62,52,48],[69,63,52,49],[69,67,52,53,"Platform"],[69,75,52,61],[69,76,52,61,"default"],[69,83,52,61],[69,84,52,62,"OS"],[69,86,52,64],[69,91,52,69],[69,96,52,74],[69,98,52,76],[70,6,53,4],[70,12,53,10],[70,16,53,14,"Error"],[70,21,53,19],[70,22,53,20],[70,238,53,236],[70,239,53,237],[71,4,54,2],[71,5,54,3],[71,6,54,4],[73,4,57,2],[73,10,57,8,"gestureConfig"],[73,23,57,21],[73,26,57,24,"props"],[73,31,57,29],[73,32,57,30,"gesture"],[73,39,57,37],[74,4,58,2,"propagateDetectorConfig"],[74,27,58,25],[74,28,58,26,"props"],[74,33,58,31],[74,35,58,33,"gestureConfig"],[74,48,58,46],[74,49,58,47],[75,4,59,2],[75,10,59,8,"gesturesToAttach"],[75,26,59,24],[75,29,59,27],[75,33,59,27,"useMemo"],[75,39,59,34],[75,40,59,34,"useMemo"],[75,47,59,34],[75,49,59,35],[75,55,59,41,"gestureConfig"],[75,68,59,54],[75,69,59,55,"toGestureArray"],[75,83,59,69],[75,84,59,70],[75,85,59,71],[75,87,59,73],[75,88,59,74,"gestureConfig"],[75,101,59,87],[75,102,59,88],[75,103,59,89],[76,4,60,2],[76,10,60,8,"shouldUseReanimated"],[76,29,60,27],[76,32,60,30,"gesturesToAttach"],[76,48,60,46],[76,49,60,47,"some"],[76,53,60,51],[76,54,60,52,"g"],[76,55,60,53],[76,59,60,57,"g"],[76,60,60,58],[76,61,60,59,"shouldUseReanimated"],[76,80,60,78],[76,81,60,79],[77,4,61,2],[77,10,61,8,"webEventHandlersRef"],[77,29,61,27],[77,32,61,30],[77,36,61,30,"useWebEventHandlers"],[77,43,61,49],[77,44,61,49,"useWebEventHandlers"],[77,63,61,49],[77,65,61,50],[77,66,61,51],[77,67,61,52],[77,68,61,53],[79,4,63,2],[79,10,63,8,"state"],[79,15,63,13],[79,18,63,16],[79,22,63,16,"useRef"],[79,28,63,22],[79,29,63,22,"useRef"],[79,35,63,22],[79,37,63,23],[80,6,64,4,"firstRender"],[80,17,64,15],[80,19,64,17],[80,23,64,21],[81,6,65,4,"viewRef"],[81,13,65,11],[81,15,65,13],[81,19,65,17],[82,6,66,4,"previousViewTag"],[82,21,66,19],[82,23,66,21],[82,24,66,22],[82,25,66,23],[83,6,67,4,"forceRebuildReanimatedEvent"],[83,33,67,31],[83,35,67,33],[84,4,68,2],[84,5,68,3],[84,6,68,4],[84,7,68,5,"current"],[84,14,68,12],[85,4,69,2],[85,10,69,8,"preparedGesture"],[85,25,69,23],[85,28,69,26,"React"],[85,33,69,31],[85,34,69,31,"default"],[85,41,69,31],[85,42,69,32,"useRef"],[85,48,69,38],[85,49,69,39],[86,6,70,4,"attachedGestures"],[86,22,70,20],[86,24,70,22],[86,26,70,24],[87,6,71,4,"animatedEventHandler"],[87,26,71,24],[87,28,71,26],[87,32,71,30],[88,6,72,4,"animatedHandlers"],[88,22,72,20],[88,24,72,22],[88,28,72,26],[89,6,73,4,"shouldUseReanimated"],[89,25,73,23],[89,27,73,25,"shouldUseReanimated"],[89,46,73,44],[90,6,74,4,"isMounted"],[90,15,74,13],[90,17,74,15],[91,4,75,2],[91,5,75,3],[91,6,75,4],[91,7,75,5,"current"],[91,14,75,12],[92,4,76,2],[92,10,76,8,"updateAttachedGestures"],[92,32,76,30],[92,35,76,33],[92,39,76,33,"useDetectorUpdater"],[92,58,76,51],[92,59,76,51,"useDetectorUpdater"],[92,77,76,51],[92,79,76,52,"state"],[92,84,76,57],[92,86,76,59,"preparedGesture"],[92,101,76,74],[92,103,76,76,"gesturesToAttach"],[92,119,76,92],[92,121,76,94,"gestureConfig"],[92,134,76,107],[92,136,76,109,"webEventHandlersRef"],[92,155,76,128],[92,156,76,129],[93,4,77,2],[93,10,77,8,"refHandler"],[93,20,77,18],[93,23,77,21],[93,27,77,21,"useViewRefHandler"],[93,45,77,38],[93,46,77,38,"useViewRefHandler"],[93,63,77,38],[93,65,77,39,"state"],[93,70,77,44],[93,72,77,46,"updateAttachedGestures"],[93,94,77,68],[93,95,77,69],[93,96,77,70],[93,97,77,71],[94,4,78,2],[96,4,80,2],[96,10,80,8,"needsToRebuildReanimatedEvent"],[96,39,80,37],[96,42,80,40,"state"],[96,47,80,45],[96,48,80,46,"firstRender"],[96,59,80,57],[96,63,80,61,"state"],[96,68,80,66],[96,69,80,67,"forceRebuildReanimatedEvent"],[96,96,80,94],[96,100,80,98],[96,104,80,98,"needsToReattach"],[96,120,80,113],[96,121,80,113,"needsToReattach"],[96,136,80,113],[96,138,80,114,"preparedGesture"],[96,153,80,129],[96,155,80,131,"gesturesToAttach"],[96,171,80,147],[96,172,80,148],[97,4,81,2,"state"],[97,9,81,7],[97,10,81,8,"forceRebuildReanimatedEvent"],[97,37,81,35],[97,40,81,38],[97,45,81,43],[98,4,82,2],[98,8,82,2,"useAnimatedGesture"],[98,27,82,20],[98,28,82,20,"useAnimatedGesture"],[98,46,82,20],[98,48,82,21,"preparedGesture"],[98,63,82,36],[98,65,82,38,"needsToRebuildReanimatedEvent"],[98,94,82,67],[98,95,82,68],[99,4,83,2],[99,8,83,2,"useLayoutEffect"],[99,14,83,17],[99,15,83,17,"useLayoutEffect"],[99,30,83,17],[99,32,83,18],[99,38,83,24],[100,6,84,4],[100,12,84,10,"viewTag"],[100,19,84,17],[100,22,84,20],[100,26,84,20,"findNodeHandle"],[100,40,84,34],[100,41,84,34,"default"],[100,48,84,34],[100,50,84,35,"state"],[100,55,84,40],[100,56,84,41,"viewRef"],[100,63,84,48],[100,64,84,49],[101,6,85,4,"preparedGesture"],[101,21,85,19],[101,22,85,20,"isMounted"],[101,31,85,29],[101,34,85,32],[101,38,85,36],[102,6,86,4],[102,10,86,4,"attachHandlers"],[102,25,86,18],[102,26,86,18,"attachHandlers"],[102,40,86,18],[102,42,86,19],[103,8,87,6,"preparedGesture"],[103,23,87,21],[104,8,88,6,"gestureConfig"],[104,21,88,19],[105,8,89,6,"gesturesToAttach"],[105,24,89,22],[106,8,90,6,"webEventHandlersRef"],[106,27,90,25],[107,8,91,6,"viewTag"],[108,6,92,4],[108,7,92,5],[108,8,92,6],[109,6,93,4],[109,13,93,11],[109,19,93,17],[110,8,94,6,"preparedGesture"],[110,23,94,21],[110,24,94,22,"isMounted"],[110,33,94,31],[110,36,94,34],[110,41,94,39],[111,8,95,6],[111,12,95,6,"dropHandlers"],[111,25,95,18],[111,26,95,18,"dropHandlers"],[111,38,95,18],[111,40,95,19,"preparedGesture"],[111,55,95,34],[111,56,95,35],[112,6,96,4],[112,7,96,5],[113,4,97,2],[113,5,97,3],[113,7,97,5],[113,9,97,7],[113,10,97,8],[114,4,98,2],[114,8,98,2,"useEffect"],[114,14,98,11],[114,15,98,11,"useEffect"],[114,24,98,11],[114,26,98,12],[114,32,98,18],[115,6,99,4],[115,10,99,8,"state"],[115,15,99,13],[115,16,99,14,"firstRender"],[115,27,99,25],[115,29,99,27],[116,8,100,6,"state"],[116,13,100,11],[116,14,100,12,"firstRender"],[116,25,100,23],[116,28,100,26],[116,33,100,31],[117,6,101,4],[117,7,101,5],[117,13,101,11],[118,8,102,6,"updateAttachedGestures"],[118,30,102,28],[118,31,102,29],[118,32,102,30],[119,6,103,4],[120,4,104,2],[120,5,104,3],[120,7,104,5],[120,8,104,6,"props"],[120,13,104,11],[120,14,104,12],[120,15,104,13],[121,4,105,2],[121,8,105,2,"useMountReactions"],[121,26,105,19],[121,27,105,19,"useMountReactions"],[121,44,105,19],[121,46,105,20,"updateAttachedGestures"],[121,68,105,42],[121,70,105,44,"preparedGesture"],[121,85,105,59],[121,86,105,60],[122,4,107,2],[122,8,107,6,"shouldUseReanimated"],[122,27,107,25],[122,29,107,27],[123,6,108,4],[123,13,108,11],[123,26,108,24,"React"],[123,31,108,29],[123,32,108,29,"default"],[123,39,108,29],[123,40,108,30,"createElement"],[123,53,108,43],[123,54,108,44,"AnimatedWrap"],[123,59,108,56],[123,60,108,56,"AnimatedWrap"],[123,72,108,56],[123,74,108,58],[124,8,109,6,"ref"],[124,11,109,9],[124,13,109,11,"refHandler"],[124,23,109,21],[125,8,110,6,"onGestureHandlerEvent"],[125,29,110,27],[125,31,110,29,"preparedGesture"],[125,46,110,44],[125,47,110,45,"animatedEventHandler"],[126,6,111,4],[126,7,111,5],[126,9,111,7,"props"],[126,14,111,12],[126,15,111,13,"children"],[126,23,111,21],[126,24,111,22],[127,4,112,2],[127,5,112,3],[127,11,112,9],[128,6,113,4],[128,13,113,11],[128,26,113,24,"React"],[128,31,113,29],[128,32,113,29,"default"],[128,39,113,29],[128,40,113,30,"createElement"],[128,53,113,43],[128,54,113,44,"Wrap"],[128,59,113,48],[128,60,113,48,"Wrap"],[128,64,113,48],[128,66,113,50],[129,8,114,6,"ref"],[129,11,114,9],[129,13,114,11,"refHandler"],[130,6,115,4],[130,7,115,5],[130,9,115,7,"props"],[130,14,115,12],[130,15,115,13,"children"],[130,23,115,21],[130,24,115,22],[131,4,116,2],[132,2,117,0],[132,3,117,1],[133,0,117,2],[133,3]],"functionMap":{"names":["<global>","propagateDetectorConfig","GestureDetector","useMemo$argument_0","gesturesToAttach.some$argument_0","useLayoutEffect$argument_0","<anonymous>","useEffect$argument_0"],"mappings":"AAA;ACgB;CDe;+BEiB;mCCU,oCD;oDEC,0BF;kBGuB;WCU;KDG;GHC;YKC;GLM;CFa"},"hasCjsExports":false},"type":"js/module"}]}