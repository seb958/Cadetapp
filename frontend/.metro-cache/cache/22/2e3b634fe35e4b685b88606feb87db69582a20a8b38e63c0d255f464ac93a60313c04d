{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":112},"end":{"line":5,"column":36,"index":148}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":149},"end":{"line":6,"column":40,"index":189}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./Errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":190},"end":{"line":7,"column":44,"index":234}}],"key":"Hc24lHtszv0n4sfQahKq/F+wSE4=","exportNames":["*"],"imports":1}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":235},"end":{"line":8,"column":62,"index":297}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":298},"end":{"line":9,"column":32,"index":330}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* eslint-disable @eslint-community/eslint-comments/no-unlimited-disable */\n  /* eslint-disable */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _constants = require(_dependencyMap[1], \"./constants\");\n  var _Errors = require(_dependencyMap[2], \"./Errors\");\n  var _DraggingGestureHandler = require(_dependencyMap[3], \"./DraggingGestureHandler\");\n  var DraggingGestureHandler = _interopDefault(_DraggingGestureHandler);\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  class FlingGestureHandler extends DraggingGestureHandler.default {\n    get name() {\n      return 'swipe';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Swipe;\n    }\n    onGestureActivated(event) {\n      this.sendEvent({\n        ...event,\n        eventType: Hammer.default.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      });\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent({\n        ...event,\n        eventType: Hammer.default.INPUT_END,\n        isFinal: true\n      });\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.hasGestureFailed) {\n        return;\n      }\n      // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n      if (ev.isFinal) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore FIXME(TS)\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        // @ts-ignore FIXME(TS)\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n    getTargetDirections(direction) {\n      const directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(Hammer.default.DIRECTION_RIGHT);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(Hammer.default.DIRECTION_LEFT);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(Hammer.default.DIRECTION_UP);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(Hammer.default.DIRECTION_DOWN);\n      }\n      // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n      return directions;\n    }\n    getDirection() {\n      // @ts-ignore FIXME(TS)\n      const {\n        direction\n      } = this.getConfig();\n      let directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(Hammer.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(Hammer.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(Hammer.default.DIRECTION_VERTICAL);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(Hammer.default.DIRECTION_VERTICAL);\n      }\n      directions = [...new Set(directions)];\n      if (directions.length === 0) return Hammer.default.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return Hammer.default.DIRECTION_ALL;\n    }\n    isGestureEnabledForEvent({\n      numberOfPointers\n    }, _recognizer, {\n      maxPointers: pointerLength\n    }) {\n      const validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n    updateGestureConfig({\n      numberOfPointers = 1,\n      direction,\n      ...props\n    }) {\n      if ((0, _utils.isnan)(direction) || typeof direction !== 'number') {\n        throw new _Errors.GesturePropError('direction', direction, 'number');\n      }\n      return super.updateGestureConfig({\n        numberOfPointers,\n        direction,\n        ...props\n      });\n    }\n  }\n  var _default = FlingGestureHandler;\n});","lineCount":150,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,4,0],[6,2,4,0,"Object"],[6,8,4,0],[6,9,4,0,"defineProperty"],[6,23,4,0],[6,24,4,0,"exports"],[6,31,4,0],[7,4,4,0,"value"],[7,9,4,0],[8,2,4,0],[9,2,4,0],[9,11,4,0,"_interopDefault"],[9,27,4,0,"e"],[9,28,4,0],[10,4,4,0],[10,11,4,0,"e"],[10,12,4,0],[10,16,4,0,"e"],[10,17,4,0],[10,18,4,0,"__esModule"],[10,28,4,0],[10,31,4,0,"e"],[10,32,4,0],[11,6,4,0,"default"],[11,13,4,0],[11,15,4,0,"e"],[12,4,4,0],[13,2,4,0],[14,2,132,0,"Object"],[14,8,132,0],[14,9,132,0,"defineProperty"],[14,23,132,0],[14,24,132,0,"exports"],[14,31,132,0],[15,4,132,0,"enumerable"],[15,14,132,0],[16,4,132,0,"get"],[16,7,132,0],[16,18,132,0,"get"],[16,19,132,0],[17,6,132,0],[17,13,132,0,"_default"],[17,21,132,0],[18,4,132,0],[19,2,132,0],[20,2,5,0],[20,6,5,0,"_egjsHammerjs"],[20,19,5,0],[20,22,5,0,"require"],[20,29,5,0],[20,30,5,0,"_dependencyMap"],[20,44,5,0],[21,2,5,0],[21,6,5,0,"Hammer"],[21,12,5,0],[21,15,5,0,"_interopDefault"],[21,30,5,0],[21,31,5,0,"_egjsHammerjs"],[21,44,5,0],[22,2,6,0],[22,6,6,0,"_constants"],[22,16,6,0],[22,19,6,0,"require"],[22,26,6,0],[22,27,6,0,"_dependencyMap"],[22,41,6,0],[23,2,7,0],[23,6,7,0,"_Errors"],[23,13,7,0],[23,16,7,0,"require"],[23,23,7,0],[23,24,7,0,"_dependencyMap"],[23,38,7,0],[24,2,8,0],[24,6,8,0,"_DraggingGestureHandler"],[24,29,8,0],[24,32,8,0,"require"],[24,39,8,0],[24,40,8,0,"_dependencyMap"],[24,54,8,0],[25,2,8,0],[25,6,8,0,"DraggingGestureHandler"],[25,28,8,0],[25,31,8,0,"_interopDefault"],[25,46,8,0],[25,47,8,0,"_DraggingGestureHandler"],[25,70,8,0],[26,2,9,0],[26,6,9,0,"_utils"],[26,12,9,0],[26,15,9,0,"require"],[26,22,9,0],[26,23,9,0,"_dependencyMap"],[26,37,9,0],[27,2,10,0],[27,8,10,6,"FlingGestureHandler"],[27,27,10,25],[27,36,10,34,"DraggingGestureHandler"],[27,58,10,56],[27,59,10,56,"default"],[27,66,10,56],[27,67,10,57],[28,4,11,2],[28,8,11,6,"name"],[28,12,11,10,"name"],[28,13,11,10],[28,15,11,13],[29,6,12,4],[29,13,12,11],[29,20,12,18],[30,4,13,2],[31,4,14,2],[31,8,14,6,"NativeGestureClass"],[31,26,14,24,"NativeGestureClass"],[31,27,14,24],[31,29,14,27],[32,6,15,4],[32,13,15,11,"Hammer"],[32,19,15,17],[32,20,15,17,"default"],[32,27,15,17],[32,28,15,18,"Swipe"],[32,33,15,23],[33,4,16,2],[34,4,17,2,"onGestureActivated"],[34,22,17,20,"onGestureActivated"],[34,23,17,21,"event"],[34,28,17,26],[34,30,17,28],[35,6,18,4],[35,10,18,8],[35,11,18,9,"sendEvent"],[35,20,18,18],[35,21,18,19],[36,8,19,6],[36,11,19,9,"event"],[36,16,19,14],[37,8,20,6,"eventType"],[37,17,20,15],[37,19,20,17,"Hammer"],[37,25,20,23],[37,26,20,23,"default"],[37,33,20,23],[37,34,20,24,"INPUT_MOVE"],[37,44,20,34],[38,8,21,6,"isFinal"],[38,15,21,13],[38,17,21,15],[38,22,21,20],[39,8,22,6,"isFirst"],[39,15,22,13],[39,17,22,15],[40,6,23,4],[40,7,23,5],[40,8,23,6],[41,6,24,4],[41,10,24,8],[41,11,24,9,"isGestureRunning"],[41,27,24,25],[41,30,24,28],[41,35,24,33],[42,6,25,4],[42,10,25,8],[42,11,25,9,"hasGestureFailed"],[42,27,25,25],[42,30,25,28],[42,35,25,33],[43,6,26,4],[43,10,26,8],[43,11,26,9,"sendEvent"],[43,20,26,18],[43,21,26,19],[44,8,27,6],[44,11,27,9,"event"],[44,16,27,14],[45,8,28,6,"eventType"],[45,17,28,15],[45,19,28,17,"Hammer"],[45,25,28,23],[45,26,28,23,"default"],[45,33,28,23],[45,34,28,24,"INPUT_END"],[45,43,28,33],[46,8,29,6,"isFinal"],[46,15,29,13],[46,17,29,15],[47,6,30,4],[47,7,30,5],[47,8,30,6],[48,4,31,2],[49,4,32,2,"onRawEvent"],[49,14,32,12,"onRawEvent"],[49,15,32,13,"ev"],[49,17,32,15],[49,19,32,17],[50,6,33,4],[50,11,33,9],[50,12,33,10,"onRawEvent"],[50,22,33,20],[50,23,33,21,"ev"],[50,25,33,23],[50,26,33,24],[51,6,34,4],[51,10,34,8],[51,14,34,12],[51,15,34,13,"hasGestureFailed"],[51,31,34,29],[51,33,34,31],[52,8,35,6],[53,6,36,4],[54,6,37,4],[55,6,38,4],[56,6,39,4],[56,10,39,8,"ev"],[56,12,39,10],[56,13,39,11,"isFinal"],[56,20,39,18],[56,22,39,20],[57,8,40,6,"setTimeout"],[57,18,40,16],[57,19,40,17],[57,25,40,23],[58,10,41,8],[58,14,41,12],[58,18,41,16],[58,19,41,17,"isGestureRunning"],[58,35,41,33],[58,37,41,35],[59,12,42,10],[59,16,42,14],[59,17,42,15,"cancelEvent"],[59,28,42,26],[59,29,42,27,"ev"],[59,31,42,29],[59,32,42,30],[60,10,43,8],[61,8,44,6],[61,9,44,7],[61,10,44,8],[62,6,45,4],[62,7,45,5],[62,13,45,11],[62,17,45,15],[62,18,45,16],[62,22,45,20],[62,23,45,21,"hasGestureFailed"],[62,39,45,37],[62,43,45,41],[62,44,45,42],[62,48,45,46],[62,49,45,47,"isGestureRunning"],[62,65,45,63],[62,67,45,65],[63,8,46,6],[64,8,47,6],[64,14,47,12,"gesture"],[64,21,47,19],[64,24,47,22],[64,28,47,26],[64,29,47,27,"hammer"],[64,35,47,33],[64,36,47,34,"get"],[64,39,47,37],[64,40,47,38],[64,44,47,42],[64,45,47,43,"name"],[64,49,47,47],[64,50,47,48],[65,8,48,6],[66,8,49,6],[66,12,49,10,"gesture"],[66,19,49,17],[66,20,49,18,"options"],[66,27,49,25],[66,28,49,26,"enable"],[66,34,49,32],[66,35,49,33,"gesture"],[66,42,49,40],[66,44,49,42,"ev"],[66,46,49,44],[66,47,49,45],[66,49,49,47],[67,10,50,8],[67,14,50,12],[67,15,50,13,"onStart"],[67,22,50,20],[67,23,50,21,"ev"],[67,25,50,23],[67,26,50,24],[68,10,51,8],[68,14,51,12],[68,15,51,13,"sendEvent"],[68,24,51,22],[68,25,51,23,"ev"],[68,27,51,25],[68,28,51,26],[69,8,52,6],[70,6,53,4],[71,4,54,2],[72,4,55,2,"getHammerConfig"],[72,19,55,17,"getHammerConfig"],[72,20,55,17],[72,22,55,20],[73,6,56,4],[73,13,56,11],[74,8,57,6],[75,8,58,6,"pointers"],[75,16,58,14],[75,18,58,16],[75,22,58,20],[75,23,58,21,"config"],[75,29,58,27],[75,30,58,28,"numberOfPointers"],[75,46,58,44],[76,8,59,6,"direction"],[76,17,59,15],[76,19,59,17],[76,23,59,21],[76,24,59,22,"getDirection"],[76,36,59,34],[76,37,59,35],[77,6,60,4],[77,7,60,5],[78,4,61,2],[79,4,62,2,"getTargetDirections"],[79,23,62,21,"getTargetDirections"],[79,24,62,22,"direction"],[79,33,62,31],[79,35,62,33],[80,6,63,4],[80,12,63,10,"directions"],[80,22,63,20],[80,25,63,23],[80,27,63,25],[81,6,64,4],[81,10,64,8,"direction"],[81,19,64,17],[81,22,64,20,"Direction"],[81,32,64,29],[81,33,64,29,"Direction"],[81,42,64,29],[81,43,64,30,"RIGHT"],[81,48,64,35],[81,50,64,37],[82,8,65,6,"directions"],[82,18,65,16],[82,19,65,17,"push"],[82,23,65,21],[82,24,65,22,"Hammer"],[82,30,65,28],[82,31,65,28,"default"],[82,38,65,28],[82,39,65,29,"DIRECTION_RIGHT"],[82,54,65,44],[82,55,65,45],[83,6,66,4],[84,6,67,4],[84,10,67,8,"direction"],[84,19,67,17],[84,22,67,20,"Direction"],[84,32,67,29],[84,33,67,29,"Direction"],[84,42,67,29],[84,43,67,30,"LEFT"],[84,47,67,34],[84,49,67,36],[85,8,68,6,"directions"],[85,18,68,16],[85,19,68,17,"push"],[85,23,68,21],[85,24,68,22,"Hammer"],[85,30,68,28],[85,31,68,28,"default"],[85,38,68,28],[85,39,68,29,"DIRECTION_LEFT"],[85,53,68,43],[85,54,68,44],[86,6,69,4],[87,6,70,4],[87,10,70,8,"direction"],[87,19,70,17],[87,22,70,20,"Direction"],[87,32,70,29],[87,33,70,29,"Direction"],[87,42,70,29],[87,43,70,30,"UP"],[87,45,70,32],[87,47,70,34],[88,8,71,6,"directions"],[88,18,71,16],[88,19,71,17,"push"],[88,23,71,21],[88,24,71,22,"Hammer"],[88,30,71,28],[88,31,71,28,"default"],[88,38,71,28],[88,39,71,29,"DIRECTION_UP"],[88,51,71,41],[88,52,71,42],[89,6,72,4],[90,6,73,4],[90,10,73,8,"direction"],[90,19,73,17],[90,22,73,20,"Direction"],[90,32,73,29],[90,33,73,29,"Direction"],[90,42,73,29],[90,43,73,30,"DOWN"],[90,47,73,34],[90,49,73,36],[91,8,74,6,"directions"],[91,18,74,16],[91,19,74,17,"push"],[91,23,74,21],[91,24,74,22,"Hammer"],[91,30,74,28],[91,31,74,28,"default"],[91,38,74,28],[91,39,74,29,"DIRECTION_DOWN"],[91,53,74,43],[91,54,74,44],[92,6,75,4],[93,6,76,4],[94,6,77,4],[94,13,77,11,"directions"],[94,23,77,21],[95,4,78,2],[96,4,79,2,"getDirection"],[96,16,79,14,"getDirection"],[96,17,79,14],[96,19,79,17],[97,6,80,4],[98,6,81,4],[98,12,81,10],[99,8,82,6,"direction"],[100,6,83,4],[100,7,83,5],[100,10,83,8],[100,14,83,12],[100,15,83,13,"getConfig"],[100,24,83,22],[100,25,83,23],[100,26,83,24],[101,6,84,4],[101,10,84,8,"directions"],[101,20,84,18],[101,23,84,21],[101,25,84,23],[102,6,85,4],[102,10,85,8,"direction"],[102,19,85,17],[102,22,85,20,"Direction"],[102,32,85,29],[102,33,85,29,"Direction"],[102,42,85,29],[102,43,85,30,"RIGHT"],[102,48,85,35],[102,50,85,37],[103,8,86,6,"directions"],[103,18,86,16],[103,19,86,17,"push"],[103,23,86,21],[103,24,86,22,"Hammer"],[103,30,86,28],[103,31,86,28,"default"],[103,38,86,28],[103,39,86,29,"DIRECTION_HORIZONTAL"],[103,59,86,49],[103,60,86,50],[104,6,87,4],[105,6,88,4],[105,10,88,8,"direction"],[105,19,88,17],[105,22,88,20,"Direction"],[105,32,88,29],[105,33,88,29,"Direction"],[105,42,88,29],[105,43,88,30,"LEFT"],[105,47,88,34],[105,49,88,36],[106,8,89,6,"directions"],[106,18,89,16],[106,19,89,17,"push"],[106,23,89,21],[106,24,89,22,"Hammer"],[106,30,89,28],[106,31,89,28,"default"],[106,38,89,28],[106,39,89,29,"DIRECTION_HORIZONTAL"],[106,59,89,49],[106,60,89,50],[107,6,90,4],[108,6,91,4],[108,10,91,8,"direction"],[108,19,91,17],[108,22,91,20,"Direction"],[108,32,91,29],[108,33,91,29,"Direction"],[108,42,91,29],[108,43,91,30,"UP"],[108,45,91,32],[108,47,91,34],[109,8,92,6,"directions"],[109,18,92,16],[109,19,92,17,"push"],[109,23,92,21],[109,24,92,22,"Hammer"],[109,30,92,28],[109,31,92,28,"default"],[109,38,92,28],[109,39,92,29,"DIRECTION_VERTICAL"],[109,57,92,47],[109,58,92,48],[110,6,93,4],[111,6,94,4],[111,10,94,8,"direction"],[111,19,94,17],[111,22,94,20,"Direction"],[111,32,94,29],[111,33,94,29,"Direction"],[111,42,94,29],[111,43,94,30,"DOWN"],[111,47,94,34],[111,49,94,36],[112,8,95,6,"directions"],[112,18,95,16],[112,19,95,17,"push"],[112,23,95,21],[112,24,95,22,"Hammer"],[112,30,95,28],[112,31,95,28,"default"],[112,38,95,28],[112,39,95,29,"DIRECTION_VERTICAL"],[112,57,95,47],[112,58,95,48],[113,6,96,4],[114,6,97,4,"directions"],[114,16,97,14],[114,19,97,17],[114,20,97,18],[114,23,97,21],[114,27,97,25,"Set"],[114,30,97,28],[114,31,97,29,"directions"],[114,41,97,39],[114,42,97,40],[114,43,97,41],[115,6,98,4],[115,10,98,8,"directions"],[115,20,98,18],[115,21,98,19,"length"],[115,27,98,25],[115,32,98,30],[115,33,98,31],[115,35,98,33],[115,42,98,40,"Hammer"],[115,48,98,46],[115,49,98,46,"default"],[115,56,98,46],[115,57,98,47,"DIRECTION_NONE"],[115,71,98,61],[116,6,99,4],[116,10,99,8,"directions"],[116,20,99,18],[116,21,99,19,"length"],[116,27,99,25],[116,32,99,30],[116,33,99,31],[116,35,99,33],[116,42,99,40,"directions"],[116,52,99,50],[116,53,99,51],[116,54,99,52],[116,55,99,53],[117,6,100,4],[117,13,100,11,"Hammer"],[117,19,100,17],[117,20,100,17,"default"],[117,27,100,17],[117,28,100,18,"DIRECTION_ALL"],[117,41,100,31],[118,4,101,2],[119,4,102,2,"isGestureEnabledForEvent"],[119,28,102,26,"isGestureEnabledForEvent"],[119,29,102,27],[120,6,103,4,"numberOfPointers"],[121,4,104,2],[121,5,104,3],[121,7,104,5,"_recognizer"],[121,18,104,16],[121,20,104,18],[122,6,105,4,"maxPointers"],[122,17,105,15],[122,19,105,17,"pointerLength"],[123,4,106,2],[123,5,106,3],[123,7,106,5],[124,6,107,4],[124,12,107,10,"validPointerCount"],[124,29,107,27],[124,32,107,30,"pointerLength"],[124,45,107,43],[124,50,107,48,"numberOfPointers"],[124,66,107,64],[125,6,108,4],[125,10,108,8],[125,11,108,9,"validPointerCount"],[125,28,108,26],[125,32,108,30],[125,36,108,34],[125,37,108,35,"isGestureRunning"],[125,53,108,51],[125,55,108,53],[126,8,109,6],[126,15,109,13],[127,10,110,8,"failed"],[127,16,110,14],[127,18,110,16],[128,8,111,6],[128,9,111,7],[129,6,112,4],[130,6,113,4],[130,13,113,11],[131,8,114,6,"success"],[131,15,114,13],[131,17,114,15,"validPointerCount"],[132,6,115,4],[132,7,115,5],[133,4,116,2],[134,4,117,2,"updateGestureConfig"],[134,23,117,21,"updateGestureConfig"],[134,24,117,22],[135,6,118,4,"numberOfPointers"],[135,22,118,20],[135,25,118,23],[135,26,118,24],[136,6,119,4,"direction"],[136,15,119,13],[137,6,120,4],[137,9,120,7,"props"],[138,4,121,2],[138,5,121,3],[138,7,121,5],[139,6,122,4],[139,10,122,8],[139,14,122,8,"isnan"],[139,20,122,13],[139,21,122,13,"isnan"],[139,26,122,13],[139,28,122,14,"direction"],[139,37,122,23],[139,38,122,24],[139,42,122,28],[139,49,122,35,"direction"],[139,58,122,44],[139,63,122,49],[139,71,122,57],[139,73,122,59],[140,8,123,6],[140,14,123,12],[140,18,123,16,"GesturePropError"],[140,25,123,32],[140,26,123,32,"GesturePropError"],[140,42,123,32],[140,43,123,33],[140,54,123,44],[140,56,123,46,"direction"],[140,65,123,55],[140,67,123,57],[140,75,123,65],[140,76,123,66],[141,6,124,4],[142,6,125,4],[142,13,125,11],[142,18,125,16],[142,19,125,17,"updateGestureConfig"],[142,38,125,36],[142,39,125,37],[143,8,126,6,"numberOfPointers"],[143,24,126,22],[144,8,127,6,"direction"],[144,17,127,15],[145,8,128,6],[145,11,128,9,"props"],[146,6,129,4],[146,7,129,5],[146,8,129,6],[147,4,130,2],[148,2,131,0],[149,2,132,0],[149,6,132,0,"_default"],[149,14,132,0],[149,17,132,15,"FlingGestureHandler"],[149,36,132,34],[150,0,132,35],[150,3]],"functionMap":{"names":["<global>","FlingGestureHandler","get__name","get__NativeGestureClass","onGestureActivated","onRawEvent","setTimeout$argument_0","getHammerConfig","getTargetDirections","getDirection","isGestureEnabledForEvent","updateGestureConfig"],"mappings":"AAA;ACS;ECC;GDE;EEC;GFE;EGC;GHc;EIC;iBCQ;ODI;GJU;EMC;GNM;EOC;GPgB;EQC;GRsB;ESC;GTc;EUC;GVa;CDC"},"hasCjsExports":false},"type":"js/module"}]}