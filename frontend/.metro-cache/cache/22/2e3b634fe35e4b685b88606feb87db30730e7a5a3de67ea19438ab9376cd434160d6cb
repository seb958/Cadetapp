{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":80},"end":{"line":4,"column":36,"index":116}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":117},"end":{"line":5,"column":40,"index":157}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./Errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":158},"end":{"line":6,"column":44,"index":202}}],"key":"Hc24lHtszv0n4sfQahKq/F+wSE4=","exportNames":["*"],"imports":1}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":203},"end":{"line":7,"column":62,"index":265}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":266},"end":{"line":8,"column":32,"index":298}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _constants = require(_dependencyMap[1], \"./constants\");\n  var _Errors = require(_dependencyMap[2], \"./Errors\");\n  var _DraggingGestureHandler = require(_dependencyMap[3], \"./DraggingGestureHandler\");\n  var DraggingGestureHandler = _interopDefault(_DraggingGestureHandler);\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  /* eslint-disable eslint-comments/no-unlimited-disable */\n\n  /* eslint-disable */\n\n  class FlingGestureHandler extends DraggingGestureHandler.default {\n    get name() {\n      return 'swipe';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Swipe;\n    }\n    onGestureActivated(event) {\n      this.sendEvent({\n        ...event,\n        eventType: Hammer.default.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      });\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent({\n        ...event,\n        eventType: Hammer.default.INPUT_END,\n        isFinal: true\n      });\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.hasGestureFailed) {\n        return;\n      } // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n\n      if (ev.isFinal) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name); // @ts-ignore FIXME(TS)\n\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        // @ts-ignore FIXME(TS)\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n    getTargetDirections(direction) {\n      const directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(Hammer.default.DIRECTION_RIGHT);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(Hammer.default.DIRECTION_LEFT);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(Hammer.default.DIRECTION_UP);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(Hammer.default.DIRECTION_DOWN);\n      } // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n\n      return directions;\n    }\n    getDirection() {\n      // @ts-ignore FIXME(TS)\n      const {\n        direction\n      } = this.getConfig();\n      let directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(Hammer.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(Hammer.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(Hammer.default.DIRECTION_VERTICAL);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(Hammer.default.DIRECTION_VERTICAL);\n      }\n      directions = [...new Set(directions)];\n      if (directions.length === 0) return Hammer.default.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return Hammer.default.DIRECTION_ALL;\n    }\n    isGestureEnabledForEvent({\n      numberOfPointers\n    }, _recognizer, {\n      maxPointers: pointerLength\n    }) {\n      const validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n    updateGestureConfig({\n      numberOfPointers = 1,\n      direction,\n      ...props\n    }) {\n      if ((0, _utils.isnan)(direction) || typeof direction !== 'number') {\n        throw new _Errors.GesturePropError('direction', direction, 'number');\n      }\n      return super.updateGestureConfig({\n        numberOfPointers,\n        direction,\n        ...props\n      });\n    }\n  }\n  var _default = FlingGestureHandler;\n});","lineCount":152,"map":[[12,2,155,0,"Object"],[12,8,155,0],[12,9,155,0,"defineProperty"],[12,23,155,0],[12,24,155,0,"exports"],[12,31,155,0],[13,4,155,0,"enumerable"],[13,14,155,0],[14,4,155,0,"get"],[14,7,155,0],[14,18,155,0,"get"],[14,19,155,0],[15,6,155,0],[15,13,155,0,"_default"],[15,21,155,0],[16,4,155,0],[17,2,155,0],[18,2,4,0],[18,6,4,0,"_egjsHammerjs"],[18,19,4,0],[18,22,4,0,"require"],[18,29,4,0],[18,30,4,0,"_dependencyMap"],[18,44,4,0],[19,2,4,0],[19,6,4,0,"Hammer"],[19,12,4,0],[19,15,4,0,"_interopDefault"],[19,30,4,0],[19,31,4,0,"_egjsHammerjs"],[19,44,4,0],[20,2,5,0],[20,6,5,0,"_constants"],[20,16,5,0],[20,19,5,0,"require"],[20,26,5,0],[20,27,5,0,"_dependencyMap"],[20,41,5,0],[21,2,6,0],[21,6,6,0,"_Errors"],[21,13,6,0],[21,16,6,0,"require"],[21,23,6,0],[21,24,6,0,"_dependencyMap"],[21,38,6,0],[22,2,7,0],[22,6,7,0,"_DraggingGestureHandler"],[22,29,7,0],[22,32,7,0,"require"],[22,39,7,0],[22,40,7,0,"_dependencyMap"],[22,54,7,0],[23,2,7,0],[23,6,7,0,"DraggingGestureHandler"],[23,28,7,0],[23,31,7,0,"_interopDefault"],[23,46,7,0],[23,47,7,0,"_DraggingGestureHandler"],[23,70,7,0],[24,2,8,0],[24,6,8,0,"_utils"],[24,12,8,0],[24,15,8,0,"require"],[24,22,8,0],[24,23,8,0,"_dependencyMap"],[24,37,8,0],[25,2,1,0],[27,2,3,0],[29,2,10,0],[29,8,10,6,"FlingGestureHandler"],[29,27,10,25],[29,36,10,34,"DraggingGestureHandler"],[29,58,10,56],[29,59,10,56,"default"],[29,66,10,56],[29,67,10,57],[30,4,11,2],[30,8,11,6,"name"],[30,12,11,10,"name"],[30,13,11,10],[30,15,11,13],[31,6,12,4],[31,13,12,11],[31,20,12,18],[32,4,13,2],[33,4,15,2],[33,8,15,6,"NativeGestureClass"],[33,26,15,24,"NativeGestureClass"],[33,27,15,24],[33,29,15,27],[34,6,16,4],[34,13,16,11,"Hammer"],[34,19,16,17],[34,20,16,17,"default"],[34,27,16,17],[34,28,16,18,"Swipe"],[34,33,16,23],[35,4,17,2],[36,4,19,2,"onGestureActivated"],[36,22,19,20,"onGestureActivated"],[36,23,19,21,"event"],[36,28,19,26],[36,30,19,28],[37,6,20,4],[37,10,20,8],[37,11,20,9,"sendEvent"],[37,20,20,18],[37,21,20,19],[38,8,20,21],[38,11,20,24,"event"],[38,16,20,29],[39,8,21,6,"eventType"],[39,17,21,15],[39,19,21,17,"Hammer"],[39,25,21,23],[39,26,21,23,"default"],[39,33,21,23],[39,34,21,24,"INPUT_MOVE"],[39,44,21,34],[40,8,22,6,"isFinal"],[40,15,22,13],[40,17,22,15],[40,22,22,20],[41,8,23,6,"isFirst"],[41,15,23,13],[41,17,23,15],[42,6,24,4],[42,7,24,5],[42,8,24,6],[43,6,25,4],[43,10,25,8],[43,11,25,9,"isGestureRunning"],[43,27,25,25],[43,30,25,28],[43,35,25,33],[44,6,26,4],[44,10,26,8],[44,11,26,9,"hasGestureFailed"],[44,27,26,25],[44,30,26,28],[44,35,26,33],[45,6,27,4],[45,10,27,8],[45,11,27,9,"sendEvent"],[45,20,27,18],[45,21,27,19],[46,8,27,21],[46,11,27,24,"event"],[46,16,27,29],[47,8,28,6,"eventType"],[47,17,28,15],[47,19,28,17,"Hammer"],[47,25,28,23],[47,26,28,23,"default"],[47,33,28,23],[47,34,28,24,"INPUT_END"],[47,43,28,33],[48,8,29,6,"isFinal"],[48,15,29,13],[48,17,29,15],[49,6,30,4],[49,7,30,5],[49,8,30,6],[50,4,31,2],[51,4,33,2,"onRawEvent"],[51,14,33,12,"onRawEvent"],[51,15,33,13,"ev"],[51,17,33,15],[51,19,33,17],[52,6,34,4],[52,11,34,9],[52,12,34,10,"onRawEvent"],[52,22,34,20],[52,23,34,21,"ev"],[52,25,34,23],[52,26,34,24],[53,6,36,4],[53,10,36,8],[53,14,36,12],[53,15,36,13,"hasGestureFailed"],[53,31,36,29],[53,33,36,31],[54,8,37,6],[55,6,38,4],[55,7,38,5],[55,8,38,6],[56,6,39,4],[58,6,42,4],[58,10,42,8,"ev"],[58,12,42,10],[58,13,42,11,"isFinal"],[58,20,42,18],[58,22,42,20],[59,8,43,6,"setTimeout"],[59,18,43,16],[59,19,43,17],[59,25,43,23],[60,10,44,8],[60,14,44,12],[60,18,44,16],[60,19,44,17,"isGestureRunning"],[60,35,44,33],[60,37,44,35],[61,12,45,10],[61,16,45,14],[61,17,45,15,"cancelEvent"],[61,28,45,26],[61,29,45,27,"ev"],[61,31,45,29],[61,32,45,30],[62,10,46,8],[63,8,47,6],[63,9,47,7],[63,10,47,8],[64,6,48,4],[64,7,48,5],[64,13,48,11],[64,17,48,15],[64,18,48,16],[64,22,48,20],[64,23,48,21,"hasGestureFailed"],[64,39,48,37],[64,43,48,41],[64,44,48,42],[64,48,48,46],[64,49,48,47,"isGestureRunning"],[64,65,48,63],[64,67,48,65],[65,8,49,6],[66,8,50,6],[66,14,50,12,"gesture"],[66,21,50,19],[66,24,50,22],[66,28,50,26],[66,29,50,27,"hammer"],[66,35,50,33],[66,36,50,34,"get"],[66,39,50,37],[66,40,50,38],[66,44,50,42],[66,45,50,43,"name"],[66,49,50,47],[66,50,50,48],[66,51,50,49],[66,52,50,50],[68,8,52,6],[68,12,52,10,"gesture"],[68,19,52,17],[68,20,52,18,"options"],[68,27,52,25],[68,28,52,26,"enable"],[68,34,52,32],[68,35,52,33,"gesture"],[68,42,52,40],[68,44,52,42,"ev"],[68,46,52,44],[68,47,52,45],[68,49,52,47],[69,10,53,8],[69,14,53,12],[69,15,53,13,"onStart"],[69,22,53,20],[69,23,53,21,"ev"],[69,25,53,23],[69,26,53,24],[70,10,54,8],[70,14,54,12],[70,15,54,13,"sendEvent"],[70,24,54,22],[70,25,54,23,"ev"],[70,27,54,25],[70,28,54,26],[71,8,55,6],[72,6,56,4],[73,4,57,2],[74,4,59,2,"getHammerConfig"],[74,19,59,17,"getHammerConfig"],[74,20,59,17],[74,22,59,20],[75,6,60,4],[75,13,60,11],[76,8,61,6],[77,8,62,6,"pointers"],[77,16,62,14],[77,18,62,16],[77,22,62,20],[77,23,62,21,"config"],[77,29,62,27],[77,30,62,28,"numberOfPointers"],[77,46,62,44],[78,8,63,6,"direction"],[78,17,63,15],[78,19,63,17],[78,23,63,21],[78,24,63,22,"getDirection"],[78,36,63,34],[78,37,63,35],[79,6,64,4],[79,7,64,5],[80,4,65,2],[81,4,67,2,"getTargetDirections"],[81,23,67,21,"getTargetDirections"],[81,24,67,22,"direction"],[81,33,67,31],[81,35,67,33],[82,6,68,4],[82,12,68,10,"directions"],[82,22,68,20],[82,25,68,23],[82,27,68,25],[83,6,70,4],[83,10,70,8,"direction"],[83,19,70,17],[83,22,70,20,"Direction"],[83,32,70,29],[83,33,70,29,"Direction"],[83,42,70,29],[83,43,70,30,"RIGHT"],[83,48,70,35],[83,50,70,37],[84,8,71,6,"directions"],[84,18,71,16],[84,19,71,17,"push"],[84,23,71,21],[84,24,71,22,"Hammer"],[84,30,71,28],[84,31,71,28,"default"],[84,38,71,28],[84,39,71,29,"DIRECTION_RIGHT"],[84,54,71,44],[84,55,71,45],[85,6,72,4],[86,6,74,4],[86,10,74,8,"direction"],[86,19,74,17],[86,22,74,20,"Direction"],[86,32,74,29],[86,33,74,29,"Direction"],[86,42,74,29],[86,43,74,30,"LEFT"],[86,47,74,34],[86,49,74,36],[87,8,75,6,"directions"],[87,18,75,16],[87,19,75,17,"push"],[87,23,75,21],[87,24,75,22,"Hammer"],[87,30,75,28],[87,31,75,28,"default"],[87,38,75,28],[87,39,75,29,"DIRECTION_LEFT"],[87,53,75,43],[87,54,75,44],[88,6,76,4],[89,6,78,4],[89,10,78,8,"direction"],[89,19,78,17],[89,22,78,20,"Direction"],[89,32,78,29],[89,33,78,29,"Direction"],[89,42,78,29],[89,43,78,30,"UP"],[89,45,78,32],[89,47,78,34],[90,8,79,6,"directions"],[90,18,79,16],[90,19,79,17,"push"],[90,23,79,21],[90,24,79,22,"Hammer"],[90,30,79,28],[90,31,79,28,"default"],[90,38,79,28],[90,39,79,29,"DIRECTION_UP"],[90,51,79,41],[90,52,79,42],[91,6,80,4],[92,6,82,4],[92,10,82,8,"direction"],[92,19,82,17],[92,22,82,20,"Direction"],[92,32,82,29],[92,33,82,29,"Direction"],[92,42,82,29],[92,43,82,30,"DOWN"],[92,47,82,34],[92,49,82,36],[93,8,83,6,"directions"],[93,18,83,16],[93,19,83,17,"push"],[93,23,83,21],[93,24,83,22,"Hammer"],[93,30,83,28],[93,31,83,28,"default"],[93,38,83,28],[93,39,83,29,"DIRECTION_DOWN"],[93,53,83,43],[93,54,83,44],[94,6,84,4],[94,7,84,5],[94,8,84,6],[96,6,87,4],[96,13,87,11,"directions"],[96,23,87,21],[97,4,88,2],[98,4,90,2,"getDirection"],[98,16,90,14,"getDirection"],[98,17,90,14],[98,19,90,17],[99,6,91,4],[100,6,92,4],[100,12,92,10],[101,8,93,6,"direction"],[102,6,94,4],[102,7,94,5],[102,10,94,8],[102,14,94,12],[102,15,94,13,"getConfig"],[102,24,94,22],[102,25,94,23],[102,26,94,24],[103,6,95,4],[103,10,95,8,"directions"],[103,20,95,18],[103,23,95,21],[103,25,95,23],[104,6,97,4],[104,10,97,8,"direction"],[104,19,97,17],[104,22,97,20,"Direction"],[104,32,97,29],[104,33,97,29,"Direction"],[104,42,97,29],[104,43,97,30,"RIGHT"],[104,48,97,35],[104,50,97,37],[105,8,98,6,"directions"],[105,18,98,16],[105,19,98,17,"push"],[105,23,98,21],[105,24,98,22,"Hammer"],[105,30,98,28],[105,31,98,28,"default"],[105,38,98,28],[105,39,98,29,"DIRECTION_HORIZONTAL"],[105,59,98,49],[105,60,98,50],[106,6,99,4],[107,6,101,4],[107,10,101,8,"direction"],[107,19,101,17],[107,22,101,20,"Direction"],[107,32,101,29],[107,33,101,29,"Direction"],[107,42,101,29],[107,43,101,30,"LEFT"],[107,47,101,34],[107,49,101,36],[108,8,102,6,"directions"],[108,18,102,16],[108,19,102,17,"push"],[108,23,102,21],[108,24,102,22,"Hammer"],[108,30,102,28],[108,31,102,28,"default"],[108,38,102,28],[108,39,102,29,"DIRECTION_HORIZONTAL"],[108,59,102,49],[108,60,102,50],[109,6,103,4],[110,6,105,4],[110,10,105,8,"direction"],[110,19,105,17],[110,22,105,20,"Direction"],[110,32,105,29],[110,33,105,29,"Direction"],[110,42,105,29],[110,43,105,30,"UP"],[110,45,105,32],[110,47,105,34],[111,8,106,6,"directions"],[111,18,106,16],[111,19,106,17,"push"],[111,23,106,21],[111,24,106,22,"Hammer"],[111,30,106,28],[111,31,106,28,"default"],[111,38,106,28],[111,39,106,29,"DIRECTION_VERTICAL"],[111,57,106,47],[111,58,106,48],[112,6,107,4],[113,6,109,4],[113,10,109,8,"direction"],[113,19,109,17],[113,22,109,20,"Direction"],[113,32,109,29],[113,33,109,29,"Direction"],[113,42,109,29],[113,43,109,30,"DOWN"],[113,47,109,34],[113,49,109,36],[114,8,110,6,"directions"],[114,18,110,16],[114,19,110,17,"push"],[114,23,110,21],[114,24,110,22,"Hammer"],[114,30,110,28],[114,31,110,28,"default"],[114,38,110,28],[114,39,110,29,"DIRECTION_VERTICAL"],[114,57,110,47],[114,58,110,48],[115,6,111,4],[116,6,113,4,"directions"],[116,16,113,14],[116,19,113,17],[116,20,113,18],[116,23,113,21],[116,27,113,25,"Set"],[116,30,113,28],[116,31,113,29,"directions"],[116,41,113,39],[116,42,113,40],[116,43,113,41],[117,6,114,4],[117,10,114,8,"directions"],[117,20,114,18],[117,21,114,19,"length"],[117,27,114,25],[117,32,114,30],[117,33,114,31],[117,35,114,33],[117,42,114,40,"Hammer"],[117,48,114,46],[117,49,114,46,"default"],[117,56,114,46],[117,57,114,47,"DIRECTION_NONE"],[117,71,114,61],[118,6,115,4],[118,10,115,8,"directions"],[118,20,115,18],[118,21,115,19,"length"],[118,27,115,25],[118,32,115,30],[118,33,115,31],[118,35,115,33],[118,42,115,40,"directions"],[118,52,115,50],[118,53,115,51],[118,54,115,52],[118,55,115,53],[119,6,116,4],[119,13,116,11,"Hammer"],[119,19,116,17],[119,20,116,17,"default"],[119,27,116,17],[119,28,116,18,"DIRECTION_ALL"],[119,41,116,31],[120,4,117,2],[121,4,119,2,"isGestureEnabledForEvent"],[121,28,119,26,"isGestureEnabledForEvent"],[121,29,119,27],[122,6,120,4,"numberOfPointers"],[123,4,121,2],[123,5,121,3],[123,7,121,5,"_recognizer"],[123,18,121,16],[123,20,121,18],[124,6,122,4,"maxPointers"],[124,17,122,15],[124,19,122,17,"pointerLength"],[125,4,123,2],[125,5,123,3],[125,7,123,5],[126,6,124,4],[126,12,124,10,"validPointerCount"],[126,29,124,27],[126,32,124,30,"pointerLength"],[126,45,124,43],[126,50,124,48,"numberOfPointers"],[126,66,124,64],[127,6,126,4],[127,10,126,8],[127,11,126,9,"validPointerCount"],[127,28,126,26],[127,32,126,30],[127,36,126,34],[127,37,126,35,"isGestureRunning"],[127,53,126,51],[127,55,126,53],[128,8,127,6],[128,15,127,13],[129,10,128,8,"failed"],[129,16,128,14],[129,18,128,16],[130,8,129,6],[130,9,129,7],[131,6,130,4],[132,6,132,4],[132,13,132,11],[133,8,133,6,"success"],[133,15,133,13],[133,17,133,15,"validPointerCount"],[134,6,134,4],[134,7,134,5],[135,4,135,2],[136,4,137,2,"updateGestureConfig"],[136,23,137,21,"updateGestureConfig"],[136,24,137,22],[137,6,138,4,"numberOfPointers"],[137,22,138,20],[137,25,138,23],[137,26,138,24],[138,6,139,4,"direction"],[138,15,139,13],[139,6,140,4],[139,9,140,7,"props"],[140,4,141,2],[140,5,141,3],[140,7,141,5],[141,6,142,4],[141,10,142,8],[141,14,142,8,"isnan"],[141,20,142,13],[141,21,142,13,"isnan"],[141,26,142,13],[141,28,142,14,"direction"],[141,37,142,23],[141,38,142,24],[141,42,142,28],[141,49,142,35,"direction"],[141,58,142,44],[141,63,142,49],[141,71,142,57],[141,73,142,59],[142,8,143,6],[142,14,143,12],[142,18,143,16,"GesturePropError"],[142,25,143,32],[142,26,143,32,"GesturePropError"],[142,42,143,32],[142,43,143,33],[142,54,143,44],[142,56,143,46,"direction"],[142,65,143,55],[142,67,143,57],[142,75,143,65],[142,76,143,66],[143,6,144,4],[144,6,146,4],[144,13,146,11],[144,18,146,16],[144,19,146,17,"updateGestureConfig"],[144,38,146,36],[144,39,146,37],[145,8,147,6,"numberOfPointers"],[145,24,147,22],[146,8,148,6,"direction"],[146,17,148,15],[147,8,149,6],[147,11,149,9,"props"],[148,6,150,4],[148,7,150,5],[148,8,150,6],[149,4,151,2],[150,2,153,0],[151,2,155,0],[151,6,155,0,"_default"],[151,14,155,0],[151,17,155,15,"FlingGestureHandler"],[151,36,155,34],[152,0,155,35],[152,3]],"functionMap":{"names":["<global>","FlingGestureHandler","get__name","get__NativeGestureClass","onGestureActivated","onRawEvent","setTimeout$argument_0","getHammerConfig","getTargetDirections","getDirection","isGestureEnabledForEvent","updateGestureConfig"],"mappings":"AAA;ACS;ECC;GDE;EEE;GFE;EGE;GHY;EIE;iBCU;ODI;GJU;EME;GNM;EOE;GPqB;EQE;GR2B;ESE;GTgB;EUE;GVc;CDE"},"hasCjsExports":false},"type":"js/module"}]}