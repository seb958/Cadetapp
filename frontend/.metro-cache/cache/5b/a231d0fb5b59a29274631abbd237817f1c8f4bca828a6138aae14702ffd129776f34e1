{"dependencies":[{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/findNodeHandle","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"2RP7Dp//wHy/IL2D3/pkDbKjgUI=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":77},"end":{"line":2,"column":52,"index":129}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":35,"index":165}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":166},"end":{"line":4,"column":63,"index":229}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":230},"end":{"line":5,"column":55,"index":285}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.filterConfig = filterConfig;\n  exports.transformIntoHandlerTags = transformIntoHandlerTags;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[0], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsFindNodeHandle = require(_dependencyMap[1], \"react-native-web/dist/exports/findNodeHandle\");\n  var findNodeHandleRN = _interopDefault(_reactNativeWebDistExportsFindNodeHandle);\n  var _handlersRegistry = require(_dependencyMap[2], \"./handlersRegistry\");\n  var _utils = require(_dependencyMap[3], \"../utils\");\n  var _RNGestureHandlerModule = require(_dependencyMap[4], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _ghQueueMicrotask = require(_dependencyMap[5], \"../ghQueueMicrotask\");\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps, defaults = {}) {\n    const filteredConfig = {\n      ...defaults\n    };\n    for (const key of validProps) {\n      let value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _utils.toArray)(handlerIDs);\n    if (Platform.default.OS === 'web') {\n      return handlerIDs.map(({\n        current\n      }) => current).filter(handle => handle);\n    } // converts handler string IDs into their numeric tags\n\n    return handlerIDs.map(handlerID => {\n      var _handlerID$current;\n      return _handlersRegistry.handlerIDToTag[handlerID] || ((_handlerID$current = handlerID.current) === null || _handlerID$current === void 0 ? void 0 : _handlerID$current.handlerTag) || -1;\n    }).filter(handlerTag => handlerTag > 0);\n  }\n  function findNodeHandle(node) {\n    if (Platform.default.OS === 'web') {\n      return node;\n    }\n    return (0, findNodeHandleRN.default)(node);\n  }\n  let flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n        RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":81,"map":[[12,2,13,0,"exports"],[12,9,13,0],[12,10,13,0,"filterConfig"],[12,22,13,0],[12,25,13,0,"filterConfig"],[12,37,13,0],[13,2,38,0,"exports"],[13,9,38,0],[13,10,38,0,"transformIntoHandlerTags"],[13,34,38,0],[13,37,38,0,"transformIntoHandlerTags"],[13,61,38,0],[14,2,54,0,"exports"],[14,9,54,0],[14,10,54,0,"findNodeHandle"],[14,24,54,0],[14,27,54,0,"findNodeHandle"],[14,41,54,0],[15,2,62,0,"exports"],[15,9,62,0],[15,10,62,0,"scheduleFlushOperations"],[15,33,62,0],[15,36,62,0,"scheduleFlushOperations"],[15,59,62,0],[16,2,70,1],[16,6,70,1,"_reactNativeWebDistExportsPlatform"],[16,40,70,1],[16,43,70,1,"require"],[16,50,70,1],[16,51,70,1,"_dependencyMap"],[16,65,70,1],[17,2,70,1],[17,6,70,1,"Platform"],[17,14,70,1],[17,17,70,1,"_interopDefault"],[17,32,70,1],[17,33,70,1,"_reactNativeWebDistExportsPlatform"],[17,67,70,1],[18,2,70,1],[18,6,70,1,"_reactNativeWebDistExportsFindNodeHandle"],[18,46,70,1],[18,49,70,1,"require"],[18,56,70,1],[18,57,70,1,"_dependencyMap"],[18,71,70,1],[19,2,70,1],[19,6,70,1,"findNodeHandleRN"],[19,22,70,1],[19,25,70,1,"_interopDefault"],[19,40,70,1],[19,41,70,1,"_reactNativeWebDistExportsFindNodeHandle"],[19,81,70,1],[20,2,2,0],[20,6,2,0,"_handlersRegistry"],[20,23,2,0],[20,26,2,0,"require"],[20,33,2,0],[20,34,2,0,"_dependencyMap"],[20,48,2,0],[21,2,3,0],[21,6,3,0,"_utils"],[21,12,3,0],[21,15,3,0,"require"],[21,22,3,0],[21,23,3,0,"_dependencyMap"],[21,37,3,0],[22,2,4,0],[22,6,4,0,"_RNGestureHandlerModule"],[22,29,4,0],[22,32,4,0,"require"],[22,39,4,0],[22,40,4,0,"_dependencyMap"],[22,54,4,0],[23,2,4,0],[23,6,4,0,"RNGestureHandlerModule"],[23,28,4,0],[23,31,4,0,"_interopDefault"],[23,46,4,0],[23,47,4,0,"_RNGestureHandlerModule"],[23,70,4,0],[24,2,5,0],[24,6,5,0,"_ghQueueMicrotask"],[24,23,5,0],[24,26,5,0,"require"],[24,33,5,0],[24,34,5,0,"_dependencyMap"],[24,48,5,0],[25,2,7,0],[25,11,7,9,"isConfigParam"],[25,24,7,22,"isConfigParam"],[25,25,7,23,"param"],[25,30,7,28],[25,32,7,30,"name"],[25,36,7,34],[25,38,7,36],[26,4,8,2],[27,4,9,2],[28,4,10,2],[28,11,10,9,"param"],[28,16,10,14],[28,21,10,19,"undefined"],[28,30,10,28],[28,35,10,33,"param"],[28,40,10,38],[28,45,10,43,"Object"],[28,51,10,49],[28,52,10,50,"param"],[28,57,10,55],[28,58,10,56],[28,62,10,60],[28,64,10,62],[28,76,10,74],[28,80,10,78,"param"],[28,85,10,83],[28,86,10,84],[28,87,10,85],[28,91,10,89,"name"],[28,95,10,93],[28,100,10,98],[28,122,10,120],[28,126,10,124,"name"],[28,130,10,128],[28,135,10,133],[28,151,10,149],[29,2,11,0],[30,2,13,7],[30,11,13,16,"filterConfig"],[30,23,13,28,"filterConfig"],[30,24,13,29,"props"],[30,29,13,34],[30,31,13,36,"validProps"],[30,41,13,46],[30,43,13,48,"defaults"],[30,51,13,56],[30,54,13,59],[30,55,13,60],[30,56,13,61],[30,58,13,63],[31,4,14,2],[31,10,14,8,"filteredConfig"],[31,24,14,22],[31,27,14,25],[32,6,14,27],[32,9,14,30,"defaults"],[33,4,15,2],[33,5,15,3],[34,4,17,2],[34,9,17,7],[34,15,17,13,"key"],[34,18,17,16],[34,22,17,20,"validProps"],[34,32,17,30],[34,34,17,32],[35,6,18,4],[35,10,18,8,"value"],[35,15,18,13],[35,18,18,16,"props"],[35,23,18,21],[35,24,18,22,"key"],[35,27,18,25],[35,28,18,26],[36,6,20,4],[36,10,20,8,"isConfigParam"],[36,23,20,21],[36,24,20,22,"value"],[36,29,20,27],[36,31,20,29,"key"],[36,34,20,32],[36,35,20,33],[36,37,20,35],[37,8,21,6],[37,12,21,10,"key"],[37,15,21,13],[37,20,21,18],[37,42,21,40],[37,46,21,44,"key"],[37,49,21,47],[37,54,21,52],[37,63,21,61],[37,65,21,63],[38,10,22,8,"value"],[38,15,22,13],[38,18,22,16,"transformIntoHandlerTags"],[38,42,22,40],[38,43,22,41,"props"],[38,48,22,46],[38,49,22,47,"key"],[38,52,22,50],[38,53,22,51],[38,54,22,52],[39,8,23,6],[39,9,23,7],[39,15,23,13],[39,19,23,17,"key"],[39,22,23,20],[39,27,23,25],[39,36,23,34],[39,40,23,38],[39,47,23,45,"value"],[39,52,23,50],[39,57,23,55],[39,65,23,63],[39,67,23,65],[40,10,24,8,"value"],[40,15,24,13],[40,18,24,16],[41,12,25,10,"top"],[41,15,25,13],[41,17,25,15,"value"],[41,22,25,20],[42,12,26,10,"left"],[42,16,26,14],[42,18,26,16,"value"],[42,23,26,21],[43,12,27,10,"bottom"],[43,18,27,16],[43,20,27,18,"value"],[43,25,27,23],[44,12,28,10,"right"],[44,17,28,15],[44,19,28,17,"value"],[45,10,29,8],[45,11,29,9],[46,8,30,6],[47,8,32,6,"filteredConfig"],[47,22,32,20],[47,23,32,21,"key"],[47,26,32,24],[47,27,32,25],[47,30,32,28,"value"],[47,35,32,33],[48,6,33,4],[49,4,34,2],[50,4,36,2],[50,11,36,9,"filteredConfig"],[50,25,36,23],[51,2,37,0],[52,2,38,7],[52,11,38,16,"transformIntoHandlerTags"],[52,35,38,40,"transformIntoHandlerTags"],[52,36,38,41,"handlerIDs"],[52,46,38,51],[52,48,38,53],[53,4,39,2,"handlerIDs"],[53,14,39,12],[53,17,39,15],[53,21,39,15,"toArray"],[53,27,39,22],[53,28,39,22,"toArray"],[53,35,39,22],[53,37,39,23,"handlerIDs"],[53,47,39,33],[53,48,39,34],[54,4,41,2],[54,8,41,6,"Platform"],[54,16,41,14],[54,17,41,14,"default"],[54,24,41,14],[54,25,41,15,"OS"],[54,27,41,17],[54,32,41,22],[54,37,41,27],[54,39,41,29],[55,6,42,4],[55,13,42,11,"handlerIDs"],[55,23,42,21],[55,24,42,22,"map"],[55,27,42,25],[55,28,42,26],[55,29,42,27],[56,8,43,6,"current"],[57,6,44,4],[57,7,44,5],[57,12,44,10,"current"],[57,19,44,17],[57,20,44,18],[57,21,44,19,"filter"],[57,27,44,25],[57,28,44,26,"handle"],[57,34,44,32],[57,38,44,36,"handle"],[57,44,44,42],[57,45,44,43],[58,4,45,2],[58,5,45,3],[58,6,45,4],[60,4,48,2],[60,11,48,9,"handlerIDs"],[60,21,48,19],[60,22,48,20,"map"],[60,25,48,23],[60,26,48,24,"handlerID"],[60,35,48,33],[60,39,48,37],[61,6,49,4],[61,10,49,8,"_handlerID$current"],[61,28,49,26],[62,6,51,4],[62,13,51,11,"handlerIDToTag"],[62,30,51,25],[62,31,51,25,"handlerIDToTag"],[62,45,51,25],[62,46,51,26,"handlerID"],[62,55,51,35],[62,56,51,36],[62,61,51,41],[62,62,51,42,"_handlerID$current"],[62,80,51,60],[62,83,51,63,"handlerID"],[62,92,51,72],[62,93,51,73,"current"],[62,100,51,80],[62,106,51,86],[62,110,51,90],[62,114,51,94,"_handlerID$current"],[62,132,51,112],[62,137,51,117],[62,142,51,122],[62,143,51,123],[62,146,51,126],[62,151,51,131],[62,152,51,132],[62,155,51,135,"_handlerID$current"],[62,173,51,153],[62,174,51,154,"handlerTag"],[62,184,51,164],[62,185,51,165],[62,189,51,169],[62,190,51,170],[62,191,51,171],[63,4,52,2],[63,5,52,3],[63,6,52,4],[63,7,52,5,"filter"],[63,13,52,11],[63,14,52,12,"handlerTag"],[63,24,52,22],[63,28,52,26,"handlerTag"],[63,38,52,36],[63,41,52,39],[63,42,52,40],[63,43,52,41],[64,2,53,0],[65,2,54,7],[65,11,54,16,"findNodeHandle"],[65,25,54,30,"findNodeHandle"],[65,26,54,31,"node"],[65,30,54,35],[65,32,54,37],[66,4,55,2],[66,8,55,6,"Platform"],[66,16,55,14],[66,17,55,14,"default"],[66,24,55,14],[66,25,55,15,"OS"],[66,27,55,17],[66,32,55,22],[66,37,55,27],[66,39,55,29],[67,6,56,4],[67,13,56,11,"node"],[67,17,56,15],[68,4,57,2],[69,4,59,2],[69,11,59,9],[69,15,59,9,"findNodeHandleRN"],[69,31,59,25],[69,32,59,25,"default"],[69,39,59,25],[69,41,59,26,"node"],[69,45,59,30],[69,46,59,31],[70,2,60,0],[71,2,61,0],[71,6,61,4,"flushOperationsScheduled"],[71,30,61,28],[71,33,61,31],[71,38,61,36],[72,2,62,7],[72,11,62,16,"scheduleFlushOperations"],[72,34,62,39,"scheduleFlushOperations"],[72,35,62,39],[72,37,62,42],[73,4,63,2],[73,8,63,6],[73,9,63,7,"flushOperationsScheduled"],[73,33,63,31],[73,35,63,33],[74,6,64,4,"flushOperationsScheduled"],[74,30,64,28],[74,33,64,31],[74,37,64,35],[75,6,65,4],[75,10,65,4,"ghQueueMicrotask"],[75,27,65,20],[75,28,65,20,"ghQueueMicrotask"],[75,44,65,20],[75,46,65,21],[75,52,65,27],[76,8,66,6,"RNGestureHandlerModule"],[76,30,66,28],[76,31,66,28,"default"],[76,38,66,28],[76,39,66,29,"flushOperations"],[76,54,66,44],[76,55,66,45],[76,56,66,46],[77,8,67,6,"flushOperationsScheduled"],[77,32,67,30],[77,35,67,33],[77,40,67,38],[78,6,68,4],[78,7,68,5],[78,8,68,6],[79,4,69,2],[80,2,70,0],[81,0,70,1],[81,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACM;CDI;OEE;CFwB;OGC;0BCI;iBDE,SE,gBF;wBCI;GDI,SE,4BF;CHC;OMC;CNM;OOE;qBCG;KDG;CPE"},"hasCjsExports":false},"type":"js/module"}]}