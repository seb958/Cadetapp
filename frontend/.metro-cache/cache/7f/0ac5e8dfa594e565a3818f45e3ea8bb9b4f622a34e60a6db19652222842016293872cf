{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":33,"column":66,"index":922}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA=","exportNames":["*"],"imports":1}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1052},"end":{"line":38,"column":66,"index":1118}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/node_modules/react-native-gesture-handler/src/components/DrawerLayout.tsx\"; // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return DrawerLayout;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4], \"react\");\n  var React = _interopNamespace(_react);\n  var _invariant = require(_dependencyMap[5], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _reactNative = require(_dependencyMap[6], \"react-native\");\n  var _handlersPanGestureHandler = require(_dependencyMap[7], \"../handlers/PanGestureHandler\");\n  var _handlersTapGestureHandler = require(_dependencyMap[8], \"../handlers/TapGestureHandler\");\n  var _State = require(_dependencyMap[9], \"../State\");\n  var _reactJsxDevRuntime = require(_dependencyMap[10], \"react/jsx-dev-runtime\");\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n  /**\n   * @deprecated use Reanimated version of DrawerLayout instead\n   */\n  var DrawerLayout = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck.default)(this, DrawerLayout);\n      _this = (0, _callSuper.default)(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = /*#__PURE__*/React.createRef();\n      _this.pointerEventsView = /*#__PURE__*/React.createRef();\n      _this.panGestureHandler = /*#__PURE__*/React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = (props, state) => {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = ev => {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide?.(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = _ref => {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = (newState, drawerWillShow) => {\n        _this.props.onDrawerStateChanged?.(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = _ref2 => {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _State.State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent\n          });\n        } else if (nativeEvent.state === _State.State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = _ref3 => {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _State.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = _ref4 => {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = showing => {\n        _this.drawerShown = showing;\n        _this.accessibilityIsModalView.current?.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this.pointerEventsView.current?.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        _this.panGestureHandler.current?.setNativeProps({\n          hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = (fromValue, toValue, velocity, speed) => {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity,\n          bounciness: 0,\n          toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed ?? undefined\n        }).start(_ref5 => {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // It's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen?.();\n            } else {\n              _this.props.onDrawerClose?.();\n            }\n          }\n        });\n      };\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = () => {\n        /* Overlay styles */\n        (0, invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_handlersTapGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.renderDrawer = () => {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // We rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.setPanGestureRef = ref => {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef?.(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits.default)(DrawerLayout, _Component);\n    return (0, _createClass.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_handlersPanGestureHandler.PanGestureHandler // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 7\n        }, this);\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1001,\n      flexDirection: 'row'\n    },\n    containerInFront: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1002\n    },\n    containerOnBack: {\n      ..._reactNative.StyleSheet.absoluteFillObject\n    },\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1000\n    }\n  });\n});","lineCount":597,"map":[[4,112,1,0],[5,2,2,0],[6,2,3,0],[7,2,4,0],[8,2,5,0],[9,2,6,0],[10,2,7,0],[11,2,7,0,"Object"],[11,8,7,0],[11,9,7,0,"defineProperty"],[11,23,7,0],[11,24,7,0,"exports"],[11,31,7,0],[12,4,7,0,"value"],[12,9,7,0],[13,2,7,0],[14,2,7,0],[14,11,7,0,"_interopDefault"],[14,27,7,0,"e"],[14,28,7,0],[15,4,7,0],[15,11,7,0,"e"],[15,12,7,0],[15,16,7,0,"e"],[15,17,7,0],[15,18,7,0,"__esModule"],[15,28,7,0],[15,31,7,0,"e"],[15,32,7,0],[16,6,7,0,"default"],[16,13,7,0],[16,15,7,0,"e"],[17,4,7,0],[18,2,7,0],[19,2,7,0],[19,11,7,0,"_interopNamespace"],[19,29,7,0,"e"],[19,30,7,0],[20,4,7,0],[20,8,7,0,"e"],[20,9,7,0],[20,13,7,0,"e"],[20,14,7,0],[20,15,7,0,"__esModule"],[20,25,7,0],[20,34,7,0,"e"],[20,35,7,0],[21,4,7,0],[21,8,7,0,"n"],[21,9,7,0],[22,4,7,0],[22,8,7,0,"e"],[22,9,7,0],[22,11,7,0,"Object"],[22,17,7,0],[22,18,7,0,"keys"],[22,22,7,0],[22,23,7,0,"e"],[22,24,7,0],[22,26,7,0,"forEach"],[22,33,7,0],[22,44,7,0,"k"],[22,45,7,0],[23,6,7,0],[23,10,7,0,"d"],[23,11,7,0],[23,14,7,0,"Object"],[23,20,7,0],[23,21,7,0,"getOwnPropertyDescriptor"],[23,45,7,0],[23,46,7,0,"e"],[23,47,7,0],[23,49,7,0,"k"],[23,50,7,0],[24,6,7,0,"Object"],[24,12,7,0],[24,13,7,0,"defineProperty"],[24,27,7,0],[24,28,7,0,"n"],[24,29,7,0],[24,31,7,0,"k"],[24,32,7,0],[24,34,7,0,"d"],[24,35,7,0],[24,36,7,0,"get"],[24,39,7,0],[24,42,7,0,"d"],[24,43,7,0],[25,8,7,0,"enumerable"],[25,18,7,0],[26,8,7,0,"get"],[26,11,7,0],[26,22,7,0,"get"],[26,23,7,0],[27,10,7,0],[27,17,7,0,"e"],[27,18,7,0],[27,19,7,0,"k"],[27,20,7,0],[28,8,7,0],[29,6,7,0],[30,4,7,0],[31,4,7,0,"n"],[31,5,7,0],[31,6,7,0,"default"],[31,13,7,0],[31,16,7,0,"e"],[31,17,7,0],[32,4,7,0],[32,11,7,0,"n"],[32,12,7,0],[33,2,7,0],[34,2,7,0,"Object"],[34,8,7,0],[34,9,7,0,"defineProperty"],[34,23,7,0],[34,24,7,0,"exports"],[34,31,7,0],[35,4,7,0,"enumerable"],[35,14,7,0],[36,4,7,0,"get"],[36,7,7,0],[36,18,7,0,"get"],[36,19,7,0],[37,6,7,0],[37,13,231,21,"DrawerLayout"],[37,25,231,33],[38,4,231,33],[39,2,231,33],[40,2,231,33],[40,6,231,33,"_babelRuntimeHelpersClassCallCheck"],[40,40,231,33],[40,43,231,33,"require"],[40,50,231,33],[40,51,231,33,"_dependencyMap"],[40,65,231,33],[41,2,231,33],[41,6,231,33,"_classCallCheck"],[41,21,231,33],[41,24,231,33,"_interopDefault"],[41,39,231,33],[41,40,231,33,"_babelRuntimeHelpersClassCallCheck"],[41,74,231,33],[42,2,231,33],[42,6,231,33,"_babelRuntimeHelpersCreateClass"],[42,37,231,33],[42,40,231,33,"require"],[42,47,231,33],[42,48,231,33,"_dependencyMap"],[42,62,231,33],[43,2,231,33],[43,6,231,33,"_createClass"],[43,18,231,33],[43,21,231,33,"_interopDefault"],[43,36,231,33],[43,37,231,33,"_babelRuntimeHelpersCreateClass"],[43,68,231,33],[44,2,231,33],[44,6,231,33,"_babelRuntimeHelpersCallSuper"],[44,35,231,33],[44,38,231,33,"require"],[44,45,231,33],[44,46,231,33,"_dependencyMap"],[44,60,231,33],[45,2,231,33],[45,6,231,33,"_callSuper"],[45,16,231,33],[45,19,231,33,"_interopDefault"],[45,34,231,33],[45,35,231,33,"_babelRuntimeHelpersCallSuper"],[45,64,231,33],[46,2,231,33],[46,6,231,33,"_babelRuntimeHelpersInherits"],[46,34,231,33],[46,37,231,33,"require"],[46,44,231,33],[46,45,231,33,"_dependencyMap"],[46,59,231,33],[47,2,231,33],[47,6,231,33,"_inherits"],[47,15,231,33],[47,18,231,33,"_interopDefault"],[47,33,231,33],[47,34,231,33,"_babelRuntimeHelpersInherits"],[47,62,231,33],[48,2,9,0],[48,6,9,0,"_react"],[48,12,9,0],[48,15,9,0,"require"],[48,22,9,0],[48,23,9,0,"_dependencyMap"],[48,37,9,0],[49,2,9,0],[49,6,9,0,"React"],[49,11,9,0],[49,14,9,0,"_interopNamespace"],[49,31,9,0],[49,32,9,0,"_react"],[49,38,9,0],[50,2,11,0],[50,6,11,0,"_invariant"],[50,16,11,0],[50,19,11,0,"require"],[50,26,11,0],[50,27,11,0,"_dependencyMap"],[50,41,11,0],[51,2,11,0],[51,6,11,0,"invariant"],[51,15,11,0],[51,18,11,0,"_interopDefault"],[51,33,11,0],[51,34,11,0,"_invariant"],[51,44,11,0],[52,2,12,0],[52,6,12,0,"_reactNative"],[52,18,12,0],[52,21,12,0,"require"],[52,28,12,0],[52,29,12,0,"_dependencyMap"],[52,43,12,0],[53,2,33,0],[53,6,33,0,"_handlersPanGestureHandler"],[53,32,33,0],[53,35,33,0,"require"],[53,42,33,0],[53,43,33,0,"_dependencyMap"],[53,57,33,0],[54,2,38,0],[54,6,38,0,"_handlersTapGestureHandler"],[54,32,38,0],[54,35,38,0,"require"],[54,42,38,0],[54,43,38,0,"_dependencyMap"],[54,57,38,0],[55,2,39,0],[55,6,39,0,"_State"],[55,12,39,0],[55,15,39,0,"require"],[55,22,39,0],[55,23,39,0,"_dependencyMap"],[55,37,39,0],[56,2,39,33],[56,6,39,33,"_reactJsxDevRuntime"],[56,25,39,33],[56,28,39,33,"require"],[56,35,39,33],[56,36,39,33,"_dependencyMap"],[56,50,39,33],[57,2,41,0],[57,6,41,6,"DRAG_TOSS"],[57,15,41,15],[57,18,41,18],[57,22,41,22],[58,2,43,0],[58,6,43,6,"IDLE"],[58,10,43,23],[58,13,43,26],[58,19,43,32],[59,2,44,0],[59,6,44,6,"DRAGGING"],[59,14,44,27],[59,17,44,30],[59,27,44,40],[60,2,45,0],[60,6,45,6,"SETTLING"],[60,14,45,27],[60,17,45,30],[60,27,45,40],[62,2,47,0],[63,0,48,0],[64,0,49,0],[66,2,52,0],[67,0,53,0],[68,0,54,0],[70,2,57,0],[71,0,58,0],[72,0,59,0],[74,2,62,0],[75,0,63,0],[76,0,64,0],[78,2,67,0],[79,0,68,0],[80,0,69,0],[82,2,72,0],[83,2,73,0],[84,2,74,0],[86,2,77,0],[87,0,78,0],[88,0,79,0],[90,2,208,0],[91,0,209,0],[92,0,210,0],[94,2,220,0],[95,0,221,0],[96,0,222,0],[97,2,228,0],[98,0,229,0],[99,0,230,0],[100,2,228,0],[100,6,231,21,"DrawerLayout"],[100,18,231,33],[100,44,231,33,"_Component"],[100,54,231,33],[101,4,247,2],[101,13,247,2,"DrawerLayout"],[101,26,247,14,"props"],[101,32,247,38],[101,34,247,40],[102,6,247,40],[102,10,247,40,"_this"],[102,15,247,40],[103,6,247,40],[103,10,247,40,"_classCallCheck"],[103,25,247,40],[103,26,247,40,"default"],[103,33,247,40],[103,41,247,40,"DrawerLayout"],[103,53,247,40],[104,6,248,4,"_this"],[104,11,248,4],[104,18,248,4,"_callSuper"],[104,28,248,4],[104,29,248,4,"default"],[104,36,248,4],[104,44,248,4,"DrawerLayout"],[104,56,248,4],[104,59,248,10,"props"],[104,65,248,15],[105,6,248,17,"_this"],[105,11,248,17],[105,12,283,10,"accessibilityIsModalView"],[105,36,283,34],[105,52,283,37,"React"],[105,57,283,42],[105,58,283,43,"createRef"],[105,67,283,52],[105,68,283,59],[105,69,283,60],[106,6,283,60,"_this"],[106,11,283,60],[106,12,284,10,"pointerEventsView"],[106,29,284,27],[106,45,284,30,"React"],[106,50,284,35],[106,51,284,36,"createRef"],[106,60,284,45],[106,61,284,52],[106,62,284,53],[107,6,284,53,"_this"],[107,11,284,53],[107,12,285,10,"panGestureHandler"],[107,29,285,27],[107,45,285,30,"React"],[107,50,285,35],[107,51,285,36,"createRef"],[107,60,285,45],[107,61,285,72],[107,62,285,73],[108,6,285,73,"_this"],[108,11,285,73],[108,12,286,10,"drawerShown"],[108,23,286,21],[108,26,286,24],[108,31,286,29],[109,6,286,29,"_this"],[109,11,286,29],[109,12,293,10,"updateAnimatedEvent"],[109,31,293,29],[109,34,293,32],[109,35,294,4,"props"],[109,40,294,28],[109,42,295,4,"state"],[109,47,295,28],[109,52,296,7],[110,8,297,4],[111,8,298,4],[111,12,298,12,"drawerPosition"],[111,26,298,26],[111,29,298,56,"props"],[111,34,298,61],[111,35,298,12,"drawerPosition"],[111,49,298,26],[112,10,298,28,"drawerWidth"],[112,21,298,39],[112,24,298,56,"props"],[112,29,298,61],[112,30,298,28,"drawerWidth"],[112,41,298,39],[113,10,298,41,"drawerType"],[113,20,298,51],[113,23,298,56,"props"],[113,28,298,61],[113,29,298,41,"drawerType"],[113,39,298,51],[114,8,299,4],[114,12,300,13,"dragXValue"],[114,22,300,23],[114,25,304,8,"state"],[114,30,304,13],[114,31,300,6,"dragX"],[114,36,300,11],[115,10,301,14,"touchXValue"],[115,21,301,25],[115,24,304,8,"state"],[115,29,304,13],[115,30,301,6,"touchX"],[115,36,301,12],[116,10,302,6,"drawerTranslation"],[116,27,302,23],[116,30,304,8,"state"],[116,35,304,13],[116,36,302,6,"drawerTranslation"],[116,53,302,23],[117,10,303,6,"containerWidth"],[117,24,303,20],[117,27,304,8,"state"],[117,32,304,13],[117,33,303,6,"containerWidth"],[117,47,303,20],[118,8,306,4],[118,12,306,8,"dragX"],[118,17,306,13],[118,20,306,16,"dragXValue"],[118,30,306,26],[119,8,307,4],[119,12,307,8,"touchX"],[119,18,307,14],[119,21,307,17,"touchXValue"],[119,32,307,28],[120,8,309,4],[120,12,309,8,"drawerPosition"],[120,26,309,22],[120,31,309,27],[120,37,309,33],[120,39,309,35],[121,10,310,6],[122,10,311,6],[123,10,312,6],[124,10,313,6],[125,10,314,6],[126,10,315,6],[127,10,316,6,"dragX"],[127,15,316,11],[127,18,316,14,"Animated"],[127,30,316,22],[127,31,316,22,"Animated"],[127,39,316,22],[127,40,316,23,"multiply"],[127,48,316,31],[127,49,317,8],[127,53,317,12,"Animated"],[127,65,317,20],[127,66,317,20,"Animated"],[127,74,317,20],[127,75,317,21,"Value"],[127,80,317,26],[127,81,317,27],[127,82,317,28],[127,83,317,29],[127,84,317,30],[127,86,318,8,"dragXValue"],[127,96,319,6],[127,97,319,25],[127,98,319,26],[127,99,319,27],[128,10,320,6,"touchX"],[128,16,320,12],[128,19,320,15,"Animated"],[128,31,320,23],[128,32,320,23,"Animated"],[128,40,320,23],[128,41,320,24,"add"],[128,44,320,27],[128,45,321,8],[128,49,321,12,"Animated"],[128,61,321,20],[128,62,321,20,"Animated"],[128,70,321,20],[128,71,321,21,"Value"],[128,76,321,26],[128,77,321,27,"containerWidth"],[128,91,321,41],[128,92,321,42],[128,94,322,8,"Animated"],[128,106,322,16],[128,107,322,16,"Animated"],[128,115,322,16],[128,116,322,17,"multiply"],[128,124,322,25],[128,125,322,26],[128,129,322,30,"Animated"],[128,141,322,38],[128,142,322,38,"Animated"],[128,150,322,38],[128,151,322,39,"Value"],[128,156,322,44],[128,157,322,45],[128,158,322,46],[128,159,322,47],[128,160,322,48],[128,162,322,50,"touchXValue"],[128,173,322,61],[128,174,323,6],[128,175,323,25],[128,176,323,26],[128,177,323,27],[129,10,324,6,"touchXValue"],[129,21,324,17],[129,22,324,18,"setValue"],[129,30,324,26],[129,31,324,27,"containerWidth"],[129,45,324,41],[129,46,324,42],[130,8,325,4],[130,9,325,5],[130,15,325,11],[131,10,326,6,"touchXValue"],[131,21,326,17],[131,22,326,18,"setValue"],[131,30,326,26],[131,31,326,27],[131,32,326,28],[131,33,326,29],[132,8,327,4],[134,8,329,4],[135,8,330,4],[136,8,331,4],[137,8,332,4],[138,8,333,4],[139,8,334,4],[140,8,335,4],[141,8,336,4],[142,8,337,4],[143,8,338,4],[144,8,339,4],[145,8,340,4],[146,8,341,4],[147,8,342,4],[148,8,343,4],[149,8,344,4],[150,8,345,4],[151,8,346,4],[152,8,347,4],[153,8,348,4],[154,8,349,4],[155,8,350,4],[156,8,351,4],[157,8,352,4],[158,8,353,4],[159,8,354,4],[159,12,354,8,"translationX"],[159,24,354,20],[159,27,354,23,"dragX"],[159,32,354,28],[160,8,355,4],[160,12,355,8,"drawerType"],[160,22,355,18],[160,27,355,23],[160,34,355,30],[160,36,355,32],[161,10,356,6],[161,14,356,12,"startPositionX"],[161,28,356,26],[161,31,356,29,"Animated"],[161,43,356,37],[161,44,356,37,"Animated"],[161,52,356,37],[161,53,356,38,"add"],[161,56,356,41],[161,57,357,8,"touchX"],[161,63,357,14],[161,65,358,8,"Animated"],[161,77,358,16],[161,78,358,16,"Animated"],[161,86,358,16],[161,87,358,17,"multiply"],[161,95,358,25],[161,96,358,26],[161,100,358,30,"Animated"],[161,112,358,38],[161,113,358,38,"Animated"],[161,121,358,38],[161,122,358,39,"Value"],[161,127,358,44],[161,128,358,45],[161,129,358,46],[161,130,358,47],[161,131,358,48],[161,133,358,50,"dragX"],[161,138,358,55],[161,139,359,6],[161,140,359,7],[162,10,361,6],[162,14,361,12,"dragOffsetFromOnStartPosition"],[162,43,361,41],[162,46,361,44,"startPositionX"],[162,60,361,58],[162,61,361,59,"interpolate"],[162,72,361,70],[162,73,361,71],[163,12,362,8,"inputRange"],[163,22,362,18],[163,24,362,20],[163,25,362,21,"drawerWidth"],[163,36,362,32],[163,39,362,36],[163,40,362,37],[163,42,362,39,"drawerWidth"],[163,53,362,50],[163,55,362,53,"drawerWidth"],[163,66,362,64],[163,69,362,68],[163,70,362,69],[163,71,362,70],[164,12,363,8,"outputRange"],[164,23,363,19],[164,25,363,21],[164,26,363,22],[164,27,363,23],[164,29,363,25],[164,30,363,26],[164,32,363,28],[164,33,363,29],[165,10,364,6],[165,11,364,7],[165,12,364,8],[166,10,365,6,"translationX"],[166,22,365,18],[166,25,365,21,"Animated"],[166,37,365,29],[166,38,365,29,"Animated"],[166,46,365,29],[166,47,365,30,"add"],[166,50,365,33],[166,51,366,8,"dragX"],[166,56,366,13],[166,58,367,8,"dragOffsetFromOnStartPosition"],[166,87,368,6],[166,88,368,25],[166,89,368,26],[166,90,368,27],[167,8,369,4],[168,8,371,4,"_this"],[168,13,371,4],[168,14,371,9,"openValue"],[168,23,371,18],[168,26,371,21,"Animated"],[168,38,371,29],[168,39,371,29,"Animated"],[168,47,371,29],[168,48,371,30,"add"],[168,51,371,33],[168,52,371,34,"translationX"],[168,64,371,46],[168,66,371,48,"drawerTranslation"],[168,83,371,65],[168,84,371,66],[168,85,371,67,"interpolate"],[168,96,371,78],[168,97,371,79],[169,10,372,6,"inputRange"],[169,20,372,16],[169,22,372,18],[169,23,372,19],[169,24,372,20],[169,26,372,22,"drawerWidth"],[169,37,372,33],[169,38,372,35],[170,10,373,6,"outputRange"],[170,21,373,17],[170,23,373,19],[170,24,373,20],[170,25,373,21],[170,27,373,23],[170,28,373,24],[170,29,373,25],[171,10,374,6,"extrapolate"],[171,21,374,17],[171,23,374,19],[172,8,375,4],[172,9,375,5],[172,10,375,6],[173,8,377,4],[173,12,377,10,"gestureOptions"],[173,26,383,5],[173,29,383,8],[174,10,384,6,"useNativeDriver"],[174,25,384,21],[174,27,384,23,"props"],[174,32,384,28],[174,33,384,29,"useNativeAnimations"],[175,8,385,4],[175,9,385,5],[176,8,387,4],[176,12,387,8,"_this"],[176,17,387,8],[176,18,387,13,"props"],[176,23,387,18],[176,24,387,19,"onDrawerSlide"],[176,37,387,32],[176,39,387,34],[177,10,388,6,"gestureOptions"],[177,24,388,20],[177,25,388,21,"listener"],[177,33,388,29],[177,36,388,33,"ev"],[177,38,388,35],[177,42,388,40],[178,12,389,8],[178,16,389,14,"translationX"],[178,28,389,26],[178,31,389,29,"Math"],[178,35,389,33],[178,36,389,34,"floor"],[178,41,389,39],[178,42,389,40,"Math"],[178,46,389,44],[178,47,389,45,"abs"],[178,50,389,48],[178,51,389,49,"ev"],[178,53,389,51],[178,54,389,52,"nativeEvent"],[178,65,389,63],[178,66,389,64,"translationX"],[178,78,389,76],[178,79,389,77],[178,80,389,78],[179,12,390,8],[179,16,390,14,"position"],[179,24,390,22],[179,27,390,25,"translationX"],[179,39,390,37],[179,42,390,40,"_this"],[179,47,390,40],[179,48,390,45,"state"],[179,53,390,50],[179,54,390,51,"containerWidth"],[179,68,390,65],[180,12,392,8,"_this"],[180,17,392,8],[180,18,392,13,"props"],[180,23,392,18],[180,24,392,19,"onDrawerSlide"],[180,37,392,32],[180,40,392,35,"position"],[180,48,392,43],[180,49,392,44],[181,10,393,6],[181,11,393,7],[182,8,394,4],[183,8,396,4,"_this"],[183,13,396,4],[183,14,396,9,"onGestureEvent"],[183,28,396,23],[183,31,396,26,"Animated"],[183,43,396,34],[183,44,396,34,"Animated"],[183,52,396,34],[183,53,396,35,"event"],[183,58,396,40],[183,59,397,6],[183,60,397,7],[184,10,397,9,"nativeEvent"],[184,21,397,20],[184,23,397,22],[185,12,397,24,"translationX"],[185,24,397,36],[185,26,397,38,"dragXValue"],[185,36,397,48],[186,12,397,50,"x"],[186,13,397,51],[186,15,397,53,"touchXValue"],[187,10,397,65],[188,8,397,67],[188,9,397,68],[188,10,397,69],[188,12,398,6,"gestureOptions"],[188,26,399,4],[188,27,399,5],[189,6,400,2],[189,7,400,3],[190,6,400,3,"_this"],[190,11,400,3],[190,12,402,10,"handleContainerLayout"],[190,33,402,31],[190,36,402,34,"_ref"],[190,40,402,34],[190,44,402,74],[191,8,402,74],[191,12,402,37,"nativeEvent"],[191,23,402,48],[191,26,402,48,"_ref"],[191,30,402,48],[191,31,402,37,"nativeEvent"],[191,42,402,48],[192,8,403,4,"_this"],[192,13,403,4],[192,14,403,9,"setState"],[192,22,403,17],[192,23,403,18],[193,10,403,20,"containerWidth"],[193,24,403,34],[193,26,403,36,"nativeEvent"],[193,37,403,47],[193,38,403,48,"layout"],[193,44,403,54],[193,45,403,55,"width"],[194,8,403,61],[194,9,403,62],[194,10,403,63],[195,6,404,2],[195,7,404,3],[196,6,404,3,"_this"],[196,11,404,3],[196,12,406,10,"emitStateChanged"],[196,28,406,26],[196,31,406,29],[196,32,407,4,"newState"],[196,40,407,25],[196,42,408,4,"drawerWillShow"],[196,56,408,27],[196,61,409,7],[197,8,410,4,"_this"],[197,13,410,4],[197,14,410,9,"props"],[197,19,410,14],[197,20,410,15,"onDrawerStateChanged"],[197,40,410,35],[197,43,410,38,"newState"],[197,51,410,46],[197,53,410,48,"drawerWillShow"],[197,67,410,62],[197,68,410,63],[198,6,411,2],[198,7,411,3],[199,6,411,3,"_this"],[199,11,411,3],[199,12,413,10,"openingHandlerStateChange"],[199,37,413,35],[199,40,413,38,"_ref2"],[199,45,413,38],[199,49,415,64],[200,8,415,64],[200,12,414,4,"nativeEvent"],[200,23,414,15],[200,26,414,15,"_ref2"],[200,31,414,15],[200,32,414,4,"nativeEvent"],[200,43,414,15],[201,8,416,4],[201,12,416,8,"nativeEvent"],[201,23,416,19],[201,24,416,20,"oldState"],[201,32,416,28],[201,37,416,33,"State"],[201,43,416,38],[201,44,416,38,"State"],[201,49,416,38],[201,50,416,39,"ACTIVE"],[201,56,416,45],[201,58,416,47],[202,10,417,6,"_this"],[202,15,417,6],[202,16,417,11,"handleRelease"],[202,29,417,24],[202,30,417,25],[203,12,417,27,"nativeEvent"],[204,10,417,39],[204,11,417,40],[204,12,417,41],[205,8,418,4],[205,9,418,5],[205,15,418,11],[205,19,418,15,"nativeEvent"],[205,30,418,26],[205,31,418,27,"state"],[205,36,418,32],[205,41,418,37,"State"],[205,47,418,42],[205,48,418,42,"State"],[205,53,418,42],[205,54,418,43,"ACTIVE"],[205,60,418,49],[205,62,418,51],[206,10,419,6,"_this"],[206,15,419,6],[206,16,419,11,"emitStateChanged"],[206,32,419,27],[206,33,419,28,"DRAGGING"],[206,41,419,36],[206,43,419,38],[206,48,419,43],[206,49,419,44],[207,10,420,6,"_this"],[207,15,420,6],[207,16,420,11,"setState"],[207,24,420,19],[207,25,420,20],[208,12,420,22,"drawerState"],[208,23,420,33],[208,25,420,35,"DRAGGING"],[209,10,420,44],[209,11,420,45],[209,12,420,46],[210,10,421,6],[210,14,421,10,"_this"],[210,19,421,10],[210,20,421,15,"props"],[210,25,421,20],[210,26,421,21,"keyboardDismissMode"],[210,45,421,40],[210,50,421,45],[210,59,421,54],[210,61,421,56],[211,12,422,8,"Keyboard"],[211,24,422,16],[211,25,422,16,"Keyboard"],[211,33,422,16],[211,34,422,17,"dismiss"],[211,41,422,24],[211,42,422,25],[211,43,422,26],[212,10,423,6],[213,10,424,6],[213,14,424,10,"_this"],[213,19,424,10],[213,20,424,15,"props"],[213,25,424,20],[213,26,424,21,"hideStatusBar"],[213,39,424,34],[213,41,424,36],[214,12,425,8,"StatusBar"],[214,24,425,17],[214,25,425,17,"StatusBar"],[214,34,425,17],[214,35,425,18,"setHidden"],[214,44,425,27],[214,45,425,28],[214,49,425,32],[214,51,425,34,"_this"],[214,56,425,34],[214,57,425,39,"props"],[214,62,425,44],[214,63,425,45,"statusBarAnimation"],[214,81,425,63],[214,85,425,67],[214,92,425,74],[214,93,425,75],[215,10,426,6],[216,8,427,4],[217,6,428,2],[217,7,428,3],[218,6,428,3,"_this"],[218,11,428,3],[218,12,430,10,"onTapHandlerStateChange"],[218,35,430,33],[218,38,430,36,"_ref3"],[218,43,430,36],[218,47,432,64],[219,8,432,64],[219,12,431,4,"nativeEvent"],[219,23,431,15],[219,26,431,15,"_ref3"],[219,31,431,15],[219,32,431,4,"nativeEvent"],[219,43,431,15],[220,8,433,4],[220,12,434,6,"_this"],[220,17,434,6],[220,18,434,11,"drawerShown"],[220,29,434,22],[220,33,435,6,"nativeEvent"],[220,44,435,17],[220,45,435,18,"oldState"],[220,53,435,26],[220,58,435,31,"State"],[220,64,435,36],[220,65,435,36,"State"],[220,70,435,36],[220,71,435,37,"ACTIVE"],[220,77,435,43],[220,81,436,6,"_this"],[220,86,436,6],[220,87,436,11,"props"],[220,92,436,16],[220,93,436,17,"drawerLockMode"],[220,107,436,31],[220,112,436,36],[220,125,436,49],[220,127,437,6],[221,10,438,6,"_this"],[221,15,438,6],[221,16,438,11,"closeDrawer"],[221,27,438,22],[221,28,438,23],[221,29,438,24],[222,8,439,4],[223,6,440,2],[223,7,440,3],[224,6,440,3,"_this"],[224,11,440,3],[224,12,442,10,"handleRelease"],[224,25,442,23],[224,28,442,26,"_ref4"],[224,33,442,26],[224,37,444,64],[225,8,444,64],[225,12,443,4,"nativeEvent"],[225,23,443,15],[225,26,443,15,"_ref4"],[225,31,443,15],[225,32,443,4,"nativeEvent"],[225,43,443,15],[226,8,445,4],[226,12,445,4,"_this$props"],[226,23,445,4],[226,26,445,56,"_this"],[226,31,445,56],[226,32,445,61,"props"],[226,37,445,66],[227,10,445,12,"drawerWidth"],[227,21,445,23],[227,24,445,23,"_this$props"],[227,35,445,23],[227,36,445,12,"drawerWidth"],[227,47,445,23],[228,10,445,25,"drawerPosition"],[228,24,445,39],[228,27,445,39,"_this$props"],[228,38,445,39],[228,39,445,25,"drawerPosition"],[228,53,445,39],[229,10,445,41,"drawerType"],[229,20,445,51],[229,23,445,51,"_this$props"],[229,34,445,51],[229,35,445,41,"drawerType"],[229,45,445,51],[230,8,446,4],[230,12,446,12,"containerWidth"],[230,26,446,26],[230,29,446,31,"_this"],[230,34,446,31],[230,35,446,36,"state"],[230,40,446,41],[230,41,446,12,"containerWidth"],[230,55,446,26],[231,8,447,4],[231,12,447,24,"dragX"],[231,17,447,29],[231,20,447,56,"nativeEvent"],[231,31,447,67],[231,32,447,10,"translationX"],[231,44,447,22],[232,10,447,31,"velocityX"],[232,19,447,40],[232,22,447,56,"nativeEvent"],[232,33,447,67],[232,34,447,31,"velocityX"],[232,43,447,40],[233,10,447,45,"touchX"],[233,16,447,51],[233,19,447,56,"nativeEvent"],[233,30,447,67],[233,31,447,42,"x"],[233,32,447,43],[234,8,449,4],[234,12,449,8,"drawerPosition"],[234,26,449,22],[234,31,449,27],[234,37,449,33],[234,39,449,35],[235,10,450,6],[236,10,451,6],[237,10,452,6,"dragX"],[237,15,452,11],[237,18,452,14],[237,19,452,15,"dragX"],[237,24,452,20],[238,10,453,6,"touchX"],[238,16,453,12],[238,19,453,15,"containerWidth"],[238,33,453,29],[238,36,453,32,"touchX"],[238,42,453,38],[239,10,454,6,"velocityX"],[239,19,454,15],[239,22,454,18],[239,23,454,19,"velocityX"],[239,32,454,28],[240,8,455,4],[241,8,457,4],[241,12,457,10,"gestureStartX"],[241,25,457,23],[241,28,457,26,"touchX"],[241,34,457,32],[241,37,457,35,"dragX"],[241,42,457,40],[242,8,458,4],[242,12,458,8,"dragOffsetBasedOnStart"],[242,34,458,30],[242,37,458,33],[242,38,458,34],[243,8,460,4],[243,12,460,8,"drawerType"],[243,22,460,18],[243,27,460,23],[243,34,460,30],[243,36,460,32],[244,10,461,6,"dragOffsetBasedOnStart"],[244,32,461,28],[244,35,462,8,"gestureStartX"],[244,48,462,21],[244,51,462,24,"drawerWidth"],[244,62,462,36],[244,65,462,39,"gestureStartX"],[244,78,462,52],[244,81,462,55,"drawerWidth"],[244,92,462,67],[244,95,462,70],[244,96,462,71],[245,8,463,4],[246,8,465,4],[246,12,465,10,"startOffsetX"],[246,24,465,22],[246,27,466,6,"dragX"],[246,32,466,11],[246,35,466,14,"dragOffsetBasedOnStart"],[246,57,466,36],[246,61,466,40,"_this"],[246,66,466,40],[246,67,466,45,"drawerShown"],[246,78,466,56],[246,81,466,59,"drawerWidth"],[246,92,466,70],[246,95,466,74],[246,96,466,75],[246,97,466,76],[247,8,467,4],[247,12,467,10,"projOffsetX"],[247,23,467,21],[247,26,467,24,"startOffsetX"],[247,38,467,36],[247,41,467,39,"DRAG_TOSS"],[247,50,467,48],[247,53,467,51,"velocityX"],[247,62,467,60],[248,8,469,4],[248,12,469,10,"shouldOpen"],[248,22,469,20],[248,25,469,23,"projOffsetX"],[248,36,469,34],[248,39,469,37,"drawerWidth"],[248,50,469,48],[248,53,469,52],[248,54,469,53],[249,8,471,4],[249,12,471,8,"shouldOpen"],[249,22,471,18],[249,24,471,20],[250,10,472,6,"_this"],[250,15,472,6],[250,16,472,11,"animateDrawer"],[250,29,472,24],[250,30,472,25,"startOffsetX"],[250,42,472,37],[250,44,472,39,"drawerWidth"],[250,55,472,50],[250,57,472,53,"velocityX"],[250,66,472,62],[250,67,472,63],[251,8,473,4],[251,9,473,5],[251,15,473,11],[252,10,474,6,"_this"],[252,15,474,6],[252,16,474,11,"animateDrawer"],[252,29,474,24],[252,30,474,25,"startOffsetX"],[252,42,474,37],[252,44,474,39],[252,45,474,40],[252,47,474,42,"velocityX"],[252,56,474,51],[252,57,474,52],[253,8,475,4],[254,6,476,2],[254,7,476,3],[255,6,476,3,"_this"],[255,11,476,3],[255,12,478,10,"updateShowing"],[255,25,478,23],[255,28,478,27,"showing"],[255,35,478,43],[255,39,478,48],[256,8,479,4,"_this"],[256,13,479,4],[256,14,479,9,"drawerShown"],[256,25,479,20],[256,28,479,23,"showing"],[256,35,479,30],[257,8,480,4,"_this"],[257,13,480,4],[257,14,480,9,"accessibilityIsModalView"],[257,38,480,33],[257,39,480,34,"current"],[257,46,480,41],[257,48,480,43,"setNativeProps"],[257,62,480,57],[257,63,480,58],[258,10,481,6,"accessibilityViewIsModal"],[258,34,481,30],[258,36,481,32,"showing"],[259,8,482,4],[259,9,482,5],[259,10,482,6],[260,8,483,4,"_this"],[260,13,483,4],[260,14,483,9,"pointerEventsView"],[260,31,483,26],[260,32,483,27,"current"],[260,39,483,34],[260,41,483,36,"setNativeProps"],[260,55,483,50],[260,56,483,51],[261,10,484,6,"pointerEvents"],[261,23,484,19],[261,25,484,21,"showing"],[261,32,484,28],[261,35,484,31],[261,41,484,37],[261,44,484,40],[262,8,485,4],[262,9,485,5],[262,10,485,6],[263,8,486,4],[263,12,486,4,"_this$props2"],[263,24,486,4],[263,27,486,60,"_this"],[263,32,486,60],[263,33,486,65,"props"],[263,38,486,70],[264,10,486,12,"drawerPosition"],[264,24,486,26],[264,27,486,26,"_this$props2"],[264,39,486,26],[264,40,486,12,"drawerPosition"],[264,54,486,26],[265,10,486,28,"minSwipeDistance"],[265,26,486,44],[265,29,486,44,"_this$props2"],[265,41,486,44],[265,42,486,28,"minSwipeDistance"],[265,58,486,44],[266,10,486,46,"edgeWidth"],[266,19,486,55],[266,22,486,55,"_this$props2"],[266,34,486,55],[266,35,486,46,"edgeWidth"],[266,44,486,55],[267,8,487,4],[267,12,487,10,"fromLeft"],[267,20,487,18],[267,23,487,21,"drawerPosition"],[267,37,487,35],[267,42,487,40],[267,48,487,46],[268,8,488,4],[269,8,489,4],[270,8,490,4],[271,8,491,4],[271,12,491,10,"gestureOrientation"],[271,30,491,28],[271,33,492,6],[271,34,492,7,"fromLeft"],[271,42,492,15],[271,45,492,18],[271,46,492,19],[271,49,492,22],[271,50,492,23],[271,51,492,24],[271,56,492,29,"_this"],[271,61,492,29],[271,62,492,34,"drawerShown"],[271,73,492,45],[271,76,492,48],[271,77,492,49],[271,78,492,50],[271,81,492,53],[271,82,492,54],[271,83,492,55],[272,8,493,4],[273,8,494,4],[274,8,495,4],[275,8,496,4],[275,12,496,10,"hitSlop"],[275,19,496,17],[275,22,496,20,"fromLeft"],[275,30,496,28],[275,33,497,8],[276,10,497,10,"left"],[276,14,497,14],[276,16,497,16],[276,17,497,17],[277,10,497,19,"width"],[277,15,497,24],[277,17,497,26,"showing"],[277,24,497,33],[277,27,497,36,"undefined"],[277,36,497,45],[277,39,497,48,"edgeWidth"],[278,8,497,58],[278,9,497,59],[278,12,498,8],[279,10,498,10,"right"],[279,15,498,15],[279,17,498,17],[279,18,498,18],[280,10,498,20,"width"],[280,15,498,25],[280,17,498,27,"showing"],[280,24,498,34],[280,27,498,37,"undefined"],[280,36,498,46],[280,39,498,49,"edgeWidth"],[281,8,498,59],[281,9,498,60],[282,8,499,4],[283,8,500,4,"_this"],[283,13,500,4],[283,14,500,9,"panGestureHandler"],[283,31,500,26],[283,32,500,27,"current"],[283,39,500,34],[283,41,500,36,"setNativeProps"],[283,55,500,50],[283,56,500,51],[284,10,501,6,"hitSlop"],[284,17,501,13],[285,10,502,6,"activeOffsetX"],[285,23,502,19],[285,25,502,21,"gestureOrientation"],[285,43,502,39],[285,46,502,42,"minSwipeDistance"],[286,8,503,4],[286,9,503,5],[286,10,503,6],[287,6,504,2],[287,7,504,3],[288,6,504,3,"_this"],[288,11,504,3],[288,12,506,10,"animateDrawer"],[288,25,506,23],[288,28,506,26],[288,29,507,4,"fromValue"],[288,38,507,40],[288,40,508,4,"toValue"],[288,47,508,19],[288,49,509,4,"velocity"],[288,57,509,20],[288,59,510,4,"speed"],[288,64,510,18],[288,69,511,7],[289,8,512,4,"_this"],[289,13,512,4],[289,14,512,9,"state"],[289,19,512,14],[289,20,512,15,"dragX"],[289,25,512,20],[289,26,512,21,"setValue"],[289,34,512,29],[289,35,512,30],[289,36,512,31],[289,37,512,32],[290,8,513,4,"_this"],[290,13,513,4],[290,14,513,9,"state"],[290,19,513,14],[290,20,513,15,"touchX"],[290,26,513,21],[290,27,513,22,"setValue"],[290,35,513,30],[290,36,514,6,"_this"],[290,41,514,6],[290,42,514,11,"props"],[290,47,514,16],[290,48,514,17,"drawerPosition"],[290,62,514,31],[290,67,514,36],[290,73,514,42],[290,76,514,45],[290,77,514,46],[290,80,514,49,"_this"],[290,85,514,49],[290,86,514,54,"state"],[290,91,514,59],[290,92,514,60,"containerWidth"],[290,106,515,4],[290,107,515,5],[291,8,517,4],[291,12,517,8,"fromValue"],[291,21,517,17],[291,25,517,21],[291,29,517,25],[291,31,517,27],[292,10,518,6],[292,14,518,10,"nextFramePosition"],[292,31,518,27],[292,34,518,30,"fromValue"],[292,43,518,39],[293,10,519,6],[293,14,519,10,"_this"],[293,19,519,10],[293,20,519,15,"props"],[293,25,519,20],[293,26,519,21,"useNativeAnimations"],[293,45,519,40],[293,47,519,42],[294,12,520,8],[295,12,521,8],[296,12,522,8],[297,12,523,8],[298,12,524,8],[298,16,524,12,"fromValue"],[298,25,524,21],[298,28,524,24,"toValue"],[298,35,524,31],[298,39,524,35,"velocity"],[298,47,524,43],[298,50,524,46],[298,51,524,47],[298,53,524,49],[299,14,525,10,"nextFramePosition"],[299,31,525,27],[299,34,525,30,"Math"],[299,38,525,34],[299,39,525,35,"min"],[299,42,525,38],[299,43,525,39,"fromValue"],[299,52,525,48],[299,55,525,51,"velocity"],[299,63,525,59],[299,66,525,62],[299,70,525,66],[299,72,525,68,"toValue"],[299,79,525,75],[299,80,525,76],[300,12,526,8],[300,13,526,9],[300,19,526,15],[300,23,526,19,"fromValue"],[300,32,526,28],[300,35,526,31,"toValue"],[300,42,526,38],[300,46,526,42,"velocity"],[300,54,526,50],[300,57,526,53],[300,58,526,54],[300,60,526,56],[301,14,527,10,"nextFramePosition"],[301,31,527,27],[301,34,527,30,"Math"],[301,38,527,34],[301,39,527,35,"max"],[301,42,527,38],[301,43,527,39,"fromValue"],[301,52,527,48],[301,55,527,51,"velocity"],[301,63,527,59],[301,66,527,62],[301,70,527,66],[301,72,527,68,"toValue"],[301,79,527,75],[301,80,527,76],[302,12,528,8],[303,10,529,6],[304,10,530,6,"_this"],[304,15,530,6],[304,16,530,11,"state"],[304,21,530,16],[304,22,530,17,"drawerTranslation"],[304,39,530,34],[304,40,530,35,"setValue"],[304,48,530,43],[304,49,530,44,"nextFramePosition"],[304,66,530,61],[304,67,530,62],[305,8,531,4],[306,8,533,4],[306,12,533,10,"willShow"],[306,20,533,18],[306,23,533,21,"toValue"],[306,30,533,28],[306,35,533,33],[306,36,533,34],[307,8,534,4,"_this"],[307,13,534,4],[307,14,534,9,"updateShowing"],[307,27,534,22],[307,28,534,23,"willShow"],[307,36,534,31],[307,37,534,32],[308,8,535,4,"_this"],[308,13,535,4],[308,14,535,9,"emitStateChanged"],[308,30,535,25],[308,31,535,26,"SETTLING"],[308,39,535,34],[308,41,535,36,"willShow"],[308,49,535,44],[308,50,535,45],[309,8,536,4,"_this"],[309,13,536,4],[309,14,536,9,"setState"],[309,22,536,17],[309,23,536,18],[310,10,536,20,"drawerState"],[310,21,536,31],[310,23,536,33,"SETTLING"],[311,8,536,42],[311,9,536,43],[311,10,536,44],[312,8,537,4],[312,12,537,8,"_this"],[312,17,537,8],[312,18,537,13,"props"],[312,23,537,18],[312,24,537,19,"hideStatusBar"],[312,37,537,32],[312,39,537,34],[313,10,538,6,"StatusBar"],[313,22,538,15],[313,23,538,15,"StatusBar"],[313,32,538,15],[313,33,538,16,"setHidden"],[313,42,538,25],[313,43,538,26,"willShow"],[313,51,538,34],[313,53,538,36,"_this"],[313,58,538,36],[313,59,538,41,"props"],[313,64,538,46],[313,65,538,47,"statusBarAnimation"],[313,83,538,65],[313,87,538,69],[313,94,538,76],[313,95,538,77],[314,8,539,4],[315,8,540,4,"Animated"],[315,20,540,12],[315,21,540,12,"Animated"],[315,29,540,12],[315,30,540,13,"spring"],[315,36,540,19],[315,37,540,20,"_this"],[315,42,540,20],[315,43,540,25,"state"],[315,48,540,30],[315,49,540,31,"drawerTranslation"],[315,66,540,48],[315,68,540,50],[316,10,541,6,"velocity"],[316,18,541,14],[317,10,542,6,"bounciness"],[317,20,542,16],[317,22,542,18],[317,23,542,19],[318,10,543,6,"toValue"],[318,17,543,13],[319,10,544,6,"useNativeDriver"],[319,25,544,21],[319,27,544,23,"_this"],[319,32,544,23],[319,33,544,28,"props"],[319,38,544,33],[319,39,544,34,"useNativeAnimations"],[319,58,544,54],[320,10,545,6,"speed"],[320,15,545,11],[320,17,545,13,"speed"],[320,22,545,18],[320,26,545,22,"undefined"],[321,8,546,4],[321,9,546,5],[321,10,546,6],[321,11,546,7,"start"],[321,16,546,12],[321,17,546,13,"_ref5"],[321,22,546,13],[321,26,546,31],[322,10,546,31],[322,14,546,16,"finished"],[322,22,546,24],[322,25,546,24,"_ref5"],[322,30,546,24],[322,31,546,16,"finished"],[322,39,546,24],[323,10,547,6],[323,14,547,10,"finished"],[323,22,547,18],[323,24,547,20],[324,12,548,8,"_this"],[324,17,548,8],[324,18,548,13,"emitStateChanged"],[324,34,548,29],[324,35,548,30,"IDLE"],[324,39,548,34],[324,41,548,36,"willShow"],[324,49,548,44],[324,50,548,45],[325,12,549,8,"_this"],[325,17,549,8],[325,18,549,13,"setState"],[325,26,549,21],[325,27,549,22],[326,14,549,24,"drawerOpened"],[326,26,549,36],[326,28,549,38,"willShow"],[327,12,549,47],[327,13,549,48],[327,14,549,49],[328,12,550,8],[328,16,550,12,"_this"],[328,21,550,12],[328,22,550,17,"state"],[328,27,550,22],[328,28,550,23,"drawerState"],[328,39,550,34],[328,44,550,39,"DRAGGING"],[328,52,550,47],[328,54,550,49],[329,14,551,10],[330,14,552,10],[331,14,553,10,"_this"],[331,19,553,10],[331,20,553,15,"setState"],[331,28,553,23],[331,29,553,24],[332,16,553,26,"drawerState"],[332,27,553,37],[332,29,553,39,"IDLE"],[333,14,553,44],[333,15,553,45],[333,16,553,46],[334,12,554,8],[335,12,555,8],[335,16,555,12,"willShow"],[335,24,555,20],[335,26,555,22],[336,14,556,10,"_this"],[336,19,556,10],[336,20,556,15,"props"],[336,25,556,20],[336,26,556,21,"onDrawerOpen"],[336,38,556,33],[336,41,556,36],[336,42,556,37],[337,12,557,8],[337,13,557,9],[337,19,557,15],[338,14,558,10,"_this"],[338,19,558,10],[338,20,558,15,"props"],[338,25,558,20],[338,26,558,21,"onDrawerClose"],[338,39,558,34],[338,42,558,37],[338,43,558,38],[339,12,559,8],[340,10,560,6],[341,8,561,4],[341,9,561,5],[341,10,561,6],[342,6,562,2],[342,7,562,3],[343,6,562,3,"_this"],[343,11,562,3],[343,12,564,2,"openDrawer"],[343,22,564,12],[343,25,564,15],[343,37,564,55],[344,8,564,55],[344,12,564,16,"options"],[344,19,564,45],[344,22,564,45,"arguments"],[344,31,564,45],[344,32,564,45,"length"],[344,38,564,45],[344,46,564,45,"arguments"],[344,55,564,45],[344,63,564,45,"undefined"],[344,72,564,45],[344,75,564,45,"arguments"],[344,84,564,45],[344,90,564,48],[344,91,564,49],[344,92,564,50],[345,8,565,4,"_this"],[345,13,565,4],[345,14,565,9,"animateDrawer"],[345,27,565,22],[346,8,566,6],[347,8,567,6,"undefined"],[347,17,567,15],[347,19,568,6,"_this"],[347,24,568,6],[347,25,568,11,"props"],[347,30,568,16],[347,31,568,17,"drawerWidth"],[347,42,568,28],[347,44,569,6,"options"],[347,51,569,13],[347,52,569,14,"velocity"],[347,60,569,22],[347,63,569,25,"options"],[347,70,569,32],[347,71,569,33,"velocity"],[347,79,569,41],[347,82,569,44],[347,83,569,45],[347,85,570,6,"options"],[347,92,570,13],[347,93,570,14,"speed"],[347,98,571,4],[347,99,571,5],[349,8,573,4],[350,8,574,4],[351,8,575,4,"_this"],[351,13,575,4],[351,14,575,9,"forceUpdate"],[351,25,575,20],[351,26,575,21],[351,27,575,22],[352,6,576,2],[352,7,576,3],[353,6,576,3,"_this"],[353,11,576,3],[353,12,578,2,"closeDrawer"],[353,23,578,13],[353,26,578,16],[353,38,578,56],[354,8,578,56],[354,12,578,17,"options"],[354,19,578,46],[354,22,578,46,"arguments"],[354,31,578,46],[354,32,578,46,"length"],[354,38,578,46],[354,46,578,46,"arguments"],[354,55,578,46],[354,63,578,46,"undefined"],[354,72,578,46],[354,75,578,46,"arguments"],[354,84,578,46],[354,90,578,49],[354,91,578,50],[354,92,578,51],[355,8,579,4],[356,8,580,4,"_this"],[356,13,580,4],[356,14,580,9,"animateDrawer"],[356,27,580,22],[356,28,581,6,"undefined"],[356,37,581,15],[356,39,582,6],[356,40,582,7],[356,42,583,6,"options"],[356,49,583,13],[356,50,583,14,"velocity"],[356,58,583,22],[356,61,583,25,"options"],[356,68,583,32],[356,69,583,33,"velocity"],[356,77,583,41],[356,80,583,44],[356,81,583,45],[356,83,584,6,"options"],[356,90,584,13],[356,91,584,14,"speed"],[356,96,585,4],[356,97,585,5],[358,8,587,4],[359,8,588,4],[360,8,589,4,"_this"],[360,13,589,4],[360,14,589,9,"forceUpdate"],[360,25,589,20],[360,26,589,21],[360,27,589,22],[361,6,590,2],[361,7,590,3],[362,6,590,3,"_this"],[362,11,590,3],[362,12,592,10,"renderOverlay"],[362,25,592,23],[362,28,592,26],[362,34,592,32],[363,8,593,4],[364,8,594,4],[364,12,594,4,"invariant"],[364,21,594,13],[364,22,594,13,"default"],[364,29,594,13],[364,31,594,14,"_this"],[364,36,594,14],[364,37,594,19,"openValue"],[364,46,594,28],[364,48,594,30],[364,63,594,45],[364,64,594,46],[365,8,595,4],[365,12,595,8,"overlayOpacity"],[365,26,595,22],[366,8,597,4],[366,12,597,8,"_this"],[366,17,597,8],[366,18,597,13,"state"],[366,23,597,18],[366,24,597,19,"drawerState"],[366,35,597,30],[366,40,597,35,"IDLE"],[366,44,597,39],[366,46,597,41],[367,10,598,6,"overlayOpacity"],[367,24,598,20],[367,27,598,23,"_this"],[367,32,598,23],[367,33,598,28,"openValue"],[367,42,598,37],[368,8,599,4],[368,9,599,5],[368,15,599,11],[369,10,600,6,"overlayOpacity"],[369,24,600,20],[369,27,600,23,"_this"],[369,32,600,23],[369,33,600,28,"state"],[369,38,600,33],[369,39,600,34,"drawerOpened"],[369,51,600,46],[369,54,600,49],[369,55,600,50],[369,58,600,53],[369,59,600,54],[370,8,601,4],[371,8,603,4],[371,12,603,10,"dynamicOverlayStyles"],[371,32,603,30],[371,35,603,33],[372,10,604,6,"opacity"],[372,17,604,13],[372,19,604,15,"overlayOpacity"],[372,33,604,29],[373,10,605,6,"backgroundColor"],[373,25,605,21],[373,27,605,23,"_this"],[373,32,605,23],[373,33,605,28,"props"],[373,38,605,33],[373,39,605,34,"overlayColor"],[374,8,606,4],[374,9,606,5],[375,8,608,4],[375,28,609,6],[375,32,609,6,"_reactJsxDevRuntime"],[375,51,609,6],[375,52,609,6,"jsxDEV"],[375,58,609,6],[375,60,609,7,"_handlersTapGestureHandler"],[375,86,609,24],[375,87,609,24,"TapGestureHandler"],[375,104,609,24],[376,10,609,25,"onHandlerStateChange"],[376,30,609,45],[376,32,609,47,"_this"],[376,37,609,47],[376,38,609,52,"onTapHandlerStateChange"],[376,61,609,76],[377,10,609,76,"children"],[377,18,609,76],[377,33,610,8],[377,37,610,8,"_reactJsxDevRuntime"],[377,56,610,8],[377,57,610,8,"jsxDEV"],[377,63,610,8],[377,65,610,9,"_reactNative"],[377,77,610,17],[377,78,610,17,"Animated"],[377,86,610,17],[377,87,610,18,"View"],[377,91,610,22],[378,12,611,10,"pointerEvents"],[378,25,611,23],[378,27,611,25,"_this"],[378,32,611,25],[378,33,611,30,"drawerShown"],[378,44,611,41],[378,47,611,44],[378,53,611,50],[378,56,611,53],[378,62,611,60],[379,12,612,10,"ref"],[379,15,612,13],[379,17,612,15,"_this"],[379,22,612,15],[379,23,612,20,"pointerEventsView"],[379,40,612,38],[380,12,613,10,"style"],[380,17,613,15],[380,19,613,17],[380,20,613,18,"styles"],[380,26,613,24],[380,27,613,25,"overlay"],[380,34,613,32],[380,36,613,34,"dynamicOverlayStyles"],[380,56,613,54],[381,10,613,56],[382,12,613,56,"fileName"],[382,20,613,56],[382,22,613,56,"_jsxFileName"],[382,34,613,56],[383,12,613,56,"lineNumber"],[383,22,613,56],[384,12,613,56,"columnNumber"],[384,24,613,56],[385,10,613,56],[385,13,613,56,"_this"],[385,18,614,9],[386,8,614,10],[387,10,614,10,"fileName"],[387,18,614,10],[387,20,614,10,"_jsxFileName"],[387,32,614,10],[388,10,614,10,"lineNumber"],[388,20,614,10],[389,10,614,10,"columnNumber"],[389,22,614,10],[390,8,614,10],[390,11,614,10,"_this"],[390,16,615,25],[390,17,615,26],[391,6,617,2],[391,7,617,3],[392,6,617,3,"_this"],[392,11,617,3],[392,12,619,10,"renderDrawer"],[392,24,619,22],[392,27,619,25],[392,33,619,31],[393,8,620,4],[393,12,620,4,"_this$props3"],[393,24,620,4],[393,27,627,8,"_this"],[393,32,627,8],[393,33,627,13,"props"],[393,38,627,18],[394,10,621,6,"drawerBackgroundColor"],[394,31,621,27],[394,34,621,27,"_this$props3"],[394,46,621,27],[394,47,621,6,"drawerBackgroundColor"],[394,68,621,27],[395,10,622,6,"drawerWidth"],[395,21,622,17],[395,24,622,17,"_this$props3"],[395,36,622,17],[395,37,622,6,"drawerWidth"],[395,48,622,17],[396,10,623,6,"drawerPosition"],[396,24,623,20],[396,27,623,20,"_this$props3"],[396,39,623,20],[396,40,623,6,"drawerPosition"],[396,54,623,20],[397,10,624,6,"drawerType"],[397,20,624,16],[397,23,624,16,"_this$props3"],[397,35,624,16],[397,36,624,6,"drawerType"],[397,46,624,16],[398,10,625,6,"drawerContainerStyle"],[398,30,625,26],[398,33,625,26,"_this$props3"],[398,45,625,26],[398,46,625,6,"drawerContainerStyle"],[398,66,625,26],[399,10,626,6,"contentContainerStyle"],[399,31,626,27],[399,34,626,27,"_this$props3"],[399,46,626,27],[399,47,626,6,"contentContainerStyle"],[399,68,626,27],[400,8,629,4],[400,12,629,10,"fromLeft"],[400,20,629,18],[400,23,629,21,"drawerPosition"],[400,37,629,35],[400,42,629,40],[400,48,629,46],[401,8,630,4],[401,12,630,10,"drawerSlide"],[401,23,630,21],[401,26,630,24,"drawerType"],[401,36,630,34],[401,41,630,39],[401,47,630,45],[402,8,631,4],[402,12,631,10,"containerSlide"],[402,26,631,24],[402,29,631,27,"drawerType"],[402,39,631,37],[402,44,631,42],[402,51,631,49],[404,8,633,4],[405,8,634,4],[406,8,635,4],[407,8,636,4],[408,8,637,4],[408,12,637,10,"reverseContentDirection"],[408,35,637,33],[408,38,637,36,"I18nManager"],[408,50,637,47],[408,51,637,47,"I18nManager"],[408,62,637,47],[408,63,637,48,"isRTL"],[408,68,637,53],[408,71,637,56,"fromLeft"],[408,79,637,64],[408,82,637,67],[408,83,637,68,"fromLeft"],[408,91,637,76],[409,8,639,4],[409,12,639,10,"dynamicDrawerStyles"],[409,31,639,29],[409,34,639,32],[410,10,640,6,"backgroundColor"],[410,25,640,21],[410,27,640,23,"drawerBackgroundColor"],[410,48,640,44],[411,10,641,6,"width"],[411,15,641,11],[411,17,641,13,"drawerWidth"],[412,8,642,4],[412,9,642,5],[413,8,643,4],[413,12,643,10,"openValue"],[413,21,643,19],[413,24,643,22,"_this"],[413,29,643,22],[413,30,643,27,"openValue"],[413,39,643,36],[414,8,644,4],[414,12,644,4,"invariant"],[414,21,644,13],[414,22,644,13,"default"],[414,29,644,13],[414,31,644,14,"openValue"],[414,40,644,23],[414,42,644,25],[414,57,644,40],[414,58,644,41],[415,8,646,4],[415,12,646,8,"containerStyles"],[415,27,646,23],[416,8,647,4],[416,12,647,8,"containerSlide"],[416,26,647,22],[416,28,647,24],[417,10,648,6],[417,14,648,12,"containerTranslateX"],[417,33,648,31],[417,36,648,34,"openValue"],[417,45,648,43],[417,46,648,44,"interpolate"],[417,57,648,55],[417,58,648,56],[418,12,649,8,"inputRange"],[418,22,649,18],[418,24,649,20],[418,25,649,21],[418,26,649,22],[418,28,649,24],[418,29,649,25],[418,30,649,26],[419,12,650,8,"outputRange"],[419,23,650,19],[419,25,650,21,"fromLeft"],[419,33,650,29],[419,36,650,32],[419,37,650,33],[419,38,650,34],[419,40,650,36,"drawerWidth"],[419,51,650,47],[419,52,650,49],[419,55,650,52],[419,56,650,53],[419,57,650,54],[419,59,650,56],[419,60,650,57,"drawerWidth"],[419,71,650,69],[419,72,650,70],[420,12,651,8,"extrapolate"],[420,23,651,19],[420,25,651,21],[421,10,652,6],[421,11,652,7],[421,12,652,8],[422,10,653,6,"containerStyles"],[422,25,653,21],[422,28,653,24],[423,12,654,8,"transform"],[423,21,654,17],[423,23,654,19],[423,24,654,20],[424,14,654,22,"translateX"],[424,24,654,32],[424,26,654,34,"containerTranslateX"],[425,12,654,54],[425,13,654,55],[426,10,655,6],[426,11,655,7],[427,8,656,4],[428,8,658,4],[428,12,658,8,"drawerTranslateX"],[428,28,658,56],[428,31,658,59],[428,32,658,60],[429,8,659,4],[429,12,659,8,"drawerSlide"],[429,23,659,19],[429,25,659,21],[430,10,660,6],[430,14,660,12,"closedDrawerOffset"],[430,32,660,30],[430,35,660,33,"fromLeft"],[430,43,660,41],[430,46,660,44],[430,47,660,45,"drawerWidth"],[430,58,660,57],[430,61,660,60,"drawerWidth"],[430,72,660,72],[431,10,661,6],[431,14,661,10,"_this"],[431,19,661,10],[431,20,661,15,"state"],[431,25,661,20],[431,26,661,21,"drawerState"],[431,37,661,32],[431,42,661,37,"IDLE"],[431,46,661,41],[431,48,661,43],[432,12,662,8,"drawerTranslateX"],[432,28,662,24],[432,31,662,27,"openValue"],[432,40,662,36],[432,41,662,37,"interpolate"],[432,52,662,48],[432,53,662,49],[433,14,663,10,"inputRange"],[433,24,663,20],[433,26,663,22],[433,27,663,23],[433,28,663,24],[433,30,663,26],[433,31,663,27],[433,32,663,28],[434,14,664,10,"outputRange"],[434,25,664,21],[434,27,664,23],[434,28,664,24,"closedDrawerOffset"],[434,46,664,42],[434,48,664,44],[434,49,664,45],[434,50,664,46],[435,14,665,10,"extrapolate"],[435,25,665,21],[435,27,665,23],[436,12,666,8],[436,13,666,9],[436,14,666,10],[437,10,667,6],[437,11,667,7],[437,17,667,13],[438,12,668,8,"drawerTranslateX"],[438,28,668,24],[438,31,668,27,"_this"],[438,36,668,27],[438,37,668,32,"state"],[438,42,668,37],[438,43,668,38,"drawerOpened"],[438,55,668,50],[438,58,668,53],[438,59,668,54],[438,62,668,57,"closedDrawerOffset"],[438,80,668,75],[439,10,669,6],[440,8,670,4],[441,8,671,4],[441,12,671,10,"drawerStyles"],[441,24,674,5],[441,27,674,8],[442,10,675,6,"transform"],[442,19,675,15],[442,21,675,17],[442,22,675,18],[443,12,675,20,"translateX"],[443,22,675,30],[443,24,675,32,"drawerTranslateX"],[444,10,675,49],[444,11,675,50],[444,12,675,51],[445,10,676,6,"flexDirection"],[445,23,676,19],[445,25,676,21,"reverseContentDirection"],[445,48,676,44],[445,51,676,47],[445,64,676,60],[445,67,676,63],[446,8,677,4],[446,9,677,5],[447,8,679,4],[447,28,680,6],[447,32,680,6,"_reactJsxDevRuntime"],[447,51,680,6],[447,52,680,6,"jsxDEV"],[447,58,680,6],[447,60,680,7,"_reactNative"],[447,72,680,15],[447,73,680,15,"Animated"],[447,81,680,15],[447,82,680,16,"View"],[447,86,680,20],[448,10,680,21,"style"],[448,15,680,26],[448,17,680,28,"styles"],[448,23,680,34],[448,24,680,35,"main"],[448,28,680,40],[449,10,680,41,"onLayout"],[449,18,680,49],[449,20,680,51,"_this"],[449,25,680,51],[449,26,680,56,"handleContainerLayout"],[449,47,680,78],[450,10,680,78,"children"],[450,18,680,78],[450,34,681,8],[450,38,681,8,"_reactJsxDevRuntime"],[450,57,681,8],[450,58,681,8,"jsxDEV"],[450,64,681,8],[450,66,681,9,"_reactNative"],[450,78,681,17],[450,79,681,17,"Animated"],[450,87,681,17],[450,88,681,18,"View"],[450,92,681,22],[451,12,682,10,"style"],[451,17,682,15],[451,19,682,17],[451,20,683,12,"drawerType"],[451,30,683,22],[451,35,683,27],[451,42,683,34],[451,45,684,16,"styles"],[451,51,684,22],[451,52,684,23,"containerOnBack"],[451,67,684,38],[451,70,685,16,"styles"],[451,76,685,22],[451,77,685,23,"containerInFront"],[451,93,685,39],[451,95,686,12,"containerStyles"],[451,110,686,27],[451,112,687,12,"contentContainerStyle"],[451,133,687,33],[451,134,688,12],[452,12,689,10,"importantForAccessibility"],[452,37,689,35],[452,39,690,12,"_this"],[452,44,690,12],[452,45,690,17,"drawerShown"],[452,56,690,28],[452,59,690,31],[452,80,690,52],[452,83,690,55],[452,88,691,11],[453,12,691,11,"children"],[453,20,691,11],[453,23,692,11],[453,30,692,18,"_this"],[453,35,692,18],[453,36,692,23,"props"],[453,41,692,28],[453,42,692,29,"children"],[453,50,692,37],[453,55,692,42],[453,65,692,52],[453,68,693,14,"_this"],[453,73,693,14],[453,74,693,19,"props"],[453,79,693,24],[453,80,693,25,"children"],[453,88,693,33],[453,89,693,34,"_this"],[453,94,693,34],[453,95,693,39,"openValue"],[453,104,693,48],[453,105,693,49],[453,108,694,14,"_this"],[453,113,694,14],[453,114,694,19,"props"],[453,119,694,24],[453,120,694,25,"children"],[453,128,694,33],[453,130,695,11,"_this"],[453,135,695,11],[453,136,695,16,"renderOverlay"],[453,149,695,29],[453,150,695,30],[453,151,695,31],[454,10,695,31],[455,12,695,31,"fileName"],[455,20,695,31],[455,22,695,31,"_jsxFileName"],[455,34,695,31],[456,12,695,31,"lineNumber"],[456,22,695,31],[457,12,695,31,"columnNumber"],[457,24,695,31],[458,10,695,31],[458,13,695,31,"_this"],[458,18,696,23],[458,19,696,24],[458,34,697,8],[458,38,697,8,"_reactJsxDevRuntime"],[458,57,697,8],[458,58,697,8,"jsxDEV"],[458,64,697,8],[458,66,697,9,"_reactNative"],[458,78,697,17],[458,79,697,17,"Animated"],[458,87,697,17],[458,88,697,18,"View"],[458,92,697,22],[459,12,698,10,"pointerEvents"],[459,25,698,23],[459,27,698,24],[459,37,698,34],[460,12,699,10,"ref"],[460,15,699,13],[460,17,699,15,"_this"],[460,22,699,15],[460,23,699,20,"accessibilityIsModalView"],[460,47,699,45],[461,12,700,10,"accessibilityViewIsModal"],[461,36,700,34],[461,38,700,36,"_this"],[461,43,700,36],[461,44,700,41,"drawerShown"],[461,55,700,53],[462,12,701,10,"style"],[462,17,701,15],[462,19,701,17],[462,20,701,18,"styles"],[462,26,701,24],[462,27,701,25,"drawerContainer"],[462,42,701,40],[462,44,701,42,"drawerStyles"],[462,56,701,54],[462,58,701,56,"drawerContainerStyle"],[462,78,701,76],[462,79,701,78],[463,12,701,78,"children"],[463,20,701,78],[463,35,702,10],[463,39,702,10,"_reactJsxDevRuntime"],[463,58,702,10],[463,59,702,10,"jsxDEV"],[463,65,702,10],[463,67,702,11,"_reactNative"],[463,79,702,15],[463,80,702,15,"View"],[463,84,702,15],[464,14,702,16,"style"],[464,19,702,21],[464,21,702,23,"dynamicDrawerStyles"],[464,40,702,43],[465,14,702,43,"children"],[465,22,702,43],[465,24,703,13,"_this"],[465,29,703,13],[465,30,703,18,"props"],[465,35,703,23],[465,36,703,24,"renderNavigationView"],[465,56,703,44],[465,57,703,45,"_this"],[465,62,703,45],[465,63,703,50,"openValue"],[465,72,703,77],[466,12,703,78],[467,14,703,78,"fileName"],[467,22,703,78],[467,24,703,78,"_jsxFileName"],[467,36,703,78],[468,14,703,78,"lineNumber"],[468,24,703,78],[469,14,703,78,"columnNumber"],[469,26,703,78],[470,12,703,78],[470,15,703,78,"_this"],[470,20,704,16],[471,10,704,17],[472,12,704,17,"fileName"],[472,20,704,17],[472,22,704,17,"_jsxFileName"],[472,34,704,17],[473,12,704,17,"lineNumber"],[473,22,704,17],[474,12,704,17,"columnNumber"],[474,24,704,17],[475,10,704,17],[475,13,704,17,"_this"],[475,18,705,23],[475,19,705,24],[476,8,705,24],[477,10,705,24,"fileName"],[477,18,705,24],[477,20,705,24,"_jsxFileName"],[477,32,705,24],[478,10,705,24,"lineNumber"],[478,20,705,24],[479,10,705,24,"columnNumber"],[479,22,705,24],[480,8,705,24],[480,11,705,24,"_this"],[480,16,706,21],[480,17,706,22],[481,6,708,2],[481,7,708,3],[482,6,708,3,"_this"],[482,11,708,3],[482,12,710,10,"setPanGestureRef"],[482,28,710,26],[482,31,710,30,"ref"],[482,34,710,52],[482,38,710,57],[483,8,711,4],[484,8,712,4],[485,8,714,6,"_this"],[485,13,714,6],[485,14,714,11,"panGestureHandler"],[485,31,714,28],[485,32,715,6,"current"],[485,39,715,13],[485,42,715,16,"ref"],[485,45,715,19],[486,8,716,4,"_this"],[486,13,716,4],[486,14,716,9,"props"],[486,19,716,14],[486,20,716,15,"onGestureRef"],[486,32,716,27],[486,35,716,30,"ref"],[486,38,716,33],[486,39,716,34],[487,6,717,2],[487,7,717,3],[488,6,250,4],[488,10,250,10,"dragX"],[488,16,250,15],[488,19,250,18],[488,23,250,22,"Animated"],[488,35,250,30],[488,36,250,30,"Animated"],[488,44,250,30],[488,45,250,31,"Value"],[488,50,250,36],[488,51,250,37],[488,52,250,38],[488,53,250,39],[489,6,251,4],[489,10,251,10,"touchX"],[489,17,251,16],[489,20,251,19],[489,24,251,23,"Animated"],[489,36,251,31],[489,37,251,31,"Animated"],[489,45,251,31],[489,46,251,32,"Value"],[489,51,251,37],[489,52,251,38],[489,53,251,39],[489,54,251,40],[490,6,252,4],[490,10,252,10,"drawerTranslation"],[490,28,252,27],[490,31,252,30],[490,35,252,34,"Animated"],[490,47,252,42],[490,48,252,42,"Animated"],[490,56,252,42],[490,57,252,43,"Value"],[490,62,252,48],[490,63,252,49],[490,64,252,50],[490,65,252,51],[491,6,254,4,"_this"],[491,11,254,4],[491,12,254,9,"state"],[491,17,254,14],[491,20,254,17],[492,8,255,6,"dragX"],[492,13,255,11],[492,15,255,6,"dragX"],[492,21,255,11],[493,8,256,6,"touchX"],[493,14,256,12],[493,16,256,6,"touchX"],[493,23,256,12],[494,8,257,6,"drawerTranslation"],[494,25,257,23],[494,27,257,6,"drawerTranslation"],[494,45,257,23],[495,8,258,6,"containerWidth"],[495,22,258,20],[495,24,258,22],[495,25,258,23],[496,8,259,6,"drawerState"],[496,19,259,17],[496,21,259,19,"IDLE"],[496,25,259,23],[497,8,260,6,"drawerOpened"],[497,20,260,18],[497,22,260,20],[498,6,261,4],[498,7,261,5],[499,6,263,4,"_this"],[499,11,263,4],[499,12,263,9,"updateAnimatedEvent"],[499,31,263,28],[499,32,263,29,"props"],[499,38,263,34],[499,40,263,36,"_this"],[499,45,263,36],[499,46,263,41,"state"],[499,51,263,46],[499,52,263,47],[500,6,263,48],[500,13,263,48,"_this"],[500,18,263,48],[501,4,264,2],[502,4,264,3],[502,8,264,3,"_inherits"],[502,17,264,3],[502,18,264,3,"default"],[502,25,264,3],[502,27,264,3,"DrawerLayout"],[502,39,264,3],[502,41,264,3,"_Component"],[502,51,264,3],[503,4,264,3],[503,15,264,3,"_createClass"],[503,27,264,3],[503,28,264,3,"default"],[503,35,264,3],[503,37,264,3,"DrawerLayout"],[503,49,264,3],[504,6,264,3,"key"],[504,9,264,3],[505,6,264,3,"value"],[505,11,264,3],[505,13,266,2],[505,22,266,2,"shouldComponentUpdate"],[505,43,266,23,"shouldComponentUpdate"],[505,44,266,24,"props"],[505,49,266,48],[505,51,266,50,"state"],[505,56,266,74],[505,58,266,76],[506,8,267,4],[506,12,268,6],[506,16,268,10],[506,17,268,11,"props"],[506,22,268,16],[506,23,268,17,"drawerPosition"],[506,37,268,31],[506,42,268,36,"props"],[506,47,268,41],[506,48,268,42,"drawerPosition"],[506,62,268,56],[506,66,269,6],[506,70,269,10],[506,71,269,11,"props"],[506,76,269,16],[506,77,269,17,"drawerWidth"],[506,88,269,28],[506,93,269,33,"props"],[506,98,269,38],[506,99,269,39,"drawerWidth"],[506,110,269,50],[506,114,270,6],[506,118,270,10],[506,119,270,11,"props"],[506,124,270,16],[506,125,270,17,"drawerType"],[506,135,270,27],[506,140,270,32,"props"],[506,145,270,37],[506,146,270,38,"drawerType"],[506,156,270,48],[506,160,271,6],[506,164,271,10],[506,165,271,11,"state"],[506,170,271,16],[506,171,271,17,"containerWidth"],[506,185,271,31],[506,190,271,36,"state"],[506,195,271,41],[506,196,271,42,"containerWidth"],[506,210,271,56],[506,212,272,6],[507,10,273,6],[507,14,273,10],[507,15,273,11,"updateAnimatedEvent"],[507,34,273,30],[507,35,273,31,"props"],[507,40,273,36],[507,42,273,38,"state"],[507,47,273,43],[507,48,273,44],[508,8,274,4],[509,8,276,4],[509,15,276,11],[509,19,276,15],[510,6,277,2],[511,4,277,3],[512,6,277,3,"key"],[512,9,277,3],[513,6,277,3,"value"],[513,11,277,3],[513,13,719,2],[513,22,719,2,"render"],[513,28,719,8,"render"],[513,29,719,8],[513,31,719,11],[514,8,720,4],[514,12,720,4,"_this$props4"],[514,24,720,4],[514,27,721,6],[514,31,721,10],[514,32,721,11,"props"],[514,37,721,16],[515,10,720,12,"drawerPosition"],[515,24,720,26],[515,27,720,26,"_this$props4"],[515,39,720,26],[515,40,720,12,"drawerPosition"],[515,54,720,26],[516,10,720,28,"drawerLockMode"],[516,24,720,42],[516,27,720,42,"_this$props4"],[516,39,720,42],[516,40,720,28,"drawerLockMode"],[516,54,720,42],[517,10,720,44,"edgeWidth"],[517,19,720,53],[517,22,720,53,"_this$props4"],[517,34,720,53],[517,35,720,44,"edgeWidth"],[517,44,720,53],[518,10,720,55,"minSwipeDistance"],[518,26,720,71],[518,29,720,71,"_this$props4"],[518,41,720,71],[518,42,720,55,"minSwipeDistance"],[518,58,720,71],[519,8,723,4],[519,12,723,10,"fromLeft"],[519,20,723,18],[519,23,723,21,"drawerPosition"],[519,37,723,35],[519,42,723,40],[519,48,723,46],[521,8,725,4],[522,8,726,4],[523,8,727,4],[524,8,728,4],[524,12,728,10,"gestureOrientation"],[524,30,728,28],[524,33,729,6],[524,34,729,7,"fromLeft"],[524,42,729,15],[524,45,729,18],[524,46,729,19],[524,49,729,22],[524,50,729,23],[524,51,729,24],[524,56,729,29],[524,60,729,33],[524,61,729,34,"drawerShown"],[524,72,729,45],[524,75,729,48],[524,76,729,49],[524,77,729,50],[524,80,729,53],[524,81,729,54],[524,82,729,55],[526,8,731,4],[527,8,732,4],[528,8,733,4],[529,8,734,4],[529,12,734,10,"hitSlop"],[529,19,734,17],[529,22,734,20,"fromLeft"],[529,30,734,28],[529,33,735,8],[530,10,735,10,"left"],[530,14,735,14],[530,16,735,16],[530,17,735,17],[531,10,735,19,"width"],[531,15,735,24],[531,17,735,26],[531,21,735,30],[531,22,735,31,"drawerShown"],[531,33,735,42],[531,36,735,45,"undefined"],[531,45,735,54],[531,48,735,57,"edgeWidth"],[532,8,735,67],[532,9,735,68],[532,12,736,8],[533,10,736,10,"right"],[533,15,736,15],[533,17,736,17],[533,18,736,18],[534,10,736,20,"width"],[534,15,736,25],[534,17,736,27],[534,21,736,31],[534,22,736,32,"drawerShown"],[534,33,736,43],[534,36,736,46,"undefined"],[534,45,736,55],[534,48,736,58,"edgeWidth"],[535,8,736,68],[535,9,736,69],[536,8,738,4],[536,28,739,6],[536,32,739,6,"_reactJsxDevRuntime"],[536,51,739,6],[536,52,739,6,"jsxDEV"],[536,58,739,6],[536,60,739,7,"_handlersPanGestureHandler"],[536,86,739,24],[536,87,739,24,"PanGestureHandler"],[536,104,739,24],[536,105,740,8],[537,8,740,8],[538,10,741,8,"userSelect"],[538,20,741,18],[538,22,741,20],[538,26,741,24],[538,27,741,25,"props"],[538,32,741,30],[538,33,741,31,"userSelect"],[538,43,741,42],[539,10,742,8,"activeCursor"],[539,22,742,20],[539,24,742,22],[539,28,742,26],[539,29,742,27,"props"],[539,34,742,32],[539,35,742,33,"activeCursor"],[539,47,742,46],[540,10,743,8,"mouseButton"],[540,21,743,19],[540,23,743,21],[540,27,743,25],[540,28,743,26,"props"],[540,33,743,31],[540,34,743,32,"mouseButton"],[540,45,743,44],[541,10,744,8,"enableContextMenu"],[541,27,744,25],[541,29,744,27],[541,33,744,31],[541,34,744,32,"props"],[541,39,744,37],[541,40,744,38,"enableContextMenu"],[541,57,744,56],[542,10,745,8,"ref"],[542,13,745,11],[542,15,745,13],[542,19,745,17],[542,20,745,18,"setPanGestureRef"],[542,36,745,35],[543,10,746,8,"hitSlop"],[543,17,746,15],[543,19,746,17,"hitSlop"],[543,26,746,25],[544,10,747,8,"activeOffsetX"],[544,23,747,21],[544,25,747,23,"gestureOrientation"],[544,43,747,41],[544,46,747,44,"minSwipeDistance"],[544,62,747,62],[545,10,748,8,"failOffsetY"],[545,21,748,19],[545,23,748,21],[545,24,748,22],[545,25,748,23],[545,27,748,25],[545,29,748,27],[545,31,748,29],[545,32,748,31],[546,10,749,8,"onGestureEvent"],[546,24,749,22],[546,26,749,24],[546,30,749,28],[546,31,749,29,"onGestureEvent"],[546,45,749,44],[547,10,750,8,"onHandlerStateChange"],[547,30,750,28],[547,32,750,30],[547,36,750,34],[547,37,750,35,"openingHandlerStateChange"],[547,62,750,61],[548,10,751,8,"enableTrackpadTwoFingerGesture"],[548,40,751,38],[548,42,752,10],[548,46,752,14],[548,47,752,15,"props"],[548,52,752,20],[548,53,752,21,"enableTrackpadTwoFingerGesture"],[548,83,753,9],[549,10,754,8,"enabled"],[549,17,754,15],[549,19,755,10,"drawerLockMode"],[549,33,755,24],[549,38,755,29],[549,53,755,44],[549,57,755,48,"drawerLockMode"],[549,71,755,62],[549,76,755,67],[549,89,756,9],[550,10,756,9,"children"],[550,18,756,9],[550,20,757,9],[550,24,757,13],[550,25,757,14,"renderDrawer"],[550,37,757,26],[550,38,757,27],[551,8,757,28],[552,10,757,28,"fileName"],[552,18,757,28],[552,20,757,28,"_jsxFileName"],[552,32,757,28],[553,10,757,28,"lineNumber"],[553,20,757,28],[554,10,757,28,"columnNumber"],[554,22,757,28],[555,8,757,28],[555,15,758,25],[555,16,758,26],[556,6,760,2],[557,4,760,3],[558,2,760,3],[558,4,231,42,"Component"],[558,10,231,51],[558,11,231,51,"Component"],[558,20,231,51],[559,2,231,21,"DrawerLayout"],[559,14,231,33],[559,15,235,9,"defaultProps"],[559,27,235,21],[559,30,235,24],[560,4,236,4,"drawerWidth"],[560,15,236,15],[560,17,236,17],[560,20,236,20],[561,4,237,4,"drawerPosition"],[561,18,237,18],[561,20,237,20],[561,26,237,26],[562,4,238,4,"useNativeAnimations"],[562,23,238,23],[562,25,238,25],[562,29,238,29],[563,4,239,4,"drawerType"],[563,14,239,14],[563,16,239,16],[563,23,239,23],[564,4,240,4,"edgeWidth"],[564,13,240,13],[564,15,240,15],[564,17,240,17],[565,4,241,4,"minSwipeDistance"],[565,20,241,20],[565,22,241,22],[565,23,241,23],[566,4,242,4,"overlayColor"],[566,16,242,16],[566,18,242,18],[566,38,242,38],[567,4,243,4,"drawerLockMode"],[567,18,243,18],[567,20,243,20],[567,30,243,30],[568,4,244,4,"enableTrackpadTwoFingerGesture"],[568,34,244,34],[568,36,244,36],[569,2,245,2],[569,3,245,3],[570,2,231,21,"DrawerLayout"],[570,14,231,33],[570,15,288,9,"positions"],[570,24,288,18],[570,27,288,21],[571,4,289,4,"Left"],[571,8,289,8],[571,10,289,10],[571,16,289,16],[572,4,290,4,"Right"],[572,9,290,9],[572,11,290,11],[573,2,291,2],[573,3,291,3],[574,2,763,0],[574,6,763,6,"styles"],[574,12,763,12],[574,15,763,15,"StyleSheet"],[574,27,763,25],[574,28,763,25,"StyleSheet"],[574,38,763,25],[574,39,763,26,"create"],[574,45,763,32],[574,46,763,33],[575,4,764,2,"drawerContainer"],[575,19,764,17],[575,21,764,19],[576,6,765,4],[576,9,765,7,"StyleSheet"],[576,21,765,17],[576,22,765,17,"StyleSheet"],[576,32,765,17],[576,33,765,18,"absoluteFillObject"],[576,51,765,36],[577,6,766,4,"zIndex"],[577,12,766,10],[577,14,766,12],[577,18,766,16],[578,6,767,4,"flexDirection"],[578,19,767,17],[578,21,767,19],[579,4,768,2],[579,5,768,3],[580,4,769,2,"containerInFront"],[580,20,769,18],[580,22,769,20],[581,6,770,4],[581,9,770,7,"StyleSheet"],[581,21,770,17],[581,22,770,17,"StyleSheet"],[581,32,770,17],[581,33,770,18,"absoluteFillObject"],[581,51,770,36],[582,6,771,4,"zIndex"],[582,12,771,10],[582,14,771,12],[583,4,772,2],[583,5,772,3],[584,4,773,2,"containerOnBack"],[584,19,773,17],[584,21,773,19],[585,6,774,4],[585,9,774,7,"StyleSheet"],[585,21,774,17],[585,22,774,17,"StyleSheet"],[585,32,774,17],[585,33,774,18,"absoluteFillObject"],[586,4,775,2],[586,5,775,3],[587,4,776,2,"main"],[587,8,776,6],[587,10,776,8],[588,6,777,4,"flex"],[588,10,777,8],[588,12,777,10],[588,13,777,11],[589,6,778,4,"zIndex"],[589,12,778,10],[589,14,778,12],[589,15,778,13],[590,6,779,4,"overflow"],[590,14,779,12],[590,16,779,14],[591,4,780,2],[591,5,780,3],[592,4,781,2,"overlay"],[592,11,781,9],[592,13,781,11],[593,6,782,4],[593,9,782,7,"StyleSheet"],[593,21,782,17],[593,22,782,17,"StyleSheet"],[593,32,782,17],[593,33,782,18,"absoluteFillObject"],[593,51,782,36],[594,6,783,4,"zIndex"],[594,12,783,10],[594,14,783,12],[595,4,784,2],[596,2,785,0],[596,3,785,1],[596,4,785,2],[597,0,785,3],[597,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCsO;ECgB;GDiB;EEE;GFW;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaE;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"},"hasCjsExports":false},"type":"js/module"}]}