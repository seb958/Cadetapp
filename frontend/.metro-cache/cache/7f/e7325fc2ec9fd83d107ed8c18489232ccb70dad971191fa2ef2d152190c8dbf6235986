{"dependencies":[{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/findNodeHandle","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"2RP7Dp//wHy/IL2D3/pkDbKjgUI=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":92},"end":{"line":4,"column":52,"index":144}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":145},"end":{"line":5,"column":35,"index":180}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":181},"end":{"line":6,"column":63,"index":244}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":245},"end":{"line":7,"column":55,"index":300}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.filterConfig = filterConfig;\n  exports.transformIntoHandlerTags = transformIntoHandlerTags;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[0], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsFindNodeHandle = require(_dependencyMap[1], \"react-native-web/dist/exports/findNodeHandle\");\n  var findNodeHandleRN = _interopDefault(_reactNativeWebDistExportsFindNodeHandle);\n  var _handlersRegistry = require(_dependencyMap[2], \"./handlersRegistry\");\n  var _utils = require(_dependencyMap[3], \"../utils\");\n  var _RNGestureHandlerModule = require(_dependencyMap[4], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _ghQueueMicrotask = require(_dependencyMap[5], \"../ghQueueMicrotask\");\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps, defaults = {}) {\n    const filteredConfig = {\n      ...defaults\n    };\n    for (const key of validProps) {\n      let value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _utils.toArray)(handlerIDs);\n    if (Platform.default.OS === 'web') {\n      return handlerIDs.map(({\n        current\n      }) => current).filter(handle => handle);\n    }\n    // converts handler string IDs into their numeric tags\n    return handlerIDs.map(handlerID => _handlersRegistry.handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1).filter(handlerTag => handlerTag > 0);\n  }\n  function findNodeHandle(node) {\n    if (Platform.default.OS === 'web') {\n      return node;\n    }\n    return (0, findNodeHandleRN.default)(node) ?? null;\n  }\n  let flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n        RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":78,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,13,0,"exports"],[12,9,13,0],[12,10,13,0,"filterConfig"],[12,22,13,0],[12,25,13,0,"filterConfig"],[12,37,13,0],[13,2,35,0,"exports"],[13,9,35,0],[13,10,35,0,"transformIntoHandlerTags"],[13,34,35,0],[13,37,35,0,"transformIntoHandlerTags"],[13,61,35,0],[14,2,45,0,"exports"],[14,9,45,0],[14,10,45,0,"findNodeHandle"],[14,24,45,0],[14,27,45,0,"findNodeHandle"],[14,41,45,0],[15,2,52,0,"exports"],[15,9,52,0],[15,10,52,0,"scheduleFlushOperations"],[15,33,52,0],[15,36,52,0,"scheduleFlushOperations"],[15,59,52,0],[16,2,60,1],[16,6,60,1,"_reactNativeWebDistExportsPlatform"],[16,40,60,1],[16,43,60,1,"require"],[16,50,60,1],[16,51,60,1,"_dependencyMap"],[16,65,60,1],[17,2,60,1],[17,6,60,1,"Platform"],[17,14,60,1],[17,17,60,1,"_interopDefault"],[17,32,60,1],[17,33,60,1,"_reactNativeWebDistExportsPlatform"],[17,67,60,1],[18,2,60,1],[18,6,60,1,"_reactNativeWebDistExportsFindNodeHandle"],[18,46,60,1],[18,49,60,1,"require"],[18,56,60,1],[18,57,60,1,"_dependencyMap"],[18,71,60,1],[19,2,60,1],[19,6,60,1,"findNodeHandleRN"],[19,22,60,1],[19,25,60,1,"_interopDefault"],[19,40,60,1],[19,41,60,1,"_reactNativeWebDistExportsFindNodeHandle"],[19,81,60,1],[20,2,4,0],[20,6,4,0,"_handlersRegistry"],[20,23,4,0],[20,26,4,0,"require"],[20,33,4,0],[20,34,4,0,"_dependencyMap"],[20,48,4,0],[21,2,5,0],[21,6,5,0,"_utils"],[21,12,5,0],[21,15,5,0,"require"],[21,22,5,0],[21,23,5,0,"_dependencyMap"],[21,37,5,0],[22,2,6,0],[22,6,6,0,"_RNGestureHandlerModule"],[22,29,6,0],[22,32,6,0,"require"],[22,39,6,0],[22,40,6,0,"_dependencyMap"],[22,54,6,0],[23,2,6,0],[23,6,6,0,"RNGestureHandlerModule"],[23,28,6,0],[23,31,6,0,"_interopDefault"],[23,46,6,0],[23,47,6,0,"_RNGestureHandlerModule"],[23,70,6,0],[24,2,7,0],[24,6,7,0,"_ghQueueMicrotask"],[24,23,7,0],[24,26,7,0,"require"],[24,33,7,0],[24,34,7,0,"_dependencyMap"],[24,48,7,0],[25,2,8,0],[25,11,8,9,"isConfigParam"],[25,24,8,22,"isConfigParam"],[25,25,8,23,"param"],[25,30,8,28],[25,32,8,30,"name"],[25,36,8,34],[25,38,8,36],[26,4,9,2],[27,4,10,2],[28,4,11,2],[28,11,11,9,"param"],[28,16,11,14],[28,21,11,19,"undefined"],[28,30,11,28],[28,35,11,33,"param"],[28,40,11,38],[28,45,11,43,"Object"],[28,51,11,49],[28,52,11,50,"param"],[28,57,11,55],[28,58,11,56],[28,62,11,60],[28,64,11,62],[28,76,11,74],[28,80,11,78,"param"],[28,85,11,83],[28,86,11,84],[28,87,11,85],[28,91,11,89,"name"],[28,95,11,93],[28,100,11,98],[28,122,11,120],[28,126,11,124,"name"],[28,130,11,128],[28,135,11,133],[28,151,11,149],[29,2,12,0],[30,2,13,7],[30,11,13,16,"filterConfig"],[30,23,13,28,"filterConfig"],[30,24,13,29,"props"],[30,29,13,34],[30,31,13,36,"validProps"],[30,41,13,46],[30,43,13,48,"defaults"],[30,51,13,56],[30,54,13,59],[30,55,13,60],[30,56,13,61],[30,58,13,63],[31,4,14,2],[31,10,14,8,"filteredConfig"],[31,24,14,22],[31,27,14,25],[32,6,15,4],[32,9,15,7,"defaults"],[33,4,16,2],[33,5,16,3],[34,4,17,2],[34,9,17,7],[34,15,17,13,"key"],[34,18,17,16],[34,22,17,20,"validProps"],[34,32,17,30],[34,34,17,32],[35,6,18,4],[35,10,18,8,"value"],[35,15,18,13],[35,18,18,16,"props"],[35,23,18,21],[35,24,18,22,"key"],[35,27,18,25],[35,28,18,26],[36,6,19,4],[36,10,19,8,"isConfigParam"],[36,23,19,21],[36,24,19,22,"value"],[36,29,19,27],[36,31,19,29,"key"],[36,34,19,32],[36,35,19,33],[36,37,19,35],[37,8,20,6],[37,12,20,10,"key"],[37,15,20,13],[37,20,20,18],[37,42,20,40],[37,46,20,44,"key"],[37,49,20,47],[37,54,20,52],[37,63,20,61],[37,65,20,63],[38,10,21,8,"value"],[38,15,21,13],[38,18,21,16,"transformIntoHandlerTags"],[38,42,21,40],[38,43,21,41,"props"],[38,48,21,46],[38,49,21,47,"key"],[38,52,21,50],[38,53,21,51],[38,54,21,52],[39,8,22,6],[39,9,22,7],[39,15,22,13],[39,19,22,17,"key"],[39,22,22,20],[39,27,22,25],[39,36,22,34],[39,40,22,38],[39,47,22,45,"value"],[39,52,22,50],[39,57,22,55],[39,65,22,63],[39,67,22,65],[40,10,23,8,"value"],[40,15,23,13],[40,18,23,16],[41,12,24,10,"top"],[41,15,24,13],[41,17,24,15,"value"],[41,22,24,20],[42,12,25,10,"left"],[42,16,25,14],[42,18,25,16,"value"],[42,23,25,21],[43,12,26,10,"bottom"],[43,18,26,16],[43,20,26,18,"value"],[43,25,26,23],[44,12,27,10,"right"],[44,17,27,15],[44,19,27,17,"value"],[45,10,28,8],[45,11,28,9],[46,8,29,6],[47,8,30,6,"filteredConfig"],[47,22,30,20],[47,23,30,21,"key"],[47,26,30,24],[47,27,30,25],[47,30,30,28,"value"],[47,35,30,33],[48,6,31,4],[49,4,32,2],[50,4,33,2],[50,11,33,9,"filteredConfig"],[50,25,33,23],[51,2,34,0],[52,2,35,7],[52,11,35,16,"transformIntoHandlerTags"],[52,35,35,40,"transformIntoHandlerTags"],[52,36,35,41,"handlerIDs"],[52,46,35,51],[52,48,35,53],[53,4,36,2,"handlerIDs"],[53,14,36,12],[53,17,36,15],[53,21,36,15,"toArray"],[53,27,36,22],[53,28,36,22,"toArray"],[53,35,36,22],[53,37,36,23,"handlerIDs"],[53,47,36,33],[53,48,36,34],[54,4,37,2],[54,8,37,6,"Platform"],[54,16,37,14],[54,17,37,14,"default"],[54,24,37,14],[54,25,37,15,"OS"],[54,27,37,17],[54,32,37,22],[54,37,37,27],[54,39,37,29],[55,6,38,4],[55,13,38,11,"handlerIDs"],[55,23,38,21],[55,24,38,22,"map"],[55,27,38,25],[55,28,38,26],[55,29,38,27],[56,8,39,6,"current"],[57,6,40,4],[57,7,40,5],[57,12,40,10,"current"],[57,19,40,17],[57,20,40,18],[57,21,40,19,"filter"],[57,27,40,25],[57,28,40,26,"handle"],[57,34,40,32],[57,38,40,36,"handle"],[57,44,40,42],[57,45,40,43],[58,4,41,2],[59,4,42,2],[60,4,43,2],[60,11,43,9,"handlerIDs"],[60,21,43,19],[60,22,43,20,"map"],[60,25,43,23],[60,26,43,24,"handlerID"],[60,35,43,33],[60,39,43,37,"handlerIDToTag"],[60,56,43,51],[60,57,43,51,"handlerIDToTag"],[60,71,43,51],[60,72,43,52,"handlerID"],[60,81,43,61],[60,82,43,62],[60,86,43,66,"handlerID"],[60,95,43,75],[60,96,43,76,"current"],[60,103,43,83],[60,105,43,85,"handlerTag"],[60,115,43,95],[60,119,43,99],[60,120,43,100],[60,121,43,101],[60,122,43,102],[60,123,43,103,"filter"],[60,129,43,109],[60,130,43,110,"handlerTag"],[60,140,43,120],[60,144,43,124,"handlerTag"],[60,154,43,134],[60,157,43,137],[60,158,43,138],[60,159,43,139],[61,2,44,0],[62,2,45,7],[62,11,45,16,"findNodeHandle"],[62,25,45,30,"findNodeHandle"],[62,26,45,31,"node"],[62,30,45,35],[62,32,45,37],[63,4,46,2],[63,8,46,6,"Platform"],[63,16,46,14],[63,17,46,14,"default"],[63,24,46,14],[63,25,46,15,"OS"],[63,27,46,17],[63,32,46,22],[63,37,46,27],[63,39,46,29],[64,6,47,4],[64,13,47,11,"node"],[64,17,47,15],[65,4,48,2],[66,4,49,2],[66,11,49,9],[66,15,49,9,"findNodeHandleRN"],[66,31,49,25],[66,32,49,25,"default"],[66,39,49,25],[66,41,49,26,"node"],[66,45,49,30],[66,46,49,31],[66,50,49,35],[66,54,49,39],[67,2,50,0],[68,2,51,0],[68,6,51,4,"flushOperationsScheduled"],[68,30,51,28],[68,33,51,31],[68,38,51,36],[69,2,52,7],[69,11,52,16,"scheduleFlushOperations"],[69,34,52,39,"scheduleFlushOperations"],[69,35,52,39],[69,37,52,42],[70,4,53,2],[70,8,53,6],[70,9,53,7,"flushOperationsScheduled"],[70,33,53,31],[70,35,53,33],[71,6,54,4,"flushOperationsScheduled"],[71,30,54,28],[71,33,54,31],[71,37,54,35],[72,6,55,4],[72,10,55,4,"ghQueueMicrotask"],[72,27,55,20],[72,28,55,20,"ghQueueMicrotask"],[72,44,55,20],[72,46,55,21],[72,52,55,27],[73,8,56,6,"RNGestureHandlerModule"],[73,30,56,28],[73,31,56,28,"default"],[73,38,56,28],[73,39,56,29,"flushOperations"],[73,54,56,44],[73,55,56,45],[73,56,56,46],[74,8,57,6,"flushOperationsScheduled"],[74,32,57,30],[74,35,57,33],[74,40,57,38],[75,6,58,4],[75,7,58,5],[75,8,58,6],[76,4,59,2],[77,2,60,0],[78,0,60,1],[78,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACO;CDI;OEC;CFqB;OGC;0BCG;iBDE,SE,gBF;wBCG,6ED,SE,4BF;CHC;OMC;CNK;OOE;qBCG;KDG;CPE"},"hasCjsExports":false},"type":"js/module"}]}