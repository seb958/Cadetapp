{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":186},"end":{"line":7,"column":35,"index":206}}],"key":"UDLzvLUTPKPQreUSUZ++gAgg2pg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SimultaneousGesture = exports.ExclusiveGesture = exports.ComposedGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function extendRelation(currentRelation, extendWith) {\n    if (currentRelation === undefined) {\n      return [...extendWith];\n    } else {\n      return [...currentRelation, ...extendWith];\n    }\n  }\n  class ComposedGesture extends _gesture.Gesture {\n    gestures = [];\n    simultaneousGestures = [];\n    requireGesturesToFail = [];\n    constructor(...gestures) {\n      super();\n      this.gestures = gestures;\n    }\n    prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        const newConfig = {\n          ...gesture.config\n        };\n\n        // No need to extend `blocksHandlers` here, because it's not changed in composition.\n        // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n    prepare() {\n      for (const gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n    initialize() {\n      for (const gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n    toGestureArray() {\n      return this.gestures.flatMap(gesture => gesture.toGestureArray());\n    }\n  }\n  exports.ComposedGesture = ComposedGesture;\n  class SimultaneousGesture extends ComposedGesture {\n    prepare() {\n      // This piece of magic works something like this:\n      // for every gesture in the array\n      const simultaneousArrays = this.gestures.map(gesture =>\n      // we take the array it's in\n      this.gestures\n      // and make a copy without it\n      .filter(x => x !== gesture)\n      // then we flatmap the result to get list of raw (not composed) gestures\n      // this way we don't make the gestures simultaneous with themselves, which is\n      // important when the gesture is `ExclusiveGesture` - we don't want to make\n      // exclusive gestures simultaneous\n      .flatMap(x => x.toGestureArray()));\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }\n  exports.SimultaneousGesture = SimultaneousGesture;\n  class ExclusiveGesture extends ComposedGesture {\n    prepare() {\n      // Transforms the array of gestures into array of grouped raw (not composed) gestures\n      // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n      const gestureArrays = this.gestures.map(gesture => gesture.toGestureArray());\n      let requireToFail = [];\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n\n        // Every group gets to wait for all groups before it\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }\n  exports.ExclusiveGesture = ExclusiveGesture;\n});","lineCount":91,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"SimultaneousGesture"],[7,29,6,27],[7,32,6,30,"exports"],[7,39,6,37],[7,40,6,38,"ExclusiveGesture"],[7,56,6,54],[7,59,6,57,"exports"],[7,66,6,64],[7,67,6,65,"ComposedGesture"],[7,82,6,80],[7,85,6,83],[7,90,6,88],[7,91,6,89],[8,2,7,0],[8,6,7,4,"_gesture"],[8,14,7,12],[8,17,7,15,"require"],[8,24,7,22],[8,25,7,22,"_dependencyMap"],[8,39,7,22],[8,55,7,34],[8,56,7,35],[9,2,8,0],[9,11,8,9,"extendRelation"],[9,25,8,23,"extendRelation"],[9,26,8,24,"currentRelation"],[9,41,8,39],[9,43,8,41,"extendWith"],[9,53,8,51],[9,55,8,53],[10,4,9,2],[10,8,9,6,"currentRelation"],[10,23,9,21],[10,28,9,26,"undefined"],[10,37,9,35],[10,39,9,37],[11,6,10,4],[11,13,10,11],[11,14,10,12],[11,17,10,15,"extendWith"],[11,27,10,25],[11,28,10,26],[12,4,11,2],[12,5,11,3],[12,11,11,9],[13,6,12,4],[13,13,12,11],[13,14,12,12],[13,17,12,15,"currentRelation"],[13,32,12,30],[13,34,12,32],[13,37,12,35,"extendWith"],[13,47,12,45],[13,48,12,46],[14,4,13,2],[15,2,14,0],[16,2,15,0],[16,8,15,6,"ComposedGesture"],[16,23,15,21],[16,32,15,30,"_gesture"],[16,40,15,38],[16,41,15,39,"Gesture"],[16,48,15,46],[16,49,15,47],[17,4,16,2,"gestures"],[17,12,16,10],[17,15,16,13],[17,17,16,15],[18,4,17,2,"simultaneousGestures"],[18,24,17,22],[18,27,17,25],[18,29,17,27],[19,4,18,2,"requireGesturesToFail"],[19,25,18,23],[19,28,18,26],[19,30,18,28],[20,4,19,2,"constructor"],[20,15,19,13,"constructor"],[20,16,19,14],[20,19,19,17,"gestures"],[20,27,19,25],[20,29,19,27],[21,6,20,4],[21,11,20,9],[21,12,20,10],[21,13,20,11],[22,6,21,4],[22,10,21,8],[22,11,21,9,"gestures"],[22,19,21,17],[22,22,21,20,"gestures"],[22,30,21,28],[23,4,22,2],[24,4,23,2,"prepareSingleGesture"],[24,24,23,22,"prepareSingleGesture"],[24,25,23,23,"gesture"],[24,32,23,30],[24,34,23,32,"simultaneousGestures"],[24,54,23,52],[24,56,23,54,"requireGesturesToFail"],[24,77,23,75],[24,79,23,77],[25,6,24,4],[25,10,24,8,"gesture"],[25,17,24,15],[25,29,24,27,"_gesture"],[25,37,24,35],[25,38,24,36,"BaseGesture"],[25,49,24,47],[25,51,24,49],[26,8,25,6],[26,14,25,12,"newConfig"],[26,23,25,21],[26,26,25,24],[27,10,26,8],[27,13,26,11,"gesture"],[27,20,26,18],[27,21,26,19,"config"],[28,8,27,6],[28,9,27,7],[30,8,29,6],[31,8,30,6],[32,8,31,6,"newConfig"],[32,17,31,15],[32,18,31,16,"simultaneousWith"],[32,34,31,32],[32,37,31,35,"extendRelation"],[32,51,31,49],[32,52,31,50,"newConfig"],[32,61,31,59],[32,62,31,60,"simultaneousWith"],[32,78,31,76],[32,80,31,78,"simultaneousGestures"],[32,100,31,98],[32,101,31,99],[33,8,32,6,"newConfig"],[33,17,32,15],[33,18,32,16,"requireToFail"],[33,31,32,29],[33,34,32,32,"extendRelation"],[33,48,32,46],[33,49,32,47,"newConfig"],[33,58,32,56],[33,59,32,57,"requireToFail"],[33,72,32,70],[33,74,32,72,"requireGesturesToFail"],[33,95,32,93],[33,96,32,94],[34,8,33,6,"gesture"],[34,15,33,13],[34,16,33,14,"config"],[34,22,33,20],[34,25,33,23,"newConfig"],[34,34,33,32],[35,6,34,4],[35,7,34,5],[35,13,34,11],[35,17,34,15,"gesture"],[35,24,34,22],[35,36,34,34,"ComposedGesture"],[35,51,34,49],[35,53,34,51],[36,8,35,6,"gesture"],[36,15,35,13],[36,16,35,14,"simultaneousGestures"],[36,36,35,34],[36,39,35,37,"simultaneousGestures"],[36,59,35,57],[37,8,36,6,"gesture"],[37,15,36,13],[37,16,36,14,"requireGesturesToFail"],[37,37,36,35],[37,40,36,38,"requireGesturesToFail"],[37,61,36,59],[38,8,37,6,"gesture"],[38,15,37,13],[38,16,37,14,"prepare"],[38,23,37,21],[38,24,37,22],[38,25,37,23],[39,6,38,4],[40,4,39,2],[41,4,40,2,"prepare"],[41,11,40,9,"prepare"],[41,12,40,9],[41,14,40,12],[42,6,41,4],[42,11,41,9],[42,17,41,15,"gesture"],[42,24,41,22],[42,28,41,26],[42,32,41,30],[42,33,41,31,"gestures"],[42,41,41,39],[42,43,41,41],[43,8,42,6],[43,12,42,10],[43,13,42,11,"prepareSingleGesture"],[43,33,42,31],[43,34,42,32,"gesture"],[43,41,42,39],[43,43,42,41],[43,47,42,45],[43,48,42,46,"simultaneousGestures"],[43,68,42,66],[43,70,42,68],[43,74,42,72],[43,75,42,73,"requireGesturesToFail"],[43,96,42,94],[43,97,42,95],[44,6,43,4],[45,4,44,2],[46,4,45,2,"initialize"],[46,14,45,12,"initialize"],[46,15,45,12],[46,17,45,15],[47,6,46,4],[47,11,46,9],[47,17,46,15,"gesture"],[47,24,46,22],[47,28,46,26],[47,32,46,30],[47,33,46,31,"gestures"],[47,41,46,39],[47,43,46,41],[48,8,47,6,"gesture"],[48,15,47,13],[48,16,47,14,"initialize"],[48,26,47,24],[48,27,47,25],[48,28,47,26],[49,6,48,4],[50,4,49,2],[51,4,50,2,"toGestureArray"],[51,18,50,16,"toGestureArray"],[51,19,50,16],[51,21,50,19],[52,6,51,4],[52,13,51,11],[52,17,51,15],[52,18,51,16,"gestures"],[52,26,51,24],[52,27,51,25,"flatMap"],[52,34,51,32],[52,35,51,33,"gesture"],[52,42,51,40],[52,46,51,44,"gesture"],[52,53,51,51],[52,54,51,52,"toGestureArray"],[52,68,51,66],[52,69,51,67],[52,70,51,68],[52,71,51,69],[53,4,52,2],[54,2,53,0],[55,2,54,0,"exports"],[55,9,54,7],[55,10,54,8,"ComposedGesture"],[55,25,54,23],[55,28,54,26,"ComposedGesture"],[55,43,54,41],[56,2,55,0],[56,8,55,6,"SimultaneousGesture"],[56,27,55,25],[56,36,55,34,"ComposedGesture"],[56,51,55,49],[56,52,55,50],[57,4,56,2,"prepare"],[57,11,56,9,"prepare"],[57,12,56,9],[57,14,56,12],[58,6,57,4],[59,6,58,4],[60,6,59,4],[60,12,59,10,"simultaneousArrays"],[60,30,59,28],[60,33,59,31],[60,37,59,35],[60,38,59,36,"gestures"],[60,46,59,44],[60,47,59,45,"map"],[60,50,59,48],[60,51,59,49,"gesture"],[60,58,59,56],[61,6,60,4],[62,6,61,4],[62,10,61,8],[62,11,61,9,"gestures"],[63,6,62,4],[64,6,62,4],[64,7,63,5,"filter"],[64,13,63,11],[64,14,63,12,"x"],[64,15,63,13],[64,19,63,17,"x"],[64,20,63,18],[64,25,63,23,"gesture"],[64,32,63,30],[65,6,64,4],[66,6,65,4],[67,6,66,4],[68,6,67,4],[69,6,67,4],[69,7,68,5,"flatMap"],[69,14,68,12],[69,15,68,13,"x"],[69,16,68,14],[69,20,68,18,"x"],[69,21,68,19],[69,22,68,20,"toGestureArray"],[69,36,68,34],[69,37,68,35],[69,38,68,36],[69,39,68,37],[69,40,68,38],[70,6,69,4],[70,11,69,9],[70,15,69,13,"i"],[70,16,69,14],[70,19,69,17],[70,20,69,18],[70,22,69,20,"i"],[70,23,69,21],[70,26,69,24],[70,30,69,28],[70,31,69,29,"gestures"],[70,39,69,37],[70,40,69,38,"length"],[70,46,69,44],[70,48,69,46,"i"],[70,49,69,47],[70,51,69,49],[70,53,69,51],[71,8,70,6],[71,12,70,10],[71,13,70,11,"prepareSingleGesture"],[71,33,70,31],[71,34,70,32],[71,38,70,36],[71,39,70,37,"gestures"],[71,47,70,45],[71,48,70,46,"i"],[71,49,70,47],[71,50,70,48],[71,52,70,50,"simultaneousArrays"],[71,70,70,68],[71,71,70,69,"i"],[71,72,70,70],[71,73,70,71],[71,75,70,73],[71,79,70,77],[71,80,70,78,"requireGesturesToFail"],[71,101,70,99],[71,102,70,100],[72,6,71,4],[73,4,72,2],[74,2,73,0],[75,2,74,0,"exports"],[75,9,74,7],[75,10,74,8,"SimultaneousGesture"],[75,29,74,27],[75,32,74,30,"SimultaneousGesture"],[75,51,74,49],[76,2,75,0],[76,8,75,6,"ExclusiveGesture"],[76,24,75,22],[76,33,75,31,"ComposedGesture"],[76,48,75,46],[76,49,75,47],[77,4,76,2,"prepare"],[77,11,76,9,"prepare"],[77,12,76,9],[77,14,76,12],[78,6,77,4],[79,6,78,4],[80,6,79,4],[80,12,79,10,"gestureArrays"],[80,25,79,23],[80,28,79,26],[80,32,79,30],[80,33,79,31,"gestures"],[80,41,79,39],[80,42,79,40,"map"],[80,45,79,43],[80,46,79,44,"gesture"],[80,53,79,51],[80,57,79,55,"gesture"],[80,64,79,62],[80,65,79,63,"toGestureArray"],[80,79,79,77],[80,80,79,78],[80,81,79,79],[80,82,79,80],[81,6,80,4],[81,10,80,8,"requireToFail"],[81,23,80,21],[81,26,80,24],[81,28,80,26],[82,6,81,4],[82,11,81,9],[82,15,81,13,"i"],[82,16,81,14],[82,19,81,17],[82,20,81,18],[82,22,81,20,"i"],[82,23,81,21],[82,26,81,24],[82,30,81,28],[82,31,81,29,"gestures"],[82,39,81,37],[82,40,81,38,"length"],[82,46,81,44],[82,48,81,46,"i"],[82,49,81,47],[82,51,81,49],[82,53,81,51],[83,8,82,6],[83,12,82,10],[83,13,82,11,"prepareSingleGesture"],[83,33,82,31],[83,34,82,32],[83,38,82,36],[83,39,82,37,"gestures"],[83,47,82,45],[83,48,82,46,"i"],[83,49,82,47],[83,50,82,48],[83,52,82,50],[83,56,82,54],[83,57,82,55,"simultaneousGestures"],[83,77,82,75],[83,79,82,77],[83,83,82,81],[83,84,82,82,"requireGesturesToFail"],[83,105,82,103],[83,106,82,104,"concat"],[83,112,82,110],[83,113,82,111,"requireToFail"],[83,126,82,124],[83,127,82,125],[83,128,82,126],[85,8,84,6],[86,8,85,6,"requireToFail"],[86,21,85,19],[86,24,85,22,"requireToFail"],[86,37,85,35],[86,38,85,36,"concat"],[86,44,85,42],[86,45,85,43,"gestureArrays"],[86,58,85,56],[86,59,85,57,"i"],[86,60,85,58],[86,61,85,59],[86,62,85,60],[87,6,86,4],[88,4,87,2],[89,2,88,0],[90,2,89,0,"exports"],[90,9,89,7],[90,10,89,8,"ExclusiveGesture"],[90,26,89,24],[90,29,89,27,"ExclusiveGesture"],[90,45,89,43],[91,0,89,44],[91,3]],"functionMap":{"names":["<global>","extendRelation","ComposedGesture","ComposedGesture#constructor","ComposedGesture#prepareSingleGesture","ComposedGesture#prepare","ComposedGesture#initialize","ComposedGesture#toGestureArray","gestures.flatMap$argument_0","SimultaneousGesture","SimultaneousGesture#prepare","gestures.map$argument_0","gestures.filter$argument_0","gestures.filter.flatMap$argument_0","ExclusiveGesture","ExclusiveGesture#prepare"],"mappings":"AAA;ACO;CDM;AEC;ECI;GDG;EEC;GFgB;EGC;GHI;EIC;GJI;EKC;iCCC,mCD;GLC;CFC;ASE;ECC;iDCG;YCI,kBD;aEK,uBF,CD;GDI;CTC;AcE;ECC;4CJG,mCI;GDQ;CdC"},"hasCjsExports":true},"type":"js/module"}]}