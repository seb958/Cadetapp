{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":15,"index":187},"end":{"line":8,"column":35,"index":207}}],"key":"UDLzvLUTPKPQreUSUZ++gAgg2pg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ExclusiveGesture = exports.SimultaneousGesture = exports.ComposedGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function extendRelation(currentRelation, extendWith) {\n    if (currentRelation === undefined) {\n      return [...extendWith];\n    } else {\n      return [...currentRelation, ...extendWith];\n    }\n  }\n  class ComposedGesture extends _gesture.Gesture {\n    constructor(...gestures) {\n      super();\n      _defineProperty(this, \"gestures\", []);\n      _defineProperty(this, \"simultaneousGestures\", []);\n      _defineProperty(this, \"requireGesturesToFail\", []);\n      this.gestures = gestures;\n    }\n    prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        const newConfig = {\n          ...gesture.config\n        }; // No need to extend `blocksHandlers` here, because it's not changed in composition.\n        // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n    prepare() {\n      for (const gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n    initialize() {\n      for (const gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n    toGestureArray() {\n      return this.gestures.flatMap(gesture => gesture.toGestureArray());\n    }\n  }\n  exports.ComposedGesture = ComposedGesture;\n  class SimultaneousGesture extends ComposedGesture {\n    prepare() {\n      // This piece of magic works something like this:\n      // for every gesture in the array\n      const simultaneousArrays = this.gestures.map(gesture =>\n      // we take the array it's in\n      this.gestures // and make a copy without it\n      .filter(x => x !== gesture) // then we flatmap the result to get list of raw (not composed) gestures\n      // this way we don't make the gestures simultaneous with themselves, which is\n      // important when the gesture is `ExclusiveGesture` - we don't want to make\n      // exclusive gestures simultaneous\n      .flatMap(x => x.toGestureArray()));\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }\n  exports.SimultaneousGesture = SimultaneousGesture;\n  class ExclusiveGesture extends ComposedGesture {\n    prepare() {\n      // Transforms the array of gestures into array of grouped raw (not composed) gestures\n      // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n      const gestureArrays = this.gestures.map(gesture => gesture.toGestureArray());\n      let requireToFail = [];\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail)); // Every group gets to wait for all groups before it\n\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }\n  exports.ExclusiveGesture = ExclusiveGesture;\n});","lineCount":100,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"ExclusiveGesture"],[7,26,6,24],[7,29,6,27,"exports"],[7,36,6,34],[7,37,6,35,"SimultaneousGesture"],[7,56,6,54],[7,59,6,57,"exports"],[7,66,6,64],[7,67,6,65,"ComposedGesture"],[7,82,6,80],[7,85,6,83],[7,90,6,88],[7,91,6,89],[8,2,8,0],[8,6,8,4,"_gesture"],[8,14,8,12],[8,17,8,15,"require"],[8,24,8,22],[8,25,8,22,"_dependencyMap"],[8,39,8,22],[8,55,8,34],[8,56,8,35],[9,2,10,0],[9,11,10,9,"_defineProperty"],[9,26,10,24,"_defineProperty"],[9,27,10,25,"obj"],[9,30,10,28],[9,32,10,30,"key"],[9,35,10,33],[9,37,10,35,"value"],[9,42,10,40],[9,44,10,42],[10,4,10,44],[10,8,10,48,"key"],[10,11,10,51],[10,15,10,55,"obj"],[10,18,10,58],[10,20,10,60],[11,6,10,62,"Object"],[11,12,10,68],[11,13,10,69,"defineProperty"],[11,27,10,83],[11,28,10,84,"obj"],[11,31,10,87],[11,33,10,89,"key"],[11,36,10,92],[11,38,10,94],[12,8,10,96,"value"],[12,13,10,101],[12,15,10,103,"value"],[12,20,10,108],[13,8,10,110,"enumerable"],[13,18,10,120],[13,20,10,122],[13,24,10,126],[14,8,10,128,"configurable"],[14,20,10,140],[14,22,10,142],[14,26,10,146],[15,8,10,148,"writable"],[15,16,10,156],[15,18,10,158],[16,6,10,163],[16,7,10,164],[16,8,10,165],[17,4,10,167],[17,5,10,168],[17,11,10,174],[18,6,10,176,"obj"],[18,9,10,179],[18,10,10,180,"key"],[18,13,10,183],[18,14,10,184],[18,17,10,187,"value"],[18,22,10,192],[19,4,10,194],[20,4,10,196],[20,11,10,203,"obj"],[20,14,10,206],[21,2,10,208],[22,2,12,0],[22,11,12,9,"extendRelation"],[22,25,12,23,"extendRelation"],[22,26,12,24,"currentRelation"],[22,41,12,39],[22,43,12,41,"extendWith"],[22,53,12,51],[22,55,12,53],[23,4,13,2],[23,8,13,6,"currentRelation"],[23,23,13,21],[23,28,13,26,"undefined"],[23,37,13,35],[23,39,13,37],[24,6,14,4],[24,13,14,11],[24,14,14,12],[24,17,14,15,"extendWith"],[24,27,14,25],[24,28,14,26],[25,4,15,2],[25,5,15,3],[25,11,15,9],[26,6,16,4],[26,13,16,11],[26,14,16,12],[26,17,16,15,"currentRelation"],[26,32,16,30],[26,34,16,32],[26,37,16,35,"extendWith"],[26,47,16,45],[26,48,16,46],[27,4,17,2],[28,2,18,0],[29,2,20,0],[29,8,20,6,"ComposedGesture"],[29,23,20,21],[29,32,20,30,"_gesture"],[29,40,20,38],[29,41,20,39,"Gesture"],[29,48,20,46],[29,49,20,47],[30,4,21,2,"constructor"],[30,15,21,13,"constructor"],[30,16,21,14],[30,19,21,17,"gestures"],[30,27,21,25],[30,29,21,27],[31,6,22,4],[31,11,22,9],[31,12,22,10],[31,13,22,11],[32,6,24,4,"_defineProperty"],[32,21,24,19],[32,22,24,20],[32,26,24,24],[32,28,24,26],[32,38,24,36],[32,40,24,38],[32,42,24,40],[32,43,24,41],[33,6,26,4,"_defineProperty"],[33,21,26,19],[33,22,26,20],[33,26,26,24],[33,28,26,26],[33,50,26,48],[33,52,26,50],[33,54,26,52],[33,55,26,53],[34,6,28,4,"_defineProperty"],[34,21,28,19],[34,22,28,20],[34,26,28,24],[34,28,28,26],[34,51,28,49],[34,53,28,51],[34,55,28,53],[34,56,28,54],[35,6,30,4],[35,10,30,8],[35,11,30,9,"gestures"],[35,19,30,17],[35,22,30,20,"gestures"],[35,30,30,28],[36,4,31,2],[37,4,33,2,"prepareSingleGesture"],[37,24,33,22,"prepareSingleGesture"],[37,25,33,23,"gesture"],[37,32,33,30],[37,34,33,32,"simultaneousGestures"],[37,54,33,52],[37,56,33,54,"requireGesturesToFail"],[37,77,33,75],[37,79,33,77],[38,6,34,4],[38,10,34,8,"gesture"],[38,17,34,15],[38,29,34,27,"_gesture"],[38,37,34,35],[38,38,34,36,"BaseGesture"],[38,49,34,47],[38,51,34,49],[39,8,35,6],[39,14,35,12,"newConfig"],[39,23,35,21],[39,26,35,24],[40,10,35,26],[40,13,35,29,"gesture"],[40,20,35,36],[40,21,35,37,"config"],[41,8,36,6],[41,9,36,7],[41,10,36,8],[41,11,36,9],[42,8,37,6],[44,8,39,6,"newConfig"],[44,17,39,15],[44,18,39,16,"simultaneousWith"],[44,34,39,32],[44,37,39,35,"extendRelation"],[44,51,39,49],[44,52,39,50,"newConfig"],[44,61,39,59],[44,62,39,60,"simultaneousWith"],[44,78,39,76],[44,80,39,78,"simultaneousGestures"],[44,100,39,98],[44,101,39,99],[45,8,40,6,"newConfig"],[45,17,40,15],[45,18,40,16,"requireToFail"],[45,31,40,29],[45,34,40,32,"extendRelation"],[45,48,40,46],[45,49,40,47,"newConfig"],[45,58,40,56],[45,59,40,57,"requireToFail"],[45,72,40,70],[45,74,40,72,"requireGesturesToFail"],[45,95,40,93],[45,96,40,94],[46,8,41,6,"gesture"],[46,15,41,13],[46,16,41,14,"config"],[46,22,41,20],[46,25,41,23,"newConfig"],[46,34,41,32],[47,6,42,4],[47,7,42,5],[47,13,42,11],[47,17,42,15,"gesture"],[47,24,42,22],[47,36,42,34,"ComposedGesture"],[47,51,42,49],[47,53,42,51],[48,8,43,6,"gesture"],[48,15,43,13],[48,16,43,14,"simultaneousGestures"],[48,36,43,34],[48,39,43,37,"simultaneousGestures"],[48,59,43,57],[49,8,44,6,"gesture"],[49,15,44,13],[49,16,44,14,"requireGesturesToFail"],[49,37,44,35],[49,40,44,38,"requireGesturesToFail"],[49,61,44,59],[50,8,45,6,"gesture"],[50,15,45,13],[50,16,45,14,"prepare"],[50,23,45,21],[50,24,45,22],[50,25,45,23],[51,6,46,4],[52,4,47,2],[53,4,49,2,"prepare"],[53,11,49,9,"prepare"],[53,12,49,9],[53,14,49,12],[54,6,50,4],[54,11,50,9],[54,17,50,15,"gesture"],[54,24,50,22],[54,28,50,26],[54,32,50,30],[54,33,50,31,"gestures"],[54,41,50,39],[54,43,50,41],[55,8,51,6],[55,12,51,10],[55,13,51,11,"prepareSingleGesture"],[55,33,51,31],[55,34,51,32,"gesture"],[55,41,51,39],[55,43,51,41],[55,47,51,45],[55,48,51,46,"simultaneousGestures"],[55,68,51,66],[55,70,51,68],[55,74,51,72],[55,75,51,73,"requireGesturesToFail"],[55,96,51,94],[55,97,51,95],[56,6,52,4],[57,4,53,2],[58,4,55,2,"initialize"],[58,14,55,12,"initialize"],[58,15,55,12],[58,17,55,15],[59,6,56,4],[59,11,56,9],[59,17,56,15,"gesture"],[59,24,56,22],[59,28,56,26],[59,32,56,30],[59,33,56,31,"gestures"],[59,41,56,39],[59,43,56,41],[60,8,57,6,"gesture"],[60,15,57,13],[60,16,57,14,"initialize"],[60,26,57,24],[60,27,57,25],[60,28,57,26],[61,6,58,4],[62,4,59,2],[63,4,61,2,"toGestureArray"],[63,18,61,16,"toGestureArray"],[63,19,61,16],[63,21,61,19],[64,6,62,4],[64,13,62,11],[64,17,62,15],[64,18,62,16,"gestures"],[64,26,62,24],[64,27,62,25,"flatMap"],[64,34,62,32],[64,35,62,33,"gesture"],[64,42,62,40],[64,46,62,44,"gesture"],[64,53,62,51],[64,54,62,52,"toGestureArray"],[64,68,62,66],[64,69,62,67],[64,70,62,68],[64,71,62,69],[65,4,63,2],[66,2,65,0],[67,2,67,0,"exports"],[67,9,67,7],[67,10,67,8,"ComposedGesture"],[67,25,67,23],[67,28,67,26,"ComposedGesture"],[67,43,67,41],[68,2,69,0],[68,8,69,6,"SimultaneousGesture"],[68,27,69,25],[68,36,69,34,"ComposedGesture"],[68,51,69,49],[68,52,69,50],[69,4,70,2,"prepare"],[69,11,70,9,"prepare"],[69,12,70,9],[69,14,70,12],[70,6,71,4],[71,6,72,4],[72,6,73,4],[72,12,73,10,"simultaneousArrays"],[72,30,73,28],[72,33,73,31],[72,37,73,35],[72,38,73,36,"gestures"],[72,46,73,44],[72,47,73,45,"map"],[72,50,73,48],[72,51,73,49,"gesture"],[72,58,73,56],[73,6,73,60],[74,6,74,4],[74,10,74,8],[74,11,74,9,"gestures"],[74,19,74,17],[74,20,74,18],[75,6,74,18],[75,7,75,5,"filter"],[75,13,75,11],[75,14,75,12,"x"],[75,15,75,13],[75,19,75,17,"x"],[75,20,75,18],[75,25,75,23,"gesture"],[75,32,75,30],[75,33,75,31],[75,34,75,32],[76,6,76,4],[77,6,77,4],[78,6,78,4],[79,6,78,4],[79,7,79,5,"flatMap"],[79,14,79,12],[79,15,79,13,"x"],[79,16,79,14],[79,20,79,18,"x"],[79,21,79,19],[79,22,79,20,"toGestureArray"],[79,36,79,34],[79,37,79,35],[79,38,79,36],[79,39,79,37],[79,40,79,38],[80,6,81,4],[80,11,81,9],[80,15,81,13,"i"],[80,16,81,14],[80,19,81,17],[80,20,81,18],[80,22,81,20,"i"],[80,23,81,21],[80,26,81,24],[80,30,81,28],[80,31,81,29,"gestures"],[80,39,81,37],[80,40,81,38,"length"],[80,46,81,44],[80,48,81,46,"i"],[80,49,81,47],[80,51,81,49],[80,53,81,51],[81,8,82,6],[81,12,82,10],[81,13,82,11,"prepareSingleGesture"],[81,33,82,31],[81,34,82,32],[81,38,82,36],[81,39,82,37,"gestures"],[81,47,82,45],[81,48,82,46,"i"],[81,49,82,47],[81,50,82,48],[81,52,82,50,"simultaneousArrays"],[81,70,82,68],[81,71,82,69,"i"],[81,72,82,70],[81,73,82,71],[81,75,82,73],[81,79,82,77],[81,80,82,78,"requireGesturesToFail"],[81,101,82,99],[81,102,82,100],[82,6,83,4],[83,4,84,2],[84,2,86,0],[85,2,88,0,"exports"],[85,9,88,7],[85,10,88,8,"SimultaneousGesture"],[85,29,88,27],[85,32,88,30,"SimultaneousGesture"],[85,51,88,49],[86,2,90,0],[86,8,90,6,"ExclusiveGesture"],[86,24,90,22],[86,33,90,31,"ComposedGesture"],[86,48,90,46],[86,49,90,47],[87,4,91,2,"prepare"],[87,11,91,9,"prepare"],[87,12,91,9],[87,14,91,12],[88,6,92,4],[89,6,93,4],[90,6,94,4],[90,12,94,10,"gestureArrays"],[90,25,94,23],[90,28,94,26],[90,32,94,30],[90,33,94,31,"gestures"],[90,41,94,39],[90,42,94,40,"map"],[90,45,94,43],[90,46,94,44,"gesture"],[90,53,94,51],[90,57,94,55,"gesture"],[90,64,94,62],[90,65,94,63,"toGestureArray"],[90,79,94,77],[90,80,94,78],[90,81,94,79],[90,82,94,80],[91,6,95,4],[91,10,95,8,"requireToFail"],[91,23,95,21],[91,26,95,24],[91,28,95,26],[92,6,97,4],[92,11,97,9],[92,15,97,13,"i"],[92,16,97,14],[92,19,97,17],[92,20,97,18],[92,22,97,20,"i"],[92,23,97,21],[92,26,97,24],[92,30,97,28],[92,31,97,29,"gestures"],[92,39,97,37],[92,40,97,38,"length"],[92,46,97,44],[92,48,97,46,"i"],[92,49,97,47],[92,51,97,49],[92,53,97,51],[93,8,98,6],[93,12,98,10],[93,13,98,11,"prepareSingleGesture"],[93,33,98,31],[93,34,98,32],[93,38,98,36],[93,39,98,37,"gestures"],[93,47,98,45],[93,48,98,46,"i"],[93,49,98,47],[93,50,98,48],[93,52,98,50],[93,56,98,54],[93,57,98,55,"simultaneousGestures"],[93,77,98,75],[93,79,98,77],[93,83,98,81],[93,84,98,82,"requireGesturesToFail"],[93,105,98,103],[93,106,98,104,"concat"],[93,112,98,110],[93,113,98,111,"requireToFail"],[93,126,98,124],[93,127,98,125],[93,128,98,126],[93,129,98,127],[93,130,98,128],[95,8,100,6,"requireToFail"],[95,21,100,19],[95,24,100,22,"requireToFail"],[95,37,100,35],[95,38,100,36,"concat"],[95,44,100,42],[95,45,100,43,"gestureArrays"],[95,58,100,56],[95,59,100,57,"i"],[95,60,100,58],[95,61,100,59],[95,62,100,60],[96,6,101,4],[97,4,102,2],[98,2,104,0],[99,2,106,0,"exports"],[99,9,106,7],[99,10,106,8,"ExclusiveGesture"],[99,26,106,24],[99,29,106,27,"ExclusiveGesture"],[99,45,106,43],[100,0,106,44],[100,3]],"functionMap":{"names":["<global>","_defineProperty","extendRelation","ComposedGesture","ComposedGesture#constructor","ComposedGesture#prepareSingleGesture","ComposedGesture#prepare","ComposedGesture#initialize","ComposedGesture#toGestureArray","gestures.flatMap$argument_0","SimultaneousGesture","SimultaneousGesture#prepare","gestures.map$argument_0","gestures.filter$argument_0","gestures.filter.flatMap$argument_0","ExclusiveGesture","ExclusiveGesture#prepare"],"mappings":"AAA;ACS,iND;AEE;CFM;AGE;ECC;GDU;EEE;GFc;EGE;GHI;EIE;GJI;EKE;iCCC,mCD;GLC;CHE;AUI;ECC;iDCG;YCE,kBD;aEI,uBF,CD;GDK;CVE;AeI;ECC;4CJG,mCI;GDQ;CfE"},"hasCjsExports":true},"type":"js/module"}]}