{"dependencies":[{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"./web/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":171},"end":{"line":8,"column":35,"index":193}}],"key":"d+hM0IfRyWDRguoehmiB1LZIoD8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = findNodeHandle;\n  var _reactNative = require(_dependencyMap[0], \"react-native-web/dist/index\");\n  var _utils = require(_dependencyMap[1], \"./web/utils\");\n  function findNodeHandle(viewRef) {\n    // TODO: Remove this once we remove old API.\n    if (viewRef instanceof _reactNative.FlatList) {\n      // @ts-ignore This is the only way to get the scroll ref from FlatList.\n      return viewRef._listRef._scrollRef.firstChild;\n    }\n    // Old API assumes that child handler is HTMLElement.\n    // However, if we nest handlers, we will get ref to another handler.\n    // In that case, we want to recursively call findNodeHandle with new handler viewTag (which can also be ref to another handler).\n    if (viewRef?.viewTag !== undefined) {\n      return findNodeHandle(viewRef.viewTag);\n    }\n    if (viewRef instanceof Element) {\n      if (viewRef.style.display === 'contents') {\n        return findNodeHandle(viewRef.firstChild);\n      }\n      return viewRef;\n    }\n    if ((0, _utils.isRNSVGElement)(viewRef)) {\n      return viewRef.elementRef.current;\n    }\n\n    // In new API, we receive ref object which `current` field points to  wrapper `div` with `display: contents;`.\n    // We want to return the first descendant (in DFS order) that doesn't have this property.\n    let element = viewRef?.current;\n    while (element && element.style.display === 'contents') {\n      element = element.firstChild;\n    }\n    return element;\n  }\n});","lineCount":40,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"findNodeHandle"],[7,34,6,32],[8,2,6,33],[8,6,6,33,"_reactNative"],[8,18,6,33],[8,21,6,33,"require"],[8,28,6,33],[8,29,6,33,"_dependencyMap"],[8,43,6,33],[9,2,8,0],[9,6,8,4,"_utils"],[9,12,8,10],[9,15,8,13,"require"],[9,22,8,20],[9,23,8,20,"_dependencyMap"],[9,37,8,20],[9,55,8,34],[9,56,8,35],[10,2,9,0],[10,11,9,9,"findNodeHandle"],[10,25,9,23,"findNodeHandle"],[10,26,9,24,"viewRef"],[10,33,9,31],[10,35,9,33],[11,4,10,2],[12,4,11,2],[12,8,11,6,"viewRef"],[12,15,11,13],[12,27,11,25,"_reactNative"],[12,39,11,37],[12,40,11,38,"FlatList"],[12,48,11,46],[12,50,11,48],[13,6,12,4],[14,6,13,4],[14,13,13,11,"viewRef"],[14,20,13,18],[14,21,13,19,"_listRef"],[14,29,13,27],[14,30,13,28,"_scrollRef"],[14,40,13,38],[14,41,13,39,"firstChild"],[14,51,13,49],[15,4,14,2],[16,4,15,2],[17,4,16,2],[18,4,17,2],[19,4,18,2],[19,8,18,6,"viewRef"],[19,15,18,13],[19,17,18,15,"viewTag"],[19,24,18,22],[19,29,18,27,"undefined"],[19,38,18,36],[19,40,18,38],[20,6,19,4],[20,13,19,11,"findNodeHandle"],[20,27,19,25],[20,28,19,26,"viewRef"],[20,35,19,33],[20,36,19,34,"viewTag"],[20,43,19,41],[20,44,19,42],[21,4,20,2],[22,4,21,2],[22,8,21,6,"viewRef"],[22,15,21,13],[22,27,21,25,"Element"],[22,34,21,32],[22,36,21,34],[23,6,22,4],[23,10,22,8,"viewRef"],[23,17,22,15],[23,18,22,16,"style"],[23,23,22,21],[23,24,22,22,"display"],[23,31,22,29],[23,36,22,34],[23,46,22,44],[23,48,22,46],[24,8,23,6],[24,15,23,13,"findNodeHandle"],[24,29,23,27],[24,30,23,28,"viewRef"],[24,37,23,35],[24,38,23,36,"firstChild"],[24,48,23,46],[24,49,23,47],[25,6,24,4],[26,6,25,4],[26,13,25,11,"viewRef"],[26,20,25,18],[27,4,26,2],[28,4,27,2],[28,8,27,6],[28,9,27,7],[28,10,27,8],[28,12,27,10,"_utils"],[28,18,27,16],[28,19,27,17,"isRNSVGElement"],[28,33,27,31],[28,35,27,33,"viewRef"],[28,42,27,40],[28,43,27,41],[28,45,27,43],[29,6,28,4],[29,13,28,11,"viewRef"],[29,20,28,18],[29,21,28,19,"elementRef"],[29,31,28,29],[29,32,28,30,"current"],[29,39,28,37],[30,4,29,2],[32,4,31,2],[33,4,32,2],[34,4,33,2],[34,8,33,6,"element"],[34,15,33,13],[34,18,33,16,"viewRef"],[34,25,33,23],[34,27,33,25,"current"],[34,34,33,32],[35,4,34,2],[35,11,34,9,"element"],[35,18,34,16],[35,22,34,20,"element"],[35,29,34,27],[35,30,34,28,"style"],[35,35,34,33],[35,36,34,34,"display"],[35,43,34,41],[35,48,34,46],[35,58,34,56],[35,60,34,58],[36,6,35,4,"element"],[36,13,35,11],[36,16,35,14,"element"],[36,23,35,21],[36,24,35,22,"firstChild"],[36,34,35,32],[37,4,36,2],[38,4,37,2],[38,11,37,9,"element"],[38,18,37,16],[39,2,38,0],[40,0,38,1],[40,3]],"functionMap":{"names":["<global>","findNodeHandle"],"mappings":"AAA;ACQ;CD6B"},"hasCjsExports":true},"type":"js/module"}]}