{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":37},"end":{"line":2,"column":50,"index":87}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0=","exportNames":["*"],"imports":1}},{"name":"./updateHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":88},"end":{"line":3,"column":50,"index":138}}],"key":"lArlpaD/5d+RB4jQyU++60NVCc0=","exportNames":["*"],"imports":1}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":139},"end":{"line":4,"column":52,"index":191}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo=","exportNames":["*"],"imports":1}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":192},"end":{"line":5,"column":46,"index":238}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":239},"end":{"line":6,"column":67,"index":306}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":307},"end":{"line":7,"column":53,"index":360}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useDetectorUpdater = useDetectorUpdater;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _attachHandlers = require(_dependencyMap[1], \"./attachHandlers\");\n  var _updateHandlers = require(_dependencyMap[2], \"./updateHandlers\");\n  var _needsToReattach = require(_dependencyMap[3], \"./needsToReattach\");\n  var _dropHandlers = require(_dependencyMap[4], \"./dropHandlers\");\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[6], \"../../../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  // Returns a function that's responsible for updating the attached gestures\n  // If the view has changed, it will reattach the handlers to the new view\n  // If the view remains the same, it will update the handlers with the new config\n\n  function useDetectorUpdater(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef) {\n    const forceRender = (0, _utils.useForceRender)();\n    const updateAttachedGestures = (0, _react.useCallback)(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    skipConfigUpdate => {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      const viewTag = (0, findNodeHandle.default)(state.viewRef);\n      const didUnderlyingViewChange = viewTag !== state.previousViewTag;\n      if (didUnderlyingViewChange || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach)) {\n        (0, _utils.validateDetectorChildren)(state.viewRef);\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n        (0, _attachHandlers.attachHandlers)({\n          preparedGesture,\n          gestureConfig,\n          gesturesToAttach,\n          webEventHandlersRef,\n          viewTag\n        });\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        (0, _updateHandlers.updateHandlers)(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    }, [forceRender, gestureConfig, gesturesToAttach, preparedGesture, state, webEventHandlersRef]);\n    return updateAttachedGestures;\n  }\n});","lineCount":54,"map":[[12,2,11,0,"exports"],[12,9,11,0],[12,10,11,0,"useDetectorUpdater"],[12,28,11,0],[12,31,11,0,"useDetectorUpdater"],[12,49,11,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,2,0],[14,6,2,0,"_attachHandlers"],[14,21,2,0],[14,24,2,0,"require"],[14,31,2,0],[14,32,2,0,"_dependencyMap"],[14,46,2,0],[15,2,3,0],[15,6,3,0,"_updateHandlers"],[15,21,3,0],[15,24,3,0,"require"],[15,31,3,0],[15,32,3,0,"_dependencyMap"],[15,46,3,0],[16,2,4,0],[16,6,4,0,"_needsToReattach"],[16,22,4,0],[16,25,4,0,"require"],[16,32,4,0],[16,33,4,0,"_dependencyMap"],[16,47,4,0],[17,2,5,0],[17,6,5,0,"_dropHandlers"],[17,19,5,0],[17,22,5,0,"require"],[17,29,5,0],[17,30,5,0,"_dependencyMap"],[17,44,5,0],[18,2,6,0],[18,6,6,0,"_utils"],[18,12,6,0],[18,15,6,0,"require"],[18,22,6,0],[18,23,6,0,"_dependencyMap"],[18,37,6,0],[19,2,7,0],[19,6,7,0,"_findNodeHandle"],[19,21,7,0],[19,24,7,0,"require"],[19,31,7,0],[19,32,7,0,"_dependencyMap"],[19,46,7,0],[20,2,7,0],[20,6,7,0,"findNodeHandle"],[20,20,7,0],[20,23,7,0,"_interopDefault"],[20,38,7,0],[20,39,7,0,"_findNodeHandle"],[20,54,7,0],[21,2,7,54],[22,2,8,0],[23,2,9,0],[25,2,11,7],[25,11,11,16,"useDetectorUpdater"],[25,29,11,34,"useDetectorUpdater"],[25,30,11,35,"state"],[25,35,11,40],[25,37,11,42,"preparedGesture"],[25,52,11,57],[25,54,11,59,"gesturesToAttach"],[25,70,11,75],[25,72,11,77,"gestureConfig"],[25,85,11,90],[25,87,11,92,"webEventHandlersRef"],[25,106,11,111],[25,108,11,113],[26,4,12,2],[26,10,12,8,"forceRender"],[26,21,12,19],[26,24,12,22],[26,28,12,22,"useForceRender"],[26,34,12,36],[26,35,12,36,"useForceRender"],[26,49,12,36],[26,51,12,37],[26,52,12,38],[27,4,13,2],[27,10,13,8,"updateAttachedGestures"],[27,32,13,30],[27,35,13,33],[27,39,13,33,"useCallback"],[27,45,13,44],[27,46,13,44,"useCallback"],[27,57,13,44],[28,4,13,46],[29,4,14,2,"skipConfigUpdate"],[29,20,14,18],[29,24,14,22],[30,6,15,4],[31,6,16,4],[31,12,16,10,"viewTag"],[31,19,16,17],[31,22,16,20],[31,26,16,20,"findNodeHandle"],[31,40,16,34],[31,41,16,34,"default"],[31,48,16,34],[31,50,16,35,"state"],[31,55,16,40],[31,56,16,41,"viewRef"],[31,63,16,48],[31,64,16,49],[32,6,17,4],[32,12,17,10,"didUnderlyingViewChange"],[32,35,17,33],[32,38,17,36,"viewTag"],[32,45,17,43],[32,50,17,48,"state"],[32,55,17,53],[32,56,17,54,"previousViewTag"],[32,71,17,69],[33,6,19,4],[33,10,19,8,"didUnderlyingViewChange"],[33,33,19,31],[33,37,19,35],[33,41,19,35,"needsToReattach"],[33,57,19,50],[33,58,19,50,"needsToReattach"],[33,73,19,50],[33,75,19,51,"preparedGesture"],[33,90,19,66],[33,92,19,68,"gesturesToAttach"],[33,108,19,84],[33,109,19,85],[33,111,19,87],[34,8,20,6],[34,12,20,6,"validateDetectorChildren"],[34,18,20,30],[34,19,20,30,"validateDetectorChildren"],[34,43,20,30],[34,45,20,31,"state"],[34,50,20,36],[34,51,20,37,"viewRef"],[34,58,20,44],[34,59,20,45],[35,8,21,6],[35,12,21,6,"dropHandlers"],[35,25,21,18],[35,26,21,18,"dropHandlers"],[35,38,21,18],[35,40,21,19,"preparedGesture"],[35,55,21,34],[35,56,21,35],[36,8,22,6],[36,12,22,6,"attachHandlers"],[36,27,22,20],[36,28,22,20,"attachHandlers"],[36,42,22,20],[36,44,22,21],[37,10,23,8,"preparedGesture"],[37,25,23,23],[38,10,24,8,"gestureConfig"],[38,23,24,21],[39,10,25,8,"gesturesToAttach"],[39,26,25,24],[40,10,26,8,"webEventHandlersRef"],[40,29,26,27],[41,10,27,8,"viewTag"],[42,8,28,6],[42,9,28,7],[42,10,28,8],[43,8,30,6],[43,12,30,10,"didUnderlyingViewChange"],[43,35,30,33],[43,37,30,35],[44,10,31,8,"state"],[44,15,31,13],[44,16,31,14,"previousViewTag"],[44,31,31,29],[44,34,31,32,"viewTag"],[44,41,31,39],[45,10,32,8,"state"],[45,15,32,13],[45,16,32,14,"forceRebuildReanimatedEvent"],[45,43,32,41],[45,46,32,44],[45,50,32,48],[46,10,33,8,"forceRender"],[46,21,33,19],[46,22,33,20],[46,23,33,21],[47,8,34,6],[48,6,35,4],[48,7,35,5],[48,13,35,11],[48,17,35,15],[48,18,35,16,"skipConfigUpdate"],[48,34,35,32],[48,36,35,34],[49,8,36,6],[49,12,36,6,"updateHandlers"],[49,27,36,20],[49,28,36,20,"updateHandlers"],[49,42,36,20],[49,44,36,21,"preparedGesture"],[49,59,36,36],[49,61,36,38,"gestureConfig"],[49,74,36,51],[49,76,36,53,"gesturesToAttach"],[49,92,36,69],[49,93,36,70],[50,6,37,4],[51,4,38,2],[51,5,38,3],[51,7,38,5],[51,8,38,6,"forceRender"],[51,19,38,17],[51,21,38,19,"gestureConfig"],[51,34,38,32],[51,36,38,34,"gesturesToAttach"],[51,52,38,50],[51,54,38,52,"preparedGesture"],[51,69,38,67],[51,71,38,69,"state"],[51,76,38,74],[51,78,38,76,"webEventHandlersRef"],[51,97,38,95],[51,98,38,96],[51,99,38,97],[52,4,39,2],[52,11,39,9,"updateAttachedGestures"],[52,33,39,31],[53,2,40,0],[54,0,40,1],[54,3]],"functionMap":{"names":["<global>","useDetectorUpdater","updateAttachedGestures"],"mappings":"AAA;OCU;ECG;GDwB;CDE"},"hasCjsExports":false},"type":"js/module"}]}