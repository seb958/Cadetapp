{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":108,"index":160}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":161},"end":{"line":5,"column":62,"index":223}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":224},"end":{"line":6,"column":80,"index":304}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":305},"end":{"line":7,"column":33,"index":338}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _constants = require(_dependencyMap[1], \"./constants\");\n  var _DraggingGestureHandler = require(_dependencyMap[2], \"./DraggingGestureHandler\");\n  var DraggingGestureHandler = _interopDefault(_DraggingGestureHandler);\n  var _utils = require(_dependencyMap[3], \"./utils\");\n  var _State = require(_dependencyMap[4], \"../State\");\n  class PanGestureHandler extends DraggingGestureHandler.default {\n    get name() {\n      return 'pan';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Pan;\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        direction: this.getDirection()\n      });\n    }\n    getState(type) {\n      const nextState = super.getState(type);\n      // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n      return nextState;\n    }\n    getDirection() {\n      const config = this.getConfig();\n      const {\n        activeOffsetXStart,\n        activeOffsetXEnd,\n        activeOffsetYStart,\n        activeOffsetYEnd,\n        minDist\n      } = config;\n      let directions = [];\n      let horizontalDirections = [];\n      if (!(0, _utils.isnan)(minDist)) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      if (!(0, _utils.isnan)(activeOffsetXStart)) {\n        horizontalDirections.push(Hammer.default.DIRECTION_LEFT);\n      }\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) {\n        horizontalDirections.push(Hammer.default.DIRECTION_RIGHT);\n      }\n      if (horizontalDirections.length === 2) {\n        horizontalDirections = [Hammer.default.DIRECTION_HORIZONTAL];\n      }\n      directions = directions.concat(horizontalDirections);\n      let verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) {\n        verticalDirections.push(Hammer.default.DIRECTION_UP);\n      }\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) {\n        verticalDirections.push(Hammer.default.DIRECTION_DOWN);\n      }\n      if (verticalDirections.length === 2) {\n        verticalDirections = [Hammer.default.DIRECTION_VERTICAL];\n      }\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return Hammer.default.DIRECTION_NONE;\n      }\n      if (directions[0] === Hammer.default.DIRECTION_HORIZONTAL && directions[1] === Hammer.default.DIRECTION_VERTICAL) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    shouldFailUnderCustomCriteria({\n      deltaX,\n      deltaY\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n    shouldActivateUnderCustomCriteria({\n      deltaX,\n      deltaY,\n      velocity\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n    shouldMultiFingerPanFail({\n      pointerLength,\n      scale,\n      deltaRotation\n    }) {\n      if (pointerLength <= 1) {\n        return false;\n      }\n\n      // Test if the pan had too much pinching or rotating.\n      const deltaScale = Math.abs(scale - 1);\n      const absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      return false;\n    }\n    updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n    isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      const velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }\n  var _default = PanGestureHandler;\n});","lineCount":178,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,161,0,"Object"],[12,8,161,0],[12,9,161,0,"defineProperty"],[12,23,161,0],[12,24,161,0,"exports"],[12,31,161,0],[13,4,161,0,"enumerable"],[13,14,161,0],[14,4,161,0,"get"],[14,7,161,0],[14,18,161,0,"get"],[14,19,161,0],[15,6,161,0],[15,13,161,0,"_default"],[15,21,161,0],[16,4,161,0],[17,2,161,0],[18,2,3,0],[18,6,3,0,"_egjsHammerjs"],[18,19,3,0],[18,22,3,0,"require"],[18,29,3,0],[18,30,3,0,"_dependencyMap"],[18,44,3,0],[19,2,3,0],[19,6,3,0,"Hammer"],[19,12,3,0],[19,15,3,0,"_interopDefault"],[19,30,3,0],[19,31,3,0,"_egjsHammerjs"],[19,44,3,0],[20,2,4,0],[20,6,4,0,"_constants"],[20,16,4,0],[20,19,4,0,"require"],[20,26,4,0],[20,27,4,0,"_dependencyMap"],[20,41,4,0],[21,2,5,0],[21,6,5,0,"_DraggingGestureHandler"],[21,29,5,0],[21,32,5,0,"require"],[21,39,5,0],[21,40,5,0,"_dependencyMap"],[21,54,5,0],[22,2,5,0],[22,6,5,0,"DraggingGestureHandler"],[22,28,5,0],[22,31,5,0,"_interopDefault"],[22,46,5,0],[22,47,5,0,"_DraggingGestureHandler"],[22,70,5,0],[23,2,6,0],[23,6,6,0,"_utils"],[23,12,6,0],[23,15,6,0,"require"],[23,22,6,0],[23,23,6,0,"_dependencyMap"],[23,37,6,0],[24,2,7,0],[24,6,7,0,"_State"],[24,12,7,0],[24,15,7,0,"require"],[24,22,7,0],[24,23,7,0,"_dependencyMap"],[24,37,7,0],[25,2,8,0],[25,8,8,6,"PanGestureHandler"],[25,25,8,23],[25,34,8,32,"DraggingGestureHandler"],[25,56,8,54],[25,57,8,54,"default"],[25,64,8,54],[25,65,8,55],[26,4,9,2],[26,8,9,6,"name"],[26,12,9,10,"name"],[26,13,9,10],[26,15,9,13],[27,6,10,4],[27,13,10,11],[27,18,10,16],[28,4,11,2],[29,4,12,2],[29,8,12,6,"NativeGestureClass"],[29,26,12,24,"NativeGestureClass"],[29,27,12,24],[29,29,12,27],[30,6,13,4],[30,13,13,11,"Hammer"],[30,19,13,17],[30,20,13,17,"default"],[30,27,13,17],[30,28,13,18,"Pan"],[30,31,13,21],[31,4,14,2],[32,4,15,2,"getHammerConfig"],[32,19,15,17,"getHammerConfig"],[32,20,15,17],[32,22,15,20],[33,6,16,4],[33,13,16,4,"Object"],[33,19,16,4],[33,20,16,4,"assign"],[33,26,16,4],[33,31,17,9],[33,36,17,14],[33,37,17,15,"getHammerConfig"],[33,52,17,30],[33,53,17,31],[33,54,17,32],[34,8,18,6,"direction"],[34,17,18,15],[34,19,18,17],[34,23,18,21],[34,24,18,22,"getDirection"],[34,36,18,34],[34,37,18,35],[35,6,18,36],[36,4,20,2],[37,4,21,2,"getState"],[37,12,21,10,"getState"],[37,13,21,11,"type"],[37,17,21,15],[37,19,21,17],[38,6,22,4],[38,12,22,10,"nextState"],[38,21,22,19],[38,24,22,22],[38,29,22,27],[38,30,22,28,"getState"],[38,38,22,36],[38,39,22,37,"type"],[38,43,22,41],[38,44,22,42],[39,6,23,4],[40,6,24,4],[40,10,24,8],[40,14,24,12],[40,15,24,13,"previousState"],[40,28,24,26],[40,33,24,31,"State"],[40,39,24,36],[40,40,24,36,"State"],[40,45,24,36],[40,46,24,37,"UNDETERMINED"],[40,58,24,49],[40,62,24,53,"nextState"],[40,71,24,62],[40,76,24,67,"State"],[40,82,24,72],[40,83,24,72,"State"],[40,88,24,72],[40,89,24,73,"ACTIVE"],[40,95,24,79],[40,97,24,81],[41,8,25,6],[41,15,25,13,"State"],[41,21,25,18],[41,22,25,18,"State"],[41,27,25,18],[41,28,25,19,"BEGAN"],[41,33,25,24],[42,6,26,4],[43,6,27,4],[43,13,27,11,"nextState"],[43,22,27,20],[44,4,28,2],[45,4,29,2,"getDirection"],[45,16,29,14,"getDirection"],[45,17,29,14],[45,19,29,17],[46,6,30,4],[46,12,30,10,"config"],[46,18,30,16],[46,21,30,19],[46,25,30,23],[46,26,30,24,"getConfig"],[46,35,30,33],[46,36,30,34],[46,37,30,35],[47,6,31,4],[47,12,31,10],[48,8,32,6,"activeOffsetXStart"],[48,26,32,24],[49,8,33,6,"activeOffsetXEnd"],[49,24,33,22],[50,8,34,6,"activeOffsetYStart"],[50,26,34,24],[51,8,35,6,"activeOffsetYEnd"],[51,24,35,22],[52,8,36,6,"minDist"],[53,6,37,4],[53,7,37,5],[53,10,37,8,"config"],[53,16,37,14],[54,6,38,4],[54,10,38,8,"directions"],[54,20,38,18],[54,23,38,21],[54,25,38,23],[55,6,39,4],[55,10,39,8,"horizontalDirections"],[55,30,39,28],[55,33,39,31],[55,35,39,33],[56,6,40,4],[56,10,40,8],[56,11,40,9],[56,15,40,9,"isnan"],[56,21,40,14],[56,22,40,14,"isnan"],[56,27,40,14],[56,29,40,15,"minDist"],[56,36,40,22],[56,37,40,23],[56,39,40,25],[57,8,41,6],[57,15,41,13,"Hammer"],[57,21,41,19],[57,22,41,19,"default"],[57,29,41,19],[57,30,41,20,"DIRECTION_ALL"],[57,43,41,33],[58,6,42,4],[59,6,43,4],[59,10,43,8],[59,11,43,9],[59,15,43,9,"isnan"],[59,21,43,14],[59,22,43,14,"isnan"],[59,27,43,14],[59,29,43,15,"activeOffsetXStart"],[59,47,43,33],[59,48,43,34],[59,50,43,36],[60,8,44,6,"horizontalDirections"],[60,28,44,26],[60,29,44,27,"push"],[60,33,44,31],[60,34,44,32,"Hammer"],[60,40,44,38],[60,41,44,38,"default"],[60,48,44,38],[60,49,44,39,"DIRECTION_LEFT"],[60,63,44,53],[60,64,44,54],[61,6,45,4],[62,6,46,4],[62,10,46,8],[62,11,46,9],[62,15,46,9,"isnan"],[62,21,46,14],[62,22,46,14,"isnan"],[62,27,46,14],[62,29,46,15,"activeOffsetXEnd"],[62,45,46,31],[62,46,46,32],[62,48,46,34],[63,8,47,6,"horizontalDirections"],[63,28,47,26],[63,29,47,27,"push"],[63,33,47,31],[63,34,47,32,"Hammer"],[63,40,47,38],[63,41,47,38,"default"],[63,48,47,38],[63,49,47,39,"DIRECTION_RIGHT"],[63,64,47,54],[63,65,47,55],[64,6,48,4],[65,6,49,4],[65,10,49,8,"horizontalDirections"],[65,30,49,28],[65,31,49,29,"length"],[65,37,49,35],[65,42,49,40],[65,43,49,41],[65,45,49,43],[66,8,50,6,"horizontalDirections"],[66,28,50,26],[66,31,50,29],[66,32,50,30,"Hammer"],[66,38,50,36],[66,39,50,36,"default"],[66,46,50,36],[66,47,50,37,"DIRECTION_HORIZONTAL"],[66,67,50,57],[66,68,50,58],[67,6,51,4],[68,6,52,4,"directions"],[68,16,52,14],[68,19,52,17,"directions"],[68,29,52,27],[68,30,52,28,"concat"],[68,36,52,34],[68,37,52,35,"horizontalDirections"],[68,57,52,55],[68,58,52,56],[69,6,53,4],[69,10,53,8,"verticalDirections"],[69,28,53,26],[69,31,53,29],[69,33,53,31],[70,6,54,4],[70,10,54,8],[70,11,54,9],[70,15,54,9,"isnan"],[70,21,54,14],[70,22,54,14,"isnan"],[70,27,54,14],[70,29,54,15,"activeOffsetYStart"],[70,47,54,33],[70,48,54,34],[70,50,54,36],[71,8,55,6,"verticalDirections"],[71,26,55,24],[71,27,55,25,"push"],[71,31,55,29],[71,32,55,30,"Hammer"],[71,38,55,36],[71,39,55,36,"default"],[71,46,55,36],[71,47,55,37,"DIRECTION_UP"],[71,59,55,49],[71,60,55,50],[72,6,56,4],[73,6,57,4],[73,10,57,8],[73,11,57,9],[73,15,57,9,"isnan"],[73,21,57,14],[73,22,57,14,"isnan"],[73,27,57,14],[73,29,57,15,"activeOffsetYEnd"],[73,45,57,31],[73,46,57,32],[73,48,57,34],[74,8,58,6,"verticalDirections"],[74,26,58,24],[74,27,58,25,"push"],[74,31,58,29],[74,32,58,30,"Hammer"],[74,38,58,36],[74,39,58,36,"default"],[74,46,58,36],[74,47,58,37,"DIRECTION_DOWN"],[74,61,58,51],[74,62,58,52],[75,6,59,4],[76,6,60,4],[76,10,60,8,"verticalDirections"],[76,28,60,26],[76,29,60,27,"length"],[76,35,60,33],[76,40,60,38],[76,41,60,39],[76,43,60,41],[77,8,61,6,"verticalDirections"],[77,26,61,24],[77,29,61,27],[77,30,61,28,"Hammer"],[77,36,61,34],[77,37,61,34,"default"],[77,44,61,34],[77,45,61,35,"DIRECTION_VERTICAL"],[77,63,61,53],[77,64,61,54],[78,6,62,4],[79,6,63,4,"directions"],[79,16,63,14],[79,19,63,17,"directions"],[79,29,63,27],[79,30,63,28,"concat"],[79,36,63,34],[79,37,63,35,"verticalDirections"],[79,55,63,53],[79,56,63,54],[80,6,64,4],[80,10,64,8],[80,11,64,9,"directions"],[80,21,64,19],[80,22,64,20,"length"],[80,28,64,26],[80,30,64,28],[81,8,65,6],[81,15,65,13,"Hammer"],[81,21,65,19],[81,22,65,19,"default"],[81,29,65,19],[81,30,65,20,"DIRECTION_NONE"],[81,44,65,34],[82,6,66,4],[83,6,67,4],[83,10,67,8,"directions"],[83,20,67,18],[83,21,67,19],[83,22,67,20],[83,23,67,21],[83,28,67,26,"Hammer"],[83,34,67,32],[83,35,67,32,"default"],[83,42,67,32],[83,43,67,33,"DIRECTION_HORIZONTAL"],[83,63,67,53],[83,67,67,57,"directions"],[83,77,67,67],[83,78,67,68],[83,79,67,69],[83,80,67,70],[83,85,67,75,"Hammer"],[83,91,67,81],[83,92,67,81,"default"],[83,99,67,81],[83,100,67,82,"DIRECTION_VERTICAL"],[83,118,67,100],[83,120,67,102],[84,8,68,6],[84,15,68,13,"Hammer"],[84,21,68,19],[84,22,68,19,"default"],[84,29,68,19],[84,30,68,20,"DIRECTION_ALL"],[84,43,68,33],[85,6,69,4],[86,6,70,4],[86,10,70,8,"horizontalDirections"],[86,30,70,28],[86,31,70,29,"length"],[86,37,70,35],[86,41,70,39,"verticalDirections"],[86,59,70,57],[86,60,70,58,"length"],[86,66,70,64],[86,68,70,66],[87,8,71,6],[87,15,71,13,"Hammer"],[87,21,71,19],[87,22,71,19,"default"],[87,29,71,19],[87,30,71,20,"DIRECTION_ALL"],[87,43,71,33],[88,6,72,4],[89,6,73,4],[89,13,73,11,"directions"],[89,23,73,21],[89,24,73,22],[89,25,73,23],[89,26,73,24],[90,4,74,2],[91,4,75,2,"getConfig"],[91,13,75,11,"getConfig"],[91,14,75,11],[91,16,75,14],[92,6,76,4],[92,10,76,8],[92,11,76,9],[92,15,76,13],[92,16,76,14,"hasCustomActivationCriteria"],[92,43,76,41],[92,45,76,43],[93,8,77,6],[94,8,78,6],[95,8,79,6],[95,15,79,13],[96,10,80,8,"minDistSq"],[96,19,80,17],[96,21,80,19],[97,8,81,6],[97,9,81,7],[98,6,82,4],[99,6,83,4],[99,13,83,11],[99,17,83,15],[99,18,83,16,"config"],[99,24,83,22],[100,4,84,2],[101,4,85,2,"shouldFailUnderCustomCriteria"],[101,33,85,31,"shouldFailUnderCustomCriteria"],[101,34,85,32],[102,6,86,4,"deltaX"],[102,12,86,10],[103,6,87,4,"deltaY"],[104,4,88,2],[104,5,88,3],[104,7,88,5,"criteria"],[104,15,88,13],[104,17,88,15],[105,6,89,4],[105,13,89,11],[105,14,89,12],[105,18,89,12,"isnan"],[105,24,89,17],[105,25,89,17,"isnan"],[105,30,89,17],[105,32,89,18,"criteria"],[105,40,89,26],[105,41,89,27,"failOffsetXStart"],[105,57,89,43],[105,58,89,44],[105,62,89,48,"deltaX"],[105,68,89,54],[105,71,89,57,"criteria"],[105,79,89,65],[105,80,89,66,"failOffsetXStart"],[105,96,89,82],[105,100,89,86],[105,101,89,87],[105,105,89,87,"isnan"],[105,111,89,92],[105,112,89,92,"isnan"],[105,117,89,92],[105,119,89,93,"criteria"],[105,127,89,101],[105,128,89,102,"failOffsetXEnd"],[105,142,89,116],[105,143,89,117],[105,147,89,121,"deltaX"],[105,153,89,127],[105,156,89,130,"criteria"],[105,164,89,138],[105,165,89,139,"failOffsetXEnd"],[105,179,89,153],[105,183,89,157],[105,184,89,158],[105,188,89,158,"isnan"],[105,194,89,163],[105,195,89,163,"isnan"],[105,200,89,163],[105,202,89,164,"criteria"],[105,210,89,172],[105,211,89,173,"failOffsetYStart"],[105,227,89,189],[105,228,89,190],[105,232,89,194,"deltaY"],[105,238,89,200],[105,241,89,203,"criteria"],[105,249,89,211],[105,250,89,212,"failOffsetYStart"],[105,266,89,228],[105,270,89,232],[105,271,89,233],[105,275,89,233,"isnan"],[105,281,89,238],[105,282,89,238,"isnan"],[105,287,89,238],[105,289,89,239,"criteria"],[105,297,89,247],[105,298,89,248,"failOffsetYEnd"],[105,312,89,262],[105,313,89,263],[105,317,89,267,"deltaY"],[105,323,89,273],[105,326,89,276,"criteria"],[105,334,89,284],[105,335,89,285,"failOffsetYEnd"],[105,349,89,299],[106,4,90,2],[107,4,91,2,"shouldActivateUnderCustomCriteria"],[107,37,91,35,"shouldActivateUnderCustomCriteria"],[107,38,91,36],[108,6,92,4,"deltaX"],[108,12,92,10],[109,6,93,4,"deltaY"],[109,12,93,10],[110,6,94,4,"velocity"],[111,4,95,2],[111,5,95,3],[111,7,95,5,"criteria"],[111,15,95,13],[111,17,95,15],[112,6,96,4],[112,13,96,11],[112,14,96,12],[112,18,96,12,"isnan"],[112,24,96,17],[112,25,96,17,"isnan"],[112,30,96,17],[112,32,96,18,"criteria"],[112,40,96,26],[112,41,96,27,"activeOffsetXStart"],[112,59,96,45],[112,60,96,46],[112,64,96,50,"deltaX"],[112,70,96,56],[112,73,96,59,"criteria"],[112,81,96,67],[112,82,96,68,"activeOffsetXStart"],[112,100,96,86],[112,104,96,90],[112,105,96,91],[112,109,96,91,"isnan"],[112,115,96,96],[112,116,96,96,"isnan"],[112,121,96,96],[112,123,96,97,"criteria"],[112,131,96,105],[112,132,96,106,"activeOffsetXEnd"],[112,148,96,122],[112,149,96,123],[112,153,96,127,"deltaX"],[112,159,96,133],[112,162,96,136,"criteria"],[112,170,96,144],[112,171,96,145,"activeOffsetXEnd"],[112,187,96,161],[112,191,96,165],[112,192,96,166],[112,196,96,166,"isnan"],[112,202,96,171],[112,203,96,171,"isnan"],[112,208,96,171],[112,210,96,172,"criteria"],[112,218,96,180],[112,219,96,181,"activeOffsetYStart"],[112,237,96,199],[112,238,96,200],[112,242,96,204,"deltaY"],[112,248,96,210],[112,251,96,213,"criteria"],[112,259,96,221],[112,260,96,222,"activeOffsetYStart"],[112,278,96,240],[112,282,96,244],[112,283,96,245],[112,287,96,245,"isnan"],[112,293,96,250],[112,294,96,250,"isnan"],[112,299,96,250],[112,301,96,251,"criteria"],[112,309,96,259],[112,310,96,260,"activeOffsetYEnd"],[112,326,96,276],[112,327,96,277],[112,331,96,281,"deltaY"],[112,337,96,287],[112,340,96,290,"criteria"],[112,348,96,298],[112,349,96,299,"activeOffsetYEnd"],[112,365,96,315],[112,369,96,319],[112,373,96,319,"TEST_MIN_IF_NOT_NAN"],[112,379,96,338],[112,380,96,338,"TEST_MIN_IF_NOT_NAN"],[112,399,96,338],[112,401,96,339],[112,405,96,339,"VEC_LEN_SQ"],[112,411,96,349],[112,412,96,349,"VEC_LEN_SQ"],[112,422,96,349],[112,424,96,350],[113,8,97,6,"x"],[113,9,97,7],[113,11,97,9,"deltaX"],[113,17,97,15],[114,8,98,6,"y"],[114,9,98,7],[114,11,98,9,"deltaY"],[115,6,99,4],[115,7,99,5],[115,8,99,6],[115,10,99,8,"criteria"],[115,18,99,16],[115,19,99,17,"minDistSq"],[115,28,99,26],[115,29,99,27],[115,33,99,31],[115,37,99,31,"TEST_MIN_IF_NOT_NAN"],[115,43,99,50],[115,44,99,50,"TEST_MIN_IF_NOT_NAN"],[115,63,99,50],[115,65,99,51,"velocity"],[115,73,99,59],[115,74,99,60,"x"],[115,75,99,61],[115,77,99,63,"criteria"],[115,85,99,71],[115,86,99,72,"minVelocityX"],[115,98,99,84],[115,99,99,85],[115,103,99,89],[115,107,99,89,"TEST_MIN_IF_NOT_NAN"],[115,113,99,108],[115,114,99,108,"TEST_MIN_IF_NOT_NAN"],[115,133,99,108],[115,135,99,109,"velocity"],[115,143,99,117],[115,144,99,118,"y"],[115,145,99,119],[115,147,99,121,"criteria"],[115,155,99,129],[115,156,99,130,"minVelocityY"],[115,168,99,142],[115,169,99,143],[115,173,99,147],[115,177,99,147,"TEST_MIN_IF_NOT_NAN"],[115,183,99,166],[115,184,99,166,"TEST_MIN_IF_NOT_NAN"],[115,203,99,166],[115,205,99,167],[115,209,99,167,"VEC_LEN_SQ"],[115,215,99,177],[115,216,99,177,"VEC_LEN_SQ"],[115,226,99,177],[115,228,99,178,"velocity"],[115,236,99,186],[115,237,99,187],[115,239,99,189,"criteria"],[115,247,99,197],[115,248,99,198,"minVelocitySq"],[115,261,99,211],[115,262,99,212],[116,4,100,2],[117,4,101,2,"shouldMultiFingerPanFail"],[117,28,101,26,"shouldMultiFingerPanFail"],[117,29,101,27],[118,6,102,4,"pointerLength"],[118,19,102,17],[119,6,103,4,"scale"],[119,11,103,9],[120,6,104,4,"deltaRotation"],[121,4,105,2],[121,5,105,3],[121,7,105,5],[122,6,106,4],[122,10,106,8,"pointerLength"],[122,23,106,21],[122,27,106,25],[122,28,106,26],[122,30,106,28],[123,8,107,6],[123,15,107,13],[123,20,107,18],[124,6,108,4],[126,6,110,4],[127,6,111,4],[127,12,111,10,"deltaScale"],[127,22,111,20],[127,25,111,23,"Math"],[127,29,111,27],[127,30,111,28,"abs"],[127,33,111,31],[127,34,111,32,"scale"],[127,39,111,37],[127,42,111,40],[127,43,111,41],[127,44,111,42],[128,6,112,4],[128,12,112,10,"absDeltaRotation"],[128,28,112,26],[128,31,112,29,"Math"],[128,35,112,33],[128,36,112,34,"abs"],[128,39,112,37],[128,40,112,38,"deltaRotation"],[128,53,112,51],[128,54,112,52],[129,6,113,4],[129,10,113,8,"deltaScale"],[129,20,113,18],[129,23,113,21,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[129,33,113,57],[129,34,113,57,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[129,70,113,57],[129,72,113,59],[130,8,114,6],[131,8,115,6],[132,8,116,6],[132,15,116,13],[132,19,116,17],[133,6,117,4],[134,6,118,4],[134,10,118,8,"absDeltaRotation"],[134,26,118,24],[134,29,118,27,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[134,39,118,66],[134,40,118,66,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[134,79,118,66],[134,81,118,68],[135,8,119,6],[136,8,120,6],[137,8,121,6],[137,15,121,13],[137,19,121,17],[138,6,122,4],[139,6,123,4],[139,13,123,11],[139,18,123,16],[140,4,124,2],[141,4,125,2,"updateHasCustomActivationCriteria"],[141,37,125,35,"updateHasCustomActivationCriteria"],[141,38,125,36,"criteria"],[141,46,125,44],[141,48,125,46],[142,6,126,4],[142,13,126,11],[142,17,126,11,"isValidNumber"],[142,23,126,24],[142,24,126,24,"isValidNumber"],[142,37,126,24],[142,39,126,25,"criteria"],[142,47,126,33],[142,48,126,34,"minDistSq"],[142,57,126,43],[142,58,126,44],[142,62,126,48],[142,66,126,48,"isValidNumber"],[142,72,126,61],[142,73,126,61,"isValidNumber"],[142,86,126,61],[142,88,126,62,"criteria"],[142,96,126,70],[142,97,126,71,"minVelocityX"],[142,109,126,83],[142,110,126,84],[142,114,126,88],[142,118,126,88,"isValidNumber"],[142,124,126,101],[142,125,126,101,"isValidNumber"],[142,138,126,101],[142,140,126,102,"criteria"],[142,148,126,110],[142,149,126,111,"minVelocityY"],[142,161,126,123],[142,162,126,124],[142,166,126,128],[142,170,126,128,"isValidNumber"],[142,176,126,141],[142,177,126,141,"isValidNumber"],[142,190,126,141],[142,192,126,142,"criteria"],[142,200,126,150],[142,201,126,151,"minVelocitySq"],[142,214,126,164],[142,215,126,165],[142,219,126,169],[142,223,126,169,"isValidNumber"],[142,229,126,182],[142,230,126,182,"isValidNumber"],[142,243,126,182],[142,245,126,183,"criteria"],[142,253,126,191],[142,254,126,192,"activeOffsetXStart"],[142,272,126,210],[142,273,126,211],[142,277,126,215],[142,281,126,215,"isValidNumber"],[142,287,126,228],[142,288,126,228,"isValidNumber"],[142,301,126,228],[142,303,126,229,"criteria"],[142,311,126,237],[142,312,126,238,"activeOffsetXEnd"],[142,328,126,254],[142,329,126,255],[142,333,126,259],[142,337,126,259,"isValidNumber"],[142,343,126,272],[142,344,126,272,"isValidNumber"],[142,357,126,272],[142,359,126,273,"criteria"],[142,367,126,281],[142,368,126,282,"activeOffsetYStart"],[142,386,126,300],[142,387,126,301],[142,391,126,305],[142,395,126,305,"isValidNumber"],[142,401,126,318],[142,402,126,318,"isValidNumber"],[142,415,126,318],[142,417,126,319,"criteria"],[142,425,126,327],[142,426,126,328,"activeOffsetYEnd"],[142,442,126,344],[142,443,126,345],[143,4,127,2],[144,4,128,2,"isGestureEnabledForEvent"],[144,28,128,26,"isGestureEnabledForEvent"],[144,29,128,27,"props"],[144,34,128,32],[144,36,128,34,"_recognizer"],[144,47,128,45],[144,49,128,47,"inputData"],[144,58,128,56],[144,60,128,58],[145,6,129,4],[145,10,129,8],[145,14,129,12],[145,15,129,13,"shouldFailUnderCustomCriteria"],[145,44,129,42],[145,45,129,43,"inputData"],[145,54,129,52],[145,56,129,54,"props"],[145,61,129,59],[145,62,129,60],[145,64,129,62],[146,8,130,6],[146,15,130,13],[147,10,131,8,"failed"],[147,16,131,14],[147,18,131,16],[148,8,132,6],[148,9,132,7],[149,6,133,4],[150,6,134,4],[150,12,134,10,"velocity"],[150,20,134,18],[150,23,134,21],[151,8,135,6,"x"],[151,9,135,7],[151,11,135,9,"inputData"],[151,20,135,18],[151,21,135,19,"velocityX"],[151,30,135,28],[152,8,136,6,"y"],[152,9,136,7],[152,11,136,9,"inputData"],[152,20,136,18],[152,21,136,19,"velocityY"],[153,6,137,4],[153,7,137,5],[154,6,138,4],[154,10,138,8],[154,14,138,12],[154,15,138,13,"hasCustomActivationCriteria"],[154,42,138,40],[154,46,138,44],[154,50,138,48],[154,51,138,49,"shouldActivateUnderCustomCriteria"],[154,84,138,82],[154,85,138,83],[155,8,139,6,"deltaX"],[155,14,139,12],[155,16,139,14,"inputData"],[155,25,139,23],[155,26,139,24,"deltaX"],[155,32,139,30],[156,8,140,6,"deltaY"],[156,14,140,12],[156,16,140,14,"inputData"],[156,25,140,23],[156,26,140,24,"deltaY"],[156,32,140,30],[157,8,141,6,"velocity"],[158,6,142,4],[158,7,142,5],[158,9,142,7,"props"],[158,14,142,12],[158,15,142,13],[158,17,142,15],[159,8,143,6],[159,12,143,10],[159,16,143,14],[159,17,143,15,"shouldMultiFingerPanFail"],[159,41,143,39],[159,42,143,40],[160,10,144,8,"pointerLength"],[160,23,144,21],[160,25,144,23,"inputData"],[160,34,144,32],[160,35,144,33,"maxPointers"],[160,46,144,44],[161,10,145,8,"scale"],[161,15,145,13],[161,17,145,15,"inputData"],[161,26,145,24],[161,27,145,25,"scale"],[161,32,145,30],[162,10,146,8,"deltaRotation"],[162,23,146,21],[162,25,146,23,"inputData"],[162,34,146,32],[162,35,146,33,"deltaRotation"],[163,8,147,6],[163,9,147,7],[163,10,147,8],[163,12,147,10],[164,10,148,8],[164,17,148,15],[165,12,149,10,"failed"],[165,18,149,16],[165,20,149,18],[166,10,150,8],[166,11,150,9],[167,8,151,6],[168,8,152,6],[168,15,152,13],[169,10,153,8,"success"],[169,17,153,15],[169,19,153,17],[170,8,154,6],[170,9,154,7],[171,6,155,4],[172,6,156,4],[172,13,156,11],[173,8,157,6,"success"],[173,15,157,13],[173,17,157,15],[174,6,158,4],[174,7,158,5],[175,4,159,2],[176,2,160,0],[177,2,161,0],[177,6,161,0,"_default"],[177,14,161,0],[177,17,161,15,"PanGestureHandler"],[177,34,161,32],[178,0,161,33],[178,3]],"functionMap":{"names":["<global>","PanGestureHandler","get__name","get__NativeGestureClass","getHammerConfig","getState","getDirection","getConfig","shouldFailUnderCustomCriteria","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","updateHasCustomActivationCriteria","isGestureEnabledForEvent"],"mappings":"AAA;ACO;ECC;GDE;EEC;GFE;EGC;GHK;EIC;GJO;EKC;GL6C;EMC;GNS;EOC;GPK;EQC;GRS;ESC;GTuB;EUC;GVE;EWC;GX+B;CDC"},"hasCjsExports":false},"type":"js/module"}]}