{"dependencies":[{"name":"./CircularBuffer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":46,"index":257}}],"key":"uVgm5B14gvsefJ8WOcz2JJQif+Q=","exportNames":["*"],"imports":1}},{"name":"./LeastSquareSolver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":258},"end":{"line":4,"column":52,"index":310}}],"key":"pL+OKV6zXpveMrqrg91kFAGJP/w=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return VelocityTracker;\n    }\n  });\n  var _CircularBuffer = require(_dependencyMap[0], \"./CircularBuffer\");\n  var CircularBuffer = _interopDefault(_CircularBuffer);\n  var _LeastSquareSolver = require(_dependencyMap[1], \"./LeastSquareSolver\");\n  var LeastSquareSolver = _interopDefault(_LeastSquareSolver);\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class VelocityTracker {\n    constructor() {\n      _defineProperty(this, \"assumePointerMoveStoppedMilliseconds\", 40);\n      _defineProperty(this, \"historySize\", 20);\n      _defineProperty(this, \"horizonMilliseconds\", 300);\n      _defineProperty(this, \"minSampleSize\", 3);\n      _defineProperty(this, \"samples\", void 0);\n      this.samples = new CircularBuffer.default(this.historySize);\n    }\n    add(event) {\n      this.samples.push(event);\n    } // Returns an estimate of the velocity of the object being tracked by the\n    // tracker given the current information available to the tracker.\n    //\n    // Information is added using [addPosition].\n    //\n    // Returns null if there is no data on which to base an estimate.\n\n    getVelocityEstimate() {\n      const x = [];\n      const y = [];\n      const w = [];\n      const time = [];\n      let sampleCount = 0;\n      let index = this.samples.size - 1;\n      const newestSample = this.samples.get(index);\n      if (!newestSample) {\n        return null;\n      }\n      let previousSample = newestSample; // Starting with the most recent PointAtTime sample, iterate backwards while\n      // the samples represent continuous motion.\n\n      while (sampleCount < this.samples.size) {\n        const sample = this.samples.get(index);\n        const age = newestSample.time - sample.time;\n        const delta = Math.abs(sample.time - previousSample.time);\n        previousSample = sample;\n        if (age > this.horizonMilliseconds || delta > this.assumePointerMoveStoppedMilliseconds) {\n          break;\n        }\n        x.push(sample.x);\n        y.push(sample.y);\n        w.push(1);\n        time.push(-age);\n        sampleCount++;\n        index--;\n      }\n      if (sampleCount >= this.minSampleSize) {\n        const xSolver = new LeastSquareSolver.default(time, x, w);\n        const xFit = xSolver.solve(2);\n        if (xFit !== null) {\n          const ySolver = new LeastSquareSolver.default(time, y, w);\n          const yFit = ySolver.solve(2);\n          if (yFit !== null) {\n            const xVelocity = xFit.coefficients[1] * 1000;\n            const yVelocity = yFit.coefficients[1] * 1000;\n            return [xVelocity, yVelocity];\n          }\n        }\n      }\n      return null;\n    }\n    get velocity() {\n      const estimate = this.getVelocityEstimate();\n      if (estimate !== null) {\n        return estimate;\n      }\n      return [0, 0];\n    }\n    reset() {\n      this.samples.clear();\n    }\n  }\n});","lineCount":108,"map":[[12,2,5,15,"Object"],[12,8,5,15],[12,9,5,15,"defineProperty"],[12,23,5,15],[12,24,5,15,"exports"],[12,31,5,15],[13,4,5,15,"enumerable"],[13,14,5,15],[14,4,5,15,"get"],[14,7,5,15],[14,18,5,15,"get"],[14,19,5,15],[15,6,5,15],[15,13,5,15,"VelocityTracker"],[15,28,5,15],[16,4,5,15],[17,2,5,15],[18,2,3,0],[18,6,3,0,"_CircularBuffer"],[18,21,3,0],[18,24,3,0,"require"],[18,31,3,0],[18,32,3,0,"_dependencyMap"],[18,46,3,0],[19,2,3,0],[19,6,3,0,"CircularBuffer"],[19,20,3,0],[19,23,3,0,"_interopDefault"],[19,38,3,0],[19,39,3,0,"_CircularBuffer"],[19,54,3,0],[20,2,4,0],[20,6,4,0,"_LeastSquareSolver"],[20,24,4,0],[20,27,4,0,"require"],[20,34,4,0],[20,35,4,0,"_dependencyMap"],[20,49,4,0],[21,2,4,0],[21,6,4,0,"LeastSquareSolver"],[21,23,4,0],[21,26,4,0,"_interopDefault"],[21,41,4,0],[21,42,4,0,"_LeastSquareSolver"],[21,60,4,0],[22,2,1,0],[22,11,1,9,"_defineProperty"],[22,26,1,24,"_defineProperty"],[22,27,1,25,"obj"],[22,30,1,28],[22,32,1,30,"key"],[22,35,1,33],[22,37,1,35,"value"],[22,42,1,40],[22,44,1,42],[23,4,1,44],[23,8,1,48,"key"],[23,11,1,51],[23,15,1,55,"obj"],[23,18,1,58],[23,20,1,60],[24,6,1,62,"Object"],[24,12,1,68],[24,13,1,69,"defineProperty"],[24,27,1,83],[24,28,1,84,"obj"],[24,31,1,87],[24,33,1,89,"key"],[24,36,1,92],[24,38,1,94],[25,8,1,96,"value"],[25,13,1,101],[25,15,1,103,"value"],[25,20,1,108],[26,8,1,110,"enumerable"],[26,18,1,120],[26,20,1,122],[26,24,1,126],[27,8,1,128,"configurable"],[27,20,1,140],[27,22,1,142],[27,26,1,146],[28,8,1,148,"writable"],[28,16,1,156],[28,18,1,158],[29,6,1,163],[29,7,1,164],[29,8,1,165],[30,4,1,167],[30,5,1,168],[30,11,1,174],[31,6,1,176,"obj"],[31,9,1,179],[31,10,1,180,"key"],[31,13,1,183],[31,14,1,184],[31,17,1,187,"value"],[31,22,1,192],[32,4,1,194],[33,4,1,196],[33,11,1,203,"obj"],[33,14,1,206],[34,2,1,208],[35,2,5,15],[35,8,5,21,"VelocityTracker"],[35,23,5,36],[35,24,5,37],[36,4,6,2,"constructor"],[36,15,6,13,"constructor"],[36,16,6,13],[36,18,6,16],[37,6,7,4,"_defineProperty"],[37,21,7,19],[37,22,7,20],[37,26,7,24],[37,28,7,26],[37,66,7,64],[37,68,7,66],[37,70,7,68],[37,71,7,69],[38,6,9,4,"_defineProperty"],[38,21,9,19],[38,22,9,20],[38,26,9,24],[38,28,9,26],[38,41,9,39],[38,43,9,41],[38,45,9,43],[38,46,9,44],[39,6,11,4,"_defineProperty"],[39,21,11,19],[39,22,11,20],[39,26,11,24],[39,28,11,26],[39,49,11,47],[39,51,11,49],[39,54,11,52],[39,55,11,53],[40,6,13,4,"_defineProperty"],[40,21,13,19],[40,22,13,20],[40,26,13,24],[40,28,13,26],[40,43,13,41],[40,45,13,43],[40,46,13,44],[40,47,13,45],[41,6,15,4,"_defineProperty"],[41,21,15,19],[41,22,15,20],[41,26,15,24],[41,28,15,26],[41,37,15,35],[41,39,15,37],[41,44,15,42],[41,45,15,43],[41,46,15,44],[42,6,17,4],[42,10,17,8],[42,11,17,9,"samples"],[42,18,17,16],[42,21,17,19],[42,25,17,23,"CircularBuffer"],[42,39,17,37],[42,40,17,37,"default"],[42,47,17,37],[42,48,17,38],[42,52,17,42],[42,53,17,43,"historySize"],[42,64,17,54],[42,65,17,55],[43,4,18,2],[44,4,20,2,"add"],[44,7,20,5,"add"],[44,8,20,6,"event"],[44,13,20,11],[44,15,20,13],[45,6,21,4],[45,10,21,8],[45,11,21,9,"samples"],[45,18,21,16],[45,19,21,17,"push"],[45,23,21,21],[45,24,21,22,"event"],[45,29,21,27],[45,30,21,28],[46,4,22,2],[46,5,22,3],[46,6,22,4],[47,4,23,2],[48,4,24,2],[49,4,25,2],[50,4,26,2],[51,4,27,2],[53,4,30,2,"getVelocityEstimate"],[53,23,30,21,"getVelocityEstimate"],[53,24,30,21],[53,26,30,24],[54,6,31,4],[54,12,31,10,"x"],[54,13,31,11],[54,16,31,14],[54,18,31,16],[55,6,32,4],[55,12,32,10,"y"],[55,13,32,11],[55,16,32,14],[55,18,32,16],[56,6,33,4],[56,12,33,10,"w"],[56,13,33,11],[56,16,33,14],[56,18,33,16],[57,6,34,4],[57,12,34,10,"time"],[57,16,34,14],[57,19,34,17],[57,21,34,19],[58,6,35,4],[58,10,35,8,"sampleCount"],[58,21,35,19],[58,24,35,22],[58,25,35,23],[59,6,36,4],[59,10,36,8,"index"],[59,15,36,13],[59,18,36,16],[59,22,36,20],[59,23,36,21,"samples"],[59,30,36,28],[59,31,36,29,"size"],[59,35,36,33],[59,38,36,36],[59,39,36,37],[60,6,37,4],[60,12,37,10,"newestSample"],[60,24,37,22],[60,27,37,25],[60,31,37,29],[60,32,37,30,"samples"],[60,39,37,37],[60,40,37,38,"get"],[60,43,37,41],[60,44,37,42,"index"],[60,49,37,47],[60,50,37,48],[61,6,39,4],[61,10,39,8],[61,11,39,9,"newestSample"],[61,23,39,21],[61,25,39,23],[62,8,40,6],[62,15,40,13],[62,19,40,17],[63,6,41,4],[64,6,43,4],[64,10,43,8,"previousSample"],[64,24,43,22],[64,27,43,25,"newestSample"],[64,39,43,37],[64,40,43,38],[64,41,43,39],[65,6,44,4],[67,6,46,4],[67,13,46,11,"sampleCount"],[67,24,46,22],[67,27,46,25],[67,31,46,29],[67,32,46,30,"samples"],[67,39,46,37],[67,40,46,38,"size"],[67,44,46,42],[67,46,46,44],[68,8,47,6],[68,14,47,12,"sample"],[68,20,47,18],[68,23,47,21],[68,27,47,25],[68,28,47,26,"samples"],[68,35,47,33],[68,36,47,34,"get"],[68,39,47,37],[68,40,47,38,"index"],[68,45,47,43],[68,46,47,44],[69,8,48,6],[69,14,48,12,"age"],[69,17,48,15],[69,20,48,18,"newestSample"],[69,32,48,30],[69,33,48,31,"time"],[69,37,48,35],[69,40,48,38,"sample"],[69,46,48,44],[69,47,48,45,"time"],[69,51,48,49],[70,8,49,6],[70,14,49,12,"delta"],[70,19,49,17],[70,22,49,20,"Math"],[70,26,49,24],[70,27,49,25,"abs"],[70,30,49,28],[70,31,49,29,"sample"],[70,37,49,35],[70,38,49,36,"time"],[70,42,49,40],[70,45,49,43,"previousSample"],[70,59,49,57],[70,60,49,58,"time"],[70,64,49,62],[70,65,49,63],[71,8,50,6,"previousSample"],[71,22,50,20],[71,25,50,23,"sample"],[71,31,50,29],[72,8,52,6],[72,12,52,10,"age"],[72,15,52,13],[72,18,52,16],[72,22,52,20],[72,23,52,21,"horizonMilliseconds"],[72,42,52,40],[72,46,52,44,"delta"],[72,51,52,49],[72,54,52,52],[72,58,52,56],[72,59,52,57,"assumePointerMoveStoppedMilliseconds"],[72,95,52,93],[72,97,52,95],[73,10,53,8],[74,8,54,6],[75,8,56,6,"x"],[75,9,56,7],[75,10,56,8,"push"],[75,14,56,12],[75,15,56,13,"sample"],[75,21,56,19],[75,22,56,20,"x"],[75,23,56,21],[75,24,56,22],[76,8,57,6,"y"],[76,9,57,7],[76,10,57,8,"push"],[76,14,57,12],[76,15,57,13,"sample"],[76,21,57,19],[76,22,57,20,"y"],[76,23,57,21],[76,24,57,22],[77,8,58,6,"w"],[77,9,58,7],[77,10,58,8,"push"],[77,14,58,12],[77,15,58,13],[77,16,58,14],[77,17,58,15],[78,8,59,6,"time"],[78,12,59,10],[78,13,59,11,"push"],[78,17,59,15],[78,18,59,16],[78,19,59,17,"age"],[78,22,59,20],[78,23,59,21],[79,8,60,6,"sampleCount"],[79,19,60,17],[79,21,60,19],[80,8,61,6,"index"],[80,13,61,11],[80,15,61,13],[81,6,62,4],[82,6,64,4],[82,10,64,8,"sampleCount"],[82,21,64,19],[82,25,64,23],[82,29,64,27],[82,30,64,28,"minSampleSize"],[82,43,64,41],[82,45,64,43],[83,8,65,6],[83,14,65,12,"xSolver"],[83,21,65,19],[83,24,65,22],[83,28,65,26,"LeastSquareSolver"],[83,45,65,43],[83,46,65,43,"default"],[83,53,65,43],[83,54,65,44,"time"],[83,58,65,48],[83,60,65,50,"x"],[83,61,65,51],[83,63,65,53,"w"],[83,64,65,54],[83,65,65,55],[84,8,66,6],[84,14,66,12,"xFit"],[84,18,66,16],[84,21,66,19,"xSolver"],[84,28,66,26],[84,29,66,27,"solve"],[84,34,66,32],[84,35,66,33],[84,36,66,34],[84,37,66,35],[85,8,68,6],[85,12,68,10,"xFit"],[85,16,68,14],[85,21,68,19],[85,25,68,23],[85,27,68,25],[86,10,69,8],[86,16,69,14,"ySolver"],[86,23,69,21],[86,26,69,24],[86,30,69,28,"LeastSquareSolver"],[86,47,69,45],[86,48,69,45,"default"],[86,55,69,45],[86,56,69,46,"time"],[86,60,69,50],[86,62,69,52,"y"],[86,63,69,53],[86,65,69,55,"w"],[86,66,69,56],[86,67,69,57],[87,10,70,8],[87,16,70,14,"yFit"],[87,20,70,18],[87,23,70,21,"ySolver"],[87,30,70,28],[87,31,70,29,"solve"],[87,36,70,34],[87,37,70,35],[87,38,70,36],[87,39,70,37],[88,10,72,8],[88,14,72,12,"yFit"],[88,18,72,16],[88,23,72,21],[88,27,72,25],[88,29,72,27],[89,12,73,10],[89,18,73,16,"xVelocity"],[89,27,73,25],[89,30,73,28,"xFit"],[89,34,73,32],[89,35,73,33,"coefficients"],[89,47,73,45],[89,48,73,46],[89,49,73,47],[89,50,73,48],[89,53,73,51],[89,57,73,55],[90,12,74,10],[90,18,74,16,"yVelocity"],[90,27,74,25],[90,30,74,28,"yFit"],[90,34,74,32],[90,35,74,33,"coefficients"],[90,47,74,45],[90,48,74,46],[90,49,74,47],[90,50,74,48],[90,53,74,51],[90,57,74,55],[91,12,75,10],[91,19,75,17],[91,20,75,18,"xVelocity"],[91,29,75,27],[91,31,75,29,"yVelocity"],[91,40,75,38],[91,41,75,39],[92,10,76,8],[93,8,77,6],[94,6,78,4],[95,6,80,4],[95,13,80,11],[95,17,80,15],[96,4,81,2],[97,4,83,2],[97,8,83,6,"velocity"],[97,16,83,14,"velocity"],[97,17,83,14],[97,19,83,17],[98,6,84,4],[98,12,84,10,"estimate"],[98,20,84,18],[98,23,84,21],[98,27,84,25],[98,28,84,26,"getVelocityEstimate"],[98,47,84,45],[98,48,84,46],[98,49,84,47],[99,6,86,4],[99,10,86,8,"estimate"],[99,18,86,16],[99,23,86,21],[99,27,86,25],[99,29,86,27],[100,8,87,6],[100,15,87,13,"estimate"],[100,23,87,21],[101,6,88,4],[102,6,90,4],[102,13,90,11],[102,14,90,12],[102,15,90,13],[102,17,90,15],[102,18,90,16],[102,19,90,17],[103,4,91,2],[104,4,93,2,"reset"],[104,9,93,7,"reset"],[104,10,93,7],[104,12,93,10],[105,6,94,4],[105,10,94,8],[105,11,94,9,"samples"],[105,18,94,16],[105,19,94,17,"clear"],[105,24,94,22],[105,25,94,23],[105,26,94,24],[106,4,95,2],[107,2,97,0],[108,0,97,1],[108,3]],"functionMap":{"names":["_defineProperty","<global>","VelocityTracker","constructor","add","getVelocityEstimate","get__velocity","reset"],"mappings":"AAA,iNC;eCI;ECC;GDY;EEE;GFE;EGQ;GHmD;EIE;GJQ;EKE;GLE;CDE"},"hasCjsExports":false},"type":"js/module"}]}