{"dependencies":[{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":69,"index":270}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"@react-native-community/netinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":271},"end":{"line":10,"column":54,"index":325}}],"key":"PqZcYTlMIVnzFjdViPzMiGUu7Hg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"initNetworkListener\", {\n    enumerable: true,\n    get: function () {\n      return initNetworkListener;\n    }\n  });\n  Object.defineProperty(exports, \"addConnectionListener\", {\n    enumerable: true,\n    get: function () {\n      return addConnectionListener;\n    }\n  });\n  Object.defineProperty(exports, \"removeConnectionListener\", {\n    enumerable: true,\n    get: function () {\n      return removeConnectionListener;\n    }\n  });\n  Object.defineProperty(exports, \"getConnectionStatus\", {\n    enumerable: true,\n    get: function () {\n      return getConnectionStatus;\n    }\n  });\n  Object.defineProperty(exports, \"saveCacheData\", {\n    enumerable: true,\n    get: function () {\n      return saveCacheData;\n    }\n  });\n  Object.defineProperty(exports, \"getCacheData\", {\n    enumerable: true,\n    get: function () {\n      return getCacheData;\n    }\n  });\n  Object.defineProperty(exports, \"downloadCacheData\", {\n    enumerable: true,\n    get: function () {\n      return downloadCacheData;\n    }\n  });\n  Object.defineProperty(exports, \"addToSyncQueue\", {\n    enumerable: true,\n    get: function () {\n      return addToSyncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"getSyncQueue\", {\n    enumerable: true,\n    get: function () {\n      return getSyncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"clearSyncQueue\", {\n    enumerable: true,\n    get: function () {\n      return clearSyncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"removeFromSyncQueue\", {\n    enumerable: true,\n    get: function () {\n      return removeFromSyncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"recordPresence\", {\n    enumerable: true,\n    get: function () {\n      return recordPresence;\n    }\n  });\n  Object.defineProperty(exports, \"recordInspection\", {\n    enumerable: true,\n    get: function () {\n      return recordInspection;\n    }\n  });\n  Object.defineProperty(exports, \"syncQueue\", {\n    enumerable: true,\n    get: function () {\n      return syncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"triggerAutoSync\", {\n    enumerable: true,\n    get: function () {\n      return triggerAutoSync;\n    }\n  });\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[0], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _reactNativeCommunityNetinfo = require(_dependencyMap[1], \"@react-native-community/netinfo\");\n  var NetInfo = _interopDefault(_reactNativeCommunityNetinfo);\n  /**\n   * Service de gestion du mode hors ligne\n   * - Détection de la connexion internet\n   * - Cache des données essentielles\n   * - Queue de synchronisation\n   * - Synchronisation automatique et manuelle\n   */\n\n  // Clés de stockage\n  const STORAGE_KEYS = {\n    CACHE_USERS: '@cache_users',\n    CACHE_SECTIONS: '@cache_sections',\n    CACHE_ACTIVITIES: '@cache_activities',\n    CACHE_TIMESTAMP: '@cache_timestamp',\n    SYNC_QUEUE: '@sync_queue',\n    IS_SYNCING: '@is_syncing'\n  };\n\n  // Types\n\n  // ============================================================================\n  // DÉTECTION DE CONNEXION\n  // ============================================================================\n\n  let isOnline = true;\n  let connectionListeners = [];\n\n  /**\n   * Initialise la détection de connexion\n   */\n  const initNetworkListener = () => {\n    NetInfo.default.addEventListener(state => {\n      const wasOnline = isOnline;\n      isOnline = state.isConnected === true;\n\n      // Si passage de hors ligne à en ligne, notifier les listeners\n      if (!wasOnline && isOnline) {\n        console.log('🟢 Connexion internet restaurée');\n        connectionListeners.forEach(listener => listener(true));\n        // Déclencher synchronisation automatique\n        syncQueueAutomatically();\n      } else if (wasOnline && !isOnline) {\n        console.log('🔴 Connexion internet perdue');\n        connectionListeners.forEach(listener => listener(false));\n      }\n    });\n\n    // Vérifier l'état initial\n    NetInfo.default.fetch().then(state => {\n      isOnline = state.isConnected === true;\n      console.log(isOnline ? '🟢 En ligne' : '🔴 Hors ligne');\n    });\n  };\n\n  /**\n   * Ajoute un listener pour les changements de connexion\n   */\n  const addConnectionListener = listener => {\n    connectionListeners.push(listener);\n  };\n\n  /**\n   * Retire un listener\n   */\n  const removeConnectionListener = listener => {\n    connectionListeners = connectionListeners.filter(l => l !== listener);\n  };\n\n  /**\n   * Retourne l'état actuel de la connexion\n   */\n  const getConnectionStatus = () => {\n    return isOnline;\n  };\n\n  // ============================================================================\n  // GESTION DU CACHE\n  // ============================================================================\n\n  /**\n   * Sauvegarde les données en cache pour utilisation hors ligne\n   */\n  const saveCacheData = async data => {\n    try {\n      await AsyncStorage.default.setItem(STORAGE_KEYS.CACHE_USERS, JSON.stringify(data.users));\n      await AsyncStorage.default.setItem(STORAGE_KEYS.CACHE_SECTIONS, JSON.stringify(data.sections));\n      await AsyncStorage.default.setItem(STORAGE_KEYS.CACHE_ACTIVITIES, JSON.stringify(data.activities));\n      await AsyncStorage.default.setItem(STORAGE_KEYS.CACHE_TIMESTAMP, data.timestamp);\n      console.log('✅ Données mises en cache');\n    } catch (error) {\n      console.error('❌ Erreur sauvegarde cache:', error);\n    }\n  };\n\n  /**\n   * Récupère les données du cache\n   */\n  const getCacheData = async () => {\n    try {\n      const users = await AsyncStorage.default.getItem(STORAGE_KEYS.CACHE_USERS);\n      const sections = await AsyncStorage.default.getItem(STORAGE_KEYS.CACHE_SECTIONS);\n      const activities = await AsyncStorage.default.getItem(STORAGE_KEYS.CACHE_ACTIVITIES);\n      const timestamp = await AsyncStorage.default.getItem(STORAGE_KEYS.CACHE_TIMESTAMP);\n      if (!users || !sections || !timestamp) {\n        return null;\n      }\n      return {\n        users: JSON.parse(users),\n        sections: JSON.parse(sections),\n        activities: activities ? JSON.parse(activities) : [],\n        timestamp\n      };\n    } catch (error) {\n      console.error('❌ Erreur récupération cache:', error);\n      return null;\n    }\n  };\n\n  /**\n   * Télécharge et met en cache les données depuis le serveur\n   */\n  const downloadCacheData = async (apiUrl, token) => {\n    try {\n      const response = await fetch(`${apiUrl}/api/sync/cache-data`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Échec téléchargement données');\n      }\n      const data = await response.json();\n      await saveCacheData(data);\n      return true;\n    } catch (error) {\n      console.error('❌ Erreur téléchargement cache:', error);\n      return false;\n    }\n  };\n\n  // ============================================================================\n  // GESTION DE LA QUEUE DE SYNCHRONISATION\n  // ============================================================================\n\n  /**\n   * Ajoute un élément à la queue de synchronisation\n   */\n  const addToSyncQueue = async item => {\n    try {\n      const queueJson = await AsyncStorage.default.getItem(STORAGE_KEYS.SYNC_QUEUE);\n      const queue = queueJson ? JSON.parse(queueJson) : [];\n      queue.push(item);\n      await AsyncStorage.default.setItem(STORAGE_KEYS.SYNC_QUEUE, JSON.stringify(queue));\n      console.log(`📝 Ajouté à la queue: ${item.type} (${item.data.temp_id})`);\n    } catch (error) {\n      console.error('❌ Erreur ajout queue:', error);\n    }\n  };\n\n  /**\n   * Récupère la queue de synchronisation\n   */\n  const getSyncQueue = async () => {\n    try {\n      const queueJson = await AsyncStorage.default.getItem(STORAGE_KEYS.SYNC_QUEUE);\n      return queueJson ? JSON.parse(queueJson) : [];\n    } catch (error) {\n      console.error('❌ Erreur récupération queue:', error);\n      return [];\n    }\n  };\n\n  /**\n   * Vide la queue de synchronisation\n   */\n  const clearSyncQueue = async () => {\n    try {\n      await AsyncStorage.default.setItem(STORAGE_KEYS.SYNC_QUEUE, JSON.stringify([]));\n      console.log('🗑️ Queue vidée');\n    } catch (error) {\n      console.error('❌ Erreur vidage queue:', error);\n    }\n  };\n\n  /**\n   * Supprime des éléments spécifiques de la queue\n   */\n  const removeFromSyncQueue = async tempIds => {\n    try {\n      const queue = await getSyncQueue();\n      const newQueue = queue.filter(item => !tempIds.includes(item.data.temp_id));\n      await AsyncStorage.default.setItem(STORAGE_KEYS.SYNC_QUEUE, JSON.stringify(newQueue));\n      console.log(`🗑️ ${tempIds.length} éléments supprimés de la queue`);\n    } catch (error) {\n      console.error('❌ Erreur suppression queue:', error);\n    }\n  };\n\n  // ============================================================================\n  // ENREGISTREMENT HORS LIGNE\n  // ============================================================================\n\n  /**\n   * Enregistre une présence (en ligne ou hors ligne)\n   */\n  const recordPresence = async (cadetId, date, status, commentaire) => {\n    const presence = {\n      cadet_id: cadetId,\n      date,\n      status,\n      commentaire,\n      timestamp: new Date().toISOString(),\n      temp_id: `presence_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n\n    // Si hors ligne, ajouter à la queue\n    if (!isOnline) {\n      await addToSyncQueue({\n        type: 'presence',\n        data: presence,\n        attempts: 0,\n        created_at: new Date().toISOString()\n      });\n      return {\n        success: true,\n        offline: true\n      };\n    }\n\n    // Si en ligne, essayer d'envoyer immédiatement\n    // (Ce sera géré par le composant qui appelle cette fonction)\n    return {\n      success: true,\n      offline: false\n    };\n  };\n\n  /**\n   * Enregistre une inspection d'uniforme (en ligne ou hors ligne)\n   */\n  const recordInspection = async (cadetId, date, note) => {\n    const inspection = {\n      cadet_id: cadetId,\n      date,\n      note,\n      timestamp: new Date().toISOString(),\n      temp_id: `inspection_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n\n    // Si hors ligne, ajouter à la queue\n    if (!isOnline) {\n      await addToSyncQueue({\n        type: 'inspection',\n        data: inspection,\n        attempts: 0,\n        created_at: new Date().toISOString()\n      });\n      return {\n        success: true,\n        offline: true\n      };\n    }\n    return {\n      success: true,\n      offline: false\n    };\n  };\n\n  // ============================================================================\n  // SYNCHRONISATION\n  // ============================================================================\n\n  /**\n   * Synchronise la queue avec le serveur\n   */\n  const syncQueue = async (apiUrl, token, onProgress) => {\n    try {\n      // Vérifier si une synchronisation est déjà en cours\n      const isSyncing = await AsyncStorage.default.getItem(STORAGE_KEYS.IS_SYNCING);\n      if (isSyncing === 'true') {\n        console.log('⚠️ Synchronisation déjà en cours');\n        return {\n          success: false,\n          synced: 0,\n          errors: 0\n        };\n      }\n\n      // Marquer la synchronisation comme en cours\n      await AsyncStorage.default.setItem(STORAGE_KEYS.IS_SYNCING, 'true');\n      const queue = await getSyncQueue();\n      if (queue.length === 0) {\n        await AsyncStorage.default.setItem(STORAGE_KEYS.IS_SYNCING, 'false');\n        return {\n          success: true,\n          synced: 0,\n          errors: 0\n        };\n      }\n      console.log(`🔄 Synchronisation de ${queue.length} éléments...`);\n\n      // Préparer les données pour l'API batch\n      const presences = [];\n      const inspections = [];\n      queue.forEach(item => {\n        if (item.type === 'presence') {\n          presences.push(item.data);\n        } else if (item.type === 'inspection') {\n          inspections.push(item.data);\n        }\n      });\n\n      // Appeler l'API de synchronisation batch\n      const response = await fetch(`${apiUrl}/api/sync/batch`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          presences,\n          inspections\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Échec synchronisation');\n      }\n      const result = await response.json();\n\n      // Logger les erreurs pour debug\n      const errors = [...result.presence_results.filter(r => !r.success), ...result.inspection_results.filter(r => !r.success)];\n      if (errors.length > 0) {\n        console.log('❌ Erreurs de synchronisation:', JSON.stringify(errors, null, 2));\n      }\n\n      // Supprimer les éléments synchronisés avec succès de la queue\n      const successTempIds = [...result.presence_results.filter(r => r.success).map(r => r.temp_id), ...result.inspection_results.filter(r => r.success).map(r => r.temp_id)];\n      await removeFromSyncQueue(successTempIds);\n\n      // Mettre à jour le cache avec les nouvelles données\n      await downloadCacheData(apiUrl, token);\n      await AsyncStorage.default.setItem(STORAGE_KEYS.IS_SYNCING, 'false');\n      console.log(`✅ Synchronisation terminée: ${result.total_synced} synchronisés, ${result.total_errors} erreurs`);\n      return {\n        success: true,\n        synced: result.total_synced,\n        errors: result.total_errors\n      };\n    } catch (error) {\n      console.error('❌ Erreur synchronisation:', error);\n      await AsyncStorage.default.setItem(STORAGE_KEYS.IS_SYNCING, 'false');\n      return {\n        success: false,\n        synced: 0,\n        errors: 0\n      };\n    }\n  };\n\n  /**\n   * Synchronisation automatique (appelée quand connexion restaurée)\n   */\n  const syncQueueAutomatically = async () => {\n    // Cette fonction sera appelée avec les bonnes credentials depuis le composant\n    console.log('🔄 Synchronisation automatique déclenchée');\n  };\n\n  /**\n   * Export de la fonction pour déclencher la sync auto depuis l'app\n   */\n  const triggerAutoSync = async (apiUrl, token) => {\n    if (isOnline) {\n      await syncQueue(apiUrl, token);\n    }\n  };\n});","lineCount":481,"map":[[12,2,64,0,"Object"],[12,8,64,0],[12,9,64,0,"defineProperty"],[12,23,64,0],[12,24,64,0,"exports"],[12,31,64,0],[13,4,64,0,"enumerable"],[13,14,64,0],[14,4,64,0,"get"],[14,7,64,0],[14,18,64,0,"get"],[14,19,64,0],[15,6,64,0],[15,13,64,0,"initNetworkListener"],[15,32,64,0],[16,4,64,0],[17,2,64,0],[18,2,91,0,"Object"],[18,8,91,0],[18,9,91,0,"defineProperty"],[18,23,91,0],[18,24,91,0,"exports"],[18,31,91,0],[19,4,91,0,"enumerable"],[19,14,91,0],[20,4,91,0,"get"],[20,7,91,0],[20,18,91,0,"get"],[20,19,91,0],[21,6,91,0],[21,13,91,0,"addConnectionListener"],[21,34,91,0],[22,4,91,0],[23,2,91,0],[24,2,98,0,"Object"],[24,8,98,0],[24,9,98,0,"defineProperty"],[24,23,98,0],[24,24,98,0,"exports"],[24,31,98,0],[25,4,98,0,"enumerable"],[25,14,98,0],[26,4,98,0,"get"],[26,7,98,0],[26,18,98,0,"get"],[26,19,98,0],[27,6,98,0],[27,13,98,0,"removeConnectionListener"],[27,37,98,0],[28,4,98,0],[29,2,98,0],[30,2,105,0,"Object"],[30,8,105,0],[30,9,105,0,"defineProperty"],[30,23,105,0],[30,24,105,0,"exports"],[30,31,105,0],[31,4,105,0,"enumerable"],[31,14,105,0],[32,4,105,0,"get"],[32,7,105,0],[32,18,105,0,"get"],[32,19,105,0],[33,6,105,0],[33,13,105,0,"getConnectionStatus"],[33,32,105,0],[34,4,105,0],[35,2,105,0],[36,2,116,0,"Object"],[36,8,116,0],[36,9,116,0,"defineProperty"],[36,23,116,0],[36,24,116,0,"exports"],[36,31,116,0],[37,4,116,0,"enumerable"],[37,14,116,0],[38,4,116,0,"get"],[38,7,116,0],[38,18,116,0,"get"],[38,19,116,0],[39,6,116,0],[39,13,116,0,"saveCacheData"],[39,26,116,0],[40,4,116,0],[41,2,116,0],[42,2,131,0,"Object"],[42,8,131,0],[42,9,131,0,"defineProperty"],[42,23,131,0],[42,24,131,0,"exports"],[42,31,131,0],[43,4,131,0,"enumerable"],[43,14,131,0],[44,4,131,0,"get"],[44,7,131,0],[44,18,131,0,"get"],[44,19,131,0],[45,6,131,0],[45,13,131,0,"getCacheData"],[45,25,131,0],[46,4,131,0],[47,2,131,0],[48,2,157,0,"Object"],[48,8,157,0],[48,9,157,0,"defineProperty"],[48,23,157,0],[48,24,157,0,"exports"],[48,31,157,0],[49,4,157,0,"enumerable"],[49,14,157,0],[50,4,157,0,"get"],[50,7,157,0],[50,18,157,0,"get"],[50,19,157,0],[51,6,157,0],[51,13,157,0,"downloadCacheData"],[51,30,157,0],[52,4,157,0],[53,2,157,0],[54,2,185,0,"Object"],[54,8,185,0],[54,9,185,0,"defineProperty"],[54,23,185,0],[54,24,185,0,"exports"],[54,31,185,0],[55,4,185,0,"enumerable"],[55,14,185,0],[56,4,185,0,"get"],[56,7,185,0],[56,18,185,0,"get"],[56,19,185,0],[57,6,185,0],[57,13,185,0,"addToSyncQueue"],[57,27,185,0],[58,4,185,0],[59,2,185,0],[60,2,202,0,"Object"],[60,8,202,0],[60,9,202,0,"defineProperty"],[60,23,202,0],[60,24,202,0,"exports"],[60,31,202,0],[61,4,202,0,"enumerable"],[61,14,202,0],[62,4,202,0,"get"],[62,7,202,0],[62,18,202,0,"get"],[62,19,202,0],[63,6,202,0],[63,13,202,0,"getSyncQueue"],[63,25,202,0],[64,4,202,0],[65,2,202,0],[66,2,215,0,"Object"],[66,8,215,0],[66,9,215,0,"defineProperty"],[66,23,215,0],[66,24,215,0,"exports"],[66,31,215,0],[67,4,215,0,"enumerable"],[67,14,215,0],[68,4,215,0,"get"],[68,7,215,0],[68,18,215,0,"get"],[68,19,215,0],[69,6,215,0],[69,13,215,0,"clearSyncQueue"],[69,27,215,0],[70,4,215,0],[71,2,215,0],[72,2,227,0,"Object"],[72,8,227,0],[72,9,227,0,"defineProperty"],[72,23,227,0],[72,24,227,0,"exports"],[72,31,227,0],[73,4,227,0,"enumerable"],[73,14,227,0],[74,4,227,0,"get"],[74,7,227,0],[74,18,227,0,"get"],[74,19,227,0],[75,6,227,0],[75,13,227,0,"removeFromSyncQueue"],[75,32,227,0],[76,4,227,0],[77,2,227,0],[78,2,245,0,"Object"],[78,8,245,0],[78,9,245,0,"defineProperty"],[78,23,245,0],[78,24,245,0,"exports"],[78,31,245,0],[79,4,245,0,"enumerable"],[79,14,245,0],[80,4,245,0,"get"],[80,7,245,0],[80,18,245,0,"get"],[80,19,245,0],[81,6,245,0],[81,13,245,0,"recordPresence"],[81,27,245,0],[82,4,245,0],[83,2,245,0],[84,2,279,0,"Object"],[84,8,279,0],[84,9,279,0,"defineProperty"],[84,23,279,0],[84,24,279,0,"exports"],[84,31,279,0],[85,4,279,0,"enumerable"],[85,14,279,0],[86,4,279,0,"get"],[86,7,279,0],[86,18,279,0,"get"],[86,19,279,0],[87,6,279,0],[87,13,279,0,"recordInspection"],[87,29,279,0],[88,4,279,0],[89,2,279,0],[90,2,313,0,"Object"],[90,8,313,0],[90,9,313,0,"defineProperty"],[90,23,313,0],[90,24,313,0,"exports"],[90,31,313,0],[91,4,313,0,"enumerable"],[91,14,313,0],[92,4,313,0,"get"],[92,7,313,0],[92,18,313,0,"get"],[92,19,313,0],[93,6,313,0],[93,13,313,0,"syncQueue"],[93,22,313,0],[94,4,313,0],[95,2,313,0],[96,2,413,0,"Object"],[96,8,413,0],[96,9,413,0,"defineProperty"],[96,23,413,0],[96,24,413,0,"exports"],[96,31,413,0],[97,4,413,0,"enumerable"],[97,14,413,0],[98,4,413,0,"get"],[98,7,413,0],[98,18,413,0,"get"],[98,19,413,0],[99,6,413,0],[99,13,413,0,"triggerAutoSync"],[99,28,413,0],[100,4,413,0],[101,2,413,0],[102,2,9,0],[102,6,9,0,"_reactNativeAsyncStorageAsyncStorage"],[102,42,9,0],[102,45,9,0,"require"],[102,52,9,0],[102,53,9,0,"_dependencyMap"],[102,67,9,0],[103,2,9,0],[103,6,9,0,"AsyncStorage"],[103,18,9,0],[103,21,9,0,"_interopDefault"],[103,36,9,0],[103,37,9,0,"_reactNativeAsyncStorageAsyncStorage"],[103,73,9,0],[104,2,10,0],[104,6,10,0,"_reactNativeCommunityNetinfo"],[104,34,10,0],[104,37,10,0,"require"],[104,44,10,0],[104,45,10,0,"_dependencyMap"],[104,59,10,0],[105,2,10,0],[105,6,10,0,"NetInfo"],[105,13,10,0],[105,16,10,0,"_interopDefault"],[105,31,10,0],[105,32,10,0,"_reactNativeCommunityNetinfo"],[105,60,10,0],[106,2,1,0],[107,0,2,0],[108,0,3,0],[109,0,4,0],[110,0,5,0],[111,0,6,0],[112,0,7,0],[114,2,12,0],[115,2,13,0],[115,8,13,6,"STORAGE_KEYS"],[115,20,13,18],[115,23,13,21],[116,4,14,2,"CACHE_USERS"],[116,15,14,13],[116,17,14,15],[116,31,14,29],[117,4,15,2,"CACHE_SECTIONS"],[117,18,15,16],[117,20,15,18],[117,37,15,35],[118,4,16,2,"CACHE_ACTIVITIES"],[118,20,16,18],[118,22,16,20],[118,41,16,39],[119,4,17,2,"CACHE_TIMESTAMP"],[119,19,17,17],[119,21,17,19],[119,39,17,37],[120,4,18,2,"SYNC_QUEUE"],[120,14,18,12],[120,16,18,14],[120,29,18,27],[121,4,19,2,"IS_SYNCING"],[121,14,19,12],[121,16,19,14],[122,2,20,0],[122,3,20,1],[124,2,22,0],[126,2,54,0],[127,2,55,0],[128,2,56,0],[130,2,58,0],[130,6,58,4,"isOnline"],[130,14,58,12],[130,17,58,15],[130,21,58,19],[131,2,59,0],[131,6,59,4,"connectionListeners"],[131,25,59,57],[131,28,59,60],[131,30,59,62],[133,2,61,0],[134,0,62,0],[135,0,63,0],[136,2,64,7],[136,8,64,13,"initNetworkListener"],[136,27,64,32],[136,30,64,35,"initNetworkListener"],[136,31,64,35],[136,36,64,41],[137,4,65,2,"NetInfo"],[137,11,65,9],[137,12,65,9,"default"],[137,19,65,9],[137,20,65,10,"addEventListener"],[137,36,65,26],[137,37,65,27,"state"],[137,42,65,32],[137,46,65,36],[138,6,66,4],[138,12,66,10,"wasOnline"],[138,21,66,19],[138,24,66,22,"isOnline"],[138,32,66,30],[139,6,67,4,"isOnline"],[139,14,67,12],[139,17,67,15,"state"],[139,22,67,20],[139,23,67,21,"isConnected"],[139,34,67,32],[139,39,67,37],[139,43,67,41],[141,6,69,4],[142,6,70,4],[142,10,70,8],[142,11,70,9,"wasOnline"],[142,20,70,18],[142,24,70,22,"isOnline"],[142,32,70,30],[142,34,70,32],[143,8,71,6,"console"],[143,15,71,13],[143,16,71,14,"log"],[143,19,71,17],[143,20,71,18],[143,53,71,51],[143,54,71,52],[144,8,72,6,"connectionListeners"],[144,27,72,25],[144,28,72,26,"forEach"],[144,35,72,33],[144,36,72,34,"listener"],[144,44,72,42],[144,48,72,46,"listener"],[144,56,72,54],[144,57,72,55],[144,61,72,59],[144,62,72,60],[144,63,72,61],[145,8,73,6],[146,8,74,6,"syncQueueAutomatically"],[146,30,74,28],[146,31,74,29],[146,32,74,30],[147,6,75,4],[147,7,75,5],[147,13,75,11],[147,17,75,15,"wasOnline"],[147,26,75,24],[147,30,75,28],[147,31,75,29,"isOnline"],[147,39,75,37],[147,41,75,39],[148,8,76,6,"console"],[148,15,76,13],[148,16,76,14,"log"],[148,19,76,17],[148,20,76,18],[148,50,76,48],[148,51,76,49],[149,8,77,6,"connectionListeners"],[149,27,77,25],[149,28,77,26,"forEach"],[149,35,77,33],[149,36,77,34,"listener"],[149,44,77,42],[149,48,77,46,"listener"],[149,56,77,54],[149,57,77,55],[149,62,77,60],[149,63,77,61],[149,64,77,62],[150,6,78,4],[151,4,79,2],[151,5,79,3],[151,6,79,4],[153,4,81,2],[154,4,82,2,"NetInfo"],[154,11,82,9],[154,12,82,9,"default"],[154,19,82,9],[154,20,82,10,"fetch"],[154,25,82,15],[154,26,82,16],[154,27,82,17],[154,28,82,18,"then"],[154,32,82,22],[154,33,82,23,"state"],[154,38,82,28],[154,42,82,32],[155,6,83,4,"isOnline"],[155,14,83,12],[155,17,83,15,"state"],[155,22,83,20],[155,23,83,21,"isConnected"],[155,34,83,32],[155,39,83,37],[155,43,83,41],[156,6,84,4,"console"],[156,13,84,11],[156,14,84,12,"log"],[156,17,84,15],[156,18,84,16,"isOnline"],[156,26,84,24],[156,29,84,27],[156,42,84,40],[156,45,84,43],[156,60,84,58],[156,61,84,59],[157,4,85,2],[157,5,85,3],[157,6,85,4],[158,2,86,0],[158,3,86,1],[160,2,88,0],[161,0,89,0],[162,0,90,0],[163,2,91,7],[163,8,91,13,"addConnectionListener"],[163,29,91,34],[163,32,91,38,"listener"],[163,40,91,73],[163,44,91,78],[164,4,92,2,"connectionListeners"],[164,23,92,21],[164,24,92,22,"push"],[164,28,92,26],[164,29,92,27,"listener"],[164,37,92,35],[164,38,92,36],[165,2,93,0],[165,3,93,1],[167,2,95,0],[168,0,96,0],[169,0,97,0],[170,2,98,7],[170,8,98,13,"removeConnectionListener"],[170,32,98,37],[170,35,98,41,"listener"],[170,43,98,76],[170,47,98,81],[171,4,99,2,"connectionListeners"],[171,23,99,21],[171,26,99,24,"connectionListeners"],[171,45,99,43],[171,46,99,44,"filter"],[171,52,99,50],[171,53,99,51,"l"],[171,54,99,52],[171,58,99,56,"l"],[171,59,99,57],[171,64,99,62,"listener"],[171,72,99,70],[171,73,99,71],[172,2,100,0],[172,3,100,1],[174,2,102,0],[175,0,103,0],[176,0,104,0],[177,2,105,7],[177,8,105,13,"getConnectionStatus"],[177,27,105,32],[177,30,105,35,"getConnectionStatus"],[177,31,105,35],[177,36,105,50],[178,4,106,2],[178,11,106,9,"isOnline"],[178,19,106,17],[179,2,107,0],[179,3,107,1],[181,2,109,0],[182,2,110,0],[183,2,111,0],[185,2,113,0],[186,0,114,0],[187,0,115,0],[188,2,116,7],[188,8,116,13,"saveCacheData"],[188,21,116,26],[188,24,116,29],[188,30,116,36,"data"],[188,34,116,51],[188,38,116,71],[189,4,117,2],[189,8,117,6],[190,6,118,4],[190,12,118,10,"AsyncStorage"],[190,24,118,22],[190,25,118,22,"default"],[190,32,118,22],[190,33,118,23,"setItem"],[190,40,118,30],[190,41,118,31,"STORAGE_KEYS"],[190,53,118,43],[190,54,118,44,"CACHE_USERS"],[190,65,118,55],[190,67,118,57,"JSON"],[190,71,118,61],[190,72,118,62,"stringify"],[190,81,118,71],[190,82,118,72,"data"],[190,86,118,76],[190,87,118,77,"users"],[190,92,118,82],[190,93,118,83],[190,94,118,84],[191,6,119,4],[191,12,119,10,"AsyncStorage"],[191,24,119,22],[191,25,119,22,"default"],[191,32,119,22],[191,33,119,23,"setItem"],[191,40,119,30],[191,41,119,31,"STORAGE_KEYS"],[191,53,119,43],[191,54,119,44,"CACHE_SECTIONS"],[191,68,119,58],[191,70,119,60,"JSON"],[191,74,119,64],[191,75,119,65,"stringify"],[191,84,119,74],[191,85,119,75,"data"],[191,89,119,79],[191,90,119,80,"sections"],[191,98,119,88],[191,99,119,89],[191,100,119,90],[192,6,120,4],[192,12,120,10,"AsyncStorage"],[192,24,120,22],[192,25,120,22,"default"],[192,32,120,22],[192,33,120,23,"setItem"],[192,40,120,30],[192,41,120,31,"STORAGE_KEYS"],[192,53,120,43],[192,54,120,44,"CACHE_ACTIVITIES"],[192,70,120,60],[192,72,120,62,"JSON"],[192,76,120,66],[192,77,120,67,"stringify"],[192,86,120,76],[192,87,120,77,"data"],[192,91,120,81],[192,92,120,82,"activities"],[192,102,120,92],[192,103,120,93],[192,104,120,94],[193,6,121,4],[193,12,121,10,"AsyncStorage"],[193,24,121,22],[193,25,121,22,"default"],[193,32,121,22],[193,33,121,23,"setItem"],[193,40,121,30],[193,41,121,31,"STORAGE_KEYS"],[193,53,121,43],[193,54,121,44,"CACHE_TIMESTAMP"],[193,69,121,59],[193,71,121,61,"data"],[193,75,121,65],[193,76,121,66,"timestamp"],[193,85,121,75],[193,86,121,76],[194,6,122,4,"console"],[194,13,122,11],[194,14,122,12,"log"],[194,17,122,15],[194,18,122,16],[194,44,122,42],[194,45,122,43],[195,4,123,2],[195,5,123,3],[195,6,123,4],[195,13,123,11,"error"],[195,18,123,16],[195,20,123,18],[196,6,124,4,"console"],[196,13,124,11],[196,14,124,12,"error"],[196,19,124,17],[196,20,124,18],[196,48,124,46],[196,50,124,48,"error"],[196,55,124,53],[196,56,124,54],[197,4,125,2],[198,2,126,0],[198,3,126,1],[200,2,128,0],[201,0,129,0],[202,0,130,0],[203,2,131,7],[203,8,131,13,"getCacheData"],[203,20,131,25],[203,23,131,28],[203,29,131,28,"getCacheData"],[203,30,131,28],[203,35,131,67],[204,4,132,2],[204,8,132,6],[205,6,133,4],[205,12,133,10,"users"],[205,17,133,15],[205,20,133,18],[205,26,133,24,"AsyncStorage"],[205,38,133,36],[205,39,133,36,"default"],[205,46,133,36],[205,47,133,37,"getItem"],[205,54,133,44],[205,55,133,45,"STORAGE_KEYS"],[205,67,133,57],[205,68,133,58,"CACHE_USERS"],[205,79,133,69],[205,80,133,70],[206,6,134,4],[206,12,134,10,"sections"],[206,20,134,18],[206,23,134,21],[206,29,134,27,"AsyncStorage"],[206,41,134,39],[206,42,134,39,"default"],[206,49,134,39],[206,50,134,40,"getItem"],[206,57,134,47],[206,58,134,48,"STORAGE_KEYS"],[206,70,134,60],[206,71,134,61,"CACHE_SECTIONS"],[206,85,134,75],[206,86,134,76],[207,6,135,4],[207,12,135,10,"activities"],[207,22,135,20],[207,25,135,23],[207,31,135,29,"AsyncStorage"],[207,43,135,41],[207,44,135,41,"default"],[207,51,135,41],[207,52,135,42,"getItem"],[207,59,135,49],[207,60,135,50,"STORAGE_KEYS"],[207,72,135,62],[207,73,135,63,"CACHE_ACTIVITIES"],[207,89,135,79],[207,90,135,80],[208,6,136,4],[208,12,136,10,"timestamp"],[208,21,136,19],[208,24,136,22],[208,30,136,28,"AsyncStorage"],[208,42,136,40],[208,43,136,40,"default"],[208,50,136,40],[208,51,136,41,"getItem"],[208,58,136,48],[208,59,136,49,"STORAGE_KEYS"],[208,71,136,61],[208,72,136,62,"CACHE_TIMESTAMP"],[208,87,136,77],[208,88,136,78],[209,6,138,4],[209,10,138,8],[209,11,138,9,"users"],[209,16,138,14],[209,20,138,18],[209,21,138,19,"sections"],[209,29,138,27],[209,33,138,31],[209,34,138,32,"timestamp"],[209,43,138,41],[209,45,138,43],[210,8,139,6],[210,15,139,13],[210,19,139,17],[211,6,140,4],[212,6,142,4],[212,13,142,11],[213,8,143,6,"users"],[213,13,143,11],[213,15,143,13,"JSON"],[213,19,143,17],[213,20,143,18,"parse"],[213,25,143,23],[213,26,143,24,"users"],[213,31,143,29],[213,32,143,30],[214,8,144,6,"sections"],[214,16,144,14],[214,18,144,16,"JSON"],[214,22,144,20],[214,23,144,21,"parse"],[214,28,144,26],[214,29,144,27,"sections"],[214,37,144,35],[214,38,144,36],[215,8,145,6,"activities"],[215,18,145,16],[215,20,145,18,"activities"],[215,30,145,28],[215,33,145,31,"JSON"],[215,37,145,35],[215,38,145,36,"parse"],[215,43,145,41],[215,44,145,42,"activities"],[215,54,145,52],[215,55,145,53],[215,58,145,56],[215,60,145,58],[216,8,146,6,"timestamp"],[217,6,147,4],[217,7,147,5],[218,4,148,2],[218,5,148,3],[218,6,148,4],[218,13,148,11,"error"],[218,18,148,16],[218,20,148,18],[219,6,149,4,"console"],[219,13,149,11],[219,14,149,12,"error"],[219,19,149,17],[219,20,149,18],[219,50,149,48],[219,52,149,50,"error"],[219,57,149,55],[219,58,149,56],[220,6,150,4],[220,13,150,11],[220,17,150,15],[221,4,151,2],[222,2,152,0],[222,3,152,1],[224,2,154,0],[225,0,155,0],[226,0,156,0],[227,2,157,7],[227,8,157,13,"downloadCacheData"],[227,25,157,30],[227,28,157,33],[227,34,157,33,"downloadCacheData"],[227,35,157,40,"apiUrl"],[227,41,157,54],[227,43,157,56,"token"],[227,48,157,69],[227,53,157,92],[228,4,158,2],[228,8,158,6],[229,6,159,4],[229,12,159,10,"response"],[229,20,159,18],[229,23,159,21],[229,29,159,27,"fetch"],[229,34,159,32],[229,35,159,33],[229,38,159,36,"apiUrl"],[229,44,159,42],[229,66,159,64],[229,68,159,66],[230,8,160,6,"headers"],[230,15,160,13],[230,17,160,15],[231,10,161,8],[231,25,161,23],[231,27,161,25],[231,37,161,35,"token"],[231,42,161,40],[232,8,162,6],[233,6,163,4],[233,7,163,5],[233,8,163,6],[234,6,165,4],[234,10,165,8],[234,11,165,9,"response"],[234,19,165,17],[234,20,165,18,"ok"],[234,22,165,20],[234,24,165,22],[235,8,166,6],[235,14,166,12],[235,18,166,16,"Error"],[235,23,166,21],[235,24,166,22],[235,54,166,52],[235,55,166,53],[236,6,167,4],[237,6,169,4],[237,12,169,10,"data"],[237,16,169,14],[237,19,169,17],[237,25,169,23,"response"],[237,33,169,31],[237,34,169,32,"json"],[237,38,169,36],[237,39,169,37],[237,40,169,38],[238,6,170,4],[238,12,170,10,"saveCacheData"],[238,25,170,23],[238,26,170,24,"data"],[238,30,170,28],[238,31,170,29],[239,6,171,4],[239,13,171,11],[239,17,171,15],[240,4,172,2],[240,5,172,3],[240,6,172,4],[240,13,172,11,"error"],[240,18,172,16],[240,20,172,18],[241,6,173,4,"console"],[241,13,173,11],[241,14,173,12,"error"],[241,19,173,17],[241,20,173,18],[241,52,173,50],[241,54,173,52,"error"],[241,59,173,57],[241,60,173,58],[242,6,174,4],[242,13,174,11],[242,18,174,16],[243,4,175,2],[244,2,176,0],[244,3,176,1],[246,2,178,0],[247,2,179,0],[248,2,180,0],[250,2,182,0],[251,0,183,0],[252,0,184,0],[253,2,185,7],[253,8,185,13,"addToSyncQueue"],[253,22,185,27],[253,25,185,30],[253,31,185,37,"item"],[253,35,185,56],[253,39,185,76],[254,4,186,2],[254,8,186,6],[255,6,187,4],[255,12,187,10,"queueJson"],[255,21,187,19],[255,24,187,22],[255,30,187,28,"AsyncStorage"],[255,42,187,40],[255,43,187,40,"default"],[255,50,187,40],[255,51,187,41,"getItem"],[255,58,187,48],[255,59,187,49,"STORAGE_KEYS"],[255,71,187,61],[255,72,187,62,"SYNC_QUEUE"],[255,82,187,72],[255,83,187,73],[256,6,188,4],[256,12,188,10,"queue"],[256,17,188,32],[256,20,188,35,"queueJson"],[256,29,188,44],[256,32,188,47,"JSON"],[256,36,188,51],[256,37,188,52,"parse"],[256,42,188,57],[256,43,188,58,"queueJson"],[256,52,188,67],[256,53,188,68],[256,56,188,71],[256,58,188,73],[257,6,190,4,"queue"],[257,11,190,9],[257,12,190,10,"push"],[257,16,190,14],[257,17,190,15,"item"],[257,21,190,19],[257,22,190,20],[258,6,192,4],[258,12,192,10,"AsyncStorage"],[258,24,192,22],[258,25,192,22,"default"],[258,32,192,22],[258,33,192,23,"setItem"],[258,40,192,30],[258,41,192,31,"STORAGE_KEYS"],[258,53,192,43],[258,54,192,44,"SYNC_QUEUE"],[258,64,192,54],[258,66,192,56,"JSON"],[258,70,192,60],[258,71,192,61,"stringify"],[258,80,192,70],[258,81,192,71,"queue"],[258,86,192,76],[258,87,192,77],[258,88,192,78],[259,6,193,4,"console"],[259,13,193,11],[259,14,193,12,"log"],[259,17,193,15],[259,18,193,16],[259,43,193,41,"item"],[259,47,193,45],[259,48,193,46,"type"],[259,52,193,50],[259,57,193,55,"item"],[259,61,193,59],[259,62,193,60,"data"],[259,66,193,64],[259,67,193,65,"temp_id"],[259,74,193,72],[259,77,193,75],[259,78,193,76],[260,4,194,2],[260,5,194,3],[260,6,194,4],[260,13,194,11,"error"],[260,18,194,16],[260,20,194,18],[261,6,195,4,"console"],[261,13,195,11],[261,14,195,12,"error"],[261,19,195,17],[261,20,195,18],[261,43,195,41],[261,45,195,43,"error"],[261,50,195,48],[261,51,195,49],[262,4,196,2],[263,2,197,0],[263,3,197,1],[265,2,199,0],[266,0,200,0],[267,0,201,0],[268,2,202,7],[268,8,202,13,"getSyncQueue"],[268,20,202,25],[268,23,202,28],[268,29,202,28,"getSyncQueue"],[268,30,202,28],[268,35,202,66],[269,4,203,2],[269,8,203,6],[270,6,204,4],[270,12,204,10,"queueJson"],[270,21,204,19],[270,24,204,22],[270,30,204,28,"AsyncStorage"],[270,42,204,40],[270,43,204,40,"default"],[270,50,204,40],[270,51,204,41,"getItem"],[270,58,204,48],[270,59,204,49,"STORAGE_KEYS"],[270,71,204,61],[270,72,204,62,"SYNC_QUEUE"],[270,82,204,72],[270,83,204,73],[271,6,205,4],[271,13,205,11,"queueJson"],[271,22,205,20],[271,25,205,23,"JSON"],[271,29,205,27],[271,30,205,28,"parse"],[271,35,205,33],[271,36,205,34,"queueJson"],[271,45,205,43],[271,46,205,44],[271,49,205,47],[271,51,205,49],[272,4,206,2],[272,5,206,3],[272,6,206,4],[272,13,206,11,"error"],[272,18,206,16],[272,20,206,18],[273,6,207,4,"console"],[273,13,207,11],[273,14,207,12,"error"],[273,19,207,17],[273,20,207,18],[273,50,207,48],[273,52,207,50,"error"],[273,57,207,55],[273,58,207,56],[274,6,208,4],[274,13,208,11],[274,15,208,13],[275,4,209,2],[276,2,210,0],[276,3,210,1],[278,2,212,0],[279,0,213,0],[280,0,214,0],[281,2,215,7],[281,8,215,13,"clearSyncQueue"],[281,22,215,27],[281,25,215,30],[281,31,215,30,"clearSyncQueue"],[281,32,215,30],[281,37,215,57],[282,4,216,2],[282,8,216,6],[283,6,217,4],[283,12,217,10,"AsyncStorage"],[283,24,217,22],[283,25,217,22,"default"],[283,32,217,22],[283,33,217,23,"setItem"],[283,40,217,30],[283,41,217,31,"STORAGE_KEYS"],[283,53,217,43],[283,54,217,44,"SYNC_QUEUE"],[283,64,217,54],[283,66,217,56,"JSON"],[283,70,217,60],[283,71,217,61,"stringify"],[283,80,217,70],[283,81,217,71],[283,83,217,73],[283,84,217,74],[283,85,217,75],[284,6,218,4,"console"],[284,13,218,11],[284,14,218,12,"log"],[284,17,218,15],[284,18,218,16],[284,35,218,33],[284,36,218,34],[285,4,219,2],[285,5,219,3],[285,6,219,4],[285,13,219,11,"error"],[285,18,219,16],[285,20,219,18],[286,6,220,4,"console"],[286,13,220,11],[286,14,220,12,"error"],[286,19,220,17],[286,20,220,18],[286,44,220,42],[286,46,220,44,"error"],[286,51,220,49],[286,52,220,50],[287,4,221,2],[288,2,222,0],[288,3,222,1],[290,2,224,0],[291,0,225,0],[292,0,226,0],[293,2,227,7],[293,8,227,13,"removeFromSyncQueue"],[293,27,227,32],[293,30,227,35],[293,36,227,42,"tempIds"],[293,43,227,59],[293,47,227,79],[294,4,228,2],[294,8,228,6],[295,6,229,4],[295,12,229,10,"queue"],[295,17,229,15],[295,20,229,18],[295,26,229,24,"getSyncQueue"],[295,38,229,36],[295,39,229,37],[295,40,229,38],[296,6,230,4],[296,12,230,10,"newQueue"],[296,20,230,18],[296,23,230,21,"queue"],[296,28,230,26],[296,29,230,27,"filter"],[296,35,230,33],[296,36,230,34,"item"],[296,40,230,38],[296,44,230,42],[296,45,230,43,"tempIds"],[296,52,230,50],[296,53,230,51,"includes"],[296,61,230,59],[296,62,230,60,"item"],[296,66,230,64],[296,67,230,65,"data"],[296,71,230,69],[296,72,230,70,"temp_id"],[296,79,230,77],[296,80,230,78],[296,81,230,79],[297,6,231,4],[297,12,231,10,"AsyncStorage"],[297,24,231,22],[297,25,231,22,"default"],[297,32,231,22],[297,33,231,23,"setItem"],[297,40,231,30],[297,41,231,31,"STORAGE_KEYS"],[297,53,231,43],[297,54,231,44,"SYNC_QUEUE"],[297,64,231,54],[297,66,231,56,"JSON"],[297,70,231,60],[297,71,231,61,"stringify"],[297,80,231,70],[297,81,231,71,"newQueue"],[297,89,231,79],[297,90,231,80],[297,91,231,81],[298,6,232,4,"console"],[298,13,232,11],[298,14,232,12,"log"],[298,17,232,15],[298,18,232,16],[298,25,232,23,"tempIds"],[298,32,232,30],[298,33,232,31,"length"],[298,39,232,37],[298,72,232,70],[298,73,232,71],[299,4,233,2],[299,5,233,3],[299,6,233,4],[299,13,233,11,"error"],[299,18,233,16],[299,20,233,18],[300,6,234,4,"console"],[300,13,234,11],[300,14,234,12,"error"],[300,19,234,17],[300,20,234,18],[300,49,234,47],[300,51,234,49,"error"],[300,56,234,54],[300,57,234,55],[301,4,235,2],[302,2,236,0],[302,3,236,1],[304,2,238,0],[305,2,239,0],[306,2,240,0],[308,2,242,0],[309,0,243,0],[310,0,244,0],[311,2,245,7],[311,8,245,13,"recordPresence"],[311,22,245,27],[311,25,245,30],[311,31,245,30,"recordPresence"],[311,32,246,2,"cadetId"],[311,39,246,17],[311,41,247,2,"date"],[311,45,247,14],[311,47,248,2,"status"],[311,53,248,41],[311,55,249,2,"commentaire"],[311,66,249,22],[311,71,250,54],[312,4,251,2],[312,10,251,8,"presence"],[312,18,251,33],[312,21,251,36],[313,6,252,4,"cadet_id"],[313,14,252,12],[313,16,252,14,"cadetId"],[313,23,252,21],[314,6,253,4,"date"],[314,10,253,8],[315,6,254,4,"status"],[315,12,254,10],[316,6,255,4,"commentaire"],[316,17,255,15],[317,6,256,4,"timestamp"],[317,15,256,13],[317,17,256,15],[317,21,256,19,"Date"],[317,25,256,23],[317,26,256,24],[317,27,256,25],[317,28,256,26,"toISOString"],[317,39,256,37],[317,40,256,38],[317,41,256,39],[318,6,257,4,"temp_id"],[318,13,257,11],[318,15,257,13],[318,27,257,25,"Date"],[318,31,257,29],[318,32,257,30,"now"],[318,35,257,33],[318,36,257,34],[318,37,257,35],[318,41,257,39,"Math"],[318,45,257,43],[318,46,257,44,"random"],[318,52,257,50],[318,53,257,51],[318,54,257,52],[318,55,257,53,"toString"],[318,63,257,61],[318,64,257,62],[318,66,257,64],[318,67,257,65],[318,68,257,66,"substr"],[318,74,257,72],[318,75,257,73],[318,76,257,74],[318,78,257,76],[318,79,257,77],[318,80,257,78],[319,4,258,2],[319,5,258,3],[321,4,260,2],[322,4,261,2],[322,8,261,6],[322,9,261,7,"isOnline"],[322,17,261,15],[322,19,261,17],[323,6,262,4],[323,12,262,10,"addToSyncQueue"],[323,26,262,24],[323,27,262,25],[324,8,263,6,"type"],[324,12,263,10],[324,14,263,12],[324,24,263,22],[325,8,264,6,"data"],[325,12,264,10],[325,14,264,12,"presence"],[325,22,264,20],[326,8,265,6,"attempts"],[326,16,265,14],[326,18,265,16],[326,19,265,17],[327,8,266,6,"created_at"],[327,18,266,16],[327,20,266,18],[327,24,266,22,"Date"],[327,28,266,26],[327,29,266,27],[327,30,266,28],[327,31,266,29,"toISOString"],[327,42,266,40],[327,43,266,41],[328,6,267,4],[328,7,267,5],[328,8,267,6],[329,6,268,4],[329,13,268,11],[330,8,268,13,"success"],[330,15,268,20],[330,17,268,22],[330,21,268,26],[331,8,268,28,"offline"],[331,15,268,35],[331,17,268,37],[332,6,268,42],[332,7,268,43],[333,4,269,2],[335,4,271,2],[336,4,272,2],[337,4,273,2],[337,11,273,9],[338,6,273,11,"success"],[338,13,273,18],[338,15,273,20],[338,19,273,24],[339,6,273,26,"offline"],[339,13,273,33],[339,15,273,35],[340,4,273,41],[340,5,273,42],[341,2,274,0],[341,3,274,1],[343,2,276,0],[344,0,277,0],[345,0,278,0],[346,2,279,7],[346,8,279,13,"recordInspection"],[346,24,279,29],[346,27,279,32],[346,33,279,32,"recordInspection"],[346,34,280,2,"cadetId"],[346,41,280,17],[346,43,281,2,"date"],[346,47,281,14],[346,49,282,2,"note"],[346,53,282,15],[346,58,283,54],[347,4,284,2],[347,10,284,8,"inspection"],[347,20,284,37],[347,23,284,40],[348,6,285,4,"cadet_id"],[348,14,285,12],[348,16,285,14,"cadetId"],[348,23,285,21],[349,6,286,4,"date"],[349,10,286,8],[350,6,287,4,"note"],[350,10,287,8],[351,6,288,4,"timestamp"],[351,15,288,13],[351,17,288,15],[351,21,288,19,"Date"],[351,25,288,23],[351,26,288,24],[351,27,288,25],[351,28,288,26,"toISOString"],[351,39,288,37],[351,40,288,38],[351,41,288,39],[352,6,289,4,"temp_id"],[352,13,289,11],[352,15,289,13],[352,29,289,27,"Date"],[352,33,289,31],[352,34,289,32,"now"],[352,37,289,35],[352,38,289,36],[352,39,289,37],[352,43,289,41,"Math"],[352,47,289,45],[352,48,289,46,"random"],[352,54,289,52],[352,55,289,53],[352,56,289,54],[352,57,289,55,"toString"],[352,65,289,63],[352,66,289,64],[352,68,289,66],[352,69,289,67],[352,70,289,68,"substr"],[352,76,289,74],[352,77,289,75],[352,78,289,76],[352,80,289,78],[352,81,289,79],[352,82,289,80],[353,4,290,2],[353,5,290,3],[355,4,292,2],[356,4,293,2],[356,8,293,6],[356,9,293,7,"isOnline"],[356,17,293,15],[356,19,293,17],[357,6,294,4],[357,12,294,10,"addToSyncQueue"],[357,26,294,24],[357,27,294,25],[358,8,295,6,"type"],[358,12,295,10],[358,14,295,12],[358,26,295,24],[359,8,296,6,"data"],[359,12,296,10],[359,14,296,12,"inspection"],[359,24,296,22],[360,8,297,6,"attempts"],[360,16,297,14],[360,18,297,16],[360,19,297,17],[361,8,298,6,"created_at"],[361,18,298,16],[361,20,298,18],[361,24,298,22,"Date"],[361,28,298,26],[361,29,298,27],[361,30,298,28],[361,31,298,29,"toISOString"],[361,42,298,40],[361,43,298,41],[362,6,299,4],[362,7,299,5],[362,8,299,6],[363,6,300,4],[363,13,300,11],[364,8,300,13,"success"],[364,15,300,20],[364,17,300,22],[364,21,300,26],[365,8,300,28,"offline"],[365,15,300,35],[365,17,300,37],[366,6,300,42],[366,7,300,43],[367,4,301,2],[368,4,303,2],[368,11,303,9],[369,6,303,11,"success"],[369,13,303,18],[369,15,303,20],[369,19,303,24],[370,6,303,26,"offline"],[370,13,303,33],[370,15,303,35],[371,4,303,41],[371,5,303,42],[372,2,304,0],[372,3,304,1],[374,2,306,0],[375,2,307,0],[376,2,308,0],[378,2,310,0],[379,0,311,0],[380,0,312,0],[381,2,313,7],[381,8,313,13,"syncQueue"],[381,17,313,22],[381,20,313,25],[381,26,313,25,"syncQueue"],[381,27,314,2,"apiUrl"],[381,33,314,16],[381,35,315,2,"token"],[381,40,315,15],[381,42,316,2,"onProgress"],[381,52,316,55],[381,57,317,68],[382,4,318,2],[382,8,318,6],[383,6,319,4],[384,6,320,4],[384,12,320,10,"isSyncing"],[384,21,320,19],[384,24,320,22],[384,30,320,28,"AsyncStorage"],[384,42,320,40],[384,43,320,40,"default"],[384,50,320,40],[384,51,320,41,"getItem"],[384,58,320,48],[384,59,320,49,"STORAGE_KEYS"],[384,71,320,61],[384,72,320,62,"IS_SYNCING"],[384,82,320,72],[384,83,320,73],[385,6,321,4],[385,10,321,8,"isSyncing"],[385,19,321,17],[385,24,321,22],[385,30,321,28],[385,32,321,30],[386,8,322,6,"console"],[386,15,322,13],[386,16,322,14,"log"],[386,19,322,17],[386,20,322,18],[386,54,322,52],[386,55,322,53],[387,8,323,6],[387,15,323,13],[388,10,323,15,"success"],[388,17,323,22],[388,19,323,24],[388,24,323,29],[389,10,323,31,"synced"],[389,16,323,37],[389,18,323,39],[389,19,323,40],[390,10,323,42,"errors"],[390,16,323,48],[390,18,323,50],[391,8,323,52],[391,9,323,53],[392,6,324,4],[394,6,326,4],[395,6,327,4],[395,12,327,10,"AsyncStorage"],[395,24,327,22],[395,25,327,22,"default"],[395,32,327,22],[395,33,327,23,"setItem"],[395,40,327,30],[395,41,327,31,"STORAGE_KEYS"],[395,53,327,43],[395,54,327,44,"IS_SYNCING"],[395,64,327,54],[395,66,327,56],[395,72,327,62],[395,73,327,63],[396,6,329,4],[396,12,329,10,"queue"],[396,17,329,15],[396,20,329,18],[396,26,329,24,"getSyncQueue"],[396,38,329,36],[396,39,329,37],[396,40,329,38],[397,6,331,4],[397,10,331,8,"queue"],[397,15,331,13],[397,16,331,14,"length"],[397,22,331,20],[397,27,331,25],[397,28,331,26],[397,30,331,28],[398,8,332,6],[398,14,332,12,"AsyncStorage"],[398,26,332,24],[398,27,332,24,"default"],[398,34,332,24],[398,35,332,25,"setItem"],[398,42,332,32],[398,43,332,33,"STORAGE_KEYS"],[398,55,332,45],[398,56,332,46,"IS_SYNCING"],[398,66,332,56],[398,68,332,58],[398,75,332,65],[398,76,332,66],[399,8,333,6],[399,15,333,13],[400,10,333,15,"success"],[400,17,333,22],[400,19,333,24],[400,23,333,28],[401,10,333,30,"synced"],[401,16,333,36],[401,18,333,38],[401,19,333,39],[402,10,333,41,"errors"],[402,16,333,47],[402,18,333,49],[403,8,333,51],[403,9,333,52],[404,6,334,4],[405,6,336,4,"console"],[405,13,336,11],[405,14,336,12,"log"],[405,17,336,15],[405,18,336,16],[405,43,336,41,"queue"],[405,48,336,46],[405,49,336,47,"length"],[405,55,336,53],[405,69,336,67],[405,70,336,68],[407,6,338,4],[408,6,339,4],[408,12,339,10,"presences"],[408,21,339,38],[408,24,339,41],[408,26,339,43],[409,6,340,4],[409,12,340,10,"inspections"],[409,23,340,42],[409,26,340,45],[409,28,340,47],[410,6,342,4,"queue"],[410,11,342,9],[410,12,342,10,"forEach"],[410,19,342,17],[410,20,342,18,"item"],[410,24,342,22],[410,28,342,26],[411,8,343,6],[411,12,343,10,"item"],[411,16,343,14],[411,17,343,15,"type"],[411,21,343,19],[411,26,343,24],[411,36,343,34],[411,38,343,36],[412,10,344,8,"presences"],[412,19,344,17],[412,20,344,18,"push"],[412,24,344,22],[412,25,344,23,"item"],[412,29,344,27],[412,30,344,28,"data"],[412,34,344,51],[412,35,344,52],[413,8,345,6],[413,9,345,7],[413,15,345,13],[413,19,345,17,"item"],[413,23,345,21],[413,24,345,22,"type"],[413,28,345,26],[413,33,345,31],[413,45,345,43],[413,47,345,45],[414,10,346,8,"inspections"],[414,21,346,19],[414,22,346,20,"push"],[414,26,346,24],[414,27,346,25,"item"],[414,31,346,29],[414,32,346,30,"data"],[414,36,346,55],[414,37,346,56],[415,8,347,6],[416,6,348,4],[416,7,348,5],[416,8,348,6],[418,6,350,4],[419,6,351,4],[419,12,351,10,"response"],[419,20,351,18],[419,23,351,21],[419,29,351,27,"fetch"],[419,34,351,32],[419,35,351,33],[419,38,351,36,"apiUrl"],[419,44,351,42],[419,61,351,59],[419,63,351,61],[420,8,352,6,"method"],[420,14,352,12],[420,16,352,14],[420,22,352,20],[421,8,353,6,"headers"],[421,15,353,13],[421,17,353,15],[422,10,354,8],[422,24,354,22],[422,26,354,24],[422,44,354,42],[423,10,355,8],[423,25,355,23],[423,27,355,25],[423,37,355,35,"token"],[423,42,355,40],[424,8,356,6],[424,9,356,7],[425,8,357,6,"body"],[425,12,357,10],[425,14,357,12,"JSON"],[425,18,357,16],[425,19,357,17,"stringify"],[425,28,357,26],[425,29,357,27],[426,10,357,29,"presences"],[426,19,357,38],[427,10,357,40,"inspections"],[428,8,357,52],[428,9,357,53],[429,6,358,4],[429,7,358,5],[429,8,358,6],[430,6,360,4],[430,10,360,8],[430,11,360,9,"response"],[430,19,360,17],[430,20,360,18,"ok"],[430,22,360,20],[430,24,360,22],[431,8,361,6],[431,14,361,12],[431,18,361,16,"Error"],[431,23,361,21],[431,24,361,22],[431,47,361,45],[431,48,361,46],[432,6,362,4],[433,6,364,4],[433,12,364,10,"result"],[433,18,364,16],[433,21,364,19],[433,27,364,25,"response"],[433,35,364,33],[433,36,364,34,"json"],[433,40,364,38],[433,41,364,39],[433,42,364,40],[435,6,366,4],[436,6,367,4],[436,12,367,10,"errors"],[436,18,367,16],[436,21,367,19],[436,22,368,6],[436,25,368,9,"result"],[436,31,368,15],[436,32,368,16,"presence_results"],[436,48,368,32],[436,49,368,33,"filter"],[436,55,368,39],[436,56,368,41,"r"],[436,57,368,47],[436,61,368,52],[436,62,368,53,"r"],[436,63,368,54],[436,64,368,55,"success"],[436,71,368,62],[436,72,368,63],[436,74,369,6],[436,77,369,9,"result"],[436,83,369,15],[436,84,369,16,"inspection_results"],[436,102,369,34],[436,103,369,35,"filter"],[436,109,369,41],[436,110,369,43,"r"],[436,111,369,49],[436,115,369,54],[436,116,369,55,"r"],[436,117,369,56],[436,118,369,57,"success"],[436,125,369,64],[436,126,369,65],[436,127,370,5],[437,6,371,4],[437,10,371,8,"errors"],[437,16,371,14],[437,17,371,15,"length"],[437,23,371,21],[437,26,371,24],[437,27,371,25],[437,29,371,27],[438,8,372,6,"console"],[438,15,372,13],[438,16,372,14,"log"],[438,19,372,17],[438,20,372,18],[438,51,372,49],[438,53,372,51,"JSON"],[438,57,372,55],[438,58,372,56,"stringify"],[438,67,372,65],[438,68,372,66,"errors"],[438,74,372,72],[438,76,372,74],[438,80,372,78],[438,82,372,80],[438,83,372,81],[438,84,372,82],[438,85,372,83],[439,6,373,4],[441,6,375,4],[442,6,376,4],[442,12,376,10,"successTempIds"],[442,26,376,24],[442,29,376,27],[442,30,377,6],[442,33,377,9,"result"],[442,39,377,15],[442,40,377,16,"presence_results"],[442,56,377,32],[442,57,377,33,"filter"],[442,63,377,39],[442,64,377,41,"r"],[442,65,377,47],[442,69,377,52,"r"],[442,70,377,53],[442,71,377,54,"success"],[442,78,377,61],[442,79,377,62],[442,80,377,63,"map"],[442,83,377,66],[442,84,377,68,"r"],[442,85,377,74],[442,89,377,79,"r"],[442,90,377,80],[442,91,377,81,"temp_id"],[442,98,377,88],[442,99,377,89],[442,101,378,6],[442,104,378,9,"result"],[442,110,378,15],[442,111,378,16,"inspection_results"],[442,129,378,34],[442,130,378,35,"filter"],[442,136,378,41],[442,137,378,43,"r"],[442,138,378,49],[442,142,378,54,"r"],[442,143,378,55],[442,144,378,56,"success"],[442,151,378,63],[442,152,378,64],[442,153,378,65,"map"],[442,156,378,68],[442,157,378,70,"r"],[442,158,378,76],[442,162,378,81,"r"],[442,163,378,82],[442,164,378,83,"temp_id"],[442,171,378,90],[442,172,378,91],[442,173,379,5],[443,6,381,4],[443,12,381,10,"removeFromSyncQueue"],[443,31,381,29],[443,32,381,30,"successTempIds"],[443,46,381,44],[443,47,381,45],[445,6,383,4],[446,6,384,4],[446,12,384,10,"downloadCacheData"],[446,29,384,27],[446,30,384,28,"apiUrl"],[446,36,384,34],[446,38,384,36,"token"],[446,43,384,41],[446,44,384,42],[447,6,386,4],[447,12,386,10,"AsyncStorage"],[447,24,386,22],[447,25,386,22,"default"],[447,32,386,22],[447,33,386,23,"setItem"],[447,40,386,30],[447,41,386,31,"STORAGE_KEYS"],[447,53,386,43],[447,54,386,44,"IS_SYNCING"],[447,64,386,54],[447,66,386,56],[447,73,386,63],[447,74,386,64],[448,6,388,4,"console"],[448,13,388,11],[448,14,388,12,"log"],[448,17,388,15],[448,18,388,16],[448,49,388,47,"result"],[448,55,388,53],[448,56,388,54,"total_synced"],[448,68,388,66],[448,86,388,84,"result"],[448,92,388,90],[448,93,388,91,"total_errors"],[448,105,388,103],[448,115,388,113],[448,116,388,114],[449,6,390,4],[449,13,390,11],[450,8,391,6,"success"],[450,15,391,13],[450,17,391,15],[450,21,391,19],[451,8,392,6,"synced"],[451,14,392,12],[451,16,392,14,"result"],[451,22,392,20],[451,23,392,21,"total_synced"],[451,35,392,33],[452,8,393,6,"errors"],[452,14,393,12],[452,16,393,14,"result"],[452,22,393,20],[452,23,393,21,"total_errors"],[453,6,394,4],[453,7,394,5],[454,4,395,2],[454,5,395,3],[454,6,395,4],[454,13,395,11,"error"],[454,18,395,16],[454,20,395,18],[455,6,396,4,"console"],[455,13,396,11],[455,14,396,12,"error"],[455,19,396,17],[455,20,396,18],[455,47,396,45],[455,49,396,47,"error"],[455,54,396,52],[455,55,396,53],[456,6,397,4],[456,12,397,10,"AsyncStorage"],[456,24,397,22],[456,25,397,22,"default"],[456,32,397,22],[456,33,397,23,"setItem"],[456,40,397,30],[456,41,397,31,"STORAGE_KEYS"],[456,53,397,43],[456,54,397,44,"IS_SYNCING"],[456,64,397,54],[456,66,397,56],[456,73,397,63],[456,74,397,64],[457,6,398,4],[457,13,398,11],[458,8,398,13,"success"],[458,15,398,20],[458,17,398,22],[458,22,398,27],[459,8,398,29,"synced"],[459,14,398,35],[459,16,398,37],[459,17,398,38],[460,8,398,40,"errors"],[460,14,398,46],[460,16,398,48],[461,6,398,50],[461,7,398,51],[462,4,399,2],[463,2,400,0],[463,3,400,1],[465,2,402,0],[466,0,403,0],[467,0,404,0],[468,2,405,0],[468,8,405,6,"syncQueueAutomatically"],[468,30,405,28],[468,33,405,31],[468,39,405,31,"syncQueueAutomatically"],[468,40,405,31],[468,45,405,43],[469,4,406,2],[470,4,407,2,"console"],[470,11,407,9],[470,12,407,10,"log"],[470,15,407,13],[470,16,407,14],[470,59,407,57],[470,60,407,58],[471,2,408,0],[471,3,408,1],[473,2,410,0],[474,0,411,0],[475,0,412,0],[476,2,413,7],[476,8,413,13,"triggerAutoSync"],[476,23,413,28],[476,26,413,31],[476,32,413,31,"triggerAutoSync"],[476,33,413,38,"apiUrl"],[476,39,413,52],[476,41,413,54,"token"],[476,46,413,67],[476,51,413,72],[477,4,414,2],[477,8,414,6,"isOnline"],[477,16,414,14],[477,18,414,16],[478,6,415,4],[478,12,415,10,"syncQueue"],[478,21,415,19],[478,22,415,20,"apiUrl"],[478,28,415,26],[478,30,415,28,"token"],[478,35,415,33],[478,36,415,34],[479,4,416,2],[480,2,417,0],[480,3,417,1],[481,0,417,2],[481,3]],"functionMap":{"names":["<global>","initNetworkListener","NetInfo.addEventListener$argument_0","connectionListeners.forEach$argument_0","NetInfo.fetch.then$argument_0","addConnectionListener","removeConnectionListener","connectionListeners.filter$argument_0","getConnectionStatus","saveCacheData","getCacheData","downloadCacheData","addToSyncQueue","getSyncQueue","clearSyncQueue","removeFromSyncQueue","queue.filter$argument_0","recordPresence","recordInspection","syncQueue","queue.forEach$argument_0","result.presence_results.filter$argument_0","result.inspection_results.filter$argument_0","result.presence_results.filter.map$argument_0","result.inspection_results.filter.map$argument_0","syncQueueAutomatically","triggerAutoSync"],"mappings":"AAA;mCC+D;2BCC;kCCO,0BD;kCCK,2BD;GDE;uBGG;GHG;CDC;qCKK;CLE;wCMK;mDCC,mBD;CNC;mCQK;CRE;6BSS;CTU;4BUK;CVqB;iCWK;CXmB;8BYS;CZY;4BaK;CbQ;8BcK;CdO;mCeK;kCCG,4CD;CfM;8BiBS;CjB6B;gCkBK;ClByB;yBmBS;kBC6B;KDM;wCEoB,sBF;0CGC,sBH;wCEQ,qBF,MI,qBJ;0CGC,qBH,MK,qBL;CnBsB;+ByBK;CzBG;+B0BK;C1BI"},"hasCjsExports":false},"type":"js/module"}]}