{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./ExpoClipboardPasteButton","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":2,"column":66,"index":93}}],"key":"eN9lJtsTwVKwb1gWXbxxisBeqBM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"onPress\"];\n  var _jsxFileName = \"/app/frontend/node_modules/expo-clipboard/build/ClipboardPasteButton.js\"; // @needsAudit\n  /**\n   * This component displays the `UIPasteControl` button on your screen. This allows pasting from the clipboard without requesting permission from the user.\n   *\n   * You should only attempt to render this if [`Clipboard.isPasteButtonAvailable`](#ispastebuttonavailable)\n   * is `true`. This component will render nothing if it is not available, and you will get\n   * a warning in development mode (`__DEV__ === true`).\n   *\n   * The properties of this component extend from `View`; however, you should not attempt to set\n   * `backgroundColor`, `color` or `borderRadius` with the `style` property. Apple restricts customisation of this view.\n   * Instead, you should use the backgroundColor and foregroundColor properties to set the colors of the button, the cornerStyle property to change the border radius,\n   * and the displayMode property to change the appearance of the icon and label. The word \"Paste\" is not editable and neither is the icon.\n   *\n   * Make sure to attach height and width via the style props as without these styles, the button will\n   * not appear on the screen.\n   *\n   * @see [Apple Documentation](https://developer.apple.com/documentation/uikit/uipastecontrol) for more details.\n   */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.ClipboardPasteButton = ClipboardPasteButton;\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  require(_dependencyMap[1], \"react\");\n  var _ExpoClipboardPasteButton = require(_dependencyMap[2], \"./ExpoClipboardPasteButton\");\n  var ExpoClipboardPasteButton = _interopDefault(_ExpoClipboardPasteButton);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  function ClipboardPasteButton(_ref) {\n    let {\n        onPress\n      } = _ref,\n      restProps = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n    if (!ExpoClipboardPasteButton.default) {\n      if (__DEV__) {\n        console.warn(\"'ApplePasteButton' is not available.\");\n      }\n      return null;\n    }\n    const onPastePressed = ({\n      nativeEvent\n    }) => {\n      onPress(nativeEvent);\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ExpoClipboardPasteButton.default, Object.assign({\n      onPastePressed: onPastePressed\n    }, restProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n});","lineCount":62,"map":[[5,96,3,0],[6,2,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,2,4,0,"Object"],[23,8,4,0],[23,9,4,0,"defineProperty"],[23,23,4,0],[23,24,4,0,"exports"],[23,31,4,0],[24,4,4,0,"value"],[24,9,4,0],[25,2,4,0],[26,2,4,0],[26,11,4,0,"_interopDefault"],[26,27,4,0,"e"],[26,28,4,0],[27,4,4,0],[27,11,4,0,"e"],[27,12,4,0],[27,16,4,0,"e"],[27,17,4,0],[27,18,4,0,"__esModule"],[27,28,4,0],[27,31,4,0,"e"],[27,32,4,0],[28,6,4,0,"default"],[28,13,4,0],[28,15,4,0,"e"],[29,4,4,0],[30,2,4,0],[31,2,21,0,"exports"],[31,9,21,0],[31,10,21,0,"ClipboardPasteButton"],[31,30,21,0],[31,33,21,0,"ClipboardPasteButton"],[31,53,21,0],[32,2,32,1],[32,6,32,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[32,54,32,1],[32,57,32,1,"require"],[32,64,32,1],[32,65,32,1,"_dependencyMap"],[32,79,32,1],[33,2,32,1],[33,6,32,1,"_objectWithoutPropertiesLoose"],[33,35,32,1],[33,38,32,1,"_interopDefault"],[33,53,32,1],[33,54,32,1,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[33,102,32,1],[34,2,1,0,"require"],[34,9,1,0],[34,10,1,0,"_dependencyMap"],[34,24,1,0],[35,2,2,0],[35,6,2,0,"_ExpoClipboardPasteButton"],[35,31,2,0],[35,34,2,0,"require"],[35,41,2,0],[35,42,2,0,"_dependencyMap"],[35,56,2,0],[36,2,2,0],[36,6,2,0,"ExpoClipboardPasteButton"],[36,30,2,0],[36,33,2,0,"_interopDefault"],[36,48,2,0],[36,49,2,0,"_ExpoClipboardPasteButton"],[36,74,2,0],[37,2,2,66],[37,6,2,66,"_reactJsxDevRuntime"],[37,25,2,66],[37,28,2,66,"require"],[37,35,2,66],[37,36,2,66,"_dependencyMap"],[37,50,2,66],[38,2,21,7],[38,11,21,16,"ClipboardPasteButton"],[38,31,21,36,"ClipboardPasteButton"],[38,32,21,36,"_ref"],[38,36,21,36],[38,38,21,64],[39,4,21,64],[39,8,21,37],[40,8,21,39,"onPress"],[41,6,21,61],[41,7,21,62],[41,10,21,62,"_ref"],[41,14,21,62],[42,6,21,51,"restProps"],[42,15,21,60],[42,22,21,60,"_objectWithoutPropertiesLoose"],[42,51,21,60],[42,52,21,60,"default"],[42,59,21,60],[42,61,21,60,"_ref"],[42,65,21,60],[42,67,21,60,"_excluded"],[42,76,21,60],[43,4,22,4],[43,8,22,8],[43,9,22,9,"ExpoClipboardPasteButton"],[43,33,22,33],[43,34,22,33,"default"],[43,41,22,33],[43,43,22,35],[44,6,23,8],[44,10,23,12,"__DEV__"],[44,17,23,19],[44,19,23,21],[45,8,24,12,"console"],[45,15,24,19],[45,16,24,20,"warn"],[45,20,24,24],[45,21,24,25],[45,59,24,63],[45,60,24,64],[46,6,25,8],[47,6,26,8],[47,13,26,15],[47,17,26,19],[48,4,27,4],[49,4,28,4],[49,10,28,10,"onPastePressed"],[49,24,28,24],[49,27,28,27,"onPastePressed"],[49,28,28,28],[50,6,28,30,"nativeEvent"],[51,4,28,42],[51,5,28,43],[51,10,28,48],[52,6,29,8,"onPress"],[52,13,29,15],[52,14,29,16,"nativeEvent"],[52,25,29,27],[52,26,29,28],[53,4,30,4],[53,5,30,5],[54,4,31,4],[54,24,31,11],[54,28,31,11,"_reactJsxDevRuntime"],[54,47,31,11],[54,48,31,11,"jsxDEV"],[54,54,31,11],[54,56,31,12,"ExpoClipboardPasteButton"],[54,80,31,36],[54,81,31,36,"default"],[54,88,31,36],[54,90,31,36,"Object"],[54,96,31,36],[54,97,31,36,"assign"],[54,103,31,36],[55,6,31,37,"onPastePressed"],[55,20,31,51],[55,22,31,53,"onPastePressed"],[56,4,31,68],[56,7,31,73,"restProps"],[56,16,31,82],[57,6,31,82,"fileName"],[57,14,31,82],[57,16,31,82,"_jsxFileName"],[57,28,31,82],[58,6,31,82,"lineNumber"],[58,16,31,82],[59,6,31,82,"columnNumber"],[59,18,31,82],[60,4,31,82],[60,11,31,84],[60,12,31,85],[61,2,32,0],[62,0,32,1],[62,3]],"functionMap":{"names":["<global>","ClipboardPasteButton","onPastePressed"],"mappings":"AAA;OCoB;2BCO;KDE;CDE"},"hasCjsExports":false},"type":"js/module"}]}