{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":80},"end":{"line":4,"column":36,"index":116}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":117},"end":{"line":5,"column":40,"index":157}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./Errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":158},"end":{"line":6,"column":44,"index":202}}],"key":"Hc24lHtszv0n4sfQahKq/F+wSE4=","exportNames":["*"],"imports":1}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":203},"end":{"line":7,"column":62,"index":265}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":266},"end":{"line":8,"column":32,"index":298}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"numberOfPointers\", \"direction\"];\n  /* eslint-disable eslint-comments/no-unlimited-disable */\n  /* eslint-disable */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _egjsHammerjs = require(_dependencyMap[1], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _Errors = require(_dependencyMap[3], \"./Errors\");\n  var _DraggingGestureHandler = require(_dependencyMap[4], \"./DraggingGestureHandler\");\n  var DraggingGestureHandler = _interopDefault(_DraggingGestureHandler);\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  class FlingGestureHandler extends DraggingGestureHandler.default {\n    get name() {\n      return 'swipe';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Swipe;\n    }\n    onGestureActivated(event) {\n      this.sendEvent(Object.assign({}, event, {\n        eventType: Hammer.default.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      }));\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent(Object.assign({}, event, {\n        eventType: Hammer.default.INPUT_END,\n        isFinal: true\n      }));\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.hasGestureFailed) {\n        return;\n      } // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n\n      if (ev.isFinal) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name); // @ts-ignore FIXME(TS)\n\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        // @ts-ignore FIXME(TS)\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n    getTargetDirections(direction) {\n      const directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(Hammer.default.DIRECTION_RIGHT);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(Hammer.default.DIRECTION_LEFT);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(Hammer.default.DIRECTION_UP);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(Hammer.default.DIRECTION_DOWN);\n      } // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n\n      return directions;\n    }\n    getDirection() {\n      // @ts-ignore FIXME(TS)\n      const {\n        direction\n      } = this.getConfig();\n      let directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(Hammer.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(Hammer.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(Hammer.default.DIRECTION_VERTICAL);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(Hammer.default.DIRECTION_VERTICAL);\n      }\n      directions = [...new Set(directions)];\n      if (directions.length === 0) return Hammer.default.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return Hammer.default.DIRECTION_ALL;\n    }\n    isGestureEnabledForEvent({\n      numberOfPointers\n    }, _recognizer, {\n      maxPointers: pointerLength\n    }) {\n      const validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n    updateGestureConfig(_ref) {\n      let {\n          numberOfPointers = 1,\n          direction\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      if ((0, _utils.isnan)(direction) || typeof direction !== 'number') {\n        throw new _Errors.GesturePropError('direction', direction, 'number');\n      }\n      return super.updateGestureConfig(Object.assign({\n        numberOfPointers,\n        direction\n      }, props));\n    }\n  }\n  var _default = FlingGestureHandler;\n});","lineCount":151,"map":[[5,2,1,0],[6,2,3,0],[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"value"],[8,9,3,0],[9,2,3,0],[10,2,3,0],[10,11,3,0,"_interopDefault"],[10,27,3,0,"e"],[10,28,3,0],[11,4,3,0],[11,11,3,0,"e"],[11,12,3,0],[11,16,3,0,"e"],[11,17,3,0],[11,18,3,0,"__esModule"],[11,28,3,0],[11,31,3,0,"e"],[11,32,3,0],[12,6,3,0,"default"],[12,13,3,0],[12,15,3,0,"e"],[13,4,3,0],[14,2,3,0],[15,2,155,0,"Object"],[15,8,155,0],[15,9,155,0,"defineProperty"],[15,23,155,0],[15,24,155,0,"exports"],[15,31,155,0],[16,4,155,0,"enumerable"],[16,14,155,0],[17,4,155,0,"get"],[17,7,155,0],[17,18,155,0,"get"],[17,19,155,0],[18,6,155,0],[18,13,155,0,"_default"],[18,21,155,0],[19,4,155,0],[20,2,155,0],[21,2,155,35],[21,6,155,35,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[21,54,155,35],[21,57,155,35,"require"],[21,64,155,35],[21,65,155,35,"_dependencyMap"],[21,79,155,35],[22,2,155,35],[22,6,155,35,"_objectWithoutPropertiesLoose"],[22,35,155,35],[22,38,155,35,"_interopDefault"],[22,53,155,35],[22,54,155,35,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[22,102,155,35],[23,2,4,0],[23,6,4,0,"_egjsHammerjs"],[23,19,4,0],[23,22,4,0,"require"],[23,29,4,0],[23,30,4,0,"_dependencyMap"],[23,44,4,0],[24,2,4,0],[24,6,4,0,"Hammer"],[24,12,4,0],[24,15,4,0,"_interopDefault"],[24,30,4,0],[24,31,4,0,"_egjsHammerjs"],[24,44,4,0],[25,2,5,0],[25,6,5,0,"_constants"],[25,16,5,0],[25,19,5,0,"require"],[25,26,5,0],[25,27,5,0,"_dependencyMap"],[25,41,5,0],[26,2,6,0],[26,6,6,0,"_Errors"],[26,13,6,0],[26,16,6,0,"require"],[26,23,6,0],[26,24,6,0,"_dependencyMap"],[26,38,6,0],[27,2,7,0],[27,6,7,0,"_DraggingGestureHandler"],[27,29,7,0],[27,32,7,0,"require"],[27,39,7,0],[27,40,7,0,"_dependencyMap"],[27,54,7,0],[28,2,7,0],[28,6,7,0,"DraggingGestureHandler"],[28,28,7,0],[28,31,7,0,"_interopDefault"],[28,46,7,0],[28,47,7,0,"_DraggingGestureHandler"],[28,70,7,0],[29,2,8,0],[29,6,8,0,"_utils"],[29,12,8,0],[29,15,8,0,"require"],[29,22,8,0],[29,23,8,0,"_dependencyMap"],[29,37,8,0],[30,2,10,0],[30,8,10,6,"FlingGestureHandler"],[30,27,10,25],[30,36,10,34,"DraggingGestureHandler"],[30,58,10,56],[30,59,10,56,"default"],[30,66,10,56],[30,67,10,57],[31,4,11,2],[31,8,11,6,"name"],[31,12,11,10,"name"],[31,13,11,10],[31,15,11,13],[32,6,12,4],[32,13,12,11],[32,20,12,18],[33,4,13,2],[34,4,15,2],[34,8,15,6,"NativeGestureClass"],[34,26,15,24,"NativeGestureClass"],[34,27,15,24],[34,29,15,27],[35,6,16,4],[35,13,16,11,"Hammer"],[35,19,16,17],[35,20,16,17,"default"],[35,27,16,17],[35,28,16,18,"Swipe"],[35,33,16,23],[36,4,17,2],[37,4,19,2,"onGestureActivated"],[37,22,19,20,"onGestureActivated"],[37,23,19,21,"event"],[37,28,19,26],[37,30,19,28],[38,6,20,4],[38,10,20,8],[38,11,20,9,"sendEvent"],[38,20,20,18],[38,21,20,18,"Object"],[38,27,20,18],[38,28,20,18,"assign"],[38,34,20,18],[38,39,20,24,"event"],[38,44,20,29],[39,8,21,6,"eventType"],[39,17,21,15],[39,19,21,17,"Hammer"],[39,25,21,23],[39,26,21,23,"default"],[39,33,21,23],[39,34,21,24,"INPUT_MOVE"],[39,44,21,34],[40,8,22,6,"isFinal"],[40,15,22,13],[40,17,22,15],[40,22,22,20],[41,8,23,6,"isFirst"],[41,15,23,13],[41,17,23,15],[42,6,23,19],[42,8,24,5],[42,9,24,6],[43,6,25,4],[43,10,25,8],[43,11,25,9,"isGestureRunning"],[43,27,25,25],[43,30,25,28],[43,35,25,33],[44,6,26,4],[44,10,26,8],[44,11,26,9,"hasGestureFailed"],[44,27,26,25],[44,30,26,28],[44,35,26,33],[45,6,27,4],[45,10,27,8],[45,11,27,9,"sendEvent"],[45,20,27,18],[45,21,27,18,"Object"],[45,27,27,18],[45,28,27,18,"assign"],[45,34,27,18],[45,39,27,24,"event"],[45,44,27,29],[46,8,28,6,"eventType"],[46,17,28,15],[46,19,28,17,"Hammer"],[46,25,28,23],[46,26,28,23,"default"],[46,33,28,23],[46,34,28,24,"INPUT_END"],[46,43,28,33],[47,8,29,6,"isFinal"],[47,15,29,13],[47,17,29,15],[48,6,29,19],[48,8,30,5],[48,9,30,6],[49,4,31,2],[50,4,33,2,"onRawEvent"],[50,14,33,12,"onRawEvent"],[50,15,33,13,"ev"],[50,17,33,15],[50,19,33,17],[51,6,34,4],[51,11,34,9],[51,12,34,10,"onRawEvent"],[51,22,34,20],[51,23,34,21,"ev"],[51,25,34,23],[51,26,34,24],[52,6,36,4],[52,10,36,8],[52,14,36,12],[52,15,36,13,"hasGestureFailed"],[52,31,36,29],[52,33,36,31],[53,8,37,6],[54,6,38,4],[54,7,38,5],[54,8,38,6],[55,6,39,4],[57,6,42,4],[57,10,42,8,"ev"],[57,12,42,10],[57,13,42,11,"isFinal"],[57,20,42,18],[57,22,42,20],[58,8,43,6,"setTimeout"],[58,18,43,16],[58,19,43,17],[58,25,43,23],[59,10,44,8],[59,14,44,12],[59,18,44,16],[59,19,44,17,"isGestureRunning"],[59,35,44,33],[59,37,44,35],[60,12,45,10],[60,16,45,14],[60,17,45,15,"cancelEvent"],[60,28,45,26],[60,29,45,27,"ev"],[60,31,45,29],[60,32,45,30],[61,10,46,8],[62,8,47,6],[62,9,47,7],[62,10,47,8],[63,6,48,4],[63,7,48,5],[63,13,48,11],[63,17,48,15],[63,18,48,16],[63,22,48,20],[63,23,48,21,"hasGestureFailed"],[63,39,48,37],[63,43,48,41],[63,44,48,42],[63,48,48,46],[63,49,48,47,"isGestureRunning"],[63,65,48,63],[63,67,48,65],[64,8,49,6],[65,8,50,6],[65,14,50,12,"gesture"],[65,21,50,19],[65,24,50,22],[65,28,50,26],[65,29,50,27,"hammer"],[65,35,50,33],[65,36,50,34,"get"],[65,39,50,37],[65,40,50,38],[65,44,50,42],[65,45,50,43,"name"],[65,49,50,47],[65,50,50,48],[65,51,50,49],[65,52,50,50],[67,8,52,6],[67,12,52,10,"gesture"],[67,19,52,17],[67,20,52,18,"options"],[67,27,52,25],[67,28,52,26,"enable"],[67,34,52,32],[67,35,52,33,"gesture"],[67,42,52,40],[67,44,52,42,"ev"],[67,46,52,44],[67,47,52,45],[67,49,52,47],[68,10,53,8],[68,14,53,12],[68,15,53,13,"onStart"],[68,22,53,20],[68,23,53,21,"ev"],[68,25,53,23],[68,26,53,24],[69,10,54,8],[69,14,54,12],[69,15,54,13,"sendEvent"],[69,24,54,22],[69,25,54,23,"ev"],[69,27,54,25],[69,28,54,26],[70,8,55,6],[71,6,56,4],[72,4,57,2],[73,4,59,2,"getHammerConfig"],[73,19,59,17,"getHammerConfig"],[73,20,59,17],[73,22,59,20],[74,6,60,4],[74,13,60,11],[75,8,61,6],[76,8,62,6,"pointers"],[76,16,62,14],[76,18,62,16],[76,22,62,20],[76,23,62,21,"config"],[76,29,62,27],[76,30,62,28,"numberOfPointers"],[76,46,62,44],[77,8,63,6,"direction"],[77,17,63,15],[77,19,63,17],[77,23,63,21],[77,24,63,22,"getDirection"],[77,36,63,34],[77,37,63,35],[78,6,64,4],[78,7,64,5],[79,4,65,2],[80,4,67,2,"getTargetDirections"],[80,23,67,21,"getTargetDirections"],[80,24,67,22,"direction"],[80,33,67,31],[80,35,67,33],[81,6,68,4],[81,12,68,10,"directions"],[81,22,68,20],[81,25,68,23],[81,27,68,25],[82,6,70,4],[82,10,70,8,"direction"],[82,19,70,17],[82,22,70,20,"Direction"],[82,32,70,29],[82,33,70,29,"Direction"],[82,42,70,29],[82,43,70,30,"RIGHT"],[82,48,70,35],[82,50,70,37],[83,8,71,6,"directions"],[83,18,71,16],[83,19,71,17,"push"],[83,23,71,21],[83,24,71,22,"Hammer"],[83,30,71,28],[83,31,71,28,"default"],[83,38,71,28],[83,39,71,29,"DIRECTION_RIGHT"],[83,54,71,44],[83,55,71,45],[84,6,72,4],[85,6,74,4],[85,10,74,8,"direction"],[85,19,74,17],[85,22,74,20,"Direction"],[85,32,74,29],[85,33,74,29,"Direction"],[85,42,74,29],[85,43,74,30,"LEFT"],[85,47,74,34],[85,49,74,36],[86,8,75,6,"directions"],[86,18,75,16],[86,19,75,17,"push"],[86,23,75,21],[86,24,75,22,"Hammer"],[86,30,75,28],[86,31,75,28,"default"],[86,38,75,28],[86,39,75,29,"DIRECTION_LEFT"],[86,53,75,43],[86,54,75,44],[87,6,76,4],[88,6,78,4],[88,10,78,8,"direction"],[88,19,78,17],[88,22,78,20,"Direction"],[88,32,78,29],[88,33,78,29,"Direction"],[88,42,78,29],[88,43,78,30,"UP"],[88,45,78,32],[88,47,78,34],[89,8,79,6,"directions"],[89,18,79,16],[89,19,79,17,"push"],[89,23,79,21],[89,24,79,22,"Hammer"],[89,30,79,28],[89,31,79,28,"default"],[89,38,79,28],[89,39,79,29,"DIRECTION_UP"],[89,51,79,41],[89,52,79,42],[90,6,80,4],[91,6,82,4],[91,10,82,8,"direction"],[91,19,82,17],[91,22,82,20,"Direction"],[91,32,82,29],[91,33,82,29,"Direction"],[91,42,82,29],[91,43,82,30,"DOWN"],[91,47,82,34],[91,49,82,36],[92,8,83,6,"directions"],[92,18,83,16],[92,19,83,17,"push"],[92,23,83,21],[92,24,83,22,"Hammer"],[92,30,83,28],[92,31,83,28,"default"],[92,38,83,28],[92,39,83,29,"DIRECTION_DOWN"],[92,53,83,43],[92,54,83,44],[93,6,84,4],[93,7,84,5],[93,8,84,6],[95,6,87,4],[95,13,87,11,"directions"],[95,23,87,21],[96,4,88,2],[97,4,90,2,"getDirection"],[97,16,90,14,"getDirection"],[97,17,90,14],[97,19,90,17],[98,6,91,4],[99,6,92,4],[99,12,92,10],[100,8,93,6,"direction"],[101,6,94,4],[101,7,94,5],[101,10,94,8],[101,14,94,12],[101,15,94,13,"getConfig"],[101,24,94,22],[101,25,94,23],[101,26,94,24],[102,6,95,4],[102,10,95,8,"directions"],[102,20,95,18],[102,23,95,21],[102,25,95,23],[103,6,97,4],[103,10,97,8,"direction"],[103,19,97,17],[103,22,97,20,"Direction"],[103,32,97,29],[103,33,97,29,"Direction"],[103,42,97,29],[103,43,97,30,"RIGHT"],[103,48,97,35],[103,50,97,37],[104,8,98,6,"directions"],[104,18,98,16],[104,19,98,17,"push"],[104,23,98,21],[104,24,98,22,"Hammer"],[104,30,98,28],[104,31,98,28,"default"],[104,38,98,28],[104,39,98,29,"DIRECTION_HORIZONTAL"],[104,59,98,49],[104,60,98,50],[105,6,99,4],[106,6,101,4],[106,10,101,8,"direction"],[106,19,101,17],[106,22,101,20,"Direction"],[106,32,101,29],[106,33,101,29,"Direction"],[106,42,101,29],[106,43,101,30,"LEFT"],[106,47,101,34],[106,49,101,36],[107,8,102,6,"directions"],[107,18,102,16],[107,19,102,17,"push"],[107,23,102,21],[107,24,102,22,"Hammer"],[107,30,102,28],[107,31,102,28,"default"],[107,38,102,28],[107,39,102,29,"DIRECTION_HORIZONTAL"],[107,59,102,49],[107,60,102,50],[108,6,103,4],[109,6,105,4],[109,10,105,8,"direction"],[109,19,105,17],[109,22,105,20,"Direction"],[109,32,105,29],[109,33,105,29,"Direction"],[109,42,105,29],[109,43,105,30,"UP"],[109,45,105,32],[109,47,105,34],[110,8,106,6,"directions"],[110,18,106,16],[110,19,106,17,"push"],[110,23,106,21],[110,24,106,22,"Hammer"],[110,30,106,28],[110,31,106,28,"default"],[110,38,106,28],[110,39,106,29,"DIRECTION_VERTICAL"],[110,57,106,47],[110,58,106,48],[111,6,107,4],[112,6,109,4],[112,10,109,8,"direction"],[112,19,109,17],[112,22,109,20,"Direction"],[112,32,109,29],[112,33,109,29,"Direction"],[112,42,109,29],[112,43,109,30,"DOWN"],[112,47,109,34],[112,49,109,36],[113,8,110,6,"directions"],[113,18,110,16],[113,19,110,17,"push"],[113,23,110,21],[113,24,110,22,"Hammer"],[113,30,110,28],[113,31,110,28,"default"],[113,38,110,28],[113,39,110,29,"DIRECTION_VERTICAL"],[113,57,110,47],[113,58,110,48],[114,6,111,4],[115,6,113,4,"directions"],[115,16,113,14],[115,19,113,17],[115,20,113,18],[115,23,113,21],[115,27,113,25,"Set"],[115,30,113,28],[115,31,113,29,"directions"],[115,41,113,39],[115,42,113,40],[115,43,113,41],[116,6,114,4],[116,10,114,8,"directions"],[116,20,114,18],[116,21,114,19,"length"],[116,27,114,25],[116,32,114,30],[116,33,114,31],[116,35,114,33],[116,42,114,40,"Hammer"],[116,48,114,46],[116,49,114,46,"default"],[116,56,114,46],[116,57,114,47,"DIRECTION_NONE"],[116,71,114,61],[117,6,115,4],[117,10,115,8,"directions"],[117,20,115,18],[117,21,115,19,"length"],[117,27,115,25],[117,32,115,30],[117,33,115,31],[117,35,115,33],[117,42,115,40,"directions"],[117,52,115,50],[117,53,115,51],[117,54,115,52],[117,55,115,53],[118,6,116,4],[118,13,116,11,"Hammer"],[118,19,116,17],[118,20,116,17,"default"],[118,27,116,17],[118,28,116,18,"DIRECTION_ALL"],[118,41,116,31],[119,4,117,2],[120,4,119,2,"isGestureEnabledForEvent"],[120,28,119,26,"isGestureEnabledForEvent"],[120,29,119,27],[121,6,120,4,"numberOfPointers"],[122,4,121,2],[122,5,121,3],[122,7,121,5,"_recognizer"],[122,18,121,16],[122,20,121,18],[123,6,122,4,"maxPointers"],[123,17,122,15],[123,19,122,17,"pointerLength"],[124,4,123,2],[124,5,123,3],[124,7,123,5],[125,6,124,4],[125,12,124,10,"validPointerCount"],[125,29,124,27],[125,32,124,30,"pointerLength"],[125,45,124,43],[125,50,124,48,"numberOfPointers"],[125,66,124,64],[126,6,126,4],[126,10,126,8],[126,11,126,9,"validPointerCount"],[126,28,126,26],[126,32,126,30],[126,36,126,34],[126,37,126,35,"isGestureRunning"],[126,53,126,51],[126,55,126,53],[127,8,127,6],[127,15,127,13],[128,10,128,8,"failed"],[128,16,128,14],[128,18,128,16],[129,8,129,6],[129,9,129,7],[130,6,130,4],[131,6,132,4],[131,13,132,11],[132,8,133,6,"success"],[132,15,133,13],[132,17,133,15,"validPointerCount"],[133,6,134,4],[133,7,134,5],[134,4,135,2],[135,4,137,2,"updateGestureConfig"],[135,23,137,21,"updateGestureConfig"],[135,24,137,21,"_ref"],[135,28,137,21],[135,30,141,5],[136,6,141,5],[136,10,137,22],[137,10,138,4,"numberOfPointers"],[137,26,138,20],[137,29,138,23],[137,30,138,24],[138,10,139,4,"direction"],[139,8,141,2],[139,9,141,3],[139,12,141,3,"_ref"],[139,16,141,3],[140,8,140,7,"props"],[140,13,140,12],[140,20,140,12,"_objectWithoutPropertiesLoose"],[140,49,140,12],[140,50,140,12,"default"],[140,57,140,12],[140,59,140,12,"_ref"],[140,63,140,12],[140,65,140,12,"_excluded"],[140,74,140,12],[141,6,142,4],[141,10,142,8],[141,14,142,8,"isnan"],[141,20,142,13],[141,21,142,13,"isnan"],[141,26,142,13],[141,28,142,14,"direction"],[141,37,142,23],[141,38,142,24],[141,42,142,28],[141,49,142,35,"direction"],[141,58,142,44],[141,63,142,49],[141,71,142,57],[141,73,142,59],[142,8,143,6],[142,14,143,12],[142,18,143,16,"GesturePropError"],[142,25,143,32],[142,26,143,32,"GesturePropError"],[142,42,143,32],[142,43,143,33],[142,54,143,44],[142,56,143,46,"direction"],[142,65,143,55],[142,67,143,57],[142,75,143,65],[142,76,143,66],[143,6,144,4],[144,6,146,4],[144,13,146,11],[144,18,146,16],[144,19,146,17,"updateGestureConfig"],[144,38,146,36],[144,39,146,36,"Object"],[144,45,146,36],[144,46,146,36,"assign"],[144,52,146,36],[145,8,147,6,"numberOfPointers"],[145,24,147,22],[146,8,148,6,"direction"],[147,6,148,15],[147,9,149,9,"props"],[147,14,149,14],[147,15,150,5],[147,16,150,6],[148,4,151,2],[149,2,153,0],[150,2,155,0],[150,6,155,0,"_default"],[150,14,155,0],[150,17,155,15,"FlingGestureHandler"],[150,36,155,34],[151,0,155,35],[151,3]],"functionMap":{"names":["<global>","FlingGestureHandler","get__name","get__NativeGestureClass","onGestureActivated","onRawEvent","setTimeout$argument_0","getHammerConfig","getTargetDirections","getDirection","isGestureEnabledForEvent","updateGestureConfig"],"mappings":"AAA;ACS;ECC;GDE;EEE;GFE;EGE;GHY;EIE;iBCU;ODI;GJU;EME;GNM;EOE;GPqB;EQE;GR2B;ESE;GTgB;EUE;GVc;CDE"},"hasCjsExports":false},"type":"js/module"}]}