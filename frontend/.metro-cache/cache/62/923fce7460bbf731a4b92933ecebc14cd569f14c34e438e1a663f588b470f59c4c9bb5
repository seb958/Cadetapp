{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":203},"end":{"line":9,"column":57,"index":260}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./internal/defaultConfiguration","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":302},"end":{"line":11,"column":68,"index":370}}],"key":"G1uCgDScaM3S5X00e27Zr8lG1Vk=","exportNames":["*"],"imports":1}},{"name":"./internal/nativeInterface","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":371},"end":{"line":12,"column":57,"index":428}}],"key":"Sp4VfNT4MoXGzcKDwaXut8oRUXA=","exportNames":["*"],"imports":1}},{"name":"./internal/state","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":429},"end":{"line":13,"column":37,"index":466}}],"key":"AJQfTgXn0K20r74TcE/30yPPOOA=","exportNames":["*"],"imports":1}},{"name":"./internal/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":467},"end":{"line":14,"column":42,"index":509}}],"key":"uIQB1mLKV8iOTHySJkPsqOCQMhM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.configure = configure;\n  exports.fetch = fetch;\n  exports.refresh = refresh;\n  exports.addEventListener = addEventListener;\n  exports.useNetInfo = useNetInfo;\n  exports.useNetInfoInstance = useNetInfoInstance;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _internalDefaultConfiguration = require(_dependencyMap[2], \"./internal/defaultConfiguration\");\n  var DEFAULT_CONFIGURATION = _interopDefault(_internalDefaultConfiguration);\n  var _internalNativeInterface = require(_dependencyMap[3], \"./internal/nativeInterface\");\n  var NativeInterface = _interopDefault(_internalNativeInterface);\n  var _internalState = require(_dependencyMap[4], \"./internal/state\");\n  var State = _interopDefault(_internalState);\n  var _internalTypes = require(_dependencyMap[5], \"./internal/types\");\n  Object.keys(_internalTypes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _internalTypes[k];\n        }\n      });\n    }\n  });\n  var Types = _interopNamespace(_internalTypes);\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // Stores the currently used configuration\n\n  let _configuration = DEFAULT_CONFIGURATION.default; // Stores the singleton reference to the state manager\n\n  let _state = null;\n  const createState = () => {\n    return new State.default(_configuration);\n  }; // Track ongoing requests\n\n  let isRequestInProgress = false;\n  let requestQueue = [];\n  /**\n   * Configures the library with the given configuration. Note that calling this will stop all\n   * previously added listeners from being called again. It is best to call this right when your\n   * application is started to avoid issues. The configuration sets up a global singleton instance.\n   *\n   * @param configuration The new configuration to set.\n   */\n\n  function configure(configuration) {\n    _configuration = {\n      ...DEFAULT_CONFIGURATION.default,\n      ...configuration\n    };\n    if (_state) {\n      _state.tearDown();\n      _state = createState();\n    }\n    if (Platform.default.OS === 'ios') {\n      NativeInterface.default.configure(configuration);\n    }\n  }\n  /**\n   * Returns a `Promise` that resolves to a `NetInfoState` object.\n   * This function operates on the global singleton instance configured using `configure()`\n   *\n   * @param [requestedInterface] interface from which to obtain the information\n   *\n   * @returns A Promise which contains the current connection state.\n   */\n\n  function fetch(requestedInterface) {\n    if (!_state) {\n      _state = createState();\n    }\n    return _state.latest(requestedInterface);\n  }\n  /**\n   * Force-refreshes the internal state of the global singleton managed by this library.\n   *\n   * @returns A Promise which contains the updated connection state.\n   */\n\n  function refresh() {\n    if (!_state) {\n      _state = createState();\n    } // If a request is already in progress, return a promise that will resolve when the current request finishes\n\n    if (isRequestInProgress) {\n      return new Promise(resolve => {\n        requestQueue.push(resolve);\n      });\n    }\n    isRequestInProgress = true;\n    return _state._fetchCurrentState().then(result => {\n      requestQueue.forEach(resolve => resolve(result));\n      requestQueue = [];\n      return result;\n    }).finally(() => {\n      isRequestInProgress = false;\n    });\n  }\n  /**\n   * Subscribe to the global singleton's connection information. The callback is called with a parameter of type\n   * [`NetInfoState`](README.md#netinfostate) whenever the connection state changes. Your listener\n   * will be called with the latest information soon after you subscribe and then with any\n   * subsequent changes afterwards. You should not assume that the listener is called in the same\n   * way across devices or platforms.\n   *\n   * @param listener The listener which is called when the network state changes.\n   *\n   * @returns A function which can be called to unsubscribe.\n   */\n\n  function addEventListener(listener) {\n    if (!_state) {\n      _state = createState();\n    }\n    _state.add(listener);\n    return () => {\n      _state && _state.remove(listener);\n    };\n  }\n  /**\n   * A React Hook into this library's singleton which updates when the connection state changes.\n   *\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns The connection state.\n   */\n\n  function useNetInfo(configuration) {\n    if (configuration) {\n      configure(configuration);\n    }\n    const [netInfo, setNetInfo] = (0, _react.useState)({\n      type: Types.NetInfoStateType.unknown,\n      isConnected: null,\n      isInternetReachable: null,\n      details: null\n    });\n    (0, _react.useEffect)(() => {\n      const unsubscribe = addEventListener(setNetInfo);\n      return () => unsubscribe();\n    }, []);\n    return netInfo;\n  }\n  /**\n   * A React Hook which manages an isolated instance of the network info manager.\n   * This is not a hook into a singleton shared state. NetInfo.configure, NetInfo.addEventListener,\n   * NetInfo.fetch, NetInfo.refresh are performed on a global singleton and have no affect on this hook.\n   * @param {boolean} isPaused - Pause the internal network checks.\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns the netInfo state and a refresh function\n   */\n\n  function useNetInfoInstance(isPaused = false, configuration) {\n    const [networkInfoManager, setNetworkInfoManager] = (0, _react.useState)();\n    const [netInfo, setNetInfo] = (0, _react.useState)({\n      type: Types.NetInfoStateType.unknown,\n      isConnected: null,\n      isInternetReachable: null,\n      details: null\n    });\n    (0, _react.useEffect)(() => {\n      if (isPaused) {\n        return;\n      }\n      const config = {\n        ...DEFAULT_CONFIGURATION.default,\n        ...configuration\n      };\n      const state = new State.default(config);\n      setNetworkInfoManager(state);\n      state.add(setNetInfo);\n      return state.tearDown;\n    }, [isPaused, configuration]);\n    const refresh = (0, _react.useCallback)(() => {\n      if (networkInfoManager && !isRequestInProgress) {\n        isRequestInProgress = true;\n        networkInfoManager._fetchCurrentState().finally(() => {\n          isRequestInProgress = false;\n        });\n      }\n    }, [networkInfoManager]);\n    return {\n      netInfo,\n      refresh\n    };\n  }\n  var _default = {\n    configure,\n    fetch,\n    refresh,\n    addEventListener,\n    useNetInfo,\n    useNetInfoInstance\n  };\n});","lineCount":238,"map":[[27,2,187,0,"Object"],[27,8,187,0],[27,9,187,0,"defineProperty"],[27,23,187,0],[27,24,187,0,"exports"],[27,31,187,0],[28,4,187,0,"enumerable"],[28,14,187,0],[29,4,187,0,"get"],[29,7,187,0],[29,18,187,0,"get"],[29,19,187,0],[30,6,187,0],[30,13,187,0,"_default"],[30,21,187,0],[31,4,187,0],[32,2,187,0],[33,2,35,0,"exports"],[33,9,35,0],[33,10,35,0,"configure"],[33,19,35,0],[33,22,35,0,"configure"],[33,31,35,0],[34,2,59,0,"exports"],[34,9,59,0],[34,10,59,0,"fetch"],[34,15,59,0],[34,18,59,0,"fetch"],[34,23,59,0],[35,2,72,0,"exports"],[35,9,72,0],[35,10,72,0,"refresh"],[35,17,72,0],[35,20,72,0,"refresh"],[35,27,72,0],[36,2,105,0,"exports"],[36,9,105,0],[36,10,105,0,"addEventListener"],[36,26,105,0],[36,29,105,0,"addEventListener"],[36,45,105,0],[37,2,124,0,"exports"],[37,9,124,0],[37,10,124,0,"useNetInfo"],[37,20,124,0],[37,23,124,0,"useNetInfo"],[37,33,124,0],[38,2,151,0,"exports"],[38,9,151,0],[38,10,151,0,"useNetInfoInstance"],[38,28,151,0],[38,31,151,0,"useNetInfoInstance"],[38,49,151,0],[39,2,9,0],[39,6,9,0,"_react"],[39,12,9,0],[39,15,9,0,"require"],[39,22,9,0],[39,23,9,0,"_dependencyMap"],[39,37,9,0],[40,2,9,57],[40,6,9,57,"_reactNativeWebDistExportsPlatform"],[40,40,9,57],[40,43,9,57,"require"],[40,50,9,57],[40,51,9,57,"_dependencyMap"],[40,65,9,57],[41,2,9,57],[41,6,9,57,"Platform"],[41,14,9,57],[41,17,9,57,"_interopDefault"],[41,32,9,57],[41,33,9,57,"_reactNativeWebDistExportsPlatform"],[41,67,9,57],[42,2,11,0],[42,6,11,0,"_internalDefaultConfiguration"],[42,35,11,0],[42,38,11,0,"require"],[42,45,11,0],[42,46,11,0,"_dependencyMap"],[42,60,11,0],[43,2,11,0],[43,6,11,0,"DEFAULT_CONFIGURATION"],[43,27,11,0],[43,30,11,0,"_interopDefault"],[43,45,11,0],[43,46,11,0,"_internalDefaultConfiguration"],[43,75,11,0],[44,2,12,0],[44,6,12,0,"_internalNativeInterface"],[44,30,12,0],[44,33,12,0,"require"],[44,40,12,0],[44,41,12,0,"_dependencyMap"],[44,55,12,0],[45,2,12,0],[45,6,12,0,"NativeInterface"],[45,21,12,0],[45,24,12,0,"_interopDefault"],[45,39,12,0],[45,40,12,0,"_internalNativeInterface"],[45,64,12,0],[46,2,13,0],[46,6,13,0,"_internalState"],[46,20,13,0],[46,23,13,0,"require"],[46,30,13,0],[46,31,13,0,"_dependencyMap"],[46,45,13,0],[47,2,13,0],[47,6,13,0,"State"],[47,11,13,0],[47,14,13,0,"_interopDefault"],[47,29,13,0],[47,30,13,0,"_internalState"],[47,44,13,0],[48,2,14,0],[48,6,14,0,"_internalTypes"],[48,20,14,0],[48,23,14,0,"require"],[48,30,14,0],[48,31,14,0,"_dependencyMap"],[48,45,14,0],[49,2,186,0,"Object"],[49,8,186,0],[49,9,186,0,"keys"],[49,13,186,0],[49,14,186,0,"_internalTypes"],[49,28,186,0],[49,30,186,0,"forEach"],[49,37,186,0],[49,48,186,0,"k"],[49,49,186,0],[50,4,186,0],[50,8,186,0,"k"],[50,9,186,0],[50,28,186,0,"Object"],[50,34,186,0],[50,35,186,0,"prototype"],[50,44,186,0],[50,45,186,0,"hasOwnProperty"],[50,59,186,0],[50,60,186,0,"call"],[50,64,186,0],[50,65,186,0,"exports"],[50,72,186,0],[50,74,186,0,"k"],[50,75,186,0],[51,6,186,0,"Object"],[51,12,186,0],[51,13,186,0,"defineProperty"],[51,27,186,0],[51,28,186,0,"exports"],[51,35,186,0],[51,37,186,0,"k"],[51,38,186,0],[52,8,186,0,"enumerable"],[52,18,186,0],[53,8,186,0,"get"],[53,11,186,0],[53,22,186,0,"get"],[53,23,186,0],[54,10,186,0],[54,17,186,0,"_internalTypes"],[54,31,186,0],[54,32,186,0,"k"],[54,33,186,0],[55,8,186,0],[56,6,186,0],[57,4,186,0],[58,2,186,0],[59,2,14,0],[59,6,14,0,"Types"],[59,11,14,0],[59,14,14,0,"_interopNamespace"],[59,31,14,0],[59,32,14,0,"_internalTypes"],[59,46,14,0],[60,2,1,0],[61,0,2,0],[62,0,3,0],[63,0,4,0],[64,0,5,0],[65,0,6,0],[66,0,7,0],[67,0,8,0],[69,2,14,43],[71,2,16,0],[71,6,16,4,"_configuration"],[71,20,16,18],[71,23,16,21,"DEFAULT_CONFIGURATION"],[71,44,16,42],[71,45,16,42,"default"],[71,52,16,42],[71,53,16,43],[71,54,16,44],[73,2,18,0],[73,6,18,4,"_state"],[73,12,18,10],[73,15,18,13],[73,19,18,17],[74,2,20,0],[74,8,20,6,"createState"],[74,19,20,17],[74,22,20,20,"createState"],[74,23,20,20],[74,28,20,26],[75,4,21,2],[75,11,21,9],[75,15,21,13,"State"],[75,20,21,18],[75,21,21,18,"default"],[75,28,21,18],[75,29,21,19,"_configuration"],[75,43,21,33],[75,44,21,34],[76,2,22,0],[76,3,22,1],[76,4,22,2],[76,5,22,3],[78,2,25,0],[78,6,25,4,"isRequestInProgress"],[78,25,25,23],[78,28,25,26],[78,33,25,31],[79,2,26,0],[79,6,26,4,"requestQueue"],[79,18,26,16],[79,21,26,19],[79,23,26,21],[80,2,27,0],[81,0,28,0],[82,0,29,0],[83,0,30,0],[84,0,31,0],[85,0,32,0],[86,0,33,0],[88,2,35,7],[88,11,35,16,"configure"],[88,20,35,25,"configure"],[88,21,35,26,"configuration"],[88,34,35,39],[88,36,35,41],[89,4,36,2,"_configuration"],[89,18,36,16],[89,21,36,19],[90,6,36,21],[90,9,36,24,"DEFAULT_CONFIGURATION"],[90,30,36,45],[90,31,36,45,"default"],[90,38,36,45],[91,6,37,4],[91,9,37,7,"configuration"],[92,4,38,2],[92,5,38,3],[93,4,40,2],[93,8,40,6,"_state"],[93,14,40,12],[93,16,40,14],[94,6,41,4,"_state"],[94,12,41,10],[94,13,41,11,"tearDown"],[94,21,41,19],[94,22,41,20],[94,23,41,21],[95,6,43,4,"_state"],[95,12,43,10],[95,15,43,13,"createState"],[95,26,43,24],[95,27,43,25],[95,28,43,26],[96,4,44,2],[97,4,46,2],[97,8,46,6,"Platform"],[97,16,46,14],[97,17,46,14,"default"],[97,24,46,14],[97,25,46,15,"OS"],[97,27,46,17],[97,32,46,22],[97,37,46,27],[97,39,46,29],[98,6,47,4,"NativeInterface"],[98,21,47,19],[98,22,47,19,"default"],[98,29,47,19],[98,30,47,20,"configure"],[98,39,47,29],[98,40,47,30,"configuration"],[98,53,47,43],[98,54,47,44],[99,4,48,2],[100,2,49,0],[101,2,50,0],[102,0,51,0],[103,0,52,0],[104,0,53,0],[105,0,54,0],[106,0,55,0],[107,0,56,0],[108,0,57,0],[110,2,59,7],[110,11,59,16,"fetch"],[110,16,59,21,"fetch"],[110,17,59,22,"requestedInterface"],[110,35,59,40],[110,37,59,42],[111,4,60,2],[111,8,60,6],[111,9,60,7,"_state"],[111,15,60,13],[111,17,60,15],[112,6,61,4,"_state"],[112,12,61,10],[112,15,61,13,"createState"],[112,26,61,24],[112,27,61,25],[112,28,61,26],[113,4,62,2],[114,4,64,2],[114,11,64,9,"_state"],[114,17,64,15],[114,18,64,16,"latest"],[114,24,64,22],[114,25,64,23,"requestedInterface"],[114,43,64,41],[114,44,64,42],[115,2,65,0],[116,2,66,0],[117,0,67,0],[118,0,68,0],[119,0,69,0],[120,0,70,0],[122,2,72,7],[122,11,72,16,"refresh"],[122,18,72,23,"refresh"],[122,19,72,23],[122,21,72,26],[123,4,73,2],[123,8,73,6],[123,9,73,7,"_state"],[123,15,73,13],[123,17,73,15],[124,6,74,4,"_state"],[124,12,74,10],[124,15,74,13,"createState"],[124,26,74,24],[124,27,74,25],[124,28,74,26],[125,4,75,2],[125,5,75,3],[125,6,75,4],[127,4,78,2],[127,8,78,6,"isRequestInProgress"],[127,27,78,25],[127,29,78,27],[128,6,79,4],[128,13,79,11],[128,17,79,15,"Promise"],[128,24,79,22],[128,25,79,23,"resolve"],[128,32,79,30],[128,36,79,34],[129,8,80,6,"requestQueue"],[129,20,80,18],[129,21,80,19,"push"],[129,25,80,23],[129,26,80,24,"resolve"],[129,33,80,31],[129,34,80,32],[130,6,81,4],[130,7,81,5],[130,8,81,6],[131,4,82,2],[132,4,84,2,"isRequestInProgress"],[132,23,84,21],[132,26,84,24],[132,30,84,28],[133,4,85,2],[133,11,85,9,"_state"],[133,17,85,15],[133,18,85,16,"_fetchCurrentState"],[133,36,85,34],[133,37,85,35],[133,38,85,36],[133,39,85,37,"then"],[133,43,85,41],[133,44,85,42,"result"],[133,50,85,48],[133,54,85,52],[134,6,86,4,"requestQueue"],[134,18,86,16],[134,19,86,17,"forEach"],[134,26,86,24],[134,27,86,25,"resolve"],[134,34,86,32],[134,38,86,36,"resolve"],[134,45,86,43],[134,46,86,44,"result"],[134,52,86,50],[134,53,86,51],[134,54,86,52],[135,6,87,4,"requestQueue"],[135,18,87,16],[135,21,87,19],[135,23,87,21],[136,6,88,4],[136,13,88,11,"result"],[136,19,88,17],[137,4,89,2],[137,5,89,3],[137,6,89,4],[137,7,89,5,"finally"],[137,14,89,12],[137,15,89,13],[137,21,89,19],[138,6,90,4,"isRequestInProgress"],[138,25,90,23],[138,28,90,26],[138,33,90,31],[139,4,91,2],[139,5,91,3],[139,6,91,4],[140,2,92,0],[141,2,93,0],[142,0,94,0],[143,0,95,0],[144,0,96,0],[145,0,97,0],[146,0,98,0],[147,0,99,0],[148,0,100,0],[149,0,101,0],[150,0,102,0],[151,0,103,0],[153,2,105,7],[153,11,105,16,"addEventListener"],[153,27,105,32,"addEventListener"],[153,28,105,33,"listener"],[153,36,105,41],[153,38,105,43],[154,4,106,2],[154,8,106,6],[154,9,106,7,"_state"],[154,15,106,13],[154,17,106,15],[155,6,107,4,"_state"],[155,12,107,10],[155,15,107,13,"createState"],[155,26,107,24],[155,27,107,25],[155,28,107,26],[156,4,108,2],[157,4,110,2,"_state"],[157,10,110,8],[157,11,110,9,"add"],[157,14,110,12],[157,15,110,13,"listener"],[157,23,110,21],[157,24,110,22],[158,4,112,2],[158,11,112,9],[158,17,112,15],[159,6,113,4,"_state"],[159,12,113,10],[159,16,113,14,"_state"],[159,22,113,20],[159,23,113,21,"remove"],[159,29,113,27],[159,30,113,28,"listener"],[159,38,113,36],[159,39,113,37],[160,4,114,2],[160,5,114,3],[161,2,115,0],[162,2,116,0],[163,0,117,0],[164,0,118,0],[165,0,119,0],[166,0,120,0],[167,0,121,0],[168,0,122,0],[170,2,124,7],[170,11,124,16,"useNetInfo"],[170,21,124,26,"useNetInfo"],[170,22,124,27,"configuration"],[170,35,124,40],[170,37,124,42],[171,4,125,2],[171,8,125,6,"configuration"],[171,21,125,19],[171,23,125,21],[172,6,126,4,"configure"],[172,15,126,13],[172,16,126,14,"configuration"],[172,29,126,27],[172,30,126,28],[173,4,127,2],[174,4,129,2],[174,10,129,8],[174,11,129,9,"netInfo"],[174,18,129,16],[174,20,129,18,"setNetInfo"],[174,30,129,28],[174,31,129,29],[174,34,129,32],[174,38,129,32,"useState"],[174,44,129,40],[174,45,129,40,"useState"],[174,53,129,40],[174,55,129,41],[175,6,130,4,"type"],[175,10,130,8],[175,12,130,10,"Types"],[175,17,130,15],[175,18,130,16,"NetInfoStateType"],[175,34,130,32],[175,35,130,33,"unknown"],[175,42,130,40],[176,6,131,4,"isConnected"],[176,17,131,15],[176,19,131,17],[176,23,131,21],[177,6,132,4,"isInternetReachable"],[177,25,132,23],[177,27,132,25],[177,31,132,29],[178,6,133,4,"details"],[178,13,133,11],[178,15,133,13],[179,4,134,2],[179,5,134,3],[179,6,134,4],[180,4,135,2],[180,8,135,2,"useEffect"],[180,14,135,11],[180,15,135,11,"useEffect"],[180,24,135,11],[180,26,135,12],[180,32,135,18],[181,6,136,4],[181,12,136,10,"unsubscribe"],[181,23,136,21],[181,26,136,24,"addEventListener"],[181,42,136,40],[181,43,136,41,"setNetInfo"],[181,53,136,51],[181,54,136,52],[182,6,137,4],[182,13,137,11],[182,19,137,17,"unsubscribe"],[182,30,137,28],[182,31,137,29],[182,32,137,30],[183,4,138,2],[183,5,138,3],[183,7,138,5],[183,9,138,7],[183,10,138,8],[184,4,139,2],[184,11,139,9,"netInfo"],[184,18,139,16],[185,2,140,0],[186,2,141,0],[187,0,142,0],[188,0,143,0],[189,0,144,0],[190,0,145,0],[191,0,146,0],[192,0,147,0],[193,0,148,0],[194,0,149,0],[196,2,151,7],[196,11,151,16,"useNetInfoInstance"],[196,29,151,34,"useNetInfoInstance"],[196,30,151,35,"isPaused"],[196,38,151,43],[196,41,151,46],[196,46,151,51],[196,48,151,53,"configuration"],[196,61,151,66],[196,63,151,68],[197,4,152,2],[197,10,152,8],[197,11,152,9,"networkInfoManager"],[197,29,152,27],[197,31,152,29,"setNetworkInfoManager"],[197,52,152,50],[197,53,152,51],[197,56,152,54],[197,60,152,54,"useState"],[197,66,152,62],[197,67,152,62,"useState"],[197,75,152,62],[197,77,152,63],[197,78,152,64],[198,4,153,2],[198,10,153,8],[198,11,153,9,"netInfo"],[198,18,153,16],[198,20,153,18,"setNetInfo"],[198,30,153,28],[198,31,153,29],[198,34,153,32],[198,38,153,32,"useState"],[198,44,153,40],[198,45,153,40,"useState"],[198,53,153,40],[198,55,153,41],[199,6,154,4,"type"],[199,10,154,8],[199,12,154,10,"Types"],[199,17,154,15],[199,18,154,16,"NetInfoStateType"],[199,34,154,32],[199,35,154,33,"unknown"],[199,42,154,40],[200,6,155,4,"isConnected"],[200,17,155,15],[200,19,155,17],[200,23,155,21],[201,6,156,4,"isInternetReachable"],[201,25,156,23],[201,27,156,25],[201,31,156,29],[202,6,157,4,"details"],[202,13,157,11],[202,15,157,13],[203,4,158,2],[203,5,158,3],[203,6,158,4],[204,4,159,2],[204,8,159,2,"useEffect"],[204,14,159,11],[204,15,159,11,"useEffect"],[204,24,159,11],[204,26,159,12],[204,32,159,18],[205,6,160,4],[205,10,160,8,"isPaused"],[205,18,160,16],[205,20,160,18],[206,8,161,6],[207,6,162,4],[208,6,164,4],[208,12,164,10,"config"],[208,18,164,16],[208,21,164,19],[209,8,164,21],[209,11,164,24,"DEFAULT_CONFIGURATION"],[209,32,164,45],[209,33,164,45,"default"],[209,40,164,45],[210,8,165,6],[210,11,165,9,"configuration"],[211,6,166,4],[211,7,166,5],[212,6,167,4],[212,12,167,10,"state"],[212,17,167,15],[212,20,167,18],[212,24,167,22,"State"],[212,29,167,27],[212,30,167,27,"default"],[212,37,167,27],[212,38,167,28,"config"],[212,44,167,34],[212,45,167,35],[213,6,168,4,"setNetworkInfoManager"],[213,27,168,25],[213,28,168,26,"state"],[213,33,168,31],[213,34,168,32],[214,6,169,4,"state"],[214,11,169,9],[214,12,169,10,"add"],[214,15,169,13],[214,16,169,14,"setNetInfo"],[214,26,169,24],[214,27,169,25],[215,6,170,4],[215,13,170,11,"state"],[215,18,170,16],[215,19,170,17,"tearDown"],[215,27,170,25],[216,4,171,2],[216,5,171,3],[216,7,171,5],[216,8,171,6,"isPaused"],[216,16,171,14],[216,18,171,16,"configuration"],[216,31,171,29],[216,32,171,30],[216,33,171,31],[217,4,172,2],[217,10,172,8,"refresh"],[217,17,172,15],[217,20,172,18],[217,24,172,18,"useCallback"],[217,30,172,29],[217,31,172,29,"useCallback"],[217,42,172,29],[217,44,172,30],[217,50,172,36],[218,6,173,4],[218,10,173,8,"networkInfoManager"],[218,28,173,26],[218,32,173,30],[218,33,173,31,"isRequestInProgress"],[218,52,173,50],[218,54,173,52],[219,8,174,6,"isRequestInProgress"],[219,27,174,25],[219,30,174,28],[219,34,174,32],[220,8,176,6,"networkInfoManager"],[220,26,176,24],[220,27,176,25,"_fetchCurrentState"],[220,45,176,43],[220,46,176,44],[220,47,176,45],[220,48,176,46,"finally"],[220,55,176,53],[220,56,176,54],[220,62,176,60],[221,10,177,8,"isRequestInProgress"],[221,29,177,27],[221,32,177,30],[221,37,177,35],[222,8,178,6],[222,9,178,7],[222,10,178,8],[223,6,179,4],[224,4,180,2],[224,5,180,3],[224,7,180,5],[224,8,180,6,"networkInfoManager"],[224,26,180,24],[224,27,180,25],[224,28,180,26],[225,4,181,2],[225,11,181,9],[226,6,182,4,"netInfo"],[226,13,182,11],[227,6,183,4,"refresh"],[228,4,184,2],[228,5,184,3],[229,2,185,0],[230,2,187,0],[230,6,187,0,"_default"],[230,14,187,0],[230,17,187,15],[231,4,188,2,"configure"],[231,13,188,11],[232,4,189,2,"fetch"],[232,9,189,7],[233,4,190,2,"refresh"],[233,11,190,9],[234,4,191,2,"addEventListener"],[234,20,191,18],[235,4,192,2,"useNetInfo"],[235,14,192,12],[236,4,193,2,"useNetInfoInstance"],[237,2,194,0],[237,3,194,1],[238,0,194,2],[238,3]],"functionMap":{"names":["<global>","createState","configure","fetch","refresh","Promise$argument_0","_state._fetchCurrentState.then$argument_0","requestQueue.forEach$argument_0","_state._fetchCurrentState.then._finally$argument_0","addEventListener","<anonymous>","useNetInfo","useEffect$argument_0","useNetInfoInstance","networkInfoManager._fetchCurrentState._finally$argument_0"],"mappings":"AAA;oBCmB;CDE;OEa;CFc;OGU;CHM;OIO;uBCO;KDE;0CEI;yBCC,0BD;GFG,UI;GJE;CJC;OSa;SCO;GDE;CTC;OWS;YCW;WFE,mBE;GDC;CXE;OaW;YDQ;GCY;8BTC;sDUI;OVE;GSE;CbK"},"hasCjsExports":false},"type":"js/module"}]}