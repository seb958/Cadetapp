{"dependencies":[{"name":"../PointerType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"hYk7sjMJT+Y27KGuBYSPOC2Jih8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.isPointerInBounds = isPointerInBounds;\n  Object.defineProperty(exports, \"PointerTypeMapping\", {\n    enumerable: true,\n    get: function () {\n      return PointerTypeMapping;\n    }\n  });\n  Object.defineProperty(exports, \"degToRad\", {\n    enumerable: true,\n    get: function () {\n      return degToRad;\n    }\n  });\n  Object.defineProperty(exports, \"coneToDeviation\", {\n    enumerable: true,\n    get: function () {\n      return coneToDeviation;\n    }\n  });\n  exports.calculateViewScale = calculateViewScale;\n  exports.tryExtractStylusData = tryExtractStylusData;\n  Object.defineProperty(exports, \"RNSVGElements\", {\n    enumerable: true,\n    get: function () {\n      return RNSVGElements;\n    }\n  });\n  exports.isRNSVGElement = isRNSVGElement;\n  exports.isRNSVGNode = isRNSVGNode;\n  var _PointerType = require(_dependencyMap[0], \"../PointerType\");\n  function isPointerInBounds(view, {\n    x,\n    y\n  }) {\n    const rect = view.getBoundingClientRect();\n    return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n  }\n  const PointerTypeMapping = new Map([['mouse', _PointerType.PointerType.MOUSE], ['touch', _PointerType.PointerType.TOUCH], ['pen', _PointerType.PointerType.STYLUS], ['none', _PointerType.PointerType.OTHER]]);\n  const degToRad = degrees => degrees * Math.PI / 180;\n  const coneToDeviation = degrees => Math.cos(degToRad(degrees / 2));\n  function calculateViewScale(view) {\n    var _RegExp$exec;\n    const styles = getComputedStyle(view);\n    const resultScales = {\n      scaleX: 1,\n      scaleY: 1\n    }; // Get scales from scale property\n\n    if (styles.scale !== undefined && styles.scale !== 'none') {\n      const scales = styles.scale.split(' ');\n      if (scales[0]) {\n        resultScales.scaleX = parseFloat(scales[0]);\n      }\n      resultScales.scaleY = scales[1] ? parseFloat(scales[1]) : parseFloat(scales[0]);\n    } // Get scales from transform property\n\n    const matrixElements = (_RegExp$exec = new RegExp(/matrix\\((.+)\\)/).exec(styles.transform)) === null || _RegExp$exec === void 0 ? void 0 : _RegExp$exec[1];\n    if (matrixElements) {\n      const matrixElementsArray = matrixElements.split(', ');\n      resultScales.scaleX *= parseFloat(matrixElementsArray[0]);\n      resultScales.scaleY *= parseFloat(matrixElementsArray[3]);\n    }\n    return resultScales;\n  }\n  function tryExtractStylusData(event) {\n    const pointerType = PointerTypeMapping.get(event.pointerType);\n    if (pointerType !== _PointerType.PointerType.STYLUS) {\n      return;\n    } // @ts-ignore This property exists (https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties)\n\n    const eventAzimuthAngle = event.azimuthAngle; // @ts-ignore This property exists (https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties)\n\n    const eventAltitudeAngle = event.altitudeAngle;\n    if (event.tiltX === 0 && event.tiltY === 0) {\n      // If we are in this branch, it means that either tilt properties are not supported and we have to calculate them from altitude and azimuth angles,\n      // or stylus is perpendicular to the screen and we can use altitude / azimuth instead of tilt\n      // If azimuth and altitude are undefined in this branch, it means that we are either perpendicular to the screen,\n      // or that none of the position sets is supported. In that case, we can treat stylus as perpendicular\n      if (eventAzimuthAngle === undefined || eventAltitudeAngle === undefined) {\n        return {\n          tiltX: 0,\n          tiltY: 0,\n          azimuthAngle: Math.PI / 2,\n          altitudeAngle: Math.PI / 2,\n          pressure: event.pressure\n        };\n      }\n      const {\n        tiltX,\n        tiltY\n      } = spherical2tilt(eventAltitudeAngle, eventAzimuthAngle);\n      return {\n        tiltX,\n        tiltY,\n        azimuthAngle: eventAzimuthAngle,\n        altitudeAngle: eventAltitudeAngle,\n        pressure: event.pressure\n      };\n    }\n    const {\n      altitudeAngle,\n      azimuthAngle\n    } = tilt2spherical(event.tiltX, event.tiltY);\n    return {\n      tiltX: event.tiltX,\n      tiltY: event.tiltY,\n      azimuthAngle,\n      altitudeAngle,\n      pressure: event.pressure\n    };\n  } // `altitudeAngle` and `azimuthAngle` are experimental properties, which are not supported on Firefox and Safari.\n  // Given that, we use `tilt` properties and algorithm that converts one value to another.\n  //\n  // Source: https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\n\n  function tilt2spherical(tiltX, tiltY) {\n    const tiltXrad = tiltX * Math.PI / 180;\n    const tiltYrad = tiltY * Math.PI / 180; // calculate azimuth angle\n\n    let azimuthAngle = 0;\n    if (tiltX === 0) {\n      if (tiltY > 0) {\n        azimuthAngle = Math.PI / 2;\n      } else if (tiltY < 0) {\n        azimuthAngle = 3 * Math.PI / 2;\n      }\n    } else if (tiltY === 0) {\n      if (tiltX < 0) {\n        azimuthAngle = Math.PI;\n      }\n    } else if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n      // not enough information to calculate azimuth\n      azimuthAngle = 0;\n    } else {\n      // Non-boundary case: neither tiltX nor tiltY is equal to 0 or +-90\n      const tanX = Math.tan(tiltXrad);\n      const tanY = Math.tan(tiltYrad);\n      azimuthAngle = Math.atan2(tanY, tanX);\n      if (azimuthAngle < 0) {\n        azimuthAngle += 2 * Math.PI;\n      }\n    } // calculate altitude angle\n\n    let altitudeAngle = 0;\n    if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n      altitudeAngle = 0;\n    } else if (tiltX === 0) {\n      altitudeAngle = Math.PI / 2 - Math.abs(tiltYrad);\n    } else if (tiltY === 0) {\n      altitudeAngle = Math.PI / 2 - Math.abs(tiltXrad);\n    } else {\n      // Non-boundary case: neither tiltX nor tiltY is equal to 0 or +-90\n      altitudeAngle = Math.atan(1.0 / Math.sqrt(Math.pow(Math.tan(tiltXrad), 2) + Math.pow(Math.tan(tiltYrad), 2)));\n    }\n    return {\n      altitudeAngle: altitudeAngle,\n      azimuthAngle: azimuthAngle\n    };\n  } // If we are on a platform that doesn't support `tiltX` and `tiltY`, we have to calculate them from `altitude` and `azimuth` angles.\n  //\n  // Source: https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\n\n  function spherical2tilt(altitudeAngle, azimuthAngle) {\n    const radToDeg = 180 / Math.PI;\n    let tiltXrad = 0;\n    let tiltYrad = 0;\n    if (altitudeAngle === 0) {\n      // the pen is in the X-Y plane\n      if (azimuthAngle === 0 || azimuthAngle === 2 * Math.PI) {\n        // pen is on positive X axis\n        tiltXrad = Math.PI / 2;\n      }\n      if (azimuthAngle === Math.PI / 2) {\n        // pen is on positive Y axis\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle === Math.PI) {\n        // pen is on negative X axis\n        tiltXrad = -Math.PI / 2;\n      }\n      if (azimuthAngle === 3 * Math.PI / 2) {\n        // pen is on negative Y axis\n        tiltYrad = -Math.PI / 2;\n      }\n      if (azimuthAngle > 0 && azimuthAngle < Math.PI / 2) {\n        tiltXrad = Math.PI / 2;\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle > Math.PI / 2 && azimuthAngle < Math.PI) {\n        tiltXrad = -Math.PI / 2;\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle > Math.PI && azimuthAngle < 3 * Math.PI / 2) {\n        tiltXrad = -Math.PI / 2;\n        tiltYrad = -Math.PI / 2;\n      }\n      if (azimuthAngle > 3 * Math.PI / 2 && azimuthAngle < 2 * Math.PI) {\n        tiltXrad = Math.PI / 2;\n        tiltYrad = -Math.PI / 2;\n      }\n    }\n    if (altitudeAngle !== 0) {\n      const tanAlt = Math.tan(altitudeAngle);\n      tiltXrad = Math.atan(Math.cos(azimuthAngle) / tanAlt);\n      tiltYrad = Math.atan(Math.sin(azimuthAngle) / tanAlt);\n    }\n    const tiltX = Math.round(tiltXrad * radToDeg);\n    const tiltY = Math.round(tiltYrad * radToDeg);\n    return {\n      tiltX,\n      tiltY\n    };\n  }\n  const RNSVGElements = new Set(['Circle', 'ClipPath', 'Ellipse', 'ForeignObject', 'G', 'Image', 'Line', 'Marker', 'Mask', 'Path', 'Pattern', 'Polygon', 'Polyline', 'Rect', 'Svg', 'Symbol', 'TSpan', 'Text', 'TextPath', 'Use']); // This function helps us determine whether given node is SVGElement or not. In our implementation of\n  // findNodeHandle, we can encounter such element in 2 forms - SVG tag or ref to SVG Element. Since Gesture Handler\n  // does not depend on SVG, we use our simplified SVGRef type that has `elementRef` field. This is something that is present\n  // in actual SVG ref object.\n  //\n  // In order to make sure that node passed into this function is in fact SVG element, first we check if its constructor name\n  // corresponds to one of the possible SVG elements. Then we also check if `elementRef` field exists.\n  // By doing both steps we decrease probability of detecting situations where, for example, user makes custom `Circle` and\n  // we treat it as SVG.\n\n  function isRNSVGElement(viewRef) {\n    const componentClassName = Object.getPrototypeOf(viewRef).constructor.name;\n    return RNSVGElements.has(componentClassName) && Object.hasOwn(viewRef, 'elementRef');\n  } // This function checks if given node is SVGElement. Unlike the function above, this one\n  // operates on React Nodes, not DOM nodes.\n  //\n  // Second condition was introduced to handle case where SVG element was wrapped with\n  // `createAnimatedComponent` from Reanimated.\n\n  function isRNSVGNode(node) {\n    var _node$ref, _Object$getPrototypeO, _node$type;\n\n    // If `ref` has `rngh` field, it means that component comes from Gesture Handler. This is a special case for\n    // `Text` component, which is present in `RNSVGElements` set, yet we don't want to treat it as SVG.\n    if ((_node$ref = node.ref) !== null && _node$ref !== void 0 && _node$ref.rngh) {\n      return false;\n    }\n    return ((_Object$getPrototypeO = Object.getPrototypeOf(node === null || node === void 0 ? void 0 : node.type)) === null || _Object$getPrototypeO === void 0 ? void 0 : _Object$getPrototypeO.name) === 'WebShape' || RNSVGElements.has(node === null || node === void 0 ? void 0 : (_node$type = node.type) === null || _node$type === void 0 ? void 0 : _node$type.displayName);\n  }\n});","lineCount":249,"map":[[7,2,2,0,"exports"],[7,9,2,0],[7,10,2,0,"isPointerInBounds"],[7,27,2,0],[7,30,2,0,"isPointerInBounds"],[7,47,2,0],[8,2,9,0,"Object"],[8,8,9,0],[8,9,9,0,"defineProperty"],[8,23,9,0],[8,24,9,0,"exports"],[8,31,9,0],[9,4,9,0,"enumerable"],[9,14,9,0],[10,4,9,0,"get"],[10,7,9,0],[10,18,9,0,"get"],[10,19,9,0],[11,6,9,0],[11,13,9,0,"PointerTypeMapping"],[11,31,9,0],[12,4,9,0],[13,2,9,0],[14,2,10,0,"Object"],[14,8,10,0],[14,9,10,0,"defineProperty"],[14,23,10,0],[14,24,10,0,"exports"],[14,31,10,0],[15,4,10,0,"enumerable"],[15,14,10,0],[16,4,10,0,"get"],[16,7,10,0],[16,18,10,0,"get"],[16,19,10,0],[17,6,10,0],[17,13,10,0,"degToRad"],[17,21,10,0],[18,4,10,0],[19,2,10,0],[20,2,11,0,"Object"],[20,8,11,0],[20,9,11,0,"defineProperty"],[20,23,11,0],[20,24,11,0,"exports"],[20,31,11,0],[21,4,11,0,"enumerable"],[21,14,11,0],[22,4,11,0,"get"],[22,7,11,0],[22,18,11,0,"get"],[22,19,11,0],[23,6,11,0],[23,13,11,0,"coneToDeviation"],[23,28,11,0],[24,4,11,0],[25,2,11,0],[26,2,12,0,"exports"],[26,9,12,0],[26,10,12,0,"calculateViewScale"],[26,28,12,0],[26,31,12,0,"calculateViewScale"],[26,49,12,0],[27,2,42,0,"exports"],[27,9,42,0],[27,10,42,0,"tryExtractStylusData"],[27,30,42,0],[27,33,42,0,"tryExtractStylusData"],[27,53,42,0],[28,2,213,0,"Object"],[28,8,213,0],[28,9,213,0,"defineProperty"],[28,23,213,0],[28,24,213,0,"exports"],[28,31,213,0],[29,4,213,0,"enumerable"],[29,14,213,0],[30,4,213,0,"get"],[30,7,213,0],[30,18,213,0,"get"],[30,19,213,0],[31,6,213,0],[31,13,213,0,"RNSVGElements"],[31,26,213,0],[32,4,213,0],[33,2,213,0],[34,2,223,0,"exports"],[34,9,223,0],[34,10,223,0,"isRNSVGElement"],[34,24,223,0],[34,27,223,0,"isRNSVGElement"],[34,41,223,0],[35,2,232,0,"exports"],[35,9,232,0],[35,10,232,0,"isRNSVGNode"],[35,21,232,0],[35,24,232,0,"isRNSVGNode"],[35,35,232,0],[36,2,1,0],[36,6,1,0,"_PointerType"],[36,18,1,0],[36,21,1,0,"require"],[36,28,1,0],[36,29,1,0,"_dependencyMap"],[36,43,1,0],[37,2,2,7],[37,11,2,16,"isPointerInBounds"],[37,28,2,33,"isPointerInBounds"],[37,29,2,34,"view"],[37,33,2,38],[37,35,2,40],[38,4,3,2,"x"],[38,5,3,3],[39,4,4,2,"y"],[40,2,5,0],[40,3,5,1],[40,5,5,3],[41,4,6,2],[41,10,6,8,"rect"],[41,14,6,12],[41,17,6,15,"view"],[41,21,6,19],[41,22,6,20,"getBoundingClientRect"],[41,43,6,41],[41,44,6,42],[41,45,6,43],[42,4,7,2],[42,11,7,9,"x"],[42,12,7,10],[42,16,7,14,"rect"],[42,20,7,18],[42,21,7,19,"left"],[42,25,7,23],[42,29,7,27,"x"],[42,30,7,28],[42,34,7,32,"rect"],[42,38,7,36],[42,39,7,37,"right"],[42,44,7,42],[42,48,7,46,"y"],[42,49,7,47],[42,53,7,51,"rect"],[42,57,7,55],[42,58,7,56,"top"],[42,61,7,59],[42,65,7,63,"y"],[42,66,7,64],[42,70,7,68,"rect"],[42,74,7,72],[42,75,7,73,"bottom"],[42,81,7,79],[43,2,8,0],[44,2,9,7],[44,8,9,13,"PointerTypeMapping"],[44,26,9,31],[44,29,9,34],[44,33,9,38,"Map"],[44,36,9,41],[44,37,9,42],[44,38,9,43],[44,39,9,44],[44,46,9,51],[44,48,9,53,"PointerType"],[44,60,9,64],[44,61,9,64,"PointerType"],[44,72,9,64],[44,73,9,65,"MOUSE"],[44,78,9,70],[44,79,9,71],[44,81,9,73],[44,82,9,74],[44,89,9,81],[44,91,9,83,"PointerType"],[44,103,9,94],[44,104,9,94,"PointerType"],[44,115,9,94],[44,116,9,95,"TOUCH"],[44,121,9,100],[44,122,9,101],[44,124,9,103],[44,125,9,104],[44,130,9,109],[44,132,9,111,"PointerType"],[44,144,9,122],[44,145,9,122,"PointerType"],[44,156,9,122],[44,157,9,123,"STYLUS"],[44,163,9,129],[44,164,9,130],[44,166,9,132],[44,167,9,133],[44,173,9,139],[44,175,9,141,"PointerType"],[44,187,9,152],[44,188,9,152,"PointerType"],[44,199,9,152],[44,200,9,153,"OTHER"],[44,205,9,158],[44,206,9,159],[44,207,9,160],[44,208,9,161],[45,2,10,7],[45,8,10,13,"degToRad"],[45,16,10,21],[45,19,10,24,"degrees"],[45,26,10,31],[45,30,10,35,"degrees"],[45,37,10,42],[45,40,10,45,"Math"],[45,44,10,49],[45,45,10,50,"PI"],[45,47,10,52],[45,50,10,55],[45,53,10,58],[46,2,11,7],[46,8,11,13,"coneToDeviation"],[46,23,11,28],[46,26,11,31,"degrees"],[46,33,11,38],[46,37,11,42,"Math"],[46,41,11,46],[46,42,11,47,"cos"],[46,45,11,50],[46,46,11,51,"degToRad"],[46,54,11,59],[46,55,11,60,"degrees"],[46,62,11,67],[46,65,11,70],[46,66,11,71],[46,67,11,72],[46,68,11,73],[47,2,12,7],[47,11,12,16,"calculateViewScale"],[47,29,12,34,"calculateViewScale"],[47,30,12,35,"view"],[47,34,12,39],[47,36,12,41],[48,4,13,2],[48,8,13,6,"_RegExp$exec"],[48,20,13,18],[49,4,15,2],[49,10,15,8,"styles"],[49,16,15,14],[49,19,15,17,"getComputedStyle"],[49,35,15,33],[49,36,15,34,"view"],[49,40,15,38],[49,41,15,39],[50,4,16,2],[50,10,16,8,"resultScales"],[50,22,16,20],[50,25,16,23],[51,6,17,4,"scaleX"],[51,12,17,10],[51,14,17,12],[51,15,17,13],[52,6,18,4,"scaleY"],[52,12,18,10],[52,14,18,12],[53,4,19,2],[53,5,19,3],[53,6,19,4],[53,7,19,5],[55,4,21,2],[55,8,21,6,"styles"],[55,14,21,12],[55,15,21,13,"scale"],[55,20,21,18],[55,25,21,23,"undefined"],[55,34,21,32],[55,38,21,36,"styles"],[55,44,21,42],[55,45,21,43,"scale"],[55,50,21,48],[55,55,21,53],[55,61,21,59],[55,63,21,61],[56,6,22,4],[56,12,22,10,"scales"],[56,18,22,16],[56,21,22,19,"styles"],[56,27,22,25],[56,28,22,26,"scale"],[56,33,22,31],[56,34,22,32,"split"],[56,39,22,37],[56,40,22,38],[56,43,22,41],[56,44,22,42],[57,6,24,4],[57,10,24,8,"scales"],[57,16,24,14],[57,17,24,15],[57,18,24,16],[57,19,24,17],[57,21,24,19],[58,8,25,6,"resultScales"],[58,20,25,18],[58,21,25,19,"scaleX"],[58,27,25,25],[58,30,25,28,"parseFloat"],[58,40,25,38],[58,41,25,39,"scales"],[58,47,25,45],[58,48,25,46],[58,49,25,47],[58,50,25,48],[58,51,25,49],[59,6,26,4],[60,6,28,4,"resultScales"],[60,18,28,16],[60,19,28,17,"scaleY"],[60,25,28,23],[60,28,28,26,"scales"],[60,34,28,32],[60,35,28,33],[60,36,28,34],[60,37,28,35],[60,40,28,38,"parseFloat"],[60,50,28,48],[60,51,28,49,"scales"],[60,57,28,55],[60,58,28,56],[60,59,28,57],[60,60,28,58],[60,61,28,59],[60,64,28,62,"parseFloat"],[60,74,28,72],[60,75,28,73,"scales"],[60,81,28,79],[60,82,28,80],[60,83,28,81],[60,84,28,82],[60,85,28,83],[61,4,29,2],[61,5,29,3],[61,6,29,4],[63,4,32,2],[63,10,32,8,"matrixElements"],[63,24,32,22],[63,27,32,25],[63,28,32,26,"_RegExp$exec"],[63,40,32,38],[63,43,32,41],[63,47,32,45,"RegExp"],[63,53,32,51],[63,54,32,52],[63,70,32,68],[63,71,32,69],[63,72,32,70,"exec"],[63,76,32,74],[63,77,32,75,"styles"],[63,83,32,81],[63,84,32,82,"transform"],[63,93,32,91],[63,94,32,92],[63,100,32,98],[63,104,32,102],[63,108,32,106,"_RegExp$exec"],[63,120,32,118],[63,125,32,123],[63,130,32,128],[63,131,32,129],[63,134,32,132],[63,139,32,137],[63,140,32,138],[63,143,32,141,"_RegExp$exec"],[63,155,32,153],[63,156,32,154],[63,157,32,155],[63,158,32,156],[64,4,34,2],[64,8,34,6,"matrixElements"],[64,22,34,20],[64,24,34,22],[65,6,35,4],[65,12,35,10,"matrixElementsArray"],[65,31,35,29],[65,34,35,32,"matrixElements"],[65,48,35,46],[65,49,35,47,"split"],[65,54,35,52],[65,55,35,53],[65,59,35,57],[65,60,35,58],[66,6,36,4,"resultScales"],[66,18,36,16],[66,19,36,17,"scaleX"],[66,25,36,23],[66,29,36,27,"parseFloat"],[66,39,36,37],[66,40,36,38,"matrixElementsArray"],[66,59,36,57],[66,60,36,58],[66,61,36,59],[66,62,36,60],[66,63,36,61],[67,6,37,4,"resultScales"],[67,18,37,16],[67,19,37,17,"scaleY"],[67,25,37,23],[67,29,37,27,"parseFloat"],[67,39,37,37],[67,40,37,38,"matrixElementsArray"],[67,59,37,57],[67,60,37,58],[67,61,37,59],[67,62,37,60],[67,63,37,61],[68,4,38,2],[69,4,40,2],[69,11,40,9,"resultScales"],[69,23,40,21],[70,2,41,0],[71,2,42,7],[71,11,42,16,"tryExtractStylusData"],[71,31,42,36,"tryExtractStylusData"],[71,32,42,37,"event"],[71,37,42,42],[71,39,42,44],[72,4,43,2],[72,10,43,8,"pointerType"],[72,21,43,19],[72,24,43,22,"PointerTypeMapping"],[72,42,43,40],[72,43,43,41,"get"],[72,46,43,44],[72,47,43,45,"event"],[72,52,43,50],[72,53,43,51,"pointerType"],[72,64,43,62],[72,65,43,63],[73,4,45,2],[73,8,45,6,"pointerType"],[73,19,45,17],[73,24,45,22,"PointerType"],[73,36,45,33],[73,37,45,33,"PointerType"],[73,48,45,33],[73,49,45,34,"STYLUS"],[73,55,45,40],[73,57,45,42],[74,6,46,4],[75,4,47,2],[75,5,47,3],[75,6,47,4],[77,4,50,2],[77,10,50,8,"eventAzimuthAngle"],[77,27,50,25],[77,30,50,28,"event"],[77,35,50,33],[77,36,50,34,"azimuthAngle"],[77,48,50,46],[77,49,50,47],[77,50,50,48],[79,4,52,2],[79,10,52,8,"eventAltitudeAngle"],[79,28,52,26],[79,31,52,29,"event"],[79,36,52,34],[79,37,52,35,"altitudeAngle"],[79,50,52,48],[80,4,54,2],[80,8,54,6,"event"],[80,13,54,11],[80,14,54,12,"tiltX"],[80,19,54,17],[80,24,54,22],[80,25,54,23],[80,29,54,27,"event"],[80,34,54,32],[80,35,54,33,"tiltY"],[80,40,54,38],[80,45,54,43],[80,46,54,44],[80,48,54,46],[81,6,55,4],[82,6,56,4],[83,6,57,4],[84,6,58,4],[85,6,59,4],[85,10,59,8,"eventAzimuthAngle"],[85,27,59,25],[85,32,59,30,"undefined"],[85,41,59,39],[85,45,59,43,"eventAltitudeAngle"],[85,63,59,61],[85,68,59,66,"undefined"],[85,77,59,75],[85,79,59,77],[86,8,60,6],[86,15,60,13],[87,10,61,8,"tiltX"],[87,15,61,13],[87,17,61,15],[87,18,61,16],[88,10,62,8,"tiltY"],[88,15,62,13],[88,17,62,15],[88,18,62,16],[89,10,63,8,"azimuthAngle"],[89,22,63,20],[89,24,63,22,"Math"],[89,28,63,26],[89,29,63,27,"PI"],[89,31,63,29],[89,34,63,32],[89,35,63,33],[90,10,64,8,"altitudeAngle"],[90,23,64,21],[90,25,64,23,"Math"],[90,29,64,27],[90,30,64,28,"PI"],[90,32,64,30],[90,35,64,33],[90,36,64,34],[91,10,65,8,"pressure"],[91,18,65,16],[91,20,65,18,"event"],[91,25,65,23],[91,26,65,24,"pressure"],[92,8,66,6],[92,9,66,7],[93,6,67,4],[94,6,69,4],[94,12,69,10],[95,8,70,6,"tiltX"],[95,13,70,11],[96,8,71,6,"tiltY"],[97,6,72,4],[97,7,72,5],[97,10,72,8,"spherical2tilt"],[97,24,72,22],[97,25,72,23,"eventAltitudeAngle"],[97,43,72,41],[97,45,72,43,"eventAzimuthAngle"],[97,62,72,60],[97,63,72,61],[98,6,73,4],[98,13,73,11],[99,8,74,6,"tiltX"],[99,13,74,11],[100,8,75,6,"tiltY"],[100,13,75,11],[101,8,76,6,"azimuthAngle"],[101,20,76,18],[101,22,76,20,"eventAzimuthAngle"],[101,39,76,37],[102,8,77,6,"altitudeAngle"],[102,21,77,19],[102,23,77,21,"eventAltitudeAngle"],[102,41,77,39],[103,8,78,6,"pressure"],[103,16,78,14],[103,18,78,16,"event"],[103,23,78,21],[103,24,78,22,"pressure"],[104,6,79,4],[104,7,79,5],[105,4,80,2],[106,4,82,2],[106,10,82,8],[107,6,83,4,"altitudeAngle"],[107,19,83,17],[108,6,84,4,"azimuthAngle"],[109,4,85,2],[109,5,85,3],[109,8,85,6,"tilt2spherical"],[109,22,85,20],[109,23,85,21,"event"],[109,28,85,26],[109,29,85,27,"tiltX"],[109,34,85,32],[109,36,85,34,"event"],[109,41,85,39],[109,42,85,40,"tiltY"],[109,47,85,45],[109,48,85,46],[110,4,86,2],[110,11,86,9],[111,6,87,4,"tiltX"],[111,11,87,9],[111,13,87,11,"event"],[111,18,87,16],[111,19,87,17,"tiltX"],[111,24,87,22],[112,6,88,4,"tiltY"],[112,11,88,9],[112,13,88,11,"event"],[112,18,88,16],[112,19,88,17,"tiltY"],[112,24,88,22],[113,6,89,4,"azimuthAngle"],[113,18,89,16],[114,6,90,4,"altitudeAngle"],[114,19,90,17],[115,6,91,4,"pressure"],[115,14,91,12],[115,16,91,14,"event"],[115,21,91,19],[115,22,91,20,"pressure"],[116,4,92,2],[116,5,92,3],[117,2,93,0],[117,3,93,1],[117,4,93,2],[118,2,94,0],[119,2,95,0],[120,2,96,0],[122,2,98,0],[122,11,98,9,"tilt2spherical"],[122,25,98,23,"tilt2spherical"],[122,26,98,24,"tiltX"],[122,31,98,29],[122,33,98,31,"tiltY"],[122,38,98,36],[122,40,98,38],[123,4,99,2],[123,10,99,8,"tiltXrad"],[123,18,99,16],[123,21,99,19,"tiltX"],[123,26,99,24],[123,29,99,27,"Math"],[123,33,99,31],[123,34,99,32,"PI"],[123,36,99,34],[123,39,99,37],[123,42,99,40],[124,4,100,2],[124,10,100,8,"tiltYrad"],[124,18,100,16],[124,21,100,19,"tiltY"],[124,26,100,24],[124,29,100,27,"Math"],[124,33,100,31],[124,34,100,32,"PI"],[124,36,100,34],[124,39,100,37],[124,42,100,40],[124,43,100,41],[124,44,100,42],[126,4,102,2],[126,8,102,6,"azimuthAngle"],[126,20,102,18],[126,23,102,21],[126,24,102,22],[127,4,104,2],[127,8,104,6,"tiltX"],[127,13,104,11],[127,18,104,16],[127,19,104,17],[127,21,104,19],[128,6,105,4],[128,10,105,8,"tiltY"],[128,15,105,13],[128,18,105,16],[128,19,105,17],[128,21,105,19],[129,8,106,6,"azimuthAngle"],[129,20,106,18],[129,23,106,21,"Math"],[129,27,106,25],[129,28,106,26,"PI"],[129,30,106,28],[129,33,106,31],[129,34,106,32],[130,6,107,4],[130,7,107,5],[130,13,107,11],[130,17,107,15,"tiltY"],[130,22,107,20],[130,25,107,23],[130,26,107,24],[130,28,107,26],[131,8,108,6,"azimuthAngle"],[131,20,108,18],[131,23,108,21],[131,24,108,22],[131,27,108,25,"Math"],[131,31,108,29],[131,32,108,30,"PI"],[131,34,108,32],[131,37,108,35],[131,38,108,36],[132,6,109,4],[133,4,110,2],[133,5,110,3],[133,11,110,9],[133,15,110,13,"tiltY"],[133,20,110,18],[133,25,110,23],[133,26,110,24],[133,28,110,26],[134,6,111,4],[134,10,111,8,"tiltX"],[134,15,111,13],[134,18,111,16],[134,19,111,17],[134,21,111,19],[135,8,112,6,"azimuthAngle"],[135,20,112,18],[135,23,112,21,"Math"],[135,27,112,25],[135,28,112,26,"PI"],[135,30,112,28],[136,6,113,4],[137,4,114,2],[137,5,114,3],[137,11,114,9],[137,15,114,13,"Math"],[137,19,114,17],[137,20,114,18,"abs"],[137,23,114,21],[137,24,114,22,"tiltX"],[137,29,114,27],[137,30,114,28],[137,35,114,33],[137,37,114,35],[137,41,114,39,"Math"],[137,45,114,43],[137,46,114,44,"abs"],[137,49,114,47],[137,50,114,48,"tiltY"],[137,55,114,53],[137,56,114,54],[137,61,114,59],[137,63,114,61],[137,65,114,63],[138,6,115,4],[139,6,116,4,"azimuthAngle"],[139,18,116,16],[139,21,116,19],[139,22,116,20],[140,4,117,2],[140,5,117,3],[140,11,117,9],[141,6,118,4],[142,6,119,4],[142,12,119,10,"tanX"],[142,16,119,14],[142,19,119,17,"Math"],[142,23,119,21],[142,24,119,22,"tan"],[142,27,119,25],[142,28,119,26,"tiltXrad"],[142,36,119,34],[142,37,119,35],[143,6,120,4],[143,12,120,10,"tanY"],[143,16,120,14],[143,19,120,17,"Math"],[143,23,120,21],[143,24,120,22,"tan"],[143,27,120,25],[143,28,120,26,"tiltYrad"],[143,36,120,34],[143,37,120,35],[144,6,121,4,"azimuthAngle"],[144,18,121,16],[144,21,121,19,"Math"],[144,25,121,23],[144,26,121,24,"atan2"],[144,31,121,29],[144,32,121,30,"tanY"],[144,36,121,34],[144,38,121,36,"tanX"],[144,42,121,40],[144,43,121,41],[145,6,123,4],[145,10,123,8,"azimuthAngle"],[145,22,123,20],[145,25,123,23],[145,26,123,24],[145,28,123,26],[146,8,124,6,"azimuthAngle"],[146,20,124,18],[146,24,124,22],[146,25,124,23],[146,28,124,26,"Math"],[146,32,124,30],[146,33,124,31,"PI"],[146,35,124,33],[147,6,125,4],[148,4,126,2],[148,5,126,3],[148,6,126,4],[150,4,129,2],[150,8,129,6,"altitudeAngle"],[150,21,129,19],[150,24,129,22],[150,25,129,23],[151,4,131,2],[151,8,131,6,"Math"],[151,12,131,10],[151,13,131,11,"abs"],[151,16,131,14],[151,17,131,15,"tiltX"],[151,22,131,20],[151,23,131,21],[151,28,131,26],[151,30,131,28],[151,34,131,32,"Math"],[151,38,131,36],[151,39,131,37,"abs"],[151,42,131,40],[151,43,131,41,"tiltY"],[151,48,131,46],[151,49,131,47],[151,54,131,52],[151,56,131,54],[151,58,131,56],[152,6,132,4,"altitudeAngle"],[152,19,132,17],[152,22,132,20],[152,23,132,21],[153,4,133,2],[153,5,133,3],[153,11,133,9],[153,15,133,13,"tiltX"],[153,20,133,18],[153,25,133,23],[153,26,133,24],[153,28,133,26],[154,6,134,4,"altitudeAngle"],[154,19,134,17],[154,22,134,20,"Math"],[154,26,134,24],[154,27,134,25,"PI"],[154,29,134,27],[154,32,134,30],[154,33,134,31],[154,36,134,34,"Math"],[154,40,134,38],[154,41,134,39,"abs"],[154,44,134,42],[154,45,134,43,"tiltYrad"],[154,53,134,51],[154,54,134,52],[155,4,135,2],[155,5,135,3],[155,11,135,9],[155,15,135,13,"tiltY"],[155,20,135,18],[155,25,135,23],[155,26,135,24],[155,28,135,26],[156,6,136,4,"altitudeAngle"],[156,19,136,17],[156,22,136,20,"Math"],[156,26,136,24],[156,27,136,25,"PI"],[156,29,136,27],[156,32,136,30],[156,33,136,31],[156,36,136,34,"Math"],[156,40,136,38],[156,41,136,39,"abs"],[156,44,136,42],[156,45,136,43,"tiltXrad"],[156,53,136,51],[156,54,136,52],[157,4,137,2],[157,5,137,3],[157,11,137,9],[158,6,138,4],[159,6,139,4,"altitudeAngle"],[159,19,139,17],[159,22,139,20,"Math"],[159,26,139,24],[159,27,139,25,"atan"],[159,31,139,29],[159,32,139,30],[159,35,139,33],[159,38,139,36,"Math"],[159,42,139,40],[159,43,139,41,"sqrt"],[159,47,139,45],[159,48,139,46,"Math"],[159,52,139,50],[159,53,139,51,"pow"],[159,56,139,54],[159,57,139,55,"Math"],[159,61,139,59],[159,62,139,60,"tan"],[159,65,139,63],[159,66,139,64,"tiltXrad"],[159,74,139,72],[159,75,139,73],[159,77,139,75],[159,78,139,76],[159,79,139,77],[159,82,139,80,"Math"],[159,86,139,84],[159,87,139,85,"pow"],[159,90,139,88],[159,91,139,89,"Math"],[159,95,139,93],[159,96,139,94,"tan"],[159,99,139,97],[159,100,139,98,"tiltYrad"],[159,108,139,106],[159,109,139,107],[159,111,139,109],[159,112,139,110],[159,113,139,111],[159,114,139,112],[159,115,139,113],[160,4,140,2],[161,4,142,2],[161,11,142,9],[162,6,143,4,"altitudeAngle"],[162,19,143,17],[162,21,143,19,"altitudeAngle"],[162,34,143,32],[163,6,144,4,"azimuthAngle"],[163,18,144,16],[163,20,144,18,"azimuthAngle"],[164,4,145,2],[164,5,145,3],[165,2,146,0],[165,3,146,1],[165,4,146,2],[166,2,147,0],[167,2,148,0],[169,2,151,0],[169,11,151,9,"spherical2tilt"],[169,25,151,23,"spherical2tilt"],[169,26,151,24,"altitudeAngle"],[169,39,151,37],[169,41,151,39,"azimuthAngle"],[169,53,151,51],[169,55,151,53],[170,4,152,2],[170,10,152,8,"radToDeg"],[170,18,152,16],[170,21,152,19],[170,24,152,22],[170,27,152,25,"Math"],[170,31,152,29],[170,32,152,30,"PI"],[170,34,152,32],[171,4,153,2],[171,8,153,6,"tiltXrad"],[171,16,153,14],[171,19,153,17],[171,20,153,18],[172,4,154,2],[172,8,154,6,"tiltYrad"],[172,16,154,14],[172,19,154,17],[172,20,154,18],[173,4,156,2],[173,8,156,6,"altitudeAngle"],[173,21,156,19],[173,26,156,24],[173,27,156,25],[173,29,156,27],[174,6,157,4],[175,6,158,4],[175,10,158,8,"azimuthAngle"],[175,22,158,20],[175,27,158,25],[175,28,158,26],[175,32,158,30,"azimuthAngle"],[175,44,158,42],[175,49,158,47],[175,50,158,48],[175,53,158,51,"Math"],[175,57,158,55],[175,58,158,56,"PI"],[175,60,158,58],[175,62,158,60],[176,8,159,6],[177,8,160,6,"tiltXrad"],[177,16,160,14],[177,19,160,17,"Math"],[177,23,160,21],[177,24,160,22,"PI"],[177,26,160,24],[177,29,160,27],[177,30,160,28],[178,6,161,4],[179,6,163,4],[179,10,163,8,"azimuthAngle"],[179,22,163,20],[179,27,163,25,"Math"],[179,31,163,29],[179,32,163,30,"PI"],[179,34,163,32],[179,37,163,35],[179,38,163,36],[179,40,163,38],[180,8,164,6],[181,8,165,6,"tiltYrad"],[181,16,165,14],[181,19,165,17,"Math"],[181,23,165,21],[181,24,165,22,"PI"],[181,26,165,24],[181,29,165,27],[181,30,165,28],[182,6,166,4],[183,6,168,4],[183,10,168,8,"azimuthAngle"],[183,22,168,20],[183,27,168,25,"Math"],[183,31,168,29],[183,32,168,30,"PI"],[183,34,168,32],[183,36,168,34],[184,8,169,6],[185,8,170,6,"tiltXrad"],[185,16,170,14],[185,19,170,17],[185,20,170,18,"Math"],[185,24,170,22],[185,25,170,23,"PI"],[185,27,170,25],[185,30,170,28],[185,31,170,29],[186,6,171,4],[187,6,173,4],[187,10,173,8,"azimuthAngle"],[187,22,173,20],[187,27,173,25],[187,28,173,26],[187,31,173,29,"Math"],[187,35,173,33],[187,36,173,34,"PI"],[187,38,173,36],[187,41,173,39],[187,42,173,40],[187,44,173,42],[188,8,174,6],[189,8,175,6,"tiltYrad"],[189,16,175,14],[189,19,175,17],[189,20,175,18,"Math"],[189,24,175,22],[189,25,175,23,"PI"],[189,27,175,25],[189,30,175,28],[189,31,175,29],[190,6,176,4],[191,6,178,4],[191,10,178,8,"azimuthAngle"],[191,22,178,20],[191,25,178,23],[191,26,178,24],[191,30,178,28,"azimuthAngle"],[191,42,178,40],[191,45,178,43,"Math"],[191,49,178,47],[191,50,178,48,"PI"],[191,52,178,50],[191,55,178,53],[191,56,178,54],[191,58,178,56],[192,8,179,6,"tiltXrad"],[192,16,179,14],[192,19,179,17,"Math"],[192,23,179,21],[192,24,179,22,"PI"],[192,26,179,24],[192,29,179,27],[192,30,179,28],[193,8,180,6,"tiltYrad"],[193,16,180,14],[193,19,180,17,"Math"],[193,23,180,21],[193,24,180,22,"PI"],[193,26,180,24],[193,29,180,27],[193,30,180,28],[194,6,181,4],[195,6,183,4],[195,10,183,8,"azimuthAngle"],[195,22,183,20],[195,25,183,23,"Math"],[195,29,183,27],[195,30,183,28,"PI"],[195,32,183,30],[195,35,183,33],[195,36,183,34],[195,40,183,38,"azimuthAngle"],[195,52,183,50],[195,55,183,53,"Math"],[195,59,183,57],[195,60,183,58,"PI"],[195,62,183,60],[195,64,183,62],[196,8,184,6,"tiltXrad"],[196,16,184,14],[196,19,184,17],[196,20,184,18,"Math"],[196,24,184,22],[196,25,184,23,"PI"],[196,27,184,25],[196,30,184,28],[196,31,184,29],[197,8,185,6,"tiltYrad"],[197,16,185,14],[197,19,185,17,"Math"],[197,23,185,21],[197,24,185,22,"PI"],[197,26,185,24],[197,29,185,27],[197,30,185,28],[198,6,186,4],[199,6,188,4],[199,10,188,8,"azimuthAngle"],[199,22,188,20],[199,25,188,23,"Math"],[199,29,188,27],[199,30,188,28,"PI"],[199,32,188,30],[199,36,188,34,"azimuthAngle"],[199,48,188,46],[199,51,188,49],[199,52,188,50],[199,55,188,53,"Math"],[199,59,188,57],[199,60,188,58,"PI"],[199,62,188,60],[199,65,188,63],[199,66,188,64],[199,68,188,66],[200,8,189,6,"tiltXrad"],[200,16,189,14],[200,19,189,17],[200,20,189,18,"Math"],[200,24,189,22],[200,25,189,23,"PI"],[200,27,189,25],[200,30,189,28],[200,31,189,29],[201,8,190,6,"tiltYrad"],[201,16,190,14],[201,19,190,17],[201,20,190,18,"Math"],[201,24,190,22],[201,25,190,23,"PI"],[201,27,190,25],[201,30,190,28],[201,31,190,29],[202,6,191,4],[203,6,193,4],[203,10,193,8,"azimuthAngle"],[203,22,193,20],[203,25,193,23],[203,26,193,24],[203,29,193,27,"Math"],[203,33,193,31],[203,34,193,32,"PI"],[203,36,193,34],[203,39,193,37],[203,40,193,38],[203,44,193,42,"azimuthAngle"],[203,56,193,54],[203,59,193,57],[203,60,193,58],[203,63,193,61,"Math"],[203,67,193,65],[203,68,193,66,"PI"],[203,70,193,68],[203,72,193,70],[204,8,194,6,"tiltXrad"],[204,16,194,14],[204,19,194,17,"Math"],[204,23,194,21],[204,24,194,22,"PI"],[204,26,194,24],[204,29,194,27],[204,30,194,28],[205,8,195,6,"tiltYrad"],[205,16,195,14],[205,19,195,17],[205,20,195,18,"Math"],[205,24,195,22],[205,25,195,23,"PI"],[205,27,195,25],[205,30,195,28],[205,31,195,29],[206,6,196,4],[207,4,197,2],[208,4,199,2],[208,8,199,6,"altitudeAngle"],[208,21,199,19],[208,26,199,24],[208,27,199,25],[208,29,199,27],[209,6,200,4],[209,12,200,10,"tanAlt"],[209,18,200,16],[209,21,200,19,"Math"],[209,25,200,23],[209,26,200,24,"tan"],[209,29,200,27],[209,30,200,28,"altitudeAngle"],[209,43,200,41],[209,44,200,42],[210,6,201,4,"tiltXrad"],[210,14,201,12],[210,17,201,15,"Math"],[210,21,201,19],[210,22,201,20,"atan"],[210,26,201,24],[210,27,201,25,"Math"],[210,31,201,29],[210,32,201,30,"cos"],[210,35,201,33],[210,36,201,34,"azimuthAngle"],[210,48,201,46],[210,49,201,47],[210,52,201,50,"tanAlt"],[210,58,201,56],[210,59,201,57],[211,6,202,4,"tiltYrad"],[211,14,202,12],[211,17,202,15,"Math"],[211,21,202,19],[211,22,202,20,"atan"],[211,26,202,24],[211,27,202,25,"Math"],[211,31,202,29],[211,32,202,30,"sin"],[211,35,202,33],[211,36,202,34,"azimuthAngle"],[211,48,202,46],[211,49,202,47],[211,52,202,50,"tanAlt"],[211,58,202,56],[211,59,202,57],[212,4,203,2],[213,4,205,2],[213,10,205,8,"tiltX"],[213,15,205,13],[213,18,205,16,"Math"],[213,22,205,20],[213,23,205,21,"round"],[213,28,205,26],[213,29,205,27,"tiltXrad"],[213,37,205,35],[213,40,205,38,"radToDeg"],[213,48,205,46],[213,49,205,47],[214,4,206,2],[214,10,206,8,"tiltY"],[214,15,206,13],[214,18,206,16,"Math"],[214,22,206,20],[214,23,206,21,"round"],[214,28,206,26],[214,29,206,27,"tiltYrad"],[214,37,206,35],[214,40,206,38,"radToDeg"],[214,48,206,46],[214,49,206,47],[215,4,207,2],[215,11,207,9],[216,6,208,4,"tiltX"],[216,11,208,9],[217,6,209,4,"tiltY"],[218,4,210,2],[218,5,210,3],[219,2,211,0],[220,2,213,7],[220,8,213,13,"RNSVGElements"],[220,21,213,26],[220,24,213,29],[220,28,213,33,"Set"],[220,31,213,36],[220,32,213,37],[220,33,213,38],[220,41,213,46],[220,43,213,48],[220,53,213,58],[220,55,213,60],[220,64,213,69],[220,66,213,71],[220,81,213,86],[220,83,213,88],[220,86,213,91],[220,88,213,93],[220,95,213,100],[220,97,213,102],[220,103,213,108],[220,105,213,110],[220,113,213,118],[220,115,213,120],[220,121,213,126],[220,123,213,128],[220,129,213,134],[220,131,213,136],[220,140,213,145],[220,142,213,147],[220,151,213,156],[220,153,213,158],[220,163,213,168],[220,165,213,170],[220,171,213,176],[220,173,213,178],[220,178,213,183],[220,180,213,185],[220,188,213,193],[220,190,213,195],[220,197,213,202],[220,199,213,204],[220,205,213,210],[220,207,213,212],[220,217,213,222],[220,219,213,224],[220,224,213,229],[220,225,213,230],[220,226,213,231],[220,227,213,232],[220,228,213,233],[221,2,214,0],[222,2,215,0],[223,2,216,0],[224,2,217,0],[225,2,218,0],[226,2,219,0],[227,2,220,0],[228,2,221,0],[230,2,223,7],[230,11,223,16,"isRNSVGElement"],[230,25,223,30,"isRNSVGElement"],[230,26,223,31,"viewRef"],[230,33,223,38],[230,35,223,40],[231,4,224,2],[231,10,224,8,"componentClassName"],[231,28,224,26],[231,31,224,29,"Object"],[231,37,224,35],[231,38,224,36,"getPrototypeOf"],[231,52,224,50],[231,53,224,51,"viewRef"],[231,60,224,58],[231,61,224,59],[231,62,224,60,"constructor"],[231,73,224,71],[231,74,224,72,"name"],[231,78,224,76],[232,4,225,2],[232,11,225,9,"RNSVGElements"],[232,24,225,22],[232,25,225,23,"has"],[232,28,225,26],[232,29,225,27,"componentClassName"],[232,47,225,45],[232,48,225,46],[232,52,225,50,"Object"],[232,58,225,56],[232,59,225,57,"hasOwn"],[232,65,225,63],[232,66,225,64,"viewRef"],[232,73,225,71],[232,75,225,73],[232,87,225,85],[232,88,225,86],[233,2,226,0],[233,3,226,1],[233,4,226,2],[234,2,227,0],[235,2,228,0],[236,2,229,0],[237,2,230,0],[239,2,232,7],[239,11,232,16,"isRNSVGNode"],[239,22,232,27,"isRNSVGNode"],[239,23,232,28,"node"],[239,27,232,32],[239,29,232,34],[240,4,233,2],[240,8,233,6,"_node$ref"],[240,17,233,15],[240,19,233,17,"_Object$getPrototypeO"],[240,40,233,38],[240,42,233,40,"_node$type"],[240,52,233,50],[242,4,235,2],[243,4,236,2],[244,4,237,2],[244,8,237,6],[244,9,237,7,"_node$ref"],[244,18,237,16],[244,21,237,19,"node"],[244,25,237,23],[244,26,237,24,"ref"],[244,29,237,27],[244,35,237,33],[244,39,237,37],[244,43,237,41,"_node$ref"],[244,52,237,50],[244,57,237,55],[244,62,237,60],[244,63,237,61],[244,67,237,65,"_node$ref"],[244,76,237,74],[244,77,237,75,"rngh"],[244,81,237,79],[244,83,237,81],[245,6,238,4],[245,13,238,11],[245,18,238,16],[246,4,239,2],[247,4,241,2],[247,11,241,9],[247,12,241,10],[247,13,241,11,"_Object$getPrototypeO"],[247,34,241,32],[247,37,241,35,"Object"],[247,43,241,41],[247,44,241,42,"getPrototypeOf"],[247,58,241,56],[247,59,241,57,"node"],[247,63,241,61],[247,68,241,66],[247,72,241,70],[247,76,241,74,"node"],[247,80,241,78],[247,85,241,83],[247,90,241,88],[247,91,241,89],[247,94,241,92],[247,99,241,97],[247,100,241,98],[247,103,241,101,"node"],[247,107,241,105],[247,108,241,106,"type"],[247,112,241,110],[247,113,241,111],[247,119,241,117],[247,123,241,121],[247,127,241,125,"_Object$getPrototypeO"],[247,148,241,146],[247,153,241,151],[247,158,241,156],[247,159,241,157],[247,162,241,160],[247,167,241,165],[247,168,241,166],[247,171,241,169,"_Object$getPrototypeO"],[247,192,241,190],[247,193,241,191,"name"],[247,197,241,195],[247,203,241,201],[247,213,241,211],[247,217,241,215,"RNSVGElements"],[247,230,241,228],[247,231,241,229,"has"],[247,234,241,232],[247,235,241,233,"node"],[247,239,241,237],[247,244,241,242],[247,248,241,246],[247,252,241,250,"node"],[247,256,241,254],[247,261,241,259],[247,266,241,264],[247,267,241,265],[247,270,241,268],[247,275,241,273],[247,276,241,274],[247,279,241,277],[247,280,241,278,"_node$type"],[247,290,241,288],[247,293,241,291,"node"],[247,297,241,295],[247,298,241,296,"type"],[247,302,241,300],[247,308,241,306],[247,312,241,310],[247,316,241,314,"_node$type"],[247,326,241,324],[247,331,241,329],[247,336,241,334],[247,337,241,335],[247,340,241,338],[247,345,241,343],[247,346,241,344],[247,349,241,347,"_node$type"],[247,359,241,357],[247,360,241,358,"displayName"],[247,371,241,369],[247,372,241,370],[248,2,242,0],[249,0,242,1],[249,3]],"functionMap":{"names":["<global>","isPointerInBounds","degToRad","coneToDeviation","calculateViewScale","tryExtractStylusData","tilt2spherical","spherical2tilt","isRNSVGElement","isRNSVGNode"],"mappings":"AAA;OCC;CDM;wBEE,kCF;+BGC,0CH;OIC;CJ6B;OKC;CLmD;AMK;CNgD;AOK;CP4D;OQY;CRG;OSM;CTU"},"hasCjsExports":false},"type":"js/module"}]}