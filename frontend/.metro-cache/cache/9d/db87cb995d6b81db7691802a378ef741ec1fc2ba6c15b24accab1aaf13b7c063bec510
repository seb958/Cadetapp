{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":33,"index":85}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":86},"end":{"line":5,"column":89,"index":175}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":176},"end":{"line":6,"column":62,"index":238}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":239},"end":{"line":7,"column":66,"index":305}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _egjsHammerjs = require(_dependencyMap[1], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _State = require(_dependencyMap[2], \"../State\");\n  var _constants = require(_dependencyMap[3], \"./constants\");\n  var _DiscreteGestureHandler = require(_dependencyMap[4], \"./DiscreteGestureHandler\");\n  var DiscreteGestureHandler = _interopDefault(_DiscreteGestureHandler);\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  class PressGestureHandler extends DiscreteGestureHandler.default {\n    initialEvent = null;\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Press;\n    }\n    shouldDelayTouches = true;\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [Hammer.default.INPUT_START]: _State.State.BEGAN,\n        [Hammer.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [Hammer.default.INPUT_END]: _State.State.END,\n        [Hammer.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      });\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(Object.assign({}, ev, {\n        eventType: Hammer.default.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent(Object.assign({}, ev, {\n              eventType: Hammer.default.INPUT_END,\n              isFinal: true\n            }));\n            // @ts-ignore -- this should explicitly support undefined\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent(Object.assign({}, ev, {\n            eventType: Hammer.default.INPUT_MOVE,\n            isFinal: false\n          }));\n        }\n      }\n    }\n    updateGestureConfig(_ref) {\n      let {\n          shouldActivateOnStart = false,\n          disallowInterruption = false,\n          shouldCancelWhenOutside = true,\n          minDurationMs = Number.NaN,\n          maxDist = Number.NaN,\n          minPointers = 1,\n          maxPointers = 1\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      return super.updateGestureConfig(Object.assign({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers\n      }, props));\n    }\n  }\n  var _default = PressGestureHandler;\n});","lineCount":164,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,8,1,13,"_excluded"],[4,17,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13],[8,11,1,13,"_interopDefault"],[8,27,1,13,"e"],[8,28,1,13],[9,4,1,13],[9,11,1,13,"e"],[9,12,1,13],[9,16,1,13,"e"],[9,17,1,13],[9,18,1,13,"__esModule"],[9,28,1,13],[9,31,1,13,"e"],[9,32,1,13],[10,6,1,13,"default"],[10,13,1,13],[10,15,1,13,"e"],[11,4,1,13],[12,2,1,13],[13,2,147,0,"Object"],[13,8,147,0],[13,9,147,0,"defineProperty"],[13,23,147,0],[13,24,147,0,"exports"],[13,31,147,0],[14,4,147,0,"enumerable"],[14,14,147,0],[15,4,147,0,"get"],[15,7,147,0],[15,18,147,0,"get"],[15,19,147,0],[16,6,147,0],[16,13,147,0,"_default"],[16,21,147,0],[17,4,147,0],[18,2,147,0],[19,2,147,35],[19,6,147,35,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[19,54,147,35],[19,57,147,35,"require"],[19,64,147,35],[19,65,147,35,"_dependencyMap"],[19,79,147,35],[20,2,147,35],[20,6,147,35,"_objectWithoutPropertiesLoose"],[20,35,147,35],[20,38,147,35,"_interopDefault"],[20,53,147,35],[20,54,147,35,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[20,102,147,35],[21,2,3,0],[21,6,3,0,"_egjsHammerjs"],[21,19,3,0],[21,22,3,0,"require"],[21,29,3,0],[21,30,3,0,"_dependencyMap"],[21,44,3,0],[22,2,3,0],[22,6,3,0,"Hammer"],[22,12,3,0],[22,15,3,0,"_interopDefault"],[22,30,3,0],[22,31,3,0,"_egjsHammerjs"],[22,44,3,0],[23,2,4,0],[23,6,4,0,"_State"],[23,12,4,0],[23,15,4,0,"require"],[23,22,4,0],[23,23,4,0,"_dependencyMap"],[23,37,4,0],[24,2,5,0],[24,6,5,0,"_constants"],[24,16,5,0],[24,19,5,0,"require"],[24,26,5,0],[24,27,5,0,"_dependencyMap"],[24,41,5,0],[25,2,6,0],[25,6,6,0,"_DiscreteGestureHandler"],[25,29,6,0],[25,32,6,0,"require"],[25,39,6,0],[25,40,6,0,"_dependencyMap"],[25,54,6,0],[26,2,6,0],[26,6,6,0,"DiscreteGestureHandler"],[26,28,6,0],[26,31,6,0,"_interopDefault"],[26,46,6,0],[26,47,6,0,"_DiscreteGestureHandler"],[26,70,6,0],[27,2,7,0],[27,6,7,0,"_utils"],[27,12,7,0],[27,15,7,0,"require"],[27,22,7,0],[27,23,7,0,"_dependencyMap"],[27,37,7,0],[28,2,8,0],[28,8,8,6,"PressGestureHandler"],[28,27,8,25],[28,36,8,34,"DiscreteGestureHandler"],[28,58,8,56],[28,59,8,56,"default"],[28,66,8,56],[28,67,8,57],[29,4,9,2,"initialEvent"],[29,16,9,14],[29,19,9,17],[29,23,9,21],[30,4,10,2],[30,8,10,6,"name"],[30,12,10,10,"name"],[30,13,10,10],[30,15,10,13],[31,6,11,4],[31,13,11,11],[31,20,11,18],[32,4,12,2],[33,4,13,2],[33,8,13,6,"minDurationMs"],[33,21,13,19,"minDurationMs"],[33,22,13,19],[33,24,13,22],[34,6,14,4],[35,6,15,4],[35,13,15,11],[35,17,15,11,"isnan"],[35,23,15,16],[35,24,15,16,"isnan"],[35,29,15,16],[35,31,15,17],[35,35,15,21],[35,36,15,22,"config"],[35,42,15,28],[35,43,15,29,"minDurationMs"],[35,56,15,42],[35,57,15,43],[35,60,15,46],[35,61,15,47],[35,64,15,50],[35,68,15,54],[35,69,15,55,"config"],[35,75,15,61],[35,76,15,62,"minDurationMs"],[35,89,15,75],[36,4,16,2],[37,4,17,2],[37,8,17,6,"maxDist"],[37,15,17,13,"maxDist"],[37,16,17,13],[37,18,17,16],[38,6,18,4],[38,13,18,11],[38,17,18,11,"isnan"],[38,23,18,16],[38,24,18,16,"isnan"],[38,29,18,16],[38,31,18,17],[38,35,18,21],[38,36,18,22,"config"],[38,42,18,28],[38,43,18,29,"maxDist"],[38,50,18,36],[38,51,18,37],[38,54,18,40],[38,55,18,41],[38,58,18,44],[38,62,18,48],[38,63,18,49,"config"],[38,69,18,55],[38,70,18,56,"maxDist"],[38,77,18,63],[39,4,19,2],[40,4,20,2],[40,8,20,6,"NativeGestureClass"],[40,26,20,24,"NativeGestureClass"],[40,27,20,24],[40,29,20,27],[41,6,21,4],[41,13,21,11,"Hammer"],[41,19,21,17],[41,20,21,17,"default"],[41,27,21,17],[41,28,21,18,"Press"],[41,33,21,23],[42,4,22,2],[43,4,23,2,"shouldDelayTouches"],[43,22,23,20],[43,25,23,23],[43,29,23,27],[44,4,24,2,"simulateCancelEvent"],[44,23,24,21,"simulateCancelEvent"],[44,24,24,22,"inputData"],[44,33,24,31],[44,35,24,33],[45,6,25,4],[46,6,26,4],[46,10,26,8],[46,11,26,9,"hasGestureFailed"],[46,27,26,25],[46,30,26,28],[46,34,26,32],[47,6,27,4],[47,10,27,8],[47,11,27,9,"cancelEvent"],[47,22,27,20],[47,23,27,21,"inputData"],[47,32,27,30],[47,33,27,31],[48,4,28,2],[49,4,29,2,"updateHasCustomActivationCriteria"],[49,37,29,35,"updateHasCustomActivationCriteria"],[49,38,29,36],[50,6,30,4,"shouldCancelWhenOutside"],[50,29,30,27],[51,6,31,4,"maxDistSq"],[52,4,32,2],[52,5,32,3],[52,7,32,5],[53,6,33,4],[53,13,33,11,"shouldCancelWhenOutside"],[53,36,33,34],[53,40,33,38],[53,41,33,39],[53,45,33,39,"isValidNumber"],[53,51,33,52],[53,52,33,52,"isValidNumber"],[53,65,33,52],[53,67,33,53,"maxDistSq"],[53,76,33,62],[53,77,33,63],[54,4,34,2],[55,4,35,2,"getState"],[55,12,35,10,"getState"],[55,13,35,11,"type"],[55,17,35,15],[55,19,35,17],[56,6,36,4],[56,13,36,11],[57,8,37,6],[57,9,37,7,"Hammer"],[57,15,37,13],[57,16,37,13,"default"],[57,23,37,13],[57,24,37,14,"INPUT_START"],[57,35,37,25],[57,38,37,28,"State"],[57,44,37,33],[57,45,37,33,"State"],[57,50,37,33],[57,51,37,34,"BEGAN"],[57,56,37,39],[58,8,38,6],[58,9,38,7,"Hammer"],[58,15,38,13],[58,16,38,13,"default"],[58,23,38,13],[58,24,38,14,"INPUT_MOVE"],[58,34,38,24],[58,37,38,27,"State"],[58,43,38,32],[58,44,38,32,"State"],[58,49,38,32],[58,50,38,33,"ACTIVE"],[58,56,38,39],[59,8,39,6],[59,9,39,7,"Hammer"],[59,15,39,13],[59,16,39,13,"default"],[59,23,39,13],[59,24,39,14,"INPUT_END"],[59,33,39,23],[59,36,39,26,"State"],[59,42,39,31],[59,43,39,31,"State"],[59,48,39,31],[59,49,39,32,"END"],[59,52,39,35],[60,8,40,6],[60,9,40,7,"Hammer"],[60,15,40,13],[60,16,40,13,"default"],[60,23,40,13],[60,24,40,14,"INPUT_CANCEL"],[60,36,40,26],[60,39,40,29,"State"],[60,45,40,34],[60,46,40,34,"State"],[60,51,40,34],[60,52,40,35,"CANCELLED"],[61,6,41,4],[61,7,41,5],[61,8,41,6,"type"],[61,12,41,10],[61,13,41,11],[62,4,42,2],[63,4,43,2,"getConfig"],[63,13,43,11,"getConfig"],[63,14,43,11],[63,16,43,14],[64,6,44,4],[64,10,44,8],[64,11,44,9],[64,15,44,13],[64,16,44,14,"hasCustomActivationCriteria"],[64,43,44,41],[64,45,44,43],[65,8,45,6],[66,8,46,6],[67,8,47,6],[67,15,47,13],[68,10,48,8,"shouldCancelWhenOutside"],[68,33,48,31],[68,35,48,33],[68,39,48,37],[69,10,49,8,"maxDistSq"],[69,19,49,17],[69,21,49,19],[70,8,50,6],[70,9,50,7],[71,6,51,4],[72,6,52,4],[72,13,52,11],[72,17,52,15],[72,18,52,16,"config"],[72,24,52,22],[73,4,53,2],[74,4,54,2,"getHammerConfig"],[74,19,54,17,"getHammerConfig"],[74,20,54,17],[74,22,54,20],[75,6,55,4],[75,13,55,4,"Object"],[75,19,55,4],[75,20,55,4,"assign"],[75,26,55,4],[75,31,56,9],[75,36,56,14],[75,37,56,15,"getHammerConfig"],[75,52,56,30],[75,53,56,31],[75,54,56,32],[76,8,57,6],[77,8,58,6,"time"],[77,12,58,10],[77,14,58,12],[77,18,58,16],[77,19,58,17,"minDurationMs"],[78,6,58,30],[79,4,60,2],[80,4,61,2,"onGestureActivated"],[80,22,61,20,"onGestureActivated"],[80,23,61,21,"ev"],[80,25,61,23],[80,27,61,25],[81,6,62,4],[81,10,62,8],[81,11,62,9,"onGestureStart"],[81,25,62,23],[81,26,62,24,"ev"],[81,28,62,26],[81,29,62,27],[82,4,63,2],[83,4,64,2,"shouldDelayTouchForEvent"],[83,28,64,26,"shouldDelayTouchForEvent"],[83,29,64,27],[84,6,65,4,"pointerType"],[85,4,66,2],[85,5,66,3],[85,7,66,5],[86,6,67,4],[87,6,68,4],[87,13,68,11],[87,17,68,15],[87,18,68,16,"shouldDelayTouches"],[87,36,68,34],[87,40,68,38,"pointerType"],[87,51,68,49],[87,56,68,54],[87,63,68,61],[88,4,69,2],[89,4,70,2,"onGestureStart"],[89,18,70,16,"onGestureStart"],[89,19,70,17,"ev"],[89,21,70,19],[89,23,70,21],[90,6,71,4],[90,10,71,8],[90,11,71,9,"isGestureRunning"],[90,27,71,25],[90,30,71,28],[90,34,71,32],[91,6,72,4,"clearTimeout"],[91,18,72,16],[91,19,72,17],[91,23,72,21],[91,24,72,22,"visualFeedbackTimer"],[91,43,72,41],[91,44,72,42],[92,6,73,4],[92,10,73,8],[92,11,73,9,"initialEvent"],[92,23,73,21],[92,26,73,24,"ev"],[92,28,73,26],[93,6,74,4],[93,10,74,8],[93,11,74,9,"visualFeedbackTimer"],[93,30,74,28],[93,33,74,31],[93,37,74,31,"fireAfterInterval"],[93,43,74,48],[93,44,74,48,"fireAfterInterval"],[93,61,74,48],[93,63,74,49],[93,69,74,55],[94,8,75,6],[94,12,75,10],[94,13,75,11,"sendGestureStartedEvent"],[94,36,75,34],[94,37,75,35],[94,41,75,39],[94,42,75,40,"initialEvent"],[94,54,75,52],[94,55,75,53],[95,8,76,6],[95,12,76,10],[95,13,76,11,"initialEvent"],[95,25,76,23],[95,28,76,26],[95,32,76,30],[96,6,77,4],[96,7,77,5],[96,9,77,7],[96,13,77,11],[96,14,77,12,"shouldDelayTouchForEvent"],[96,38,77,36],[96,39,77,37,"ev"],[96,41,77,39],[96,42,77,40],[96,46,77,44,"CONTENT_TOUCHES_DELAY"],[96,56,77,65],[96,57,77,65,"CONTENT_TOUCHES_DELAY"],[96,78,77,65],[96,79,77,66],[97,4,78,2],[98,4,79,2,"sendGestureStartedEvent"],[98,27,79,25,"sendGestureStartedEvent"],[98,28,79,26,"ev"],[98,30,79,28],[98,32,79,30],[99,6,80,4,"clearTimeout"],[99,18,80,16],[99,19,80,17],[99,23,80,21],[99,24,80,22,"visualFeedbackTimer"],[99,43,80,41],[99,44,80,42],[100,6,81,4],[100,10,81,8],[100,11,81,9,"visualFeedbackTimer"],[100,30,81,28],[100,33,81,31],[100,37,81,35],[101,6,82,4],[101,10,82,8],[101,11,82,9,"sendEvent"],[101,20,82,18],[101,21,82,18,"Object"],[101,27,82,18],[101,28,82,18,"assign"],[101,34,82,18],[101,39,83,9,"ev"],[101,41,83,11],[102,8,84,6,"eventType"],[102,17,84,15],[102,19,84,17,"Hammer"],[102,25,84,23],[102,26,84,23,"default"],[102,33,84,23],[102,34,84,24,"INPUT_MOVE"],[102,44,84,34],[103,8,85,6,"isFirst"],[103,15,85,13],[103,17,85,15],[104,6,85,19],[104,8,86,5],[104,9,86,6],[105,4,87,2],[106,4,88,2,"forceInvalidate"],[106,19,88,17,"forceInvalidate"],[106,20,88,18,"event"],[106,25,88,23],[106,27,88,25],[107,6,89,4],[107,11,89,9],[107,12,89,10,"forceInvalidate"],[107,27,89,25],[107,28,89,26,"event"],[107,33,89,31],[107,34,89,32],[108,6,90,4,"clearTimeout"],[108,18,90,16],[108,19,90,17],[108,23,90,21],[108,24,90,22,"visualFeedbackTimer"],[108,43,90,41],[108,44,90,42],[109,6,91,4],[109,10,91,8],[109,11,91,9,"visualFeedbackTimer"],[109,30,91,28],[109,33,91,31],[109,37,91,35],[110,6,92,4],[110,10,92,8],[110,11,92,9,"initialEvent"],[110,23,92,21],[110,26,92,24],[110,30,92,28],[111,4,93,2],[112,4,94,2,"onRawEvent"],[112,14,94,12,"onRawEvent"],[112,15,94,13,"ev"],[112,17,94,15],[112,19,94,17],[113,6,95,4],[113,11,95,9],[113,12,95,10,"onRawEvent"],[113,22,95,20],[113,23,95,21,"ev"],[113,25,95,23],[113,26,95,24],[114,6,96,4],[114,10,96,8],[114,14,96,12],[114,15,96,13,"isGestureRunning"],[114,31,96,29],[114,33,96,31],[115,8,97,6],[115,12,97,10,"ev"],[115,14,97,12],[115,15,97,13,"isFinal"],[115,22,97,20],[115,24,97,22],[116,10,98,8],[116,14,98,12,"timeout"],[116,21,98,19],[117,10,99,8],[117,14,99,12],[117,18,99,16],[117,19,99,17,"visualFeedbackTimer"],[117,38,99,36],[117,40,99,38],[118,12,100,10],[119,12,101,10],[120,12,102,10],[121,12,103,10,"timeout"],[121,19,103,17],[121,22,103,20,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[121,32,103,55],[121,33,103,55,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[121,68,103,55],[122,12,104,10],[122,16,104,14],[122,17,104,15,"sendGestureStartedEvent"],[122,40,104,38],[122,41,104,39],[122,45,104,43],[122,46,104,44,"initialEvent"],[122,58,104,56],[122,59,104,57],[123,12,105,10],[123,16,105,14],[123,17,105,15,"initialEvent"],[123,29,105,27],[123,32,105,30],[123,36,105,34],[124,10,106,8],[125,10,107,8],[125,14,107,8,"fireAfterInterval"],[125,20,107,25],[125,21,107,25,"fireAfterInterval"],[125,38,107,25],[125,40,107,26],[125,46,107,32],[126,12,108,10],[126,16,108,14],[126,17,108,15,"sendEvent"],[126,26,108,24],[126,27,108,24,"Object"],[126,33,108,24],[126,34,108,24,"assign"],[126,40,108,24],[126,45,109,15,"ev"],[126,47,109,17],[127,14,110,12,"eventType"],[127,23,110,21],[127,25,110,23,"Hammer"],[127,31,110,29],[127,32,110,29,"default"],[127,39,110,29],[127,40,110,30,"INPUT_END"],[127,49,110,39],[128,14,111,12,"isFinal"],[128,21,111,19],[128,23,111,21],[129,12,111,25],[129,14,112,11],[129,15,112,12],[130,12,113,10],[131,12,114,10],[131,16,114,14],[131,17,114,15,"onGestureEnded"],[131,31,114,29],[131,32,114,30],[131,33,114,31],[132,10,115,8],[132,11,115,9],[132,13,115,11,"timeout"],[132,20,115,18],[132,21,115,19],[133,8,116,6],[133,9,116,7],[133,15,116,13],[134,10,117,8],[134,14,117,12],[134,15,117,13,"sendEvent"],[134,24,117,22],[134,25,117,22,"Object"],[134,31,117,22],[134,32,117,22,"assign"],[134,38,117,22],[134,43,118,13,"ev"],[134,45,118,15],[135,12,119,10,"eventType"],[135,21,119,19],[135,23,119,21,"Hammer"],[135,29,119,27],[135,30,119,27,"default"],[135,37,119,27],[135,38,119,28,"INPUT_MOVE"],[135,48,119,38],[136,12,120,10,"isFinal"],[136,19,120,17],[136,21,120,19],[137,10,120,24],[137,12,121,9],[137,13,121,10],[138,8,122,6],[139,6,123,4],[140,4,124,2],[141,4,125,2,"updateGestureConfig"],[141,23,125,21,"updateGestureConfig"],[141,24,125,21,"_ref"],[141,28,125,21],[141,30,134,5],[142,6,134,5],[142,10,125,22],[143,10,126,4,"shouldActivateOnStart"],[143,31,126,25],[143,34,126,28],[143,39,126,33],[144,10,127,4,"disallowInterruption"],[144,30,127,24],[144,33,127,27],[144,38,127,32],[145,10,128,4,"shouldCancelWhenOutside"],[145,33,128,27],[145,36,128,30],[145,40,128,34],[146,10,129,4,"minDurationMs"],[146,23,129,17],[146,26,129,20,"Number"],[146,32,129,26],[146,33,129,27,"NaN"],[146,36,129,30],[147,10,130,4,"maxDist"],[147,17,130,11],[147,20,130,14,"Number"],[147,26,130,20],[147,27,130,21,"NaN"],[147,30,130,24],[148,10,131,4,"minPointers"],[148,21,131,15],[148,24,131,18],[148,25,131,19],[149,10,132,4,"maxPointers"],[149,21,132,15],[149,24,132,18],[150,8,134,2],[150,9,134,3],[150,12,134,3,"_ref"],[150,16,134,3],[151,8,133,7,"props"],[151,13,133,12],[151,20,133,12,"_objectWithoutPropertiesLoose"],[151,49,133,12],[151,50,133,12,"default"],[151,57,133,12],[151,59,133,12,"_ref"],[151,63,133,12],[151,65,133,12,"_excluded"],[151,74,133,12],[152,6,135,4],[152,13,135,11],[152,18,135,16],[152,19,135,17,"updateGestureConfig"],[152,38,135,36],[152,39,135,36,"Object"],[152,45,135,36],[152,46,135,36,"assign"],[152,52,135,36],[153,8,136,6,"shouldActivateOnStart"],[153,29,136,27],[154,8,137,6,"disallowInterruption"],[154,28,137,26],[155,8,138,6,"shouldCancelWhenOutside"],[155,31,138,29],[156,8,139,6,"minDurationMs"],[156,21,139,19],[157,8,140,6,"maxDist"],[157,15,140,13],[158,8,141,6,"minPointers"],[158,19,141,17],[159,8,142,6,"maxPointers"],[160,6,142,17],[160,9,143,9,"props"],[160,14,143,14],[160,15,144,5],[160,16,144,6],[161,4,145,2],[162,2,146,0],[163,2,147,0],[163,6,147,0,"_default"],[163,14,147,0],[163,17,147,15,"PressGestureHandler"],[163,36,147,34],[164,0,147,35],[164,3]],"functionMap":{"names":["<global>","PressGestureHandler","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","fireAfterInterval$argument_0","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA;ACO;ECE;GDE;EEC;GFG;EGC;GHE;EIC;GJE;EKE;GLI;EMC;GNK;EOC;GPO;EQC;GRU;ESC;GTM;EUC;GVE;EWC;GXK;EYC;iDCI;KDG;GZC;EcC;GdQ;EeC;GfK;EgBC;0BHa;SGQ;GhBS;EiBC;GjBoB;CDC"},"hasCjsExports":false},"type":"js/module"}]}