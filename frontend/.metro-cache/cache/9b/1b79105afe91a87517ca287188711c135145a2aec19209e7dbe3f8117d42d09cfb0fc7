{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":39,"index":146},"end":{"line":8,"column":64,"index":171}}],"key":"TIRD4n0vm1viGfriWDBtxYTyDXo=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":53,"index":228},"end":{"line":10,"column":88,"index":263}}],"key":"eJDHGrqD5QkVDEQGLi3BxJN4OyA=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":13,"index":280},"end":{"line":12,"column":31,"index":298}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[0], \"@egjs/hammerjs\"));\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[1], \"./DiscreteGestureHandler\"));\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class TapGestureHandler extends _DiscreteGestureHandler.default {\n    constructor(...args) {\n      super(...args);\n      _defineProperty(this, \"_shouldFireEndEvent\", null);\n      _defineProperty(this, \"_timer\", void 0);\n      _defineProperty(this, \"_multiTapTimer\", void 0);\n      _defineProperty(this, \"onSuccessfulTap\", ev => {\n        if (this._getPendingGestures().length) {\n          this._shouldFireEndEvent = ev;\n          return;\n        }\n        if (ev.eventType === _hammerjs.default.INPUT_END) {\n          this.sendEvent({\n            ...ev,\n            eventType: _hammerjs.default.INPUT_MOVE\n          });\n        } // When handler gets activated it will turn into State.END immediately.\n\n        this.sendEvent({\n          ...ev,\n          isFinal: true\n        });\n        this.onGestureEnded(ev);\n      });\n    }\n\n    // TODO unused?\n    get name() {\n      return 'tap';\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Tap;\n    }\n    get maxDelayMs() {\n      // @ts-ignore TODO(TS) trace down config\n      return (0, _utils.isnan)(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n    }\n    simulateCancelEvent(inputData) {\n      if (this.isGestureRunning) {\n        this.cancelEvent(inputData);\n      }\n    }\n    onGestureActivated(ev) {\n      if (this.isGestureRunning) {\n        this.onSuccessfulTap(ev);\n      }\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev); // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n\n      if (!this.hasGestureFailed && !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name); // @ts-ignore TODO(TS) trace down config\n\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n      if (ev.isFinal && ev.maxPointers > 1) {\n        setTimeout(() => {\n          // Handle case where one finger presses slightly\n          // after the first finger on a multi-tap event\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n      if (this.hasGestureFailed) {\n        return;\n      } // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n\n      if (ev.isFinal) {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (ev.maxPointers > 1) {\n          setTimeout(() => {\n            if (this.isGestureRunning) {\n              this.cancelEvent(ev);\n            }\n          });\n        } // Clear last timer\n\n        clearTimeout(this._timer); // Create time out for multi-taps.\n\n        this._timer = setTimeout(() => {\n          this.hasGestureFailed = true;\n          this.cancelEvent(ev);\n        }, this.maxDelayMs);\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name); // @ts-ignore TODO(TS) trace down config\n\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        event: this.name,\n        // @ts-ignore TODO(TS) trace down config\n        taps: (0, _utils.isnan)(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n        interval: this.maxDelayMs,\n        time:\n        // @ts-ignore TODO(TS) trace down config\n        (0, _utils.isnan)(this.config.maxDurationMs) || this.config.maxDurationMs == null ? 250 :\n        // @ts-ignore TODO(TS) trace down config\n        this.config.maxDurationMs\n      };\n    }\n    updateGestureConfig({\n      shouldCancelWhenOutside = true,\n      maxDeltaX = Number.NaN,\n      maxDeltaY = Number.NaN,\n      numberOfTaps = 1,\n      minDurationMs = 525,\n      maxDelayMs = Number.NaN,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n      maxDurationMs = Number.NaN,\n      maxDist = 2,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldCancelWhenOutside,\n        numberOfTaps,\n        maxDeltaX,\n        maxDeltaY,\n        minDurationMs,\n        maxDelayMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n    onGestureEnded(...props) {\n      clearTimeout(this._timer); // @ts-ignore TODO(TS) check how onGestureEnded works\n\n      super.onGestureEnded(...props);\n    }\n    onWaitingEnded(_gesture) {\n      if (this._shouldFireEndEvent) {\n        this.onSuccessfulTap(this._shouldFireEndEvent);\n        this._shouldFireEndEvent = null;\n      }\n    }\n  }\n  var _default = TapGestureHandler;\n  exports.default = _default;\n});","lineCount":188,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,8,0],[8,6,8,4,"_hammerjs"],[8,15,8,13],[8,18,8,16,"_interopRequireDefault"],[8,40,8,38],[8,41,8,39,"require"],[8,48,8,46],[8,49,8,46,"_dependencyMap"],[8,63,8,46],[8,84,8,63],[8,85,8,64],[8,86,8,65],[9,2,10,0],[9,6,10,4,"_DiscreteGestureHandler"],[9,29,10,27],[9,32,10,30,"_interopRequireDefault"],[9,54,10,52],[9,55,10,53,"require"],[9,62,10,60],[9,63,10,60,"_dependencyMap"],[9,77,10,60],[9,108,10,87],[9,109,10,88],[9,110,10,89],[10,2,12,0],[10,6,12,4,"_utils"],[10,12,12,10],[10,15,12,13,"require"],[10,22,12,20],[10,23,12,20,"_dependencyMap"],[10,37,12,20],[10,51,12,30],[10,52,12,31],[11,2,14,0],[11,11,14,9,"_interopRequireDefault"],[11,33,14,31,"_interopRequireDefault"],[11,34,14,32,"obj"],[11,37,14,35],[11,39,14,37],[12,4,14,39],[12,11,14,46,"obj"],[12,14,14,49],[12,18,14,53,"obj"],[12,21,14,56],[12,22,14,57,"__esModule"],[12,32,14,67],[12,35,14,70,"obj"],[12,38,14,73],[12,41,14,76],[13,6,14,78,"default"],[13,13,14,85],[13,15,14,87,"obj"],[14,4,14,91],[14,5,14,92],[15,2,14,94],[16,2,16,0],[16,11,16,9,"_defineProperty"],[16,26,16,24,"_defineProperty"],[16,27,16,25,"obj"],[16,30,16,28],[16,32,16,30,"key"],[16,35,16,33],[16,37,16,35,"value"],[16,42,16,40],[16,44,16,42],[17,4,16,44],[17,8,16,48,"key"],[17,11,16,51],[17,15,16,55,"obj"],[17,18,16,58],[17,20,16,60],[18,6,16,62,"Object"],[18,12,16,68],[18,13,16,69,"defineProperty"],[18,27,16,83],[18,28,16,84,"obj"],[18,31,16,87],[18,33,16,89,"key"],[18,36,16,92],[18,38,16,94],[19,8,16,96,"value"],[19,13,16,101],[19,15,16,103,"value"],[19,20,16,108],[20,8,16,110,"enumerable"],[20,18,16,120],[20,20,16,122],[20,24,16,126],[21,8,16,128,"configurable"],[21,20,16,140],[21,22,16,142],[21,26,16,146],[22,8,16,148,"writable"],[22,16,16,156],[22,18,16,158],[23,6,16,163],[23,7,16,164],[23,8,16,165],[24,4,16,167],[24,5,16,168],[24,11,16,174],[25,6,16,176,"obj"],[25,9,16,179],[25,10,16,180,"key"],[25,13,16,183],[25,14,16,184],[25,17,16,187,"value"],[25,22,16,192],[26,4,16,194],[27,4,16,196],[27,11,16,203,"obj"],[27,14,16,206],[28,2,16,208],[29,2,18,0],[29,8,18,6,"TapGestureHandler"],[29,25,18,23],[29,34,18,32,"_DiscreteGestureHandler"],[29,57,18,55],[29,58,18,56,"default"],[29,65,18,63],[29,66,18,64],[30,4,19,2,"constructor"],[30,15,19,13,"constructor"],[30,16,19,14],[30,19,19,17,"args"],[30,23,19,21],[30,25,19,23],[31,6,20,4],[31,11,20,9],[31,12,20,10],[31,15,20,13,"args"],[31,19,20,17],[31,20,20,18],[32,6,22,4,"_defineProperty"],[32,21,22,19],[32,22,22,20],[32,26,22,24],[32,28,22,26],[32,49,22,47],[32,51,22,49],[32,55,22,53],[32,56,22,54],[33,6,24,4,"_defineProperty"],[33,21,24,19],[33,22,24,20],[33,26,24,24],[33,28,24,26],[33,36,24,34],[33,38,24,36],[33,43,24,41],[33,44,24,42],[33,45,24,43],[34,6,26,4,"_defineProperty"],[34,21,26,19],[34,22,26,20],[34,26,26,24],[34,28,26,26],[34,44,26,42],[34,46,26,44],[34,51,26,49],[34,52,26,50],[34,53,26,51],[35,6,28,4,"_defineProperty"],[35,21,28,19],[35,22,28,20],[35,26,28,24],[35,28,28,26],[35,45,28,43],[35,47,28,45,"ev"],[35,49,28,47],[35,53,28,51],[36,8,29,6],[36,12,29,10],[36,16,29,14],[36,17,29,15,"_getPendingGestures"],[36,36,29,34],[36,37,29,35],[36,38,29,36],[36,39,29,37,"length"],[36,45,29,43],[36,47,29,45],[37,10,30,8],[37,14,30,12],[37,15,30,13,"_shouldFireEndEvent"],[37,34,30,32],[37,37,30,35,"ev"],[37,39,30,37],[38,10,31,8],[39,8,32,6],[40,8,34,6],[40,12,34,10,"ev"],[40,14,34,12],[40,15,34,13,"eventType"],[40,24,34,22],[40,29,34,27,"_hammerjs"],[40,38,34,36],[40,39,34,37,"default"],[40,46,34,44],[40,47,34,45,"INPUT_END"],[40,56,34,54],[40,58,34,56],[41,10,35,8],[41,14,35,12],[41,15,35,13,"sendEvent"],[41,24,35,22],[41,25,35,23],[42,12,35,25],[42,15,35,28,"ev"],[42,17,35,30],[43,12,36,10,"eventType"],[43,21,36,19],[43,23,36,21,"_hammerjs"],[43,32,36,30],[43,33,36,31,"default"],[43,40,36,38],[43,41,36,39,"INPUT_MOVE"],[44,10,37,8],[44,11,37,9],[44,12,37,10],[45,8,38,6],[45,9,38,7],[45,10,38,8],[47,8,41,6],[47,12,41,10],[47,13,41,11,"sendEvent"],[47,22,41,20],[47,23,41,21],[48,10,41,23],[48,13,41,26,"ev"],[48,15,41,28],[49,10,42,8,"isFinal"],[49,17,42,15],[49,19,42,17],[50,8,43,6],[50,9,43,7],[50,10,43,8],[51,8,44,6],[51,12,44,10],[51,13,44,11,"onGestureEnded"],[51,27,44,25],[51,28,44,26,"ev"],[51,30,44,28],[51,31,44,29],[52,6,45,4],[52,7,45,5],[52,8,45,6],[53,4,46,2],[55,4,48,2],[56,4,49,2],[56,8,49,6,"name"],[56,12,49,10,"name"],[56,13,49,10],[56,15,49,13],[57,6,50,4],[57,13,50,11],[57,18,50,16],[58,4,51,2],[59,4,53,2],[59,8,53,6,"NativeGestureClass"],[59,26,53,24,"NativeGestureClass"],[59,27,53,24],[59,29,53,27],[60,6,54,4],[60,13,54,11,"_hammerjs"],[60,22,54,20],[60,23,54,21,"default"],[60,30,54,28],[60,31,54,29,"Tap"],[60,34,54,32],[61,4,55,2],[62,4,57,2],[62,8,57,6,"maxDelayMs"],[62,18,57,16,"maxDelayMs"],[62,19,57,16],[62,21,57,19],[63,6,58,4],[64,6,59,4],[64,13,59,11],[64,14,59,12],[64,15,59,13],[64,17,59,15,"_utils"],[64,23,59,21],[64,24,59,22,"isnan"],[64,29,59,27],[64,31,59,29],[64,35,59,33],[64,36,59,34,"config"],[64,42,59,40],[64,43,59,41,"maxDelayMs"],[64,53,59,51],[64,54,59,52],[64,57,59,55],[64,60,59,58],[64,63,59,61],[64,67,59,65],[64,68,59,66,"config"],[64,74,59,72],[64,75,59,73,"maxDelayMs"],[64,85,59,83],[65,4,60,2],[66,4,62,2,"simulateCancelEvent"],[66,23,62,21,"simulateCancelEvent"],[66,24,62,22,"inputData"],[66,33,62,31],[66,35,62,33],[67,6,63,4],[67,10,63,8],[67,14,63,12],[67,15,63,13,"isGestureRunning"],[67,31,63,29],[67,33,63,31],[68,8,64,6],[68,12,64,10],[68,13,64,11,"cancelEvent"],[68,24,64,22],[68,25,64,23,"inputData"],[68,34,64,32],[68,35,64,33],[69,6,65,4],[70,4,66,2],[71,4,68,2,"onGestureActivated"],[71,22,68,20,"onGestureActivated"],[71,23,68,21,"ev"],[71,25,68,23],[71,27,68,25],[72,6,69,4],[72,10,69,8],[72,14,69,12],[72,15,69,13,"isGestureRunning"],[72,31,69,29],[72,33,69,31],[73,8,70,6],[73,12,70,10],[73,13,70,11,"onSuccessfulTap"],[73,28,70,26],[73,29,70,27,"ev"],[73,31,70,29],[73,32,70,30],[74,6,71,4],[75,4,72,2],[76,4,74,2,"onRawEvent"],[76,14,74,12,"onRawEvent"],[76,15,74,13,"ev"],[76,17,74,15],[76,19,74,17],[77,6,75,4],[77,11,75,9],[77,12,75,10,"onRawEvent"],[77,22,75,20],[77,23,75,21,"ev"],[77,25,75,23],[77,26,75,24],[77,27,75,25],[77,28,75,26],[79,6,77,4],[79,10,77,8],[79,11,77,9],[79,15,77,13],[79,16,77,14,"hasGestureFailed"],[79,32,77,30],[79,36,77,34],[79,37,77,35],[79,41,77,39],[79,42,77,40,"isGestureRunning"],[79,58,77,56],[80,6,77,60],[81,6,78,4],[81,7,78,5,"ev"],[81,9,78,7],[81,10,78,8,"isFinal"],[81,17,78,15],[81,19,78,17],[82,8,79,6],[83,8,80,6],[83,14,80,12,"gesture"],[83,21,80,19],[83,24,80,22],[83,28,80,26],[83,29,80,27,"hammer"],[83,35,80,33],[83,36,80,34,"get"],[83,39,80,37],[83,40,80,38],[83,44,80,42],[83,45,80,43,"name"],[83,49,80,47],[83,50,80,48],[83,51,80,49],[83,52,80,50],[85,8,82,6],[85,12,82,10,"gesture"],[85,19,82,17],[85,20,82,18,"options"],[85,27,82,25],[85,28,82,26,"enable"],[85,34,82,32],[85,35,82,33,"gesture"],[85,42,82,40],[85,44,82,42,"ev"],[85,46,82,44],[85,47,82,45],[85,49,82,47],[86,10,83,8,"clearTimeout"],[86,22,83,20],[86,23,83,21],[86,27,83,25],[86,28,83,26,"_multiTapTimer"],[86,42,83,40],[86,43,83,41],[87,10,84,8],[87,14,84,12],[87,15,84,13,"onStart"],[87,22,84,20],[87,23,84,21,"ev"],[87,25,84,23],[87,26,84,24],[88,10,85,8],[88,14,85,12],[88,15,85,13,"sendEvent"],[88,24,85,22],[88,25,85,23,"ev"],[88,27,85,25],[88,28,85,26],[89,8,86,6],[90,6,87,4],[91,6,89,4],[91,10,89,8,"ev"],[91,12,89,10],[91,13,89,11,"isFinal"],[91,20,89,18],[91,24,89,22,"ev"],[91,26,89,24],[91,27,89,25,"maxPointers"],[91,38,89,36],[91,41,89,39],[91,42,89,40],[91,44,89,42],[92,8,90,6,"setTimeout"],[92,18,90,16],[92,19,90,17],[92,25,90,23],[93,10,91,8],[94,10,92,8],[95,10,93,8],[95,14,93,12],[95,18,93,16],[95,19,93,17,"isGestureRunning"],[95,35,93,33],[95,37,93,35],[96,12,94,10],[96,16,94,14],[96,17,94,15,"cancelEvent"],[96,28,94,26],[96,29,94,27,"ev"],[96,31,94,29],[96,32,94,30],[97,10,95,8],[98,8,96,6],[98,9,96,7],[98,10,96,8],[99,6,97,4],[100,6,99,4],[100,10,99,8],[100,14,99,12],[100,15,99,13,"hasGestureFailed"],[100,31,99,29],[100,33,99,31],[101,8,100,6],[102,6,101,4],[102,7,101,5],[102,8,101,6],[103,6,102,4],[105,6,105,4],[105,10,105,8,"ev"],[105,12,105,10],[105,13,105,11,"isFinal"],[105,20,105,18],[105,22,105,20],[106,8,106,6],[107,8,107,6],[108,8,108,6],[108,12,108,10,"ev"],[108,14,108,12],[108,15,108,13,"maxPointers"],[108,26,108,24],[108,29,108,27],[108,30,108,28],[108,32,108,30],[109,10,109,8,"setTimeout"],[109,20,109,18],[109,21,109,19],[109,27,109,25],[110,12,110,10],[110,16,110,14],[110,20,110,18],[110,21,110,19,"isGestureRunning"],[110,37,110,35],[110,39,110,37],[111,14,111,12],[111,18,111,16],[111,19,111,17,"cancelEvent"],[111,30,111,28],[111,31,111,29,"ev"],[111,33,111,31],[111,34,111,32],[112,12,112,10],[113,10,113,8],[113,11,113,9],[113,12,113,10],[114,8,114,6],[114,9,114,7],[114,10,114,8],[116,8,117,6,"clearTimeout"],[116,20,117,18],[116,21,117,19],[116,25,117,23],[116,26,117,24,"_timer"],[116,32,117,30],[116,33,117,31],[116,34,117,32],[116,35,117,33],[118,8,119,6],[118,12,119,10],[118,13,119,11,"_timer"],[118,19,119,17],[118,22,119,20,"setTimeout"],[118,32,119,30],[118,33,119,31],[118,39,119,37],[119,10,120,8],[119,14,120,12],[119,15,120,13,"hasGestureFailed"],[119,31,120,29],[119,34,120,32],[119,38,120,36],[120,10,121,8],[120,14,121,12],[120,15,121,13,"cancelEvent"],[120,26,121,24],[120,27,121,25,"ev"],[120,29,121,27],[120,30,121,28],[121,8,122,6],[121,9,122,7],[121,11,122,9],[121,15,122,13],[121,16,122,14,"maxDelayMs"],[121,26,122,24],[121,27,122,25],[122,6,123,4],[122,7,123,5],[122,13,123,11],[122,17,123,15],[122,18,123,16],[122,22,123,20],[122,23,123,21,"hasGestureFailed"],[122,39,123,37],[122,43,123,41],[122,44,123,42],[122,48,123,46],[122,49,123,47,"isGestureRunning"],[122,65,123,63],[122,67,123,65],[123,8,124,6],[124,8,125,6],[124,14,125,12,"gesture"],[124,21,125,19],[124,24,125,22],[124,28,125,26],[124,29,125,27,"hammer"],[124,35,125,33],[124,36,125,34,"get"],[124,39,125,37],[124,40,125,38],[124,44,125,42],[124,45,125,43,"name"],[124,49,125,47],[124,50,125,48],[124,51,125,49],[124,52,125,50],[126,8,127,6],[126,12,127,10,"gesture"],[126,19,127,17],[126,20,127,18,"options"],[126,27,127,25],[126,28,127,26,"enable"],[126,34,127,32],[126,35,127,33,"gesture"],[126,42,127,40],[126,44,127,42,"ev"],[126,46,127,44],[126,47,127,45],[126,49,127,47],[127,10,128,8,"clearTimeout"],[127,22,128,20],[127,23,128,21],[127,27,128,25],[127,28,128,26,"_multiTapTimer"],[127,42,128,40],[127,43,128,41],[128,10,129,8],[128,14,129,12],[128,15,129,13,"onStart"],[128,22,129,20],[128,23,129,21,"ev"],[128,25,129,23],[128,26,129,24],[129,10,130,8],[129,14,130,12],[129,15,130,13,"sendEvent"],[129,24,130,22],[129,25,130,23,"ev"],[129,27,130,25],[129,28,130,26],[130,8,131,6],[131,6,132,4],[132,4,133,2],[133,4,135,2,"getHammerConfig"],[133,19,135,17,"getHammerConfig"],[133,20,135,17],[133,22,135,20],[134,6,136,4],[134,13,136,11],[135,8,136,13],[135,11,136,16],[135,16,136,21],[135,17,136,22,"getHammerConfig"],[135,32,136,37],[135,33,136,38],[135,34,136,39],[136,8,137,6,"event"],[136,13,137,11],[136,15,137,13],[136,19,137,17],[136,20,137,18,"name"],[136,24,137,22],[137,8,138,6],[138,8,139,6,"taps"],[138,12,139,10],[138,14,139,12],[138,15,139,13],[138,16,139,14],[138,18,139,16,"_utils"],[138,24,139,22],[138,25,139,23,"isnan"],[138,30,139,28],[138,32,139,30],[138,36,139,34],[138,37,139,35,"config"],[138,43,139,41],[138,44,139,42,"numberOfTaps"],[138,56,139,54],[138,57,139,55],[138,60,139,58],[138,61,139,59],[138,64,139,62],[138,68,139,66],[138,69,139,67,"config"],[138,75,139,73],[138,76,139,74,"numberOfTaps"],[138,88,139,86],[139,8,140,6,"interval"],[139,16,140,14],[139,18,140,16],[139,22,140,20],[139,23,140,21,"maxDelayMs"],[139,33,140,31],[140,8,141,6,"time"],[140,12,141,10],[141,8,141,12],[142,8,142,6],[142,9,142,7],[142,10,142,8],[142,12,142,10,"_utils"],[142,18,142,16],[142,19,142,17,"isnan"],[142,24,142,22],[142,26,142,24],[142,30,142,28],[142,31,142,29,"config"],[142,37,142,35],[142,38,142,36,"maxDurationMs"],[142,51,142,49],[142,52,142,50],[142,56,142,54],[142,60,142,58],[142,61,142,59,"config"],[142,67,142,65],[142,68,142,66,"maxDurationMs"],[142,81,142,79],[142,85,142,83],[142,89,142,87],[142,92,142,90],[142,95,142,93],[143,8,142,96],[144,8,143,6],[144,12,143,10],[144,13,143,11,"config"],[144,19,143,17],[144,20,143,18,"maxDurationMs"],[145,6,144,4],[145,7,144,5],[146,4,145,2],[147,4,147,2,"updateGestureConfig"],[147,23,147,21,"updateGestureConfig"],[147,24,147,22],[148,6,148,4,"shouldCancelWhenOutside"],[148,29,148,27],[148,32,148,30],[148,36,148,34],[149,6,149,4,"maxDeltaX"],[149,15,149,13],[149,18,149,16,"Number"],[149,24,149,22],[149,25,149,23,"NaN"],[149,28,149,26],[150,6,150,4,"maxDeltaY"],[150,15,150,13],[150,18,150,16,"Number"],[150,24,150,22],[150,25,150,23,"NaN"],[150,28,150,26],[151,6,151,4,"numberOfTaps"],[151,18,151,16],[151,21,151,19],[151,22,151,20],[152,6,152,4,"minDurationMs"],[152,19,152,17],[152,22,152,20],[152,25,152,23],[153,6,153,4,"maxDelayMs"],[153,16,153,14],[153,19,153,17,"Number"],[153,25,153,23],[153,26,153,24,"NaN"],[153,29,153,27],[154,6,154,4],[155,6,155,4,"maxDurationMs"],[155,19,155,17],[155,22,155,20,"Number"],[155,28,155,26],[155,29,155,27,"NaN"],[155,32,155,30],[156,6,156,4,"maxDist"],[156,13,156,11],[156,16,156,14],[156,17,156,15],[157,6,157,4,"minPointers"],[157,17,157,15],[157,20,157,18],[157,21,157,19],[158,6,158,4,"maxPointers"],[158,17,158,15],[158,20,158,18],[158,21,158,19],[159,6,159,4],[159,9,159,7,"props"],[160,4,160,2],[160,5,160,3],[160,7,160,5],[161,6,161,4],[161,13,161,11],[161,18,161,16],[161,19,161,17,"updateGestureConfig"],[161,38,161,36],[161,39,161,37],[162,8,162,6,"shouldCancelWhenOutside"],[162,31,162,29],[163,8,163,6,"numberOfTaps"],[163,20,163,18],[164,8,164,6,"maxDeltaX"],[164,17,164,15],[165,8,165,6,"maxDeltaY"],[165,17,165,15],[166,8,166,6,"minDurationMs"],[166,21,166,19],[167,8,167,6,"maxDelayMs"],[167,18,167,16],[168,8,168,6,"maxDist"],[168,15,168,13],[169,8,169,6,"minPointers"],[169,19,169,17],[170,8,170,6,"maxPointers"],[170,19,170,17],[171,8,171,6],[171,11,171,9,"props"],[172,6,172,4],[172,7,172,5],[172,8,172,6],[173,4,173,2],[174,4,175,2,"onGestureEnded"],[174,18,175,16,"onGestureEnded"],[174,19,175,17],[174,22,175,20,"props"],[174,27,175,25],[174,29,175,27],[175,6,176,4,"clearTimeout"],[175,18,176,16],[175,19,176,17],[175,23,176,21],[175,24,176,22,"_timer"],[175,30,176,28],[175,31,176,29],[175,32,176,30],[175,33,176,31],[177,6,178,4],[177,11,178,9],[177,12,178,10,"onGestureEnded"],[177,26,178,24],[177,27,178,25],[177,30,178,28,"props"],[177,35,178,33],[177,36,178,34],[178,4,179,2],[179,4,181,2,"onWaitingEnded"],[179,18,181,16,"onWaitingEnded"],[179,19,181,17,"_gesture"],[179,27,181,25],[179,29,181,27],[180,6,182,4],[180,10,182,8],[180,14,182,12],[180,15,182,13,"_shouldFireEndEvent"],[180,34,182,32],[180,36,182,34],[181,8,183,6],[181,12,183,10],[181,13,183,11,"onSuccessfulTap"],[181,28,183,26],[181,29,183,27],[181,33,183,31],[181,34,183,32,"_shouldFireEndEvent"],[181,53,183,51],[181,54,183,52],[182,8,184,6],[182,12,184,10],[182,13,184,11,"_shouldFireEndEvent"],[182,32,184,30],[182,35,184,33],[182,39,184,37],[183,6,185,4],[184,4,186,2],[185,2,188,0],[186,2,190,0],[186,6,190,4,"_default"],[186,14,190,12],[186,17,190,15,"TapGestureHandler"],[186,34,190,32],[187,2,191,0,"exports"],[187,9,191,7],[187,10,191,8,"default"],[187,17,191,15],[187,20,191,18,"_default"],[187,28,191,26],[188,0,191,27],[188,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_defineProperty","TapGestureHandler","constructor","_defineProperty$argument_2","get__name","get__NativeGestureClass","get__maxDelayMs","simulateCancelEvent","onGestureActivated","onRawEvent","setTimeout$argument_0","getHammerConfig","updateGestureConfig","onGestureEnded","onWaitingEnded"],"mappings":"AAA;ACa,+FD;AEE,iNF;AGE;ECC;6CCS;KDiB;GDC;EGG;GHE;EIE;GJE;EKE;GLG;EME;GNI;EOE;GPI;EQE;iBCgB;ODM;mBCa;SDI;+BCM;ODG;GRW;EUE;GVU;EWE;GX0B;EYE;GZI;EaE;GbK;CHE"},"hasCjsExports":true},"type":"js/module"}]}