{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":39,"index":145},"end":{"line":7,"column":64,"index":170}}],"key":"TIRD4n0vm1viGfriWDBtxYTyDXo=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":53,"index":226},"end":{"line":8,"column":88,"index":261}}],"key":"eJDHGrqD5QkVDEQGLi3BxJN4OyA=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":13,"index":277},"end":{"line":9,"column":31,"index":295}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[0], \"@egjs/hammerjs\"));\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[1], \"./DiscreteGestureHandler\"));\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  class TapGestureHandler extends _DiscreteGestureHandler.default {\n    _shouldFireEndEvent = null;\n    // TODO unused?\n    get name() {\n      return 'tap';\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Tap;\n    }\n    get maxDelayMs() {\n      // @ts-ignore TODO(TS) trace down config\n      return (0, _utils.isnan)(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n    }\n    simulateCancelEvent(inputData) {\n      if (this.isGestureRunning) {\n        this.cancelEvent(inputData);\n      }\n    }\n    onGestureActivated(ev) {\n      if (this.isGestureRunning) {\n        this.onSuccessfulTap(ev);\n      }\n    }\n    onSuccessfulTap = ev => {\n      if (this._getPendingGestures().length) {\n        this._shouldFireEndEvent = ev;\n        return;\n      }\n      if (ev.eventType === _hammerjs.default.INPUT_END) {\n        this.sendEvent({\n          ...ev,\n          eventType: _hammerjs.default.INPUT_MOVE\n        });\n      }\n      // When handler gets activated it will turn into State.END immediately.\n      this.sendEvent({\n        ...ev,\n        isFinal: true\n      });\n      this.onGestureEnded(ev);\n    };\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n\n      // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n      if (!this.hasGestureFailed && !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore TODO(TS) trace down config\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n      if (ev.isFinal && ev.maxPointers > 1) {\n        setTimeout(() => {\n          // Handle case where one finger presses slightly\n          // after the first finger on a multi-tap event\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n      if (this.hasGestureFailed) {\n        return;\n      }\n      // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n      if (ev.isFinal) {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (ev.maxPointers > 1) {\n          setTimeout(() => {\n            if (this.isGestureRunning) {\n              this.cancelEvent(ev);\n            }\n          });\n        }\n\n        // Clear last timer\n        clearTimeout(this._timer);\n        // Create time out for multi-taps.\n        this._timer = setTimeout(() => {\n          this.hasGestureFailed = true;\n          this.cancelEvent(ev);\n        }, this.maxDelayMs);\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore TODO(TS) trace down config\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        event: this.name,\n        // @ts-ignore TODO(TS) trace down config\n        taps: (0, _utils.isnan)(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n        interval: this.maxDelayMs,\n        time:\n        // @ts-ignore TODO(TS) trace down config\n        (0, _utils.isnan)(this.config.maxDurationMs) || this.config.maxDurationMs == null ? 250 :\n        // @ts-ignore TODO(TS) trace down config\n        this.config.maxDurationMs\n      };\n    }\n    updateGestureConfig({\n      shouldCancelWhenOutside = true,\n      maxDeltaX = Number.NaN,\n      maxDeltaY = Number.NaN,\n      numberOfTaps = 1,\n      minDurationMs = 525,\n      maxDelayMs = Number.NaN,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n      maxDurationMs = Number.NaN,\n      maxDist = 2,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldCancelWhenOutside,\n        numberOfTaps,\n        maxDeltaX,\n        maxDeltaY,\n        minDurationMs,\n        maxDelayMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n    onGestureEnded(...props) {\n      clearTimeout(this._timer);\n      // @ts-ignore TODO(TS) check how onGestureEnded works\n      super.onGestureEnded(...props);\n    }\n    onWaitingEnded(_gesture) {\n      if (this._shouldFireEndEvent) {\n        this.onSuccessfulTap(this._shouldFireEndEvent);\n        this._shouldFireEndEvent = null;\n      }\n    }\n  }\n  var _default = exports.default = TapGestureHandler;\n});","lineCount":170,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,7,0],[8,6,7,4,"_hammerjs"],[8,15,7,13],[8,18,7,16,"_interopRequireDefault"],[8,40,7,38],[8,41,7,39,"require"],[8,48,7,46],[8,49,7,46,"_dependencyMap"],[8,63,7,46],[8,84,7,63],[8,85,7,64],[8,86,7,65],[9,2,8,0],[9,6,8,4,"_DiscreteGestureHandler"],[9,29,8,27],[9,32,8,30,"_interopRequireDefault"],[9,54,8,52],[9,55,8,53,"require"],[9,62,8,60],[9,63,8,60,"_dependencyMap"],[9,77,8,60],[9,108,8,87],[9,109,8,88],[9,110,8,89],[10,2,9,0],[10,6,9,4,"_utils"],[10,12,9,10],[10,15,9,13,"require"],[10,22,9,20],[10,23,9,20,"_dependencyMap"],[10,37,9,20],[10,51,9,30],[10,52,9,31],[11,2,10,0],[11,11,10,9,"_interopRequireDefault"],[11,33,10,31,"_interopRequireDefault"],[11,34,10,32,"e"],[11,35,10,33],[11,37,10,35],[12,4,10,37],[12,11,10,44,"e"],[12,12,10,45],[12,16,10,49,"e"],[12,17,10,50],[12,18,10,51,"__esModule"],[12,28,10,61],[12,31,10,64,"e"],[12,32,10,65],[12,35,10,68],[13,6,10,70,"default"],[13,13,10,77],[13,15,10,79,"e"],[14,4,10,81],[14,5,10,82],[15,2,10,84],[16,2,11,0],[16,8,11,6,"TapGestureHandler"],[16,25,11,23],[16,34,11,32,"_DiscreteGestureHandler"],[16,57,11,55],[16,58,11,56,"default"],[16,65,11,63],[16,66,11,64],[17,4,12,2,"_shouldFireEndEvent"],[17,23,12,21],[17,26,12,24],[17,30,12,28],[18,4,13,2],[19,4,14,2],[19,8,14,6,"name"],[19,12,14,10,"name"],[19,13,14,10],[19,15,14,13],[20,6,15,4],[20,13,15,11],[20,18,15,16],[21,4,16,2],[22,4,17,2],[22,8,17,6,"NativeGestureClass"],[22,26,17,24,"NativeGestureClass"],[22,27,17,24],[22,29,17,27],[23,6,18,4],[23,13,18,11,"_hammerjs"],[23,22,18,20],[23,23,18,21,"default"],[23,30,18,28],[23,31,18,29,"Tap"],[23,34,18,32],[24,4,19,2],[25,4,20,2],[25,8,20,6,"maxDelayMs"],[25,18,20,16,"maxDelayMs"],[25,19,20,16],[25,21,20,19],[26,6,21,4],[27,6,22,4],[27,13,22,11],[27,14,22,12],[27,15,22,13],[27,17,22,15,"_utils"],[27,23,22,21],[27,24,22,22,"isnan"],[27,29,22,27],[27,31,22,29],[27,35,22,33],[27,36,22,34,"config"],[27,42,22,40],[27,43,22,41,"maxDelayMs"],[27,53,22,51],[27,54,22,52],[27,57,22,55],[27,60,22,58],[27,63,22,61],[27,67,22,65],[27,68,22,66,"config"],[27,74,22,72],[27,75,22,73,"maxDelayMs"],[27,85,22,83],[28,4,23,2],[29,4,24,2,"simulateCancelEvent"],[29,23,24,21,"simulateCancelEvent"],[29,24,24,22,"inputData"],[29,33,24,31],[29,35,24,33],[30,6,25,4],[30,10,25,8],[30,14,25,12],[30,15,25,13,"isGestureRunning"],[30,31,25,29],[30,33,25,31],[31,8,26,6],[31,12,26,10],[31,13,26,11,"cancelEvent"],[31,24,26,22],[31,25,26,23,"inputData"],[31,34,26,32],[31,35,26,33],[32,6,27,4],[33,4,28,2],[34,4,29,2,"onGestureActivated"],[34,22,29,20,"onGestureActivated"],[34,23,29,21,"ev"],[34,25,29,23],[34,27,29,25],[35,6,30,4],[35,10,30,8],[35,14,30,12],[35,15,30,13,"isGestureRunning"],[35,31,30,29],[35,33,30,31],[36,8,31,6],[36,12,31,10],[36,13,31,11,"onSuccessfulTap"],[36,28,31,26],[36,29,31,27,"ev"],[36,31,31,29],[36,32,31,30],[37,6,32,4],[38,4,33,2],[39,4,34,2,"onSuccessfulTap"],[39,19,34,17],[39,22,34,20,"ev"],[39,24,34,22],[39,28,34,26],[40,6,35,4],[40,10,35,8],[40,14,35,12],[40,15,35,13,"_getPendingGestures"],[40,34,35,32],[40,35,35,33],[40,36,35,34],[40,37,35,35,"length"],[40,43,35,41],[40,45,35,43],[41,8,36,6],[41,12,36,10],[41,13,36,11,"_shouldFireEndEvent"],[41,32,36,30],[41,35,36,33,"ev"],[41,37,36,35],[42,8,37,6],[43,6,38,4],[44,6,39,4],[44,10,39,8,"ev"],[44,12,39,10],[44,13,39,11,"eventType"],[44,22,39,20],[44,27,39,25,"_hammerjs"],[44,36,39,34],[44,37,39,35,"default"],[44,44,39,42],[44,45,39,43,"INPUT_END"],[44,54,39,52],[44,56,39,54],[45,8,40,6],[45,12,40,10],[45,13,40,11,"sendEvent"],[45,22,40,20],[45,23,40,21],[46,10,41,8],[46,13,41,11,"ev"],[46,15,41,13],[47,10,42,8,"eventType"],[47,19,42,17],[47,21,42,19,"_hammerjs"],[47,30,42,28],[47,31,42,29,"default"],[47,38,42,36],[47,39,42,37,"INPUT_MOVE"],[48,8,43,6],[48,9,43,7],[48,10,43,8],[49,6,44,4],[50,6,45,4],[51,6,46,4],[51,10,46,8],[51,11,46,9,"sendEvent"],[51,20,46,18],[51,21,46,19],[52,8,47,6],[52,11,47,9,"ev"],[52,13,47,11],[53,8,48,6,"isFinal"],[53,15,48,13],[53,17,48,15],[54,6,49,4],[54,7,49,5],[54,8,49,6],[55,6,50,4],[55,10,50,8],[55,11,50,9,"onGestureEnded"],[55,25,50,23],[55,26,50,24,"ev"],[55,28,50,26],[55,29,50,27],[56,4,51,2],[56,5,51,3],[57,4,52,2,"onRawEvent"],[57,14,52,12,"onRawEvent"],[57,15,52,13,"ev"],[57,17,52,15],[57,19,52,17],[58,6,53,4],[58,11,53,9],[58,12,53,10,"onRawEvent"],[58,22,53,20],[58,23,53,21,"ev"],[58,25,53,23],[58,26,53,24],[60,6,55,4],[61,6,56,4],[61,10,56,8],[61,11,56,9],[61,15,56,13],[61,16,56,14,"hasGestureFailed"],[61,32,56,30],[61,36,56,34],[61,37,56,35],[61,41,56,39],[61,42,56,40,"isGestureRunning"],[61,58,56,56],[62,6,57,4],[63,6,58,4],[63,7,58,5,"ev"],[63,9,58,7],[63,10,58,8,"isFinal"],[63,17,58,15],[63,19,58,17],[64,8,59,6],[65,8,60,6],[65,14,60,12,"gesture"],[65,21,60,19],[65,24,60,22],[65,28,60,26],[65,29,60,27,"hammer"],[65,35,60,33],[65,36,60,34,"get"],[65,39,60,37],[65,40,60,38],[65,44,60,42],[65,45,60,43,"name"],[65,49,60,47],[65,50,60,48],[66,8,61,6],[67,8,62,6],[67,12,62,10,"gesture"],[67,19,62,17],[67,20,62,18,"options"],[67,27,62,25],[67,28,62,26,"enable"],[67,34,62,32],[67,35,62,33,"gesture"],[67,42,62,40],[67,44,62,42,"ev"],[67,46,62,44],[67,47,62,45],[67,49,62,47],[68,10,63,8,"clearTimeout"],[68,22,63,20],[68,23,63,21],[68,27,63,25],[68,28,63,26,"_multiTapTimer"],[68,42,63,40],[68,43,63,41],[69,10,64,8],[69,14,64,12],[69,15,64,13,"onStart"],[69,22,64,20],[69,23,64,21,"ev"],[69,25,64,23],[69,26,64,24],[70,10,65,8],[70,14,65,12],[70,15,65,13,"sendEvent"],[70,24,65,22],[70,25,65,23,"ev"],[70,27,65,25],[70,28,65,26],[71,8,66,6],[72,6,67,4],[73,6,68,4],[73,10,68,8,"ev"],[73,12,68,10],[73,13,68,11,"isFinal"],[73,20,68,18],[73,24,68,22,"ev"],[73,26,68,24],[73,27,68,25,"maxPointers"],[73,38,68,36],[73,41,68,39],[73,42,68,40],[73,44,68,42],[74,8,69,6,"setTimeout"],[74,18,69,16],[74,19,69,17],[74,25,69,23],[75,10,70,8],[76,10,71,8],[77,10,72,8],[77,14,72,12],[77,18,72,16],[77,19,72,17,"isGestureRunning"],[77,35,72,33],[77,37,72,35],[78,12,73,10],[78,16,73,14],[78,17,73,15,"cancelEvent"],[78,28,73,26],[78,29,73,27,"ev"],[78,31,73,29],[78,32,73,30],[79,10,74,8],[80,8,75,6],[80,9,75,7],[80,10,75,8],[81,6,76,4],[82,6,77,4],[82,10,77,8],[82,14,77,12],[82,15,77,13,"hasGestureFailed"],[82,31,77,29],[82,33,77,31],[83,8,78,6],[84,6,79,4],[85,6,80,4],[86,6,81,4],[87,6,82,4],[87,10,82,8,"ev"],[87,12,82,10],[87,13,82,11,"isFinal"],[87,20,82,18],[87,22,82,20],[88,8,83,6],[89,8,84,6],[90,8,85,6],[90,12,85,10,"ev"],[90,14,85,12],[90,15,85,13,"maxPointers"],[90,26,85,24],[90,29,85,27],[90,30,85,28],[90,32,85,30],[91,10,86,8,"setTimeout"],[91,20,86,18],[91,21,86,19],[91,27,86,25],[92,12,87,10],[92,16,87,14],[92,20,87,18],[92,21,87,19,"isGestureRunning"],[92,37,87,35],[92,39,87,37],[93,14,88,12],[93,18,88,16],[93,19,88,17,"cancelEvent"],[93,30,88,28],[93,31,88,29,"ev"],[93,33,88,31],[93,34,88,32],[94,12,89,10],[95,10,90,8],[95,11,90,9],[95,12,90,10],[96,8,91,6],[98,8,93,6],[99,8,94,6,"clearTimeout"],[99,20,94,18],[99,21,94,19],[99,25,94,23],[99,26,94,24,"_timer"],[99,32,94,30],[99,33,94,31],[100,8,95,6],[101,8,96,6],[101,12,96,10],[101,13,96,11,"_timer"],[101,19,96,17],[101,22,96,20,"setTimeout"],[101,32,96,30],[101,33,96,31],[101,39,96,37],[102,10,97,8],[102,14,97,12],[102,15,97,13,"hasGestureFailed"],[102,31,97,29],[102,34,97,32],[102,38,97,36],[103,10,98,8],[103,14,98,12],[103,15,98,13,"cancelEvent"],[103,26,98,24],[103,27,98,25,"ev"],[103,29,98,27],[103,30,98,28],[104,8,99,6],[104,9,99,7],[104,11,99,9],[104,15,99,13],[104,16,99,14,"maxDelayMs"],[104,26,99,24],[104,27,99,25],[105,6,100,4],[105,7,100,5],[105,13,100,11],[105,17,100,15],[105,18,100,16],[105,22,100,20],[105,23,100,21,"hasGestureFailed"],[105,39,100,37],[105,43,100,41],[105,44,100,42],[105,48,100,46],[105,49,100,47,"isGestureRunning"],[105,65,100,63],[105,67,100,65],[106,8,101,6],[107,8,102,6],[107,14,102,12,"gesture"],[107,21,102,19],[107,24,102,22],[107,28,102,26],[107,29,102,27,"hammer"],[107,35,102,33],[107,36,102,34,"get"],[107,39,102,37],[107,40,102,38],[107,44,102,42],[107,45,102,43,"name"],[107,49,102,47],[107,50,102,48],[108,8,103,6],[109,8,104,6],[109,12,104,10,"gesture"],[109,19,104,17],[109,20,104,18,"options"],[109,27,104,25],[109,28,104,26,"enable"],[109,34,104,32],[109,35,104,33,"gesture"],[109,42,104,40],[109,44,104,42,"ev"],[109,46,104,44],[109,47,104,45],[109,49,104,47],[110,10,105,8,"clearTimeout"],[110,22,105,20],[110,23,105,21],[110,27,105,25],[110,28,105,26,"_multiTapTimer"],[110,42,105,40],[110,43,105,41],[111,10,106,8],[111,14,106,12],[111,15,106,13,"onStart"],[111,22,106,20],[111,23,106,21,"ev"],[111,25,106,23],[111,26,106,24],[112,10,107,8],[112,14,107,12],[112,15,107,13,"sendEvent"],[112,24,107,22],[112,25,107,23,"ev"],[112,27,107,25],[112,28,107,26],[113,8,108,6],[114,6,109,4],[115,4,110,2],[116,4,111,2,"getHammerConfig"],[116,19,111,17,"getHammerConfig"],[116,20,111,17],[116,22,111,20],[117,6,112,4],[117,13,112,11],[118,8,113,6],[118,11,113,9],[118,16,113,14],[118,17,113,15,"getHammerConfig"],[118,32,113,30],[118,33,113,31],[118,34,113,32],[119,8,114,6,"event"],[119,13,114,11],[119,15,114,13],[119,19,114,17],[119,20,114,18,"name"],[119,24,114,22],[120,8,115,6],[121,8,116,6,"taps"],[121,12,116,10],[121,14,116,12],[121,15,116,13],[121,16,116,14],[121,18,116,16,"_utils"],[121,24,116,22],[121,25,116,23,"isnan"],[121,30,116,28],[121,32,116,30],[121,36,116,34],[121,37,116,35,"config"],[121,43,116,41],[121,44,116,42,"numberOfTaps"],[121,56,116,54],[121,57,116,55],[121,60,116,58],[121,61,116,59],[121,64,116,62],[121,68,116,66],[121,69,116,67,"config"],[121,75,116,73],[121,76,116,74,"numberOfTaps"],[121,88,116,86],[122,8,117,6,"interval"],[122,16,117,14],[122,18,117,16],[122,22,117,20],[122,23,117,21,"maxDelayMs"],[122,33,117,31],[123,8,118,6,"time"],[123,12,118,10],[124,8,119,6],[125,8,120,6],[125,9,120,7],[125,10,120,8],[125,12,120,10,"_utils"],[125,18,120,16],[125,19,120,17,"isnan"],[125,24,120,22],[125,26,120,24],[125,30,120,28],[125,31,120,29,"config"],[125,37,120,35],[125,38,120,36,"maxDurationMs"],[125,51,120,49],[125,52,120,50],[125,56,120,54],[125,60,120,58],[125,61,120,59,"config"],[125,67,120,65],[125,68,120,66,"maxDurationMs"],[125,81,120,79],[125,85,120,83],[125,89,120,87],[125,92,120,90],[125,95,120,93],[126,8,121,6],[127,8,122,6],[127,12,122,10],[127,13,122,11,"config"],[127,19,122,17],[127,20,122,18,"maxDurationMs"],[128,6,123,4],[128,7,123,5],[129,4,124,2],[130,4,125,2,"updateGestureConfig"],[130,23,125,21,"updateGestureConfig"],[130,24,125,22],[131,6,126,4,"shouldCancelWhenOutside"],[131,29,126,27],[131,32,126,30],[131,36,126,34],[132,6,127,4,"maxDeltaX"],[132,15,127,13],[132,18,127,16,"Number"],[132,24,127,22],[132,25,127,23,"NaN"],[132,28,127,26],[133,6,128,4,"maxDeltaY"],[133,15,128,13],[133,18,128,16,"Number"],[133,24,128,22],[133,25,128,23,"NaN"],[133,28,128,26],[134,6,129,4,"numberOfTaps"],[134,18,129,16],[134,21,129,19],[134,22,129,20],[135,6,130,4,"minDurationMs"],[135,19,130,17],[135,22,130,20],[135,25,130,23],[136,6,131,4,"maxDelayMs"],[136,16,131,14],[136,19,131,17,"Number"],[136,25,131,23],[136,26,131,24,"NaN"],[136,29,131,27],[137,6,132,4],[138,6,133,4,"maxDurationMs"],[138,19,133,17],[138,22,133,20,"Number"],[138,28,133,26],[138,29,133,27,"NaN"],[138,32,133,30],[139,6,134,4,"maxDist"],[139,13,134,11],[139,16,134,14],[139,17,134,15],[140,6,135,4,"minPointers"],[140,17,135,15],[140,20,135,18],[140,21,135,19],[141,6,136,4,"maxPointers"],[141,17,136,15],[141,20,136,18],[141,21,136,19],[142,6,137,4],[142,9,137,7,"props"],[143,4,138,2],[143,5,138,3],[143,7,138,5],[144,6,139,4],[144,13,139,11],[144,18,139,16],[144,19,139,17,"updateGestureConfig"],[144,38,139,36],[144,39,139,37],[145,8,140,6,"shouldCancelWhenOutside"],[145,31,140,29],[146,8,141,6,"numberOfTaps"],[146,20,141,18],[147,8,142,6,"maxDeltaX"],[147,17,142,15],[148,8,143,6,"maxDeltaY"],[148,17,143,15],[149,8,144,6,"minDurationMs"],[149,21,144,19],[150,8,145,6,"maxDelayMs"],[150,18,145,16],[151,8,146,6,"maxDist"],[151,15,146,13],[152,8,147,6,"minPointers"],[152,19,147,17],[153,8,148,6,"maxPointers"],[153,19,148,17],[154,8,149,6],[154,11,149,9,"props"],[155,6,150,4],[155,7,150,5],[155,8,150,6],[156,4,151,2],[157,4,152,2,"onGestureEnded"],[157,18,152,16,"onGestureEnded"],[157,19,152,17],[157,22,152,20,"props"],[157,27,152,25],[157,29,152,27],[158,6,153,4,"clearTimeout"],[158,18,153,16],[158,19,153,17],[158,23,153,21],[158,24,153,22,"_timer"],[158,30,153,28],[158,31,153,29],[159,6,154,4],[160,6,155,4],[160,11,155,9],[160,12,155,10,"onGestureEnded"],[160,26,155,24],[160,27,155,25],[160,30,155,28,"props"],[160,35,155,33],[160,36,155,34],[161,4,156,2],[162,4,157,2,"onWaitingEnded"],[162,18,157,16,"onWaitingEnded"],[162,19,157,17,"_gesture"],[162,27,157,25],[162,29,157,27],[163,6,158,4],[163,10,158,8],[163,14,158,12],[163,15,158,13,"_shouldFireEndEvent"],[163,34,158,32],[163,36,158,34],[164,8,159,6],[164,12,159,10],[164,13,159,11,"onSuccessfulTap"],[164,28,159,26],[164,29,159,27],[164,33,159,31],[164,34,159,32,"_shouldFireEndEvent"],[164,53,159,51],[164,54,159,52],[165,8,160,6],[165,12,160,10],[165,13,160,11,"_shouldFireEndEvent"],[165,32,160,30],[165,35,160,33],[165,39,160,37],[166,6,161,4],[167,4,162,2],[168,2,163,0],[169,2,164,0],[169,6,164,4,"_default"],[169,14,164,12],[169,17,164,15,"exports"],[169,24,164,22],[169,25,164,23,"default"],[169,32,164,30],[169,35,164,33,"TapGestureHandler"],[169,52,164,50],[170,0,164,51],[170,3]],"functionMap":{"names":["<global>","_interopRequireDefault","TapGestureHandler","get__name","get__NativeGestureClass","get__maxDelayMs","simulateCancelEvent","onGestureActivated","onSuccessfulTap","onRawEvent","setTimeout$argument_0","getHammerConfig","updateGestureConfig","onGestureEnded","onWaitingEnded"],"mappings":"AAA;ACS,qFD;AEC;ECG;GDE;EEC;GFE;EGC;GHG;EIC;GJI;EKC;GLI;oBMC;GNiB;EOC;iBCiB;ODM;mBCW;SDI;+BCM;ODG;GPW;ESC;GTa;EUC;GV0B;EWC;GXI;EYC;GZK;CFC"},"hasCjsExports":true},"type":"js/module"}]}