{"dependencies":[{"name":"../../PointerType","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":19,"index":125},"end":{"line":7,"column":47,"index":153}}],"key":"GAwFf6ECEOo66Cd6tbX5TiUkJ2k=","exportNames":["*"],"imports":1}},{"name":"../../State","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":168},"end":{"line":8,"column":35,"index":190}}],"key":"isk6DFwvBR7hH+nInAlMqUOxHEs=","exportNames":["*"],"imports":1}},{"name":"./PointerTracker","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":45,"index":237},"end":{"line":9,"column":72,"index":264}}],"key":"OFgH28QdBZF4xVaIuDIA/sZzwQc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _PointerType = require(_dependencyMap[0], \"../../PointerType\");\n  var _State = require(_dependencyMap[1], \"../../State\");\n  var _PointerTracker = _interopRequireDefault(require(_dependencyMap[2], \"./PointerTracker\"));\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  class GestureHandlerOrchestrator {\n    gestureHandlers = [];\n    awaitingHandlers = [];\n    awaitingHandlersTags = new Set();\n    handlingChangeSemaphore = 0;\n    activationIndex = 0;\n\n    // Private beacuse of Singleton\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    constructor() {}\n    scheduleFinishedHandlersCleanup() {\n      if (this.handlingChangeSemaphore === 0) {\n        this.cleanupFinishedHandlers();\n      }\n    }\n    cleanHandler(handler) {\n      handler.reset();\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_VALUE;\n    }\n    removeHandlerFromOrchestrator(handler) {\n      const indexInGestureHandlers = this.gestureHandlers.indexOf(handler);\n      const indexInAwaitingHandlers = this.awaitingHandlers.indexOf(handler);\n      if (indexInGestureHandlers >= 0) {\n        this.gestureHandlers.splice(indexInGestureHandlers, 1);\n      }\n      if (indexInAwaitingHandlers >= 0) {\n        this.awaitingHandlers.splice(indexInAwaitingHandlers, 1);\n        this.awaitingHandlersTags.delete(handler.handlerTag);\n      }\n    }\n    cleanupFinishedHandlers() {\n      const handlersToRemove = new Set();\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        const handler = this.gestureHandlers[i];\n        if (this.isFinished(handler.state) && !handler.awaiting) {\n          this.cleanHandler(handler);\n          handlersToRemove.add(handler);\n        }\n      }\n      this.gestureHandlers = this.gestureHandlers.filter(handler => !handlersToRemove.has(handler));\n    }\n    hasOtherHandlerToWaitFor(handler) {\n      const hasToWaitFor = otherHandler => {\n        return !this.isFinished(otherHandler.state) && this.shouldHandlerWaitForOther(handler, otherHandler);\n      };\n      return this.gestureHandlers.some(hasToWaitFor);\n    }\n    shouldBeCancelledByFinishedHandler(handler) {\n      const shouldBeCancelled = otherHandler => {\n        return this.shouldHandlerWaitForOther(handler, otherHandler) && otherHandler.state === _State.State.END;\n      };\n      return this.gestureHandlers.some(shouldBeCancelled);\n    }\n    tryActivate(handler) {\n      if (this.shouldBeCancelledByFinishedHandler(handler)) {\n        handler.cancel();\n        return;\n      }\n      if (this.hasOtherHandlerToWaitFor(handler)) {\n        this.addAwaitingHandler(handler);\n        return;\n      }\n      const handlerState = handler.state;\n      if (handlerState === _State.State.CANCELLED || handlerState === _State.State.FAILED) {\n        return;\n      }\n      if (this.shouldActivate(handler)) {\n        this.makeActive(handler);\n        return;\n      }\n      if (handlerState === _State.State.ACTIVE) {\n        handler.fail();\n        return;\n      }\n      if (handlerState === _State.State.BEGAN) {\n        handler.cancel();\n      }\n    }\n    shouldActivate(handler) {\n      const shouldBeCancelledBy = otherHandler => {\n        return this.shouldHandlerBeCancelledBy(handler, otherHandler);\n      };\n      return !this.gestureHandlers.some(shouldBeCancelledBy);\n    }\n    cleanupAwaitingHandlers(handler) {\n      const shouldWait = otherHandler => {\n        return !otherHandler.awaiting && this.shouldHandlerWaitForOther(otherHandler, handler);\n      };\n      for (const otherHandler of this.awaitingHandlers) {\n        if (shouldWait(otherHandler)) {\n          this.cleanHandler(otherHandler);\n          this.awaitingHandlersTags.delete(otherHandler.handlerTag);\n        }\n      }\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => this.awaitingHandlersTags.has(otherHandler.handlerTag));\n    }\n    onHandlerStateChange(handler, newState, oldState, sendIfDisabled) {\n      if (!handler.enabled && !sendIfDisabled) {\n        return;\n      }\n      this.handlingChangeSemaphore += 1;\n      if (this.isFinished(newState)) {\n        for (const otherHandler of this.awaitingHandlers) {\n          if (!this.shouldHandlerWaitForOther(otherHandler, handler) || !this.awaitingHandlersTags.has(otherHandler.handlerTag)) {\n            continue;\n          }\n          if (newState !== _State.State.END) {\n            this.tryActivate(otherHandler);\n            continue;\n          }\n          otherHandler.cancel();\n          if (otherHandler.state === _State.State.END) {\n            // Handle edge case, where discrete gestures end immediately after activation thus\n            // their state is set to END and when the gesture they are waiting for activates they\n            // should be cancelled, however `cancel` was never sent as gestures were already in the END state.\n            // Send synthetic BEGAN -> CANCELLED to properly handle JS logic\n            otherHandler.sendEvent(_State.State.CANCELLED, _State.State.BEGAN);\n          }\n          otherHandler.awaiting = false;\n        }\n      }\n      if (newState === _State.State.ACTIVE) {\n        this.tryActivate(handler);\n      } else if (oldState === _State.State.ACTIVE || oldState === _State.State.END) {\n        if (handler.active) {\n          handler.sendEvent(newState, oldState);\n        } else if (oldState === _State.State.ACTIVE && (newState === _State.State.CANCELLED || newState === _State.State.FAILED)) {\n          handler.sendEvent(newState, _State.State.BEGAN);\n        }\n      } else if (oldState !== _State.State.UNDETERMINED || newState !== _State.State.CANCELLED) {\n        handler.sendEvent(newState, oldState);\n      }\n      this.handlingChangeSemaphore -= 1;\n      this.scheduleFinishedHandlersCleanup();\n      if (!this.awaitingHandlers.includes(handler)) {\n        this.cleanupAwaitingHandlers(handler);\n      }\n    }\n    makeActive(handler) {\n      const currentState = handler.state;\n      handler.active = true;\n      handler.shouldResetProgress = true;\n      handler.activationIndex = this.activationIndex++;\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        if (this.shouldHandlerBeCancelledBy(this.gestureHandlers[i], handler)) {\n          this.gestureHandlers[i].cancel();\n        }\n      }\n      for (const otherHandler of this.awaitingHandlers) {\n        if (this.shouldHandlerBeCancelledBy(otherHandler, handler)) {\n          otherHandler.awaiting = false;\n        }\n      }\n      handler.sendEvent(_State.State.ACTIVE, _State.State.BEGAN);\n      if (currentState !== _State.State.ACTIVE) {\n        handler.sendEvent(_State.State.END, _State.State.ACTIVE);\n        if (currentState !== _State.State.END) {\n          handler.sendEvent(_State.State.UNDETERMINED, _State.State.END);\n        }\n      }\n      if (!handler.awaiting) {\n        return;\n      }\n      handler.awaiting = false;\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => otherHandler !== handler);\n    }\n    addAwaitingHandler(handler) {\n      if (this.awaitingHandlers.includes(handler)) {\n        return;\n      }\n      this.awaitingHandlers.push(handler);\n      this.awaitingHandlersTags.add(handler.handlerTag);\n      handler.awaiting = true;\n      handler.activationIndex = this.activationIndex++;\n    }\n    recordHandlerIfNotPresent(handler) {\n      if (this.gestureHandlers.includes(handler)) {\n        return;\n      }\n      this.gestureHandlers.push(handler);\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_SAFE_INTEGER;\n    }\n    shouldHandlerWaitForOther(handler, otherHandler) {\n      return handler !== otherHandler && (handler.shouldWaitForHandlerFailure(otherHandler) || otherHandler.shouldRequireToWaitForFailure(handler));\n    }\n    canRunSimultaneously(gh1, gh2) {\n      return gh1 === gh2 || gh1.shouldRecognizeSimultaneously(gh2) || gh2.shouldRecognizeSimultaneously(gh1);\n    }\n    shouldHandlerBeCancelledBy(handler, otherHandler) {\n      if (this.canRunSimultaneously(handler, otherHandler)) {\n        return false;\n      }\n      if (handler.awaiting || handler.state === _State.State.ACTIVE) {\n        return handler.shouldBeCancelledByOther(otherHandler);\n      }\n      const handlerPointers = handler.getTrackedPointersID();\n      const otherPointers = otherHandler.getTrackedPointersID();\n      if (!_PointerTracker.default.shareCommonPointers(handlerPointers, otherPointers) && handler.delegate.view !== otherHandler.delegate.view) {\n        return this.checkOverlap(handler, otherHandler);\n      }\n      return true;\n    }\n    checkOverlap(handler, otherHandler) {\n      // If handlers don't have common pointers, default return value is false.\n      // However, if at least on pointer overlaps with both handlers, we return true\n      // This solves issue in overlapping parents example\n\n      // TODO: Find better way to handle that issue, for example by activation order and handler cancelling\n\n      const isPointerWithinBothBounds = pointer => {\n        const point = handler.tracker.getLastAbsoluteCoords(pointer);\n        return point && handler.delegate.isPointerInBounds(point) && otherHandler.delegate.isPointerInBounds(point);\n      };\n      return handler.getTrackedPointersID().some(isPointerWithinBothBounds);\n    }\n    isFinished(state) {\n      return state === _State.State.END || state === _State.State.FAILED || state === _State.State.CANCELLED;\n    }\n\n    // This function is called when handler receives touchdown event\n    // If handler is using mouse or pen as a pointer and any handler receives touch event,\n    // mouse/pen event dissappears - it doesn't send onPointerCancel nor onPointerUp (and others)\n    // This became a problem because handler was left at active state without any signal to end or fail\n    // To handle this, when new touch event is received, we loop through active handlers and check which type of\n    // pointer they're using. If there are any handler with mouse/pen as a pointer, we cancel them\n    cancelMouseAndPenGestures(currentHandler) {\n      this.gestureHandlers.forEach(handler => {\n        if (handler.pointerType !== _PointerType.PointerType.MOUSE && handler.pointerType !== _PointerType.PointerType.STYLUS) {\n          return;\n        }\n        if (handler !== currentHandler) {\n          handler.cancel();\n        } else {\n          // Handler that received touch event should have its pointer tracker reset\n          // This allows handler to smoothly change from mouse/pen to touch\n          // The drawback is, that when we try to use mouse/pen one more time, it doesn't send onPointerDown at the first time\n          // so it is required to click two times to get handler to work\n          //\n          // However, handler will receive manually created onPointerEnter that is triggered in EventManager in onPointerMove method.\n          // There may be possibility to use that fact to make handler respond properly to first mouse click\n          handler.tracker.resetTracker();\n        }\n      });\n    }\n    static get instance() {\n      if (!GestureHandlerOrchestrator._instance) {\n        GestureHandlerOrchestrator._instance = new GestureHandlerOrchestrator();\n      }\n      return GestureHandlerOrchestrator._instance;\n    }\n  }\n  exports.default = GestureHandlerOrchestrator;\n});","lineCount":272,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,7,0],[8,6,7,4,"_PointerType"],[8,18,7,16],[8,21,7,19,"require"],[8,28,7,26],[8,29,7,26,"_dependencyMap"],[8,43,7,26],[8,67,7,46],[8,68,7,47],[9,2,8,0],[9,6,8,4,"_State"],[9,12,8,10],[9,15,8,13,"require"],[9,22,8,20],[9,23,8,20,"_dependencyMap"],[9,37,8,20],[9,55,8,34],[9,56,8,35],[10,2,9,0],[10,6,9,4,"_PointerTracker"],[10,21,9,19],[10,24,9,22,"_interopRequireDefault"],[10,46,9,44],[10,47,9,45,"require"],[10,54,9,52],[10,55,9,52,"_dependencyMap"],[10,69,9,52],[10,92,9,71],[10,93,9,72],[10,94,9,73],[11,2,10,0],[11,11,10,9,"_interopRequireDefault"],[11,33,10,31,"_interopRequireDefault"],[11,34,10,32,"e"],[11,35,10,33],[11,37,10,35],[12,4,10,37],[12,11,10,44,"e"],[12,12,10,45],[12,16,10,49,"e"],[12,17,10,50],[12,18,10,51,"__esModule"],[12,28,10,61],[12,31,10,64,"e"],[12,32,10,65],[12,35,10,68],[13,6,10,70,"default"],[13,13,10,77],[13,15,10,79,"e"],[14,4,10,81],[14,5,10,82],[15,2,10,84],[16,2,11,0],[16,8,11,6,"GestureHandlerOrchestrator"],[16,34,11,32],[16,35,11,33],[17,4,12,2,"gestureHandlers"],[17,19,12,17],[17,22,12,20],[17,24,12,22],[18,4,13,2,"awaitingHandlers"],[18,20,13,18],[18,23,13,21],[18,25,13,23],[19,4,14,2,"awaitingHandlersTags"],[19,24,14,22],[19,27,14,25],[19,31,14,29,"Set"],[19,34,14,32],[19,35,14,33],[19,36,14,34],[20,4,15,2,"handlingChangeSemaphore"],[20,27,15,25],[20,30,15,28],[20,31,15,29],[21,4,16,2,"activationIndex"],[21,19,16,17],[21,22,16,20],[21,23,16,21],[23,4,18,2],[24,4,19,2],[25,4,20,2,"constructor"],[25,15,20,13,"constructor"],[25,16,20,13],[25,18,20,16],[25,19,20,17],[26,4,21,2,"scheduleFinishedHandlersCleanup"],[26,35,21,33,"scheduleFinishedHandlersCleanup"],[26,36,21,33],[26,38,21,36],[27,6,22,4],[27,10,22,8],[27,14,22,12],[27,15,22,13,"handlingChangeSemaphore"],[27,38,22,36],[27,43,22,41],[27,44,22,42],[27,46,22,44],[28,8,23,6],[28,12,23,10],[28,13,23,11,"cleanupFinishedHandlers"],[28,36,23,34],[28,37,23,35],[28,38,23,36],[29,6,24,4],[30,4,25,2],[31,4,26,2,"cleanHandler"],[31,16,26,14,"cleanHandler"],[31,17,26,15,"handler"],[31,24,26,22],[31,26,26,24],[32,6,27,4,"handler"],[32,13,27,11],[32,14,27,12,"reset"],[32,19,27,17],[32,20,27,18],[32,21,27,19],[33,6,28,4,"handler"],[33,13,28,11],[33,14,28,12,"active"],[33,20,28,18],[33,23,28,21],[33,28,28,26],[34,6,29,4,"handler"],[34,13,29,11],[34,14,29,12,"awaiting"],[34,22,29,20],[34,25,29,23],[34,30,29,28],[35,6,30,4,"handler"],[35,13,30,11],[35,14,30,12,"activationIndex"],[35,29,30,27],[35,32,30,30,"Number"],[35,38,30,36],[35,39,30,37,"MAX_VALUE"],[35,48,30,46],[36,4,31,2],[37,4,32,2,"removeHandlerFromOrchestrator"],[37,33,32,31,"removeHandlerFromOrchestrator"],[37,34,32,32,"handler"],[37,41,32,39],[37,43,32,41],[38,6,33,4],[38,12,33,10,"indexInGestureHandlers"],[38,34,33,32],[38,37,33,35],[38,41,33,39],[38,42,33,40,"gestureHandlers"],[38,57,33,55],[38,58,33,56,"indexOf"],[38,65,33,63],[38,66,33,64,"handler"],[38,73,33,71],[38,74,33,72],[39,6,34,4],[39,12,34,10,"indexInAwaitingHandlers"],[39,35,34,33],[39,38,34,36],[39,42,34,40],[39,43,34,41,"awaitingHandlers"],[39,59,34,57],[39,60,34,58,"indexOf"],[39,67,34,65],[39,68,34,66,"handler"],[39,75,34,73],[39,76,34,74],[40,6,35,4],[40,10,35,8,"indexInGestureHandlers"],[40,32,35,30],[40,36,35,34],[40,37,35,35],[40,39,35,37],[41,8,36,6],[41,12,36,10],[41,13,36,11,"gestureHandlers"],[41,28,36,26],[41,29,36,27,"splice"],[41,35,36,33],[41,36,36,34,"indexInGestureHandlers"],[41,58,36,56],[41,60,36,58],[41,61,36,59],[41,62,36,60],[42,6,37,4],[43,6,38,4],[43,10,38,8,"indexInAwaitingHandlers"],[43,33,38,31],[43,37,38,35],[43,38,38,36],[43,40,38,38],[44,8,39,6],[44,12,39,10],[44,13,39,11,"awaitingHandlers"],[44,29,39,27],[44,30,39,28,"splice"],[44,36,39,34],[44,37,39,35,"indexInAwaitingHandlers"],[44,60,39,58],[44,62,39,60],[44,63,39,61],[44,64,39,62],[45,8,40,6],[45,12,40,10],[45,13,40,11,"awaitingHandlersTags"],[45,33,40,31],[45,34,40,32,"delete"],[45,40,40,38],[45,41,40,39,"handler"],[45,48,40,46],[45,49,40,47,"handlerTag"],[45,59,40,57],[45,60,40,58],[46,6,41,4],[47,4,42,2],[48,4,43,2,"cleanupFinishedHandlers"],[48,27,43,25,"cleanupFinishedHandlers"],[48,28,43,25],[48,30,43,28],[49,6,44,4],[49,12,44,10,"handlersToRemove"],[49,28,44,26],[49,31,44,29],[49,35,44,33,"Set"],[49,38,44,36],[49,39,44,37],[49,40,44,38],[50,6,45,4],[50,11,45,9],[50,15,45,13,"i"],[50,16,45,14],[50,19,45,17],[50,23,45,21],[50,24,45,22,"gestureHandlers"],[50,39,45,37],[50,40,45,38,"length"],[50,46,45,44],[50,49,45,47],[50,50,45,48],[50,52,45,50,"i"],[50,53,45,51],[50,57,45,55],[50,58,45,56],[50,60,45,58],[50,62,45,60,"i"],[50,63,45,61],[50,65,45,63],[51,8,46,6],[51,14,46,12,"handler"],[51,21,46,19],[51,24,46,22],[51,28,46,26],[51,29,46,27,"gestureHandlers"],[51,44,46,42],[51,45,46,43,"i"],[51,46,46,44],[51,47,46,45],[52,8,47,6],[52,12,47,10],[52,16,47,14],[52,17,47,15,"isFinished"],[52,27,47,25],[52,28,47,26,"handler"],[52,35,47,33],[52,36,47,34,"state"],[52,41,47,39],[52,42,47,40],[52,46,47,44],[52,47,47,45,"handler"],[52,54,47,52],[52,55,47,53,"awaiting"],[52,63,47,61],[52,65,47,63],[53,10,48,8],[53,14,48,12],[53,15,48,13,"cleanHandler"],[53,27,48,25],[53,28,48,26,"handler"],[53,35,48,33],[53,36,48,34],[54,10,49,8,"handlersToRemove"],[54,26,49,24],[54,27,49,25,"add"],[54,30,49,28],[54,31,49,29,"handler"],[54,38,49,36],[54,39,49,37],[55,8,50,6],[56,6,51,4],[57,6,52,4],[57,10,52,8],[57,11,52,9,"gestureHandlers"],[57,26,52,24],[57,29,52,27],[57,33,52,31],[57,34,52,32,"gestureHandlers"],[57,49,52,47],[57,50,52,48,"filter"],[57,56,52,54],[57,57,52,55,"handler"],[57,64,52,62],[57,68,52,66],[57,69,52,67,"handlersToRemove"],[57,85,52,83],[57,86,52,84,"has"],[57,89,52,87],[57,90,52,88,"handler"],[57,97,52,95],[57,98,52,96],[57,99,52,97],[58,4,53,2],[59,4,54,2,"hasOtherHandlerToWaitFor"],[59,28,54,26,"hasOtherHandlerToWaitFor"],[59,29,54,27,"handler"],[59,36,54,34],[59,38,54,36],[60,6,55,4],[60,12,55,10,"hasToWaitFor"],[60,24,55,22],[60,27,55,25,"otherHandler"],[60,39,55,37],[60,43,55,41],[61,8,56,6],[61,15,56,13],[61,16,56,14],[61,20,56,18],[61,21,56,19,"isFinished"],[61,31,56,29],[61,32,56,30,"otherHandler"],[61,44,56,42],[61,45,56,43,"state"],[61,50,56,48],[61,51,56,49],[61,55,56,53],[61,59,56,57],[61,60,56,58,"shouldHandlerWaitForOther"],[61,85,56,83],[61,86,56,84,"handler"],[61,93,56,91],[61,95,56,93,"otherHandler"],[61,107,56,105],[61,108,56,106],[62,6,57,4],[62,7,57,5],[63,6,58,4],[63,13,58,11],[63,17,58,15],[63,18,58,16,"gestureHandlers"],[63,33,58,31],[63,34,58,32,"some"],[63,38,58,36],[63,39,58,37,"hasToWaitFor"],[63,51,58,49],[63,52,58,50],[64,4,59,2],[65,4,60,2,"shouldBeCancelledByFinishedHandler"],[65,38,60,36,"shouldBeCancelledByFinishedHandler"],[65,39,60,37,"handler"],[65,46,60,44],[65,48,60,46],[66,6,61,4],[66,12,61,10,"shouldBeCancelled"],[66,29,61,27],[66,32,61,30,"otherHandler"],[66,44,61,42],[66,48,61,46],[67,8,62,6],[67,15,62,13],[67,19,62,17],[67,20,62,18,"shouldHandlerWaitForOther"],[67,45,62,43],[67,46,62,44,"handler"],[67,53,62,51],[67,55,62,53,"otherHandler"],[67,67,62,65],[67,68,62,66],[67,72,62,70,"otherHandler"],[67,84,62,82],[67,85,62,83,"state"],[67,90,62,88],[67,95,62,93,"_State"],[67,101,62,99],[67,102,62,100,"State"],[67,107,62,105],[67,108,62,106,"END"],[67,111,62,109],[68,6,63,4],[68,7,63,5],[69,6,64,4],[69,13,64,11],[69,17,64,15],[69,18,64,16,"gestureHandlers"],[69,33,64,31],[69,34,64,32,"some"],[69,38,64,36],[69,39,64,37,"shouldBeCancelled"],[69,56,64,54],[69,57,64,55],[70,4,65,2],[71,4,66,2,"tryActivate"],[71,15,66,13,"tryActivate"],[71,16,66,14,"handler"],[71,23,66,21],[71,25,66,23],[72,6,67,4],[72,10,67,8],[72,14,67,12],[72,15,67,13,"shouldBeCancelledByFinishedHandler"],[72,49,67,47],[72,50,67,48,"handler"],[72,57,67,55],[72,58,67,56],[72,60,67,58],[73,8,68,6,"handler"],[73,15,68,13],[73,16,68,14,"cancel"],[73,22,68,20],[73,23,68,21],[73,24,68,22],[74,8,69,6],[75,6,70,4],[76,6,71,4],[76,10,71,8],[76,14,71,12],[76,15,71,13,"hasOtherHandlerToWaitFor"],[76,39,71,37],[76,40,71,38,"handler"],[76,47,71,45],[76,48,71,46],[76,50,71,48],[77,8,72,6],[77,12,72,10],[77,13,72,11,"addAwaitingHandler"],[77,31,72,29],[77,32,72,30,"handler"],[77,39,72,37],[77,40,72,38],[78,8,73,6],[79,6,74,4],[80,6,75,4],[80,12,75,10,"handlerState"],[80,24,75,22],[80,27,75,25,"handler"],[80,34,75,32],[80,35,75,33,"state"],[80,40,75,38],[81,6,76,4],[81,10,76,8,"handlerState"],[81,22,76,20],[81,27,76,25,"_State"],[81,33,76,31],[81,34,76,32,"State"],[81,39,76,37],[81,40,76,38,"CANCELLED"],[81,49,76,47],[81,53,76,51,"handlerState"],[81,65,76,63],[81,70,76,68,"_State"],[81,76,76,74],[81,77,76,75,"State"],[81,82,76,80],[81,83,76,81,"FAILED"],[81,89,76,87],[81,91,76,89],[82,8,77,6],[83,6,78,4],[84,6,79,4],[84,10,79,8],[84,14,79,12],[84,15,79,13,"shouldActivate"],[84,29,79,27],[84,30,79,28,"handler"],[84,37,79,35],[84,38,79,36],[84,40,79,38],[85,8,80,6],[85,12,80,10],[85,13,80,11,"makeActive"],[85,23,80,21],[85,24,80,22,"handler"],[85,31,80,29],[85,32,80,30],[86,8,81,6],[87,6,82,4],[88,6,83,4],[88,10,83,8,"handlerState"],[88,22,83,20],[88,27,83,25,"_State"],[88,33,83,31],[88,34,83,32,"State"],[88,39,83,37],[88,40,83,38,"ACTIVE"],[88,46,83,44],[88,48,83,46],[89,8,84,6,"handler"],[89,15,84,13],[89,16,84,14,"fail"],[89,20,84,18],[89,21,84,19],[89,22,84,20],[90,8,85,6],[91,6,86,4],[92,6,87,4],[92,10,87,8,"handlerState"],[92,22,87,20],[92,27,87,25,"_State"],[92,33,87,31],[92,34,87,32,"State"],[92,39,87,37],[92,40,87,38,"BEGAN"],[92,45,87,43],[92,47,87,45],[93,8,88,6,"handler"],[93,15,88,13],[93,16,88,14,"cancel"],[93,22,88,20],[93,23,88,21],[93,24,88,22],[94,6,89,4],[95,4,90,2],[96,4,91,2,"shouldActivate"],[96,18,91,16,"shouldActivate"],[96,19,91,17,"handler"],[96,26,91,24],[96,28,91,26],[97,6,92,4],[97,12,92,10,"shouldBeCancelledBy"],[97,31,92,29],[97,34,92,32,"otherHandler"],[97,46,92,44],[97,50,92,48],[98,8,93,6],[98,15,93,13],[98,19,93,17],[98,20,93,18,"shouldHandlerBeCancelledBy"],[98,46,93,44],[98,47,93,45,"handler"],[98,54,93,52],[98,56,93,54,"otherHandler"],[98,68,93,66],[98,69,93,67],[99,6,94,4],[99,7,94,5],[100,6,95,4],[100,13,95,11],[100,14,95,12],[100,18,95,16],[100,19,95,17,"gestureHandlers"],[100,34,95,32],[100,35,95,33,"some"],[100,39,95,37],[100,40,95,38,"shouldBeCancelledBy"],[100,59,95,57],[100,60,95,58],[101,4,96,2],[102,4,97,2,"cleanupAwaitingHandlers"],[102,27,97,25,"cleanupAwaitingHandlers"],[102,28,97,26,"handler"],[102,35,97,33],[102,37,97,35],[103,6,98,4],[103,12,98,10,"shouldWait"],[103,22,98,20],[103,25,98,23,"otherHandler"],[103,37,98,35],[103,41,98,39],[104,8,99,6],[104,15,99,13],[104,16,99,14,"otherHandler"],[104,28,99,26],[104,29,99,27,"awaiting"],[104,37,99,35],[104,41,99,39],[104,45,99,43],[104,46,99,44,"shouldHandlerWaitForOther"],[104,71,99,69],[104,72,99,70,"otherHandler"],[104,84,99,82],[104,86,99,84,"handler"],[104,93,99,91],[104,94,99,92],[105,6,100,4],[105,7,100,5],[106,6,101,4],[106,11,101,9],[106,17,101,15,"otherHandler"],[106,29,101,27],[106,33,101,31],[106,37,101,35],[106,38,101,36,"awaitingHandlers"],[106,54,101,52],[106,56,101,54],[107,8,102,6],[107,12,102,10,"shouldWait"],[107,22,102,20],[107,23,102,21,"otherHandler"],[107,35,102,33],[107,36,102,34],[107,38,102,36],[108,10,103,8],[108,14,103,12],[108,15,103,13,"cleanHandler"],[108,27,103,25],[108,28,103,26,"otherHandler"],[108,40,103,38],[108,41,103,39],[109,10,104,8],[109,14,104,12],[109,15,104,13,"awaitingHandlersTags"],[109,35,104,33],[109,36,104,34,"delete"],[109,42,104,40],[109,43,104,41,"otherHandler"],[109,55,104,53],[109,56,104,54,"handlerTag"],[109,66,104,64],[109,67,104,65],[110,8,105,6],[111,6,106,4],[112,6,107,4],[112,10,107,8],[112,11,107,9,"awaitingHandlers"],[112,27,107,25],[112,30,107,28],[112,34,107,32],[112,35,107,33,"awaitingHandlers"],[112,51,107,49],[112,52,107,50,"filter"],[112,58,107,56],[112,59,107,57,"otherHandler"],[112,71,107,69],[112,75,107,73],[112,79,107,77],[112,80,107,78,"awaitingHandlersTags"],[112,100,107,98],[112,101,107,99,"has"],[112,104,107,102],[112,105,107,103,"otherHandler"],[112,117,107,115],[112,118,107,116,"handlerTag"],[112,128,107,126],[112,129,107,127],[112,130,107,128],[113,4,108,2],[114,4,109,2,"onHandlerStateChange"],[114,24,109,22,"onHandlerStateChange"],[114,25,109,23,"handler"],[114,32,109,30],[114,34,109,32,"newState"],[114,42,109,40],[114,44,109,42,"oldState"],[114,52,109,50],[114,54,109,52,"sendIfDisabled"],[114,68,109,66],[114,70,109,68],[115,6,110,4],[115,10,110,8],[115,11,110,9,"handler"],[115,18,110,16],[115,19,110,17,"enabled"],[115,26,110,24],[115,30,110,28],[115,31,110,29,"sendIfDisabled"],[115,45,110,43],[115,47,110,45],[116,8,111,6],[117,6,112,4],[118,6,113,4],[118,10,113,8],[118,11,113,9,"handlingChangeSemaphore"],[118,34,113,32],[118,38,113,36],[118,39,113,37],[119,6,114,4],[119,10,114,8],[119,14,114,12],[119,15,114,13,"isFinished"],[119,25,114,23],[119,26,114,24,"newState"],[119,34,114,32],[119,35,114,33],[119,37,114,35],[120,8,115,6],[120,13,115,11],[120,19,115,17,"otherHandler"],[120,31,115,29],[120,35,115,33],[120,39,115,37],[120,40,115,38,"awaitingHandlers"],[120,56,115,54],[120,58,115,56],[121,10,116,8],[121,14,116,12],[121,15,116,13],[121,19,116,17],[121,20,116,18,"shouldHandlerWaitForOther"],[121,45,116,43],[121,46,116,44,"otherHandler"],[121,58,116,56],[121,60,116,58,"handler"],[121,67,116,65],[121,68,116,66],[121,72,116,70],[121,73,116,71],[121,77,116,75],[121,78,116,76,"awaitingHandlersTags"],[121,98,116,96],[121,99,116,97,"has"],[121,102,116,100],[121,103,116,101,"otherHandler"],[121,115,116,113],[121,116,116,114,"handlerTag"],[121,126,116,124],[121,127,116,125],[121,129,116,127],[122,12,117,10],[123,10,118,8],[124,10,119,8],[124,14,119,12,"newState"],[124,22,119,20],[124,27,119,25,"_State"],[124,33,119,31],[124,34,119,32,"State"],[124,39,119,37],[124,40,119,38,"END"],[124,43,119,41],[124,45,119,43],[125,12,120,10],[125,16,120,14],[125,17,120,15,"tryActivate"],[125,28,120,26],[125,29,120,27,"otherHandler"],[125,41,120,39],[125,42,120,40],[126,12,121,10],[127,10,122,8],[128,10,123,8,"otherHandler"],[128,22,123,20],[128,23,123,21,"cancel"],[128,29,123,27],[128,30,123,28],[128,31,123,29],[129,10,124,8],[129,14,124,12,"otherHandler"],[129,26,124,24],[129,27,124,25,"state"],[129,32,124,30],[129,37,124,35,"_State"],[129,43,124,41],[129,44,124,42,"State"],[129,49,124,47],[129,50,124,48,"END"],[129,53,124,51],[129,55,124,53],[130,12,125,10],[131,12,126,10],[132,12,127,10],[133,12,128,10],[134,12,129,10,"otherHandler"],[134,24,129,22],[134,25,129,23,"sendEvent"],[134,34,129,32],[134,35,129,33,"_State"],[134,41,129,39],[134,42,129,40,"State"],[134,47,129,45],[134,48,129,46,"CANCELLED"],[134,57,129,55],[134,59,129,57,"_State"],[134,65,129,63],[134,66,129,64,"State"],[134,71,129,69],[134,72,129,70,"BEGAN"],[134,77,129,75],[134,78,129,76],[135,10,130,8],[136,10,131,8,"otherHandler"],[136,22,131,20],[136,23,131,21,"awaiting"],[136,31,131,29],[136,34,131,32],[136,39,131,37],[137,8,132,6],[138,6,133,4],[139,6,134,4],[139,10,134,8,"newState"],[139,18,134,16],[139,23,134,21,"_State"],[139,29,134,27],[139,30,134,28,"State"],[139,35,134,33],[139,36,134,34,"ACTIVE"],[139,42,134,40],[139,44,134,42],[140,8,135,6],[140,12,135,10],[140,13,135,11,"tryActivate"],[140,24,135,22],[140,25,135,23,"handler"],[140,32,135,30],[140,33,135,31],[141,6,136,4],[141,7,136,5],[141,13,136,11],[141,17,136,15,"oldState"],[141,25,136,23],[141,30,136,28,"_State"],[141,36,136,34],[141,37,136,35,"State"],[141,42,136,40],[141,43,136,41,"ACTIVE"],[141,49,136,47],[141,53,136,51,"oldState"],[141,61,136,59],[141,66,136,64,"_State"],[141,72,136,70],[141,73,136,71,"State"],[141,78,136,76],[141,79,136,77,"END"],[141,82,136,80],[141,84,136,82],[142,8,137,6],[142,12,137,10,"handler"],[142,19,137,17],[142,20,137,18,"active"],[142,26,137,24],[142,28,137,26],[143,10,138,8,"handler"],[143,17,138,15],[143,18,138,16,"sendEvent"],[143,27,138,25],[143,28,138,26,"newState"],[143,36,138,34],[143,38,138,36,"oldState"],[143,46,138,44],[143,47,138,45],[144,8,139,6],[144,9,139,7],[144,15,139,13],[144,19,139,17,"oldState"],[144,27,139,25],[144,32,139,30,"_State"],[144,38,139,36],[144,39,139,37,"State"],[144,44,139,42],[144,45,139,43,"ACTIVE"],[144,51,139,49],[144,56,139,54,"newState"],[144,64,139,62],[144,69,139,67,"_State"],[144,75,139,73],[144,76,139,74,"State"],[144,81,139,79],[144,82,139,80,"CANCELLED"],[144,91,139,89],[144,95,139,93,"newState"],[144,103,139,101],[144,108,139,106,"_State"],[144,114,139,112],[144,115,139,113,"State"],[144,120,139,118],[144,121,139,119,"FAILED"],[144,127,139,125],[144,128,139,126],[144,130,139,128],[145,10,140,8,"handler"],[145,17,140,15],[145,18,140,16,"sendEvent"],[145,27,140,25],[145,28,140,26,"newState"],[145,36,140,34],[145,38,140,36,"_State"],[145,44,140,42],[145,45,140,43,"State"],[145,50,140,48],[145,51,140,49,"BEGAN"],[145,56,140,54],[145,57,140,55],[146,8,141,6],[147,6,142,4],[147,7,142,5],[147,13,142,11],[147,17,142,15,"oldState"],[147,25,142,23],[147,30,142,28,"_State"],[147,36,142,34],[147,37,142,35,"State"],[147,42,142,40],[147,43,142,41,"UNDETERMINED"],[147,55,142,53],[147,59,142,57,"newState"],[147,67,142,65],[147,72,142,70,"_State"],[147,78,142,76],[147,79,142,77,"State"],[147,84,142,82],[147,85,142,83,"CANCELLED"],[147,94,142,92],[147,96,142,94],[148,8,143,6,"handler"],[148,15,143,13],[148,16,143,14,"sendEvent"],[148,25,143,23],[148,26,143,24,"newState"],[148,34,143,32],[148,36,143,34,"oldState"],[148,44,143,42],[148,45,143,43],[149,6,144,4],[150,6,145,4],[150,10,145,8],[150,11,145,9,"handlingChangeSemaphore"],[150,34,145,32],[150,38,145,36],[150,39,145,37],[151,6,146,4],[151,10,146,8],[151,11,146,9,"scheduleFinishedHandlersCleanup"],[151,42,146,40],[151,43,146,41],[151,44,146,42],[152,6,147,4],[152,10,147,8],[152,11,147,9],[152,15,147,13],[152,16,147,14,"awaitingHandlers"],[152,32,147,30],[152,33,147,31,"includes"],[152,41,147,39],[152,42,147,40,"handler"],[152,49,147,47],[152,50,147,48],[152,52,147,50],[153,8,148,6],[153,12,148,10],[153,13,148,11,"cleanupAwaitingHandlers"],[153,36,148,34],[153,37,148,35,"handler"],[153,44,148,42],[153,45,148,43],[154,6,149,4],[155,4,150,2],[156,4,151,2,"makeActive"],[156,14,151,12,"makeActive"],[156,15,151,13,"handler"],[156,22,151,20],[156,24,151,22],[157,6,152,4],[157,12,152,10,"currentState"],[157,24,152,22],[157,27,152,25,"handler"],[157,34,152,32],[157,35,152,33,"state"],[157,40,152,38],[158,6,153,4,"handler"],[158,13,153,11],[158,14,153,12,"active"],[158,20,153,18],[158,23,153,21],[158,27,153,25],[159,6,154,4,"handler"],[159,13,154,11],[159,14,154,12,"shouldResetProgress"],[159,33,154,31],[159,36,154,34],[159,40,154,38],[160,6,155,4,"handler"],[160,13,155,11],[160,14,155,12,"activationIndex"],[160,29,155,27],[160,32,155,30],[160,36,155,34],[160,37,155,35,"activationIndex"],[160,52,155,50],[160,54,155,52],[161,6,156,4],[161,11,156,9],[161,15,156,13,"i"],[161,16,156,14],[161,19,156,17],[161,23,156,21],[161,24,156,22,"gestureHandlers"],[161,39,156,37],[161,40,156,38,"length"],[161,46,156,44],[161,49,156,47],[161,50,156,48],[161,52,156,50,"i"],[161,53,156,51],[161,57,156,55],[161,58,156,56],[161,60,156,58],[161,62,156,60,"i"],[161,63,156,61],[161,65,156,63],[162,8,157,6],[162,12,157,10],[162,16,157,14],[162,17,157,15,"shouldHandlerBeCancelledBy"],[162,43,157,41],[162,44,157,42],[162,48,157,46],[162,49,157,47,"gestureHandlers"],[162,64,157,62],[162,65,157,63,"i"],[162,66,157,64],[162,67,157,65],[162,69,157,67,"handler"],[162,76,157,74],[162,77,157,75],[162,79,157,77],[163,10,158,8],[163,14,158,12],[163,15,158,13,"gestureHandlers"],[163,30,158,28],[163,31,158,29,"i"],[163,32,158,30],[163,33,158,31],[163,34,158,32,"cancel"],[163,40,158,38],[163,41,158,39],[163,42,158,40],[164,8,159,6],[165,6,160,4],[166,6,161,4],[166,11,161,9],[166,17,161,15,"otherHandler"],[166,29,161,27],[166,33,161,31],[166,37,161,35],[166,38,161,36,"awaitingHandlers"],[166,54,161,52],[166,56,161,54],[167,8,162,6],[167,12,162,10],[167,16,162,14],[167,17,162,15,"shouldHandlerBeCancelledBy"],[167,43,162,41],[167,44,162,42,"otherHandler"],[167,56,162,54],[167,58,162,56,"handler"],[167,65,162,63],[167,66,162,64],[167,68,162,66],[168,10,163,8,"otherHandler"],[168,22,163,20],[168,23,163,21,"awaiting"],[168,31,163,29],[168,34,163,32],[168,39,163,37],[169,8,164,6],[170,6,165,4],[171,6,166,4,"handler"],[171,13,166,11],[171,14,166,12,"sendEvent"],[171,23,166,21],[171,24,166,22,"_State"],[171,30,166,28],[171,31,166,29,"State"],[171,36,166,34],[171,37,166,35,"ACTIVE"],[171,43,166,41],[171,45,166,43,"_State"],[171,51,166,49],[171,52,166,50,"State"],[171,57,166,55],[171,58,166,56,"BEGAN"],[171,63,166,61],[171,64,166,62],[172,6,167,4],[172,10,167,8,"currentState"],[172,22,167,20],[172,27,167,25,"_State"],[172,33,167,31],[172,34,167,32,"State"],[172,39,167,37],[172,40,167,38,"ACTIVE"],[172,46,167,44],[172,48,167,46],[173,8,168,6,"handler"],[173,15,168,13],[173,16,168,14,"sendEvent"],[173,25,168,23],[173,26,168,24,"_State"],[173,32,168,30],[173,33,168,31,"State"],[173,38,168,36],[173,39,168,37,"END"],[173,42,168,40],[173,44,168,42,"_State"],[173,50,168,48],[173,51,168,49,"State"],[173,56,168,54],[173,57,168,55,"ACTIVE"],[173,63,168,61],[173,64,168,62],[174,8,169,6],[174,12,169,10,"currentState"],[174,24,169,22],[174,29,169,27,"_State"],[174,35,169,33],[174,36,169,34,"State"],[174,41,169,39],[174,42,169,40,"END"],[174,45,169,43],[174,47,169,45],[175,10,170,8,"handler"],[175,17,170,15],[175,18,170,16,"sendEvent"],[175,27,170,25],[175,28,170,26,"_State"],[175,34,170,32],[175,35,170,33,"State"],[175,40,170,38],[175,41,170,39,"UNDETERMINED"],[175,53,170,51],[175,55,170,53,"_State"],[175,61,170,59],[175,62,170,60,"State"],[175,67,170,65],[175,68,170,66,"END"],[175,71,170,69],[175,72,170,70],[176,8,171,6],[177,6,172,4],[178,6,173,4],[178,10,173,8],[178,11,173,9,"handler"],[178,18,173,16],[178,19,173,17,"awaiting"],[178,27,173,25],[178,29,173,27],[179,8,174,6],[180,6,175,4],[181,6,176,4,"handler"],[181,13,176,11],[181,14,176,12,"awaiting"],[181,22,176,20],[181,25,176,23],[181,30,176,28],[182,6,177,4],[182,10,177,8],[182,11,177,9,"awaitingHandlers"],[182,27,177,25],[182,30,177,28],[182,34,177,32],[182,35,177,33,"awaitingHandlers"],[182,51,177,49],[182,52,177,50,"filter"],[182,58,177,56],[182,59,177,57,"otherHandler"],[182,71,177,69],[182,75,177,73,"otherHandler"],[182,87,177,85],[182,92,177,90,"handler"],[182,99,177,97],[182,100,177,98],[183,4,178,2],[184,4,179,2,"addAwaitingHandler"],[184,22,179,20,"addAwaitingHandler"],[184,23,179,21,"handler"],[184,30,179,28],[184,32,179,30],[185,6,180,4],[185,10,180,8],[185,14,180,12],[185,15,180,13,"awaitingHandlers"],[185,31,180,29],[185,32,180,30,"includes"],[185,40,180,38],[185,41,180,39,"handler"],[185,48,180,46],[185,49,180,47],[185,51,180,49],[186,8,181,6],[187,6,182,4],[188,6,183,4],[188,10,183,8],[188,11,183,9,"awaitingHandlers"],[188,27,183,25],[188,28,183,26,"push"],[188,32,183,30],[188,33,183,31,"handler"],[188,40,183,38],[188,41,183,39],[189,6,184,4],[189,10,184,8],[189,11,184,9,"awaitingHandlersTags"],[189,31,184,29],[189,32,184,30,"add"],[189,35,184,33],[189,36,184,34,"handler"],[189,43,184,41],[189,44,184,42,"handlerTag"],[189,54,184,52],[189,55,184,53],[190,6,185,4,"handler"],[190,13,185,11],[190,14,185,12,"awaiting"],[190,22,185,20],[190,25,185,23],[190,29,185,27],[191,6,186,4,"handler"],[191,13,186,11],[191,14,186,12,"activationIndex"],[191,29,186,27],[191,32,186,30],[191,36,186,34],[191,37,186,35,"activationIndex"],[191,52,186,50],[191,54,186,52],[192,4,187,2],[193,4,188,2,"recordHandlerIfNotPresent"],[193,29,188,27,"recordHandlerIfNotPresent"],[193,30,188,28,"handler"],[193,37,188,35],[193,39,188,37],[194,6,189,4],[194,10,189,8],[194,14,189,12],[194,15,189,13,"gestureHandlers"],[194,30,189,28],[194,31,189,29,"includes"],[194,39,189,37],[194,40,189,38,"handler"],[194,47,189,45],[194,48,189,46],[194,50,189,48],[195,8,190,6],[196,6,191,4],[197,6,192,4],[197,10,192,8],[197,11,192,9,"gestureHandlers"],[197,26,192,24],[197,27,192,25,"push"],[197,31,192,29],[197,32,192,30,"handler"],[197,39,192,37],[197,40,192,38],[198,6,193,4,"handler"],[198,13,193,11],[198,14,193,12,"active"],[198,20,193,18],[198,23,193,21],[198,28,193,26],[199,6,194,4,"handler"],[199,13,194,11],[199,14,194,12,"awaiting"],[199,22,194,20],[199,25,194,23],[199,30,194,28],[200,6,195,4,"handler"],[200,13,195,11],[200,14,195,12,"activationIndex"],[200,29,195,27],[200,32,195,30,"Number"],[200,38,195,36],[200,39,195,37,"MAX_SAFE_INTEGER"],[200,55,195,53],[201,4,196,2],[202,4,197,2,"shouldHandlerWaitForOther"],[202,29,197,27,"shouldHandlerWaitForOther"],[202,30,197,28,"handler"],[202,37,197,35],[202,39,197,37,"otherHandler"],[202,51,197,49],[202,53,197,51],[203,6,198,4],[203,13,198,11,"handler"],[203,20,198,18],[203,25,198,23,"otherHandler"],[203,37,198,35],[203,42,198,40,"handler"],[203,49,198,47],[203,50,198,48,"shouldWaitForHandlerFailure"],[203,77,198,75],[203,78,198,76,"otherHandler"],[203,90,198,88],[203,91,198,89],[203,95,198,93,"otherHandler"],[203,107,198,105],[203,108,198,106,"shouldRequireToWaitForFailure"],[203,137,198,135],[203,138,198,136,"handler"],[203,145,198,143],[203,146,198,144],[203,147,198,145],[204,4,199,2],[205,4,200,2,"canRunSimultaneously"],[205,24,200,22,"canRunSimultaneously"],[205,25,200,23,"gh1"],[205,28,200,26],[205,30,200,28,"gh2"],[205,33,200,31],[205,35,200,33],[206,6,201,4],[206,13,201,11,"gh1"],[206,16,201,14],[206,21,201,19,"gh2"],[206,24,201,22],[206,28,201,26,"gh1"],[206,31,201,29],[206,32,201,30,"shouldRecognizeSimultaneously"],[206,61,201,59],[206,62,201,60,"gh2"],[206,65,201,63],[206,66,201,64],[206,70,201,68,"gh2"],[206,73,201,71],[206,74,201,72,"shouldRecognizeSimultaneously"],[206,103,201,101],[206,104,201,102,"gh1"],[206,107,201,105],[206,108,201,106],[207,4,202,2],[208,4,203,2,"shouldHandlerBeCancelledBy"],[208,30,203,28,"shouldHandlerBeCancelledBy"],[208,31,203,29,"handler"],[208,38,203,36],[208,40,203,38,"otherHandler"],[208,52,203,50],[208,54,203,52],[209,6,204,4],[209,10,204,8],[209,14,204,12],[209,15,204,13,"canRunSimultaneously"],[209,35,204,33],[209,36,204,34,"handler"],[209,43,204,41],[209,45,204,43,"otherHandler"],[209,57,204,55],[209,58,204,56],[209,60,204,58],[210,8,205,6],[210,15,205,13],[210,20,205,18],[211,6,206,4],[212,6,207,4],[212,10,207,8,"handler"],[212,17,207,15],[212,18,207,16,"awaiting"],[212,26,207,24],[212,30,207,28,"handler"],[212,37,207,35],[212,38,207,36,"state"],[212,43,207,41],[212,48,207,46,"_State"],[212,54,207,52],[212,55,207,53,"State"],[212,60,207,58],[212,61,207,59,"ACTIVE"],[212,67,207,65],[212,69,207,67],[213,8,208,6],[213,15,208,13,"handler"],[213,22,208,20],[213,23,208,21,"shouldBeCancelledByOther"],[213,47,208,45],[213,48,208,46,"otherHandler"],[213,60,208,58],[213,61,208,59],[214,6,209,4],[215,6,210,4],[215,12,210,10,"handlerPointers"],[215,27,210,25],[215,30,210,28,"handler"],[215,37,210,35],[215,38,210,36,"getTrackedPointersID"],[215,58,210,56],[215,59,210,57],[215,60,210,58],[216,6,211,4],[216,12,211,10,"otherPointers"],[216,25,211,23],[216,28,211,26,"otherHandler"],[216,40,211,38],[216,41,211,39,"getTrackedPointersID"],[216,61,211,59],[216,62,211,60],[216,63,211,61],[217,6,212,4],[217,10,212,8],[217,11,212,9,"_PointerTracker"],[217,26,212,24],[217,27,212,25,"default"],[217,34,212,32],[217,35,212,33,"shareCommonPointers"],[217,54,212,52],[217,55,212,53,"handlerPointers"],[217,70,212,68],[217,72,212,70,"otherPointers"],[217,85,212,83],[217,86,212,84],[217,90,212,88,"handler"],[217,97,212,95],[217,98,212,96,"delegate"],[217,106,212,104],[217,107,212,105,"view"],[217,111,212,109],[217,116,212,114,"otherHandler"],[217,128,212,126],[217,129,212,127,"delegate"],[217,137,212,135],[217,138,212,136,"view"],[217,142,212,140],[217,144,212,142],[218,8,213,6],[218,15,213,13],[218,19,213,17],[218,20,213,18,"checkOverlap"],[218,32,213,30],[218,33,213,31,"handler"],[218,40,213,38],[218,42,213,40,"otherHandler"],[218,54,213,52],[218,55,213,53],[219,6,214,4],[220,6,215,4],[220,13,215,11],[220,17,215,15],[221,4,216,2],[222,4,217,2,"checkOverlap"],[222,16,217,14,"checkOverlap"],[222,17,217,15,"handler"],[222,24,217,22],[222,26,217,24,"otherHandler"],[222,38,217,36],[222,40,217,38],[223,6,218,4],[224,6,219,4],[225,6,220,4],[227,6,222,4],[229,6,224,4],[229,12,224,10,"isPointerWithinBothBounds"],[229,37,224,35],[229,40,224,38,"pointer"],[229,47,224,45],[229,51,224,49],[230,8,225,6],[230,14,225,12,"point"],[230,19,225,17],[230,22,225,20,"handler"],[230,29,225,27],[230,30,225,28,"tracker"],[230,37,225,35],[230,38,225,36,"getLastAbsoluteCoords"],[230,59,225,57],[230,60,225,58,"pointer"],[230,67,225,65],[230,68,225,66],[231,8,226,6],[231,15,226,13,"point"],[231,20,226,18],[231,24,226,22,"handler"],[231,31,226,29],[231,32,226,30,"delegate"],[231,40,226,38],[231,41,226,39,"isPointerInBounds"],[231,58,226,56],[231,59,226,57,"point"],[231,64,226,62],[231,65,226,63],[231,69,226,67,"otherHandler"],[231,81,226,79],[231,82,226,80,"delegate"],[231,90,226,88],[231,91,226,89,"isPointerInBounds"],[231,108,226,106],[231,109,226,107,"point"],[231,114,226,112],[231,115,226,113],[232,6,227,4],[232,7,227,5],[233,6,228,4],[233,13,228,11,"handler"],[233,20,228,18],[233,21,228,19,"getTrackedPointersID"],[233,41,228,39],[233,42,228,40],[233,43,228,41],[233,44,228,42,"some"],[233,48,228,46],[233,49,228,47,"isPointerWithinBothBounds"],[233,74,228,72],[233,75,228,73],[234,4,229,2],[235,4,230,2,"isFinished"],[235,14,230,12,"isFinished"],[235,15,230,13,"state"],[235,20,230,18],[235,22,230,20],[236,6,231,4],[236,13,231,11,"state"],[236,18,231,16],[236,23,231,21,"_State"],[236,29,231,27],[236,30,231,28,"State"],[236,35,231,33],[236,36,231,34,"END"],[236,39,231,37],[236,43,231,41,"state"],[236,48,231,46],[236,53,231,51,"_State"],[236,59,231,57],[236,60,231,58,"State"],[236,65,231,63],[236,66,231,64,"FAILED"],[236,72,231,70],[236,76,231,74,"state"],[236,81,231,79],[236,86,231,84,"_State"],[236,92,231,90],[236,93,231,91,"State"],[236,98,231,96],[236,99,231,97,"CANCELLED"],[236,108,231,106],[237,4,232,2],[239,4,234,2],[240,4,235,2],[241,4,236,2],[242,4,237,2],[243,4,238,2],[244,4,239,2],[245,4,240,2,"cancelMouseAndPenGestures"],[245,29,240,27,"cancelMouseAndPenGestures"],[245,30,240,28,"currentHandler"],[245,44,240,42],[245,46,240,44],[246,6,241,4],[246,10,241,8],[246,11,241,9,"gestureHandlers"],[246,26,241,24],[246,27,241,25,"forEach"],[246,34,241,32],[246,35,241,33,"handler"],[246,42,241,40],[246,46,241,44],[247,8,242,6],[247,12,242,10,"handler"],[247,19,242,17],[247,20,242,18,"pointerType"],[247,31,242,29],[247,36,242,34,"_PointerType"],[247,48,242,46],[247,49,242,47,"PointerType"],[247,60,242,58],[247,61,242,59,"MOUSE"],[247,66,242,64],[247,70,242,68,"handler"],[247,77,242,75],[247,78,242,76,"pointerType"],[247,89,242,87],[247,94,242,92,"_PointerType"],[247,106,242,104],[247,107,242,105,"PointerType"],[247,118,242,116],[247,119,242,117,"STYLUS"],[247,125,242,123],[247,127,242,125],[248,10,243,8],[249,8,244,6],[250,8,245,6],[250,12,245,10,"handler"],[250,19,245,17],[250,24,245,22,"currentHandler"],[250,38,245,36],[250,40,245,38],[251,10,246,8,"handler"],[251,17,246,15],[251,18,246,16,"cancel"],[251,24,246,22],[251,25,246,23],[251,26,246,24],[252,8,247,6],[252,9,247,7],[252,15,247,13],[253,10,248,8],[254,10,249,8],[255,10,250,8],[256,10,251,8],[257,10,252,8],[258,10,253,8],[259,10,254,8],[260,10,255,8,"handler"],[260,17,255,15],[260,18,255,16,"tracker"],[260,25,255,23],[260,26,255,24,"resetTracker"],[260,38,255,36],[260,39,255,37],[260,40,255,38],[261,8,256,6],[262,6,257,4],[262,7,257,5],[262,8,257,6],[263,4,258,2],[264,4,259,2],[264,15,259,13,"instance"],[264,23,259,21,"instance"],[264,24,259,21],[264,26,259,24],[265,6,260,4],[265,10,260,8],[265,11,260,9,"GestureHandlerOrchestrator"],[265,37,260,35],[265,38,260,36,"_instance"],[265,47,260,45],[265,49,260,47],[266,8,261,6,"GestureHandlerOrchestrator"],[266,34,261,32],[266,35,261,33,"_instance"],[266,44,261,42],[266,47,261,45],[266,51,261,49,"GestureHandlerOrchestrator"],[266,77,261,75],[266,78,261,76],[266,79,261,77],[267,6,262,4],[268,6,263,4],[268,13,263,11,"GestureHandlerOrchestrator"],[268,39,263,37],[268,40,263,38,"_instance"],[268,49,263,47],[269,4,264,2],[270,2,265,0],[271,2,266,0,"exports"],[271,9,266,7],[271,10,266,8,"default"],[271,17,266,15],[271,20,266,18,"GestureHandlerOrchestrator"],[271,46,266,44],[272,0,266,45],[272,3]],"functionMap":{"names":["<global>","_interopRequireDefault","GestureHandlerOrchestrator","constructor","scheduleFinishedHandlersCleanup","cleanHandler","removeHandlerFromOrchestrator","cleanupFinishedHandlers","gestureHandlers.filter$argument_0","hasOtherHandlerToWaitFor","hasToWaitFor","shouldBeCancelledByFinishedHandler","shouldBeCancelled","tryActivate","shouldActivate","shouldBeCancelledBy","cleanupAwaitingHandlers","shouldWait","awaitingHandlers.filter$argument_0","onHandlerStateChange","makeActive","addAwaitingHandler","recordHandlerIfNotPresent","shouldHandlerWaitForOther","canRunSimultaneously","shouldHandlerBeCancelledBy","checkOverlap","isPointerWithinBothBounds","isFinished","cancelMouseAndPenGestures","gestureHandlers.forEach$argument_0","get__instance"],"mappings":"AAA;ACS,qFD;AEC;ECS,gBD;EEC;GFI;EGC;GHK;EIC;GJU;EKC;uDCS,yCD;GLC;EOC;yBCC;KDE;GPE;ESC;8BCC;KDE;GTE;EWC;GXwB;EYC;gCCC;KDE;GZE;EcC;uBCC;KDE;yDEO,sEF;GdC;EiBC;GjByC;EkBC;yDF0B,wCE;GlBC;EmBC;GnBQ;EoBC;GpBQ;EqBC;GrBE;EsBC;GtBE;EuBC;GvBa;EwBC;sCCO;KDG;GxBE;E0BC;G1BE;E2BQ;iCCC;KDgB;G3BC;E6BC;G7BK;CFC"},"hasCjsExports":true},"type":"js/module"}]}