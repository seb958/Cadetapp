{"dependencies":[{"name":"../../PointerType","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":19,"index":126},"end":{"line":8,"column":47,"index":154}}],"key":"GAwFf6ECEOo66Cd6tbX5TiUkJ2k=","exportNames":["*"],"imports":1}},{"name":"../../State","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":13,"index":170},"end":{"line":10,"column":35,"index":192}}],"key":"isk6DFwvBR7hH+nInAlMqUOxHEs=","exportNames":["*"],"imports":1}},{"name":"./PointerTracker","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":45,"index":240},"end":{"line":12,"column":72,"index":267}}],"key":"OFgH28QdBZF4xVaIuDIA/sZzwQc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _PointerType = require(_dependencyMap[0], \"../../PointerType\");\n  var _State = require(_dependencyMap[1], \"../../State\");\n  var _PointerTracker = _interopRequireDefault(require(_dependencyMap[2], \"./PointerTracker\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class GestureHandlerOrchestrator {\n    // Private beacuse of Singleton\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    constructor() {\n      _defineProperty(this, \"gestureHandlers\", []);\n      _defineProperty(this, \"awaitingHandlers\", []);\n      _defineProperty(this, \"awaitingHandlersTags\", new Set());\n      _defineProperty(this, \"handlingChangeSemaphore\", 0);\n      _defineProperty(this, \"activationIndex\", 0);\n    }\n    scheduleFinishedHandlersCleanup() {\n      if (this.handlingChangeSemaphore === 0) {\n        this.cleanupFinishedHandlers();\n      }\n    }\n    cleanHandler(handler) {\n      handler.reset();\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_VALUE;\n    }\n    removeHandlerFromOrchestrator(handler) {\n      const indexInGestureHandlers = this.gestureHandlers.indexOf(handler);\n      const indexInAwaitingHandlers = this.awaitingHandlers.indexOf(handler);\n      if (indexInGestureHandlers >= 0) {\n        this.gestureHandlers.splice(indexInGestureHandlers, 1);\n      }\n      if (indexInAwaitingHandlers >= 0) {\n        this.awaitingHandlers.splice(indexInAwaitingHandlers, 1);\n        this.awaitingHandlersTags.delete(handler.handlerTag);\n      }\n    }\n    cleanupFinishedHandlers() {\n      const handlersToRemove = new Set();\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        const handler = this.gestureHandlers[i];\n        if (this.isFinished(handler.state) && !handler.awaiting) {\n          this.cleanHandler(handler);\n          handlersToRemove.add(handler);\n        }\n      }\n      this.gestureHandlers = this.gestureHandlers.filter(handler => !handlersToRemove.has(handler));\n    }\n    hasOtherHandlerToWaitFor(handler) {\n      const hasToWaitFor = otherHandler => {\n        return !this.isFinished(otherHandler.state) && this.shouldHandlerWaitForOther(handler, otherHandler);\n      };\n      return this.gestureHandlers.some(hasToWaitFor);\n    }\n    shouldBeCancelledByFinishedHandler(handler) {\n      const shouldBeCancelled = otherHandler => {\n        return this.shouldHandlerWaitForOther(handler, otherHandler) && otherHandler.state === _State.State.END;\n      };\n      return this.gestureHandlers.some(shouldBeCancelled);\n    }\n    tryActivate(handler) {\n      if (this.shouldBeCancelledByFinishedHandler(handler)) {\n        handler.cancel();\n        return;\n      }\n      if (this.hasOtherHandlerToWaitFor(handler)) {\n        this.addAwaitingHandler(handler);\n        return;\n      }\n      const handlerState = handler.state;\n      if (handlerState === _State.State.CANCELLED || handlerState === _State.State.FAILED) {\n        return;\n      }\n      if (this.shouldActivate(handler)) {\n        this.makeActive(handler);\n        return;\n      }\n      if (handlerState === _State.State.ACTIVE) {\n        handler.fail();\n        return;\n      }\n      if (handlerState === _State.State.BEGAN) {\n        handler.cancel();\n      }\n    }\n    shouldActivate(handler) {\n      const shouldBeCancelledBy = otherHandler => {\n        return this.shouldHandlerBeCancelledBy(handler, otherHandler);\n      };\n      return !this.gestureHandlers.some(shouldBeCancelledBy);\n    }\n    cleanupAwaitingHandlers(handler) {\n      const shouldWait = otherHandler => {\n        return !otherHandler.awaiting && this.shouldHandlerWaitForOther(otherHandler, handler);\n      };\n      for (const otherHandler of this.awaitingHandlers) {\n        if (shouldWait(otherHandler)) {\n          this.cleanHandler(otherHandler);\n          this.awaitingHandlersTags.delete(otherHandler.handlerTag);\n        }\n      }\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => this.awaitingHandlersTags.has(otherHandler.handlerTag));\n    }\n    onHandlerStateChange(handler, newState, oldState, sendIfDisabled) {\n      if (!handler.enabled && !sendIfDisabled) {\n        return;\n      }\n      this.handlingChangeSemaphore += 1;\n      if (this.isFinished(newState)) {\n        for (const otherHandler of this.awaitingHandlers) {\n          if (!this.shouldHandlerWaitForOther(otherHandler, handler) || !this.awaitingHandlersTags.has(otherHandler.handlerTag)) {\n            continue;\n          }\n          if (newState !== _State.State.END) {\n            this.tryActivate(otherHandler);\n            continue;\n          }\n          otherHandler.cancel();\n          if (otherHandler.state === _State.State.END) {\n            // Handle edge case, where discrete gestures end immediately after activation thus\n            // their state is set to END and when the gesture they are waiting for activates they\n            // should be cancelled, however `cancel` was never sent as gestures were already in the END state.\n            // Send synthetic BEGAN -> CANCELLED to properly handle JS logic\n            otherHandler.sendEvent(_State.State.CANCELLED, _State.State.BEGAN);\n          }\n          otherHandler.awaiting = false;\n        }\n      }\n      if (newState === _State.State.ACTIVE) {\n        this.tryActivate(handler);\n      } else if (oldState === _State.State.ACTIVE || oldState === _State.State.END) {\n        if (handler.active) {\n          handler.sendEvent(newState, oldState);\n        } else if (oldState === _State.State.ACTIVE && (newState === _State.State.CANCELLED || newState === _State.State.FAILED)) {\n          handler.sendEvent(newState, _State.State.BEGAN);\n        }\n      } else if (oldState !== _State.State.UNDETERMINED || newState !== _State.State.CANCELLED) {\n        handler.sendEvent(newState, oldState);\n      }\n      this.handlingChangeSemaphore -= 1;\n      this.scheduleFinishedHandlersCleanup();\n      if (!this.awaitingHandlers.includes(handler)) {\n        this.cleanupAwaitingHandlers(handler);\n      }\n    }\n    makeActive(handler) {\n      const currentState = handler.state;\n      handler.active = true;\n      handler.shouldResetProgress = true;\n      handler.activationIndex = this.activationIndex++;\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        if (this.shouldHandlerBeCancelledBy(this.gestureHandlers[i], handler)) {\n          this.gestureHandlers[i].cancel();\n        }\n      }\n      for (const otherHandler of this.awaitingHandlers) {\n        if (this.shouldHandlerBeCancelledBy(otherHandler, handler)) {\n          otherHandler.awaiting = false;\n        }\n      }\n      handler.sendEvent(_State.State.ACTIVE, _State.State.BEGAN);\n      if (currentState !== _State.State.ACTIVE) {\n        handler.sendEvent(_State.State.END, _State.State.ACTIVE);\n        if (currentState !== _State.State.END) {\n          handler.sendEvent(_State.State.UNDETERMINED, _State.State.END);\n        }\n      }\n      if (!handler.awaiting) {\n        return;\n      }\n      handler.awaiting = false;\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => otherHandler !== handler);\n    }\n    addAwaitingHandler(handler) {\n      if (this.awaitingHandlers.includes(handler)) {\n        return;\n      }\n      this.awaitingHandlers.push(handler);\n      this.awaitingHandlersTags.add(handler.handlerTag);\n      handler.awaiting = true;\n      handler.activationIndex = this.activationIndex++;\n    }\n    recordHandlerIfNotPresent(handler) {\n      if (this.gestureHandlers.includes(handler)) {\n        return;\n      }\n      this.gestureHandlers.push(handler);\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_SAFE_INTEGER;\n    }\n    shouldHandlerWaitForOther(handler, otherHandler) {\n      return handler !== otherHandler && (handler.shouldWaitForHandlerFailure(otherHandler) || otherHandler.shouldRequireToWaitForFailure(handler));\n    }\n    canRunSimultaneously(gh1, gh2) {\n      return gh1 === gh2 || gh1.shouldRecognizeSimultaneously(gh2) || gh2.shouldRecognizeSimultaneously(gh1);\n    }\n    shouldHandlerBeCancelledBy(handler, otherHandler) {\n      if (this.canRunSimultaneously(handler, otherHandler)) {\n        return false;\n      }\n      if (handler.awaiting || handler.state === _State.State.ACTIVE) {\n        // For now it always returns false\n        return handler.shouldBeCancelledByOther(otherHandler);\n      }\n      const handlerPointers = handler.getTrackedPointersID();\n      const otherPointers = otherHandler.getTrackedPointersID();\n      if (!_PointerTracker.default.shareCommonPointers(handlerPointers, otherPointers) && handler.delegate.view !== otherHandler.delegate.view) {\n        return this.checkOverlap(handler, otherHandler);\n      }\n      return true;\n    }\n    checkOverlap(handler, otherHandler) {\n      // If handlers don't have common pointers, default return value is false.\n      // However, if at least on pointer overlaps with both handlers, we return true\n      // This solves issue in overlapping parents example\n      // TODO: Find better way to handle that issue, for example by activation order and handler cancelling\n      const isPointerWithinBothBounds = pointer => {\n        const point = handler.tracker.getLastAbsoluteCoords(pointer);\n        return handler.delegate.isPointerInBounds(point) && otherHandler.delegate.isPointerInBounds(point);\n      };\n      return handler.getTrackedPointersID().some(isPointerWithinBothBounds);\n    }\n    isFinished(state) {\n      return state === _State.State.END || state === _State.State.FAILED || state === _State.State.CANCELLED;\n    } // This function is called when handler receives touchdown event\n    // If handler is using mouse or pen as a pointer and any handler receives touch event,\n    // mouse/pen event dissappears - it doesn't send onPointerCancel nor onPointerUp (and others)\n    // This became a problem because handler was left at active state without any signal to end or fail\n    // To handle this, when new touch event is received, we loop through active handlers and check which type of\n    // pointer they're using. If there are any handler with mouse/pen as a pointer, we cancel them\n\n    cancelMouseAndPenGestures(currentHandler) {\n      this.gestureHandlers.forEach(handler => {\n        if (handler.pointerType !== _PointerType.PointerType.MOUSE && handler.pointerType !== _PointerType.PointerType.STYLUS) {\n          return;\n        }\n        if (handler !== currentHandler) {\n          handler.cancel();\n        } else {\n          // Handler that received touch event should have its pointer tracker reset\n          // This allows handler to smoothly change from mouse/pen to touch\n          // The drawback is, that when we try to use mouse/pen one more time, it doesn't send onPointerDown at the first time\n          // so it is required to click two times to get handler to work\n          //\n          // However, handler will receive manually created onPointerEnter that is triggered in EventManager in onPointerMove method.\n          // There may be possibility to use that fact to make handler respond properly to first mouse click\n          handler.tracker.resetTracker();\n        }\n      });\n    }\n    static get instance() {\n      if (!GestureHandlerOrchestrator._instance) {\n        GestureHandlerOrchestrator._instance = new GestureHandlerOrchestrator();\n      }\n      return GestureHandlerOrchestrator._instance;\n    }\n  }\n  exports.default = GestureHandlerOrchestrator;\n  _defineProperty(GestureHandlerOrchestrator, \"_instance\", void 0);\n});","lineCount":284,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,8,0],[8,6,8,4,"_PointerType"],[8,18,8,16],[8,21,8,19,"require"],[8,28,8,26],[8,29,8,26,"_dependencyMap"],[8,43,8,26],[8,67,8,46],[8,68,8,47],[9,2,10,0],[9,6,10,4,"_State"],[9,12,10,10],[9,15,10,13,"require"],[9,22,10,20],[9,23,10,20,"_dependencyMap"],[9,37,10,20],[9,55,10,34],[9,56,10,35],[10,2,12,0],[10,6,12,4,"_PointerTracker"],[10,21,12,19],[10,24,12,22,"_interopRequireDefault"],[10,46,12,44],[10,47,12,45,"require"],[10,54,12,52],[10,55,12,52,"_dependencyMap"],[10,69,12,52],[10,92,12,71],[10,93,12,72],[10,94,12,73],[11,2,14,0],[11,11,14,9,"_interopRequireDefault"],[11,33,14,31,"_interopRequireDefault"],[11,34,14,32,"obj"],[11,37,14,35],[11,39,14,37],[12,4,14,39],[12,11,14,46,"obj"],[12,14,14,49],[12,18,14,53,"obj"],[12,21,14,56],[12,22,14,57,"__esModule"],[12,32,14,67],[12,35,14,70,"obj"],[12,38,14,73],[12,41,14,76],[13,6,14,78,"default"],[13,13,14,85],[13,15,14,87,"obj"],[14,4,14,91],[14,5,14,92],[15,2,14,94],[16,2,16,0],[16,11,16,9,"_defineProperty"],[16,26,16,24,"_defineProperty"],[16,27,16,25,"obj"],[16,30,16,28],[16,32,16,30,"key"],[16,35,16,33],[16,37,16,35,"value"],[16,42,16,40],[16,44,16,42],[17,4,16,44],[17,8,16,48,"key"],[17,11,16,51],[17,15,16,55,"obj"],[17,18,16,58],[17,20,16,60],[18,6,16,62,"Object"],[18,12,16,68],[18,13,16,69,"defineProperty"],[18,27,16,83],[18,28,16,84,"obj"],[18,31,16,87],[18,33,16,89,"key"],[18,36,16,92],[18,38,16,94],[19,8,16,96,"value"],[19,13,16,101],[19,15,16,103,"value"],[19,20,16,108],[20,8,16,110,"enumerable"],[20,18,16,120],[20,20,16,122],[20,24,16,126],[21,8,16,128,"configurable"],[21,20,16,140],[21,22,16,142],[21,26,16,146],[22,8,16,148,"writable"],[22,16,16,156],[22,18,16,158],[23,6,16,163],[23,7,16,164],[23,8,16,165],[24,4,16,167],[24,5,16,168],[24,11,16,174],[25,6,16,176,"obj"],[25,9,16,179],[25,10,16,180,"key"],[25,13,16,183],[25,14,16,184],[25,17,16,187,"value"],[25,22,16,192],[26,4,16,194],[27,4,16,196],[27,11,16,203,"obj"],[27,14,16,206],[28,2,16,208],[29,2,18,0],[29,8,18,6,"GestureHandlerOrchestrator"],[29,34,18,32],[29,35,18,33],[30,4,19,2],[31,4,20,2],[32,4,21,2,"constructor"],[32,15,21,13,"constructor"],[32,16,21,13],[32,18,21,16],[33,6,22,4,"_defineProperty"],[33,21,22,19],[33,22,22,20],[33,26,22,24],[33,28,22,26],[33,45,22,43],[33,47,22,45],[33,49,22,47],[33,50,22,48],[34,6,24,4,"_defineProperty"],[34,21,24,19],[34,22,24,20],[34,26,24,24],[34,28,24,26],[34,46,24,44],[34,48,24,46],[34,50,24,48],[34,51,24,49],[35,6,26,4,"_defineProperty"],[35,21,26,19],[35,22,26,20],[35,26,26,24],[35,28,26,26],[35,50,26,48],[35,52,26,50],[35,56,26,54,"Set"],[35,59,26,57],[35,60,26,58],[35,61,26,59],[35,62,26,60],[36,6,28,4,"_defineProperty"],[36,21,28,19],[36,22,28,20],[36,26,28,24],[36,28,28,26],[36,53,28,51],[36,55,28,53],[36,56,28,54],[36,57,28,55],[37,6,30,4,"_defineProperty"],[37,21,30,19],[37,22,30,20],[37,26,30,24],[37,28,30,26],[37,45,30,43],[37,47,30,45],[37,48,30,46],[37,49,30,47],[38,4,31,2],[39,4,33,2,"scheduleFinishedHandlersCleanup"],[39,35,33,33,"scheduleFinishedHandlersCleanup"],[39,36,33,33],[39,38,33,36],[40,6,34,4],[40,10,34,8],[40,14,34,12],[40,15,34,13,"handlingChangeSemaphore"],[40,38,34,36],[40,43,34,41],[40,44,34,42],[40,46,34,44],[41,8,35,6],[41,12,35,10],[41,13,35,11,"cleanupFinishedHandlers"],[41,36,35,34],[41,37,35,35],[41,38,35,36],[42,6,36,4],[43,4,37,2],[44,4,39,2,"cleanHandler"],[44,16,39,14,"cleanHandler"],[44,17,39,15,"handler"],[44,24,39,22],[44,26,39,24],[45,6,40,4,"handler"],[45,13,40,11],[45,14,40,12,"reset"],[45,19,40,17],[45,20,40,18],[45,21,40,19],[46,6,41,4,"handler"],[46,13,41,11],[46,14,41,12,"active"],[46,20,41,18],[46,23,41,21],[46,28,41,26],[47,6,42,4,"handler"],[47,13,42,11],[47,14,42,12,"awaiting"],[47,22,42,20],[47,25,42,23],[47,30,42,28],[48,6,43,4,"handler"],[48,13,43,11],[48,14,43,12,"activationIndex"],[48,29,43,27],[48,32,43,30,"Number"],[48,38,43,36],[48,39,43,37,"MAX_VALUE"],[48,48,43,46],[49,4,44,2],[50,4,46,2,"removeHandlerFromOrchestrator"],[50,33,46,31,"removeHandlerFromOrchestrator"],[50,34,46,32,"handler"],[50,41,46,39],[50,43,46,41],[51,6,47,4],[51,12,47,10,"indexInGestureHandlers"],[51,34,47,32],[51,37,47,35],[51,41,47,39],[51,42,47,40,"gestureHandlers"],[51,57,47,55],[51,58,47,56,"indexOf"],[51,65,47,63],[51,66,47,64,"handler"],[51,73,47,71],[51,74,47,72],[52,6,48,4],[52,12,48,10,"indexInAwaitingHandlers"],[52,35,48,33],[52,38,48,36],[52,42,48,40],[52,43,48,41,"awaitingHandlers"],[52,59,48,57],[52,60,48,58,"indexOf"],[52,67,48,65],[52,68,48,66,"handler"],[52,75,48,73],[52,76,48,74],[53,6,50,4],[53,10,50,8,"indexInGestureHandlers"],[53,32,50,30],[53,36,50,34],[53,37,50,35],[53,39,50,37],[54,8,51,6],[54,12,51,10],[54,13,51,11,"gestureHandlers"],[54,28,51,26],[54,29,51,27,"splice"],[54,35,51,33],[54,36,51,34,"indexInGestureHandlers"],[54,58,51,56],[54,60,51,58],[54,61,51,59],[54,62,51,60],[55,6,52,4],[56,6,54,4],[56,10,54,8,"indexInAwaitingHandlers"],[56,33,54,31],[56,37,54,35],[56,38,54,36],[56,40,54,38],[57,8,55,6],[57,12,55,10],[57,13,55,11,"awaitingHandlers"],[57,29,55,27],[57,30,55,28,"splice"],[57,36,55,34],[57,37,55,35,"indexInAwaitingHandlers"],[57,60,55,58],[57,62,55,60],[57,63,55,61],[57,64,55,62],[58,8,56,6],[58,12,56,10],[58,13,56,11,"awaitingHandlersTags"],[58,33,56,31],[58,34,56,32,"delete"],[58,40,56,38],[58,41,56,39,"handler"],[58,48,56,46],[58,49,56,47,"handlerTag"],[58,59,56,57],[58,60,56,58],[59,6,57,4],[60,4,58,2],[61,4,60,2,"cleanupFinishedHandlers"],[61,27,60,25,"cleanupFinishedHandlers"],[61,28,60,25],[61,30,60,28],[62,6,61,4],[62,12,61,10,"handlersToRemove"],[62,28,61,26],[62,31,61,29],[62,35,61,33,"Set"],[62,38,61,36],[62,39,61,37],[62,40,61,38],[63,6,63,4],[63,11,63,9],[63,15,63,13,"i"],[63,16,63,14],[63,19,63,17],[63,23,63,21],[63,24,63,22,"gestureHandlers"],[63,39,63,37],[63,40,63,38,"length"],[63,46,63,44],[63,49,63,47],[63,50,63,48],[63,52,63,50,"i"],[63,53,63,51],[63,57,63,55],[63,58,63,56],[63,60,63,58],[63,62,63,60,"i"],[63,63,63,61],[63,65,63,63],[64,8,64,6],[64,14,64,12,"handler"],[64,21,64,19],[64,24,64,22],[64,28,64,26],[64,29,64,27,"gestureHandlers"],[64,44,64,42],[64,45,64,43,"i"],[64,46,64,44],[64,47,64,45],[65,8,66,6],[65,12,66,10],[65,16,66,14],[65,17,66,15,"isFinished"],[65,27,66,25],[65,28,66,26,"handler"],[65,35,66,33],[65,36,66,34,"state"],[65,41,66,39],[65,42,66,40],[65,46,66,44],[65,47,66,45,"handler"],[65,54,66,52],[65,55,66,53,"awaiting"],[65,63,66,61],[65,65,66,63],[66,10,67,8],[66,14,67,12],[66,15,67,13,"cleanHandler"],[66,27,67,25],[66,28,67,26,"handler"],[66,35,67,33],[66,36,67,34],[67,10,68,8,"handlersToRemove"],[67,26,68,24],[67,27,68,25,"add"],[67,30,68,28],[67,31,68,29,"handler"],[67,38,68,36],[67,39,68,37],[68,8,69,6],[69,6,70,4],[70,6,72,4],[70,10,72,8],[70,11,72,9,"gestureHandlers"],[70,26,72,24],[70,29,72,27],[70,33,72,31],[70,34,72,32,"gestureHandlers"],[70,49,72,47],[70,50,72,48,"filter"],[70,56,72,54],[70,57,72,55,"handler"],[70,64,72,62],[70,68,72,66],[70,69,72,67,"handlersToRemove"],[70,85,72,83],[70,86,72,84,"has"],[70,89,72,87],[70,90,72,88,"handler"],[70,97,72,95],[70,98,72,96],[70,99,72,97],[71,4,73,2],[72,4,75,2,"hasOtherHandlerToWaitFor"],[72,28,75,26,"hasOtherHandlerToWaitFor"],[72,29,75,27,"handler"],[72,36,75,34],[72,38,75,36],[73,6,76,4],[73,12,76,10,"hasToWaitFor"],[73,24,76,22],[73,27,76,25,"otherHandler"],[73,39,76,37],[73,43,76,41],[74,8,77,6],[74,15,77,13],[74,16,77,14],[74,20,77,18],[74,21,77,19,"isFinished"],[74,31,77,29],[74,32,77,30,"otherHandler"],[74,44,77,42],[74,45,77,43,"state"],[74,50,77,48],[74,51,77,49],[74,55,77,53],[74,59,77,57],[74,60,77,58,"shouldHandlerWaitForOther"],[74,85,77,83],[74,86,77,84,"handler"],[74,93,77,91],[74,95,77,93,"otherHandler"],[74,107,77,105],[74,108,77,106],[75,6,78,4],[75,7,78,5],[76,6,80,4],[76,13,80,11],[76,17,80,15],[76,18,80,16,"gestureHandlers"],[76,33,80,31],[76,34,80,32,"some"],[76,38,80,36],[76,39,80,37,"hasToWaitFor"],[76,51,80,49],[76,52,80,50],[77,4,81,2],[78,4,83,2,"shouldBeCancelledByFinishedHandler"],[78,38,83,36,"shouldBeCancelledByFinishedHandler"],[78,39,83,37,"handler"],[78,46,83,44],[78,48,83,46],[79,6,84,4],[79,12,84,10,"shouldBeCancelled"],[79,29,84,27],[79,32,84,30,"otherHandler"],[79,44,84,42],[79,48,84,46],[80,8,85,6],[80,15,85,13],[80,19,85,17],[80,20,85,18,"shouldHandlerWaitForOther"],[80,45,85,43],[80,46,85,44,"handler"],[80,53,85,51],[80,55,85,53,"otherHandler"],[80,67,85,65],[80,68,85,66],[80,72,85,70,"otherHandler"],[80,84,85,82],[80,85,85,83,"state"],[80,90,85,88],[80,95,85,93,"_State"],[80,101,85,99],[80,102,85,100,"State"],[80,107,85,105],[80,108,85,106,"END"],[80,111,85,109],[81,6,86,4],[81,7,86,5],[82,6,88,4],[82,13,88,11],[82,17,88,15],[82,18,88,16,"gestureHandlers"],[82,33,88,31],[82,34,88,32,"some"],[82,38,88,36],[82,39,88,37,"shouldBeCancelled"],[82,56,88,54],[82,57,88,55],[83,4,89,2],[84,4,91,2,"tryActivate"],[84,15,91,13,"tryActivate"],[84,16,91,14,"handler"],[84,23,91,21],[84,25,91,23],[85,6,92,4],[85,10,92,8],[85,14,92,12],[85,15,92,13,"shouldBeCancelledByFinishedHandler"],[85,49,92,47],[85,50,92,48,"handler"],[85,57,92,55],[85,58,92,56],[85,60,92,58],[86,8,93,6,"handler"],[86,15,93,13],[86,16,93,14,"cancel"],[86,22,93,20],[86,23,93,21],[86,24,93,22],[87,8,94,6],[88,6,95,4],[89,6,97,4],[89,10,97,8],[89,14,97,12],[89,15,97,13,"hasOtherHandlerToWaitFor"],[89,39,97,37],[89,40,97,38,"handler"],[89,47,97,45],[89,48,97,46],[89,50,97,48],[90,8,98,6],[90,12,98,10],[90,13,98,11,"addAwaitingHandler"],[90,31,98,29],[90,32,98,30,"handler"],[90,39,98,37],[90,40,98,38],[91,8,99,6],[92,6,100,4],[93,6,102,4],[93,12,102,10,"handlerState"],[93,24,102,22],[93,27,102,25,"handler"],[93,34,102,32],[93,35,102,33,"state"],[93,40,102,38],[94,6,104,4],[94,10,104,8,"handlerState"],[94,22,104,20],[94,27,104,25,"_State"],[94,33,104,31],[94,34,104,32,"State"],[94,39,104,37],[94,40,104,38,"CANCELLED"],[94,49,104,47],[94,53,104,51,"handlerState"],[94,65,104,63],[94,70,104,68,"_State"],[94,76,104,74],[94,77,104,75,"State"],[94,82,104,80],[94,83,104,81,"FAILED"],[94,89,104,87],[94,91,104,89],[95,8,105,6],[96,6,106,4],[97,6,108,4],[97,10,108,8],[97,14,108,12],[97,15,108,13,"shouldActivate"],[97,29,108,27],[97,30,108,28,"handler"],[97,37,108,35],[97,38,108,36],[97,40,108,38],[98,8,109,6],[98,12,109,10],[98,13,109,11,"makeActive"],[98,23,109,21],[98,24,109,22,"handler"],[98,31,109,29],[98,32,109,30],[99,8,110,6],[100,6,111,4],[101,6,113,4],[101,10,113,8,"handlerState"],[101,22,113,20],[101,27,113,25,"_State"],[101,33,113,31],[101,34,113,32,"State"],[101,39,113,37],[101,40,113,38,"ACTIVE"],[101,46,113,44],[101,48,113,46],[102,8,114,6,"handler"],[102,15,114,13],[102,16,114,14,"fail"],[102,20,114,18],[102,21,114,19],[102,22,114,20],[103,8,115,6],[104,6,116,4],[105,6,118,4],[105,10,118,8,"handlerState"],[105,22,118,20],[105,27,118,25,"_State"],[105,33,118,31],[105,34,118,32,"State"],[105,39,118,37],[105,40,118,38,"BEGAN"],[105,45,118,43],[105,47,118,45],[106,8,119,6,"handler"],[106,15,119,13],[106,16,119,14,"cancel"],[106,22,119,20],[106,23,119,21],[106,24,119,22],[107,6,120,4],[108,4,121,2],[109,4,123,2,"shouldActivate"],[109,18,123,16,"shouldActivate"],[109,19,123,17,"handler"],[109,26,123,24],[109,28,123,26],[110,6,124,4],[110,12,124,10,"shouldBeCancelledBy"],[110,31,124,29],[110,34,124,32,"otherHandler"],[110,46,124,44],[110,50,124,48],[111,8,125,6],[111,15,125,13],[111,19,125,17],[111,20,125,18,"shouldHandlerBeCancelledBy"],[111,46,125,44],[111,47,125,45,"handler"],[111,54,125,52],[111,56,125,54,"otherHandler"],[111,68,125,66],[111,69,125,67],[112,6,126,4],[112,7,126,5],[113,6,128,4],[113,13,128,11],[113,14,128,12],[113,18,128,16],[113,19,128,17,"gestureHandlers"],[113,34,128,32],[113,35,128,33,"some"],[113,39,128,37],[113,40,128,38,"shouldBeCancelledBy"],[113,59,128,57],[113,60,128,58],[114,4,129,2],[115,4,131,2,"cleanupAwaitingHandlers"],[115,27,131,25,"cleanupAwaitingHandlers"],[115,28,131,26,"handler"],[115,35,131,33],[115,37,131,35],[116,6,132,4],[116,12,132,10,"shouldWait"],[116,22,132,20],[116,25,132,23,"otherHandler"],[116,37,132,35],[116,41,132,39],[117,8,133,6],[117,15,133,13],[117,16,133,14,"otherHandler"],[117,28,133,26],[117,29,133,27,"awaiting"],[117,37,133,35],[117,41,133,39],[117,45,133,43],[117,46,133,44,"shouldHandlerWaitForOther"],[117,71,133,69],[117,72,133,70,"otherHandler"],[117,84,133,82],[117,86,133,84,"handler"],[117,93,133,91],[117,94,133,92],[118,6,134,4],[118,7,134,5],[119,6,136,4],[119,11,136,9],[119,17,136,15,"otherHandler"],[119,29,136,27],[119,33,136,31],[119,37,136,35],[119,38,136,36,"awaitingHandlers"],[119,54,136,52],[119,56,136,54],[120,8,137,6],[120,12,137,10,"shouldWait"],[120,22,137,20],[120,23,137,21,"otherHandler"],[120,35,137,33],[120,36,137,34],[120,38,137,36],[121,10,138,8],[121,14,138,12],[121,15,138,13,"cleanHandler"],[121,27,138,25],[121,28,138,26,"otherHandler"],[121,40,138,38],[121,41,138,39],[122,10,139,8],[122,14,139,12],[122,15,139,13,"awaitingHandlersTags"],[122,35,139,33],[122,36,139,34,"delete"],[122,42,139,40],[122,43,139,41,"otherHandler"],[122,55,139,53],[122,56,139,54,"handlerTag"],[122,66,139,64],[122,67,139,65],[123,8,140,6],[124,6,141,4],[125,6,143,4],[125,10,143,8],[125,11,143,9,"awaitingHandlers"],[125,27,143,25],[125,30,143,28],[125,34,143,32],[125,35,143,33,"awaitingHandlers"],[125,51,143,49],[125,52,143,50,"filter"],[125,58,143,56],[125,59,143,57,"otherHandler"],[125,71,143,69],[125,75,143,73],[125,79,143,77],[125,80,143,78,"awaitingHandlersTags"],[125,100,143,98],[125,101,143,99,"has"],[125,104,143,102],[125,105,143,103,"otherHandler"],[125,117,143,115],[125,118,143,116,"handlerTag"],[125,128,143,126],[125,129,143,127],[125,130,143,128],[126,4,144,2],[127,4,146,2,"onHandlerStateChange"],[127,24,146,22,"onHandlerStateChange"],[127,25,146,23,"handler"],[127,32,146,30],[127,34,146,32,"newState"],[127,42,146,40],[127,44,146,42,"oldState"],[127,52,146,50],[127,54,146,52,"sendIfDisabled"],[127,68,146,66],[127,70,146,68],[128,6,147,4],[128,10,147,8],[128,11,147,9,"handler"],[128,18,147,16],[128,19,147,17,"enabled"],[128,26,147,24],[128,30,147,28],[128,31,147,29,"sendIfDisabled"],[128,45,147,43],[128,47,147,45],[129,8,148,6],[130,6,149,4],[131,6,151,4],[131,10,151,8],[131,11,151,9,"handlingChangeSemaphore"],[131,34,151,32],[131,38,151,36],[131,39,151,37],[132,6,153,4],[132,10,153,8],[132,14,153,12],[132,15,153,13,"isFinished"],[132,25,153,23],[132,26,153,24,"newState"],[132,34,153,32],[132,35,153,33],[132,37,153,35],[133,8,154,6],[133,13,154,11],[133,19,154,17,"otherHandler"],[133,31,154,29],[133,35,154,33],[133,39,154,37],[133,40,154,38,"awaitingHandlers"],[133,56,154,54],[133,58,154,56],[134,10,155,8],[134,14,155,12],[134,15,155,13],[134,19,155,17],[134,20,155,18,"shouldHandlerWaitForOther"],[134,45,155,43],[134,46,155,44,"otherHandler"],[134,58,155,56],[134,60,155,58,"handler"],[134,67,155,65],[134,68,155,66],[134,72,155,70],[134,73,155,71],[134,77,155,75],[134,78,155,76,"awaitingHandlersTags"],[134,98,155,96],[134,99,155,97,"has"],[134,102,155,100],[134,103,155,101,"otherHandler"],[134,115,155,113],[134,116,155,114,"handlerTag"],[134,126,155,124],[134,127,155,125],[134,129,155,127],[135,12,156,10],[136,10,157,8],[137,10,159,8],[137,14,159,12,"newState"],[137,22,159,20],[137,27,159,25,"_State"],[137,33,159,31],[137,34,159,32,"State"],[137,39,159,37],[137,40,159,38,"END"],[137,43,159,41],[137,45,159,43],[138,12,160,10],[138,16,160,14],[138,17,160,15,"tryActivate"],[138,28,160,26],[138,29,160,27,"otherHandler"],[138,41,160,39],[138,42,160,40],[139,12,161,10],[140,10,162,8],[141,10,164,8,"otherHandler"],[141,22,164,20],[141,23,164,21,"cancel"],[141,29,164,27],[141,30,164,28],[141,31,164,29],[142,10,166,8],[142,14,166,12,"otherHandler"],[142,26,166,24],[142,27,166,25,"state"],[142,32,166,30],[142,37,166,35,"_State"],[142,43,166,41],[142,44,166,42,"State"],[142,49,166,47],[142,50,166,48,"END"],[142,53,166,51],[142,55,166,53],[143,12,167,10],[144,12,168,10],[145,12,169,10],[146,12,170,10],[147,12,171,10,"otherHandler"],[147,24,171,22],[147,25,171,23,"sendEvent"],[147,34,171,32],[147,35,171,33,"_State"],[147,41,171,39],[147,42,171,40,"State"],[147,47,171,45],[147,48,171,46,"CANCELLED"],[147,57,171,55],[147,59,171,57,"_State"],[147,65,171,63],[147,66,171,64,"State"],[147,71,171,69],[147,72,171,70,"BEGAN"],[147,77,171,75],[147,78,171,76],[148,10,172,8],[149,10,174,8,"otherHandler"],[149,22,174,20],[149,23,174,21,"awaiting"],[149,31,174,29],[149,34,174,32],[149,39,174,37],[150,8,175,6],[151,6,176,4],[152,6,178,4],[152,10,178,8,"newState"],[152,18,178,16],[152,23,178,21,"_State"],[152,29,178,27],[152,30,178,28,"State"],[152,35,178,33],[152,36,178,34,"ACTIVE"],[152,42,178,40],[152,44,178,42],[153,8,179,6],[153,12,179,10],[153,13,179,11,"tryActivate"],[153,24,179,22],[153,25,179,23,"handler"],[153,32,179,30],[153,33,179,31],[154,6,180,4],[154,7,180,5],[154,13,180,11],[154,17,180,15,"oldState"],[154,25,180,23],[154,30,180,28,"_State"],[154,36,180,34],[154,37,180,35,"State"],[154,42,180,40],[154,43,180,41,"ACTIVE"],[154,49,180,47],[154,53,180,51,"oldState"],[154,61,180,59],[154,66,180,64,"_State"],[154,72,180,70],[154,73,180,71,"State"],[154,78,180,76],[154,79,180,77,"END"],[154,82,180,80],[154,84,180,82],[155,8,181,6],[155,12,181,10,"handler"],[155,19,181,17],[155,20,181,18,"active"],[155,26,181,24],[155,28,181,26],[156,10,182,8,"handler"],[156,17,182,15],[156,18,182,16,"sendEvent"],[156,27,182,25],[156,28,182,26,"newState"],[156,36,182,34],[156,38,182,36,"oldState"],[156,46,182,44],[156,47,182,45],[157,8,183,6],[157,9,183,7],[157,15,183,13],[157,19,183,17,"oldState"],[157,27,183,25],[157,32,183,30,"_State"],[157,38,183,36],[157,39,183,37,"State"],[157,44,183,42],[157,45,183,43,"ACTIVE"],[157,51,183,49],[157,56,183,54,"newState"],[157,64,183,62],[157,69,183,67,"_State"],[157,75,183,73],[157,76,183,74,"State"],[157,81,183,79],[157,82,183,80,"CANCELLED"],[157,91,183,89],[157,95,183,93,"newState"],[157,103,183,101],[157,108,183,106,"_State"],[157,114,183,112],[157,115,183,113,"State"],[157,120,183,118],[157,121,183,119,"FAILED"],[157,127,183,125],[157,128,183,126],[157,130,183,128],[158,10,184,8,"handler"],[158,17,184,15],[158,18,184,16,"sendEvent"],[158,27,184,25],[158,28,184,26,"newState"],[158,36,184,34],[158,38,184,36,"_State"],[158,44,184,42],[158,45,184,43,"State"],[158,50,184,48],[158,51,184,49,"BEGAN"],[158,56,184,54],[158,57,184,55],[159,8,185,6],[160,6,186,4],[160,7,186,5],[160,13,186,11],[160,17,186,15,"oldState"],[160,25,186,23],[160,30,186,28,"_State"],[160,36,186,34],[160,37,186,35,"State"],[160,42,186,40],[160,43,186,41,"UNDETERMINED"],[160,55,186,53],[160,59,186,57,"newState"],[160,67,186,65],[160,72,186,70,"_State"],[160,78,186,76],[160,79,186,77,"State"],[160,84,186,82],[160,85,186,83,"CANCELLED"],[160,94,186,92],[160,96,186,94],[161,8,187,6,"handler"],[161,15,187,13],[161,16,187,14,"sendEvent"],[161,25,187,23],[161,26,187,24,"newState"],[161,34,187,32],[161,36,187,34,"oldState"],[161,44,187,42],[161,45,187,43],[162,6,188,4],[163,6,190,4],[163,10,190,8],[163,11,190,9,"handlingChangeSemaphore"],[163,34,190,32],[163,38,190,36],[163,39,190,37],[164,6,191,4],[164,10,191,8],[164,11,191,9,"scheduleFinishedHandlersCleanup"],[164,42,191,40],[164,43,191,41],[164,44,191,42],[165,6,193,4],[165,10,193,8],[165,11,193,9],[165,15,193,13],[165,16,193,14,"awaitingHandlers"],[165,32,193,30],[165,33,193,31,"includes"],[165,41,193,39],[165,42,193,40,"handler"],[165,49,193,47],[165,50,193,48],[165,52,193,50],[166,8,194,6],[166,12,194,10],[166,13,194,11,"cleanupAwaitingHandlers"],[166,36,194,34],[166,37,194,35,"handler"],[166,44,194,42],[166,45,194,43],[167,6,195,4],[168,4,196,2],[169,4,198,2,"makeActive"],[169,14,198,12,"makeActive"],[169,15,198,13,"handler"],[169,22,198,20],[169,24,198,22],[170,6,199,4],[170,12,199,10,"currentState"],[170,24,199,22],[170,27,199,25,"handler"],[170,34,199,32],[170,35,199,33,"state"],[170,40,199,38],[171,6,200,4,"handler"],[171,13,200,11],[171,14,200,12,"active"],[171,20,200,18],[171,23,200,21],[171,27,200,25],[172,6,201,4,"handler"],[172,13,201,11],[172,14,201,12,"shouldResetProgress"],[172,33,201,31],[172,36,201,34],[172,40,201,38],[173,6,202,4,"handler"],[173,13,202,11],[173,14,202,12,"activationIndex"],[173,29,202,27],[173,32,202,30],[173,36,202,34],[173,37,202,35,"activationIndex"],[173,52,202,50],[173,54,202,52],[174,6,204,4],[174,11,204,9],[174,15,204,13,"i"],[174,16,204,14],[174,19,204,17],[174,23,204,21],[174,24,204,22,"gestureHandlers"],[174,39,204,37],[174,40,204,38,"length"],[174,46,204,44],[174,49,204,47],[174,50,204,48],[174,52,204,50,"i"],[174,53,204,51],[174,57,204,55],[174,58,204,56],[174,60,204,58],[174,62,204,60,"i"],[174,63,204,61],[174,65,204,63],[175,8,205,6],[175,12,205,10],[175,16,205,14],[175,17,205,15,"shouldHandlerBeCancelledBy"],[175,43,205,41],[175,44,205,42],[175,48,205,46],[175,49,205,47,"gestureHandlers"],[175,64,205,62],[175,65,205,63,"i"],[175,66,205,64],[175,67,205,65],[175,69,205,67,"handler"],[175,76,205,74],[175,77,205,75],[175,79,205,77],[176,10,206,8],[176,14,206,12],[176,15,206,13,"gestureHandlers"],[176,30,206,28],[176,31,206,29,"i"],[176,32,206,30],[176,33,206,31],[176,34,206,32,"cancel"],[176,40,206,38],[176,41,206,39],[176,42,206,40],[177,8,207,6],[178,6,208,4],[179,6,210,4],[179,11,210,9],[179,17,210,15,"otherHandler"],[179,29,210,27],[179,33,210,31],[179,37,210,35],[179,38,210,36,"awaitingHandlers"],[179,54,210,52],[179,56,210,54],[180,8,211,6],[180,12,211,10],[180,16,211,14],[180,17,211,15,"shouldHandlerBeCancelledBy"],[180,43,211,41],[180,44,211,42,"otherHandler"],[180,56,211,54],[180,58,211,56,"handler"],[180,65,211,63],[180,66,211,64],[180,68,211,66],[181,10,212,8,"otherHandler"],[181,22,212,20],[181,23,212,21,"awaiting"],[181,31,212,29],[181,34,212,32],[181,39,212,37],[182,8,213,6],[183,6,214,4],[184,6,216,4,"handler"],[184,13,216,11],[184,14,216,12,"sendEvent"],[184,23,216,21],[184,24,216,22,"_State"],[184,30,216,28],[184,31,216,29,"State"],[184,36,216,34],[184,37,216,35,"ACTIVE"],[184,43,216,41],[184,45,216,43,"_State"],[184,51,216,49],[184,52,216,50,"State"],[184,57,216,55],[184,58,216,56,"BEGAN"],[184,63,216,61],[184,64,216,62],[185,6,218,4],[185,10,218,8,"currentState"],[185,22,218,20],[185,27,218,25,"_State"],[185,33,218,31],[185,34,218,32,"State"],[185,39,218,37],[185,40,218,38,"ACTIVE"],[185,46,218,44],[185,48,218,46],[186,8,219,6,"handler"],[186,15,219,13],[186,16,219,14,"sendEvent"],[186,25,219,23],[186,26,219,24,"_State"],[186,32,219,30],[186,33,219,31,"State"],[186,38,219,36],[186,39,219,37,"END"],[186,42,219,40],[186,44,219,42,"_State"],[186,50,219,48],[186,51,219,49,"State"],[186,56,219,54],[186,57,219,55,"ACTIVE"],[186,63,219,61],[186,64,219,62],[187,8,221,6],[187,12,221,10,"currentState"],[187,24,221,22],[187,29,221,27,"_State"],[187,35,221,33],[187,36,221,34,"State"],[187,41,221,39],[187,42,221,40,"END"],[187,45,221,43],[187,47,221,45],[188,10,222,8,"handler"],[188,17,222,15],[188,18,222,16,"sendEvent"],[188,27,222,25],[188,28,222,26,"_State"],[188,34,222,32],[188,35,222,33,"State"],[188,40,222,38],[188,41,222,39,"UNDETERMINED"],[188,53,222,51],[188,55,222,53,"_State"],[188,61,222,59],[188,62,222,60,"State"],[188,67,222,65],[188,68,222,66,"END"],[188,71,222,69],[188,72,222,70],[189,8,223,6],[190,6,224,4],[191,6,226,4],[191,10,226,8],[191,11,226,9,"handler"],[191,18,226,16],[191,19,226,17,"awaiting"],[191,27,226,25],[191,29,226,27],[192,8,227,6],[193,6,228,4],[194,6,230,4,"handler"],[194,13,230,11],[194,14,230,12,"awaiting"],[194,22,230,20],[194,25,230,23],[194,30,230,28],[195,6,231,4],[195,10,231,8],[195,11,231,9,"awaitingHandlers"],[195,27,231,25],[195,30,231,28],[195,34,231,32],[195,35,231,33,"awaitingHandlers"],[195,51,231,49],[195,52,231,50,"filter"],[195,58,231,56],[195,59,231,57,"otherHandler"],[195,71,231,69],[195,75,231,73,"otherHandler"],[195,87,231,85],[195,92,231,90,"handler"],[195,99,231,97],[195,100,231,98],[196,4,232,2],[197,4,234,2,"addAwaitingHandler"],[197,22,234,20,"addAwaitingHandler"],[197,23,234,21,"handler"],[197,30,234,28],[197,32,234,30],[198,6,235,4],[198,10,235,8],[198,14,235,12],[198,15,235,13,"awaitingHandlers"],[198,31,235,29],[198,32,235,30,"includes"],[198,40,235,38],[198,41,235,39,"handler"],[198,48,235,46],[198,49,235,47],[198,51,235,49],[199,8,236,6],[200,6,237,4],[201,6,239,4],[201,10,239,8],[201,11,239,9,"awaitingHandlers"],[201,27,239,25],[201,28,239,26,"push"],[201,32,239,30],[201,33,239,31,"handler"],[201,40,239,38],[201,41,239,39],[202,6,240,4],[202,10,240,8],[202,11,240,9,"awaitingHandlersTags"],[202,31,240,29],[202,32,240,30,"add"],[202,35,240,33],[202,36,240,34,"handler"],[202,43,240,41],[202,44,240,42,"handlerTag"],[202,54,240,52],[202,55,240,53],[203,6,241,4,"handler"],[203,13,241,11],[203,14,241,12,"awaiting"],[203,22,241,20],[203,25,241,23],[203,29,241,27],[204,6,242,4,"handler"],[204,13,242,11],[204,14,242,12,"activationIndex"],[204,29,242,27],[204,32,242,30],[204,36,242,34],[204,37,242,35,"activationIndex"],[204,52,242,50],[204,54,242,52],[205,4,243,2],[206,4,245,2,"recordHandlerIfNotPresent"],[206,29,245,27,"recordHandlerIfNotPresent"],[206,30,245,28,"handler"],[206,37,245,35],[206,39,245,37],[207,6,246,4],[207,10,246,8],[207,14,246,12],[207,15,246,13,"gestureHandlers"],[207,30,246,28],[207,31,246,29,"includes"],[207,39,246,37],[207,40,246,38,"handler"],[207,47,246,45],[207,48,246,46],[207,50,246,48],[208,8,247,6],[209,6,248,4],[210,6,250,4],[210,10,250,8],[210,11,250,9,"gestureHandlers"],[210,26,250,24],[210,27,250,25,"push"],[210,31,250,29],[210,32,250,30,"handler"],[210,39,250,37],[210,40,250,38],[211,6,251,4,"handler"],[211,13,251,11],[211,14,251,12,"active"],[211,20,251,18],[211,23,251,21],[211,28,251,26],[212,6,252,4,"handler"],[212,13,252,11],[212,14,252,12,"awaiting"],[212,22,252,20],[212,25,252,23],[212,30,252,28],[213,6,253,4,"handler"],[213,13,253,11],[213,14,253,12,"activationIndex"],[213,29,253,27],[213,32,253,30,"Number"],[213,38,253,36],[213,39,253,37,"MAX_SAFE_INTEGER"],[213,55,253,53],[214,4,254,2],[215,4,256,2,"shouldHandlerWaitForOther"],[215,29,256,27,"shouldHandlerWaitForOther"],[215,30,256,28,"handler"],[215,37,256,35],[215,39,256,37,"otherHandler"],[215,51,256,49],[215,53,256,51],[216,6,257,4],[216,13,257,11,"handler"],[216,20,257,18],[216,25,257,23,"otherHandler"],[216,37,257,35],[216,42,257,40,"handler"],[216,49,257,47],[216,50,257,48,"shouldWaitForHandlerFailure"],[216,77,257,75],[216,78,257,76,"otherHandler"],[216,90,257,88],[216,91,257,89],[216,95,257,93,"otherHandler"],[216,107,257,105],[216,108,257,106,"shouldRequireToWaitForFailure"],[216,137,257,135],[216,138,257,136,"handler"],[216,145,257,143],[216,146,257,144],[216,147,257,145],[217,4,258,2],[218,4,260,2,"canRunSimultaneously"],[218,24,260,22,"canRunSimultaneously"],[218,25,260,23,"gh1"],[218,28,260,26],[218,30,260,28,"gh2"],[218,33,260,31],[218,35,260,33],[219,6,261,4],[219,13,261,11,"gh1"],[219,16,261,14],[219,21,261,19,"gh2"],[219,24,261,22],[219,28,261,26,"gh1"],[219,31,261,29],[219,32,261,30,"shouldRecognizeSimultaneously"],[219,61,261,59],[219,62,261,60,"gh2"],[219,65,261,63],[219,66,261,64],[219,70,261,68,"gh2"],[219,73,261,71],[219,74,261,72,"shouldRecognizeSimultaneously"],[219,103,261,101],[219,104,261,102,"gh1"],[219,107,261,105],[219,108,261,106],[220,4,262,2],[221,4,264,2,"shouldHandlerBeCancelledBy"],[221,30,264,28,"shouldHandlerBeCancelledBy"],[221,31,264,29,"handler"],[221,38,264,36],[221,40,264,38,"otherHandler"],[221,52,264,50],[221,54,264,52],[222,6,265,4],[222,10,265,8],[222,14,265,12],[222,15,265,13,"canRunSimultaneously"],[222,35,265,33],[222,36,265,34,"handler"],[222,43,265,41],[222,45,265,43,"otherHandler"],[222,57,265,55],[222,58,265,56],[222,60,265,58],[223,8,266,6],[223,15,266,13],[223,20,266,18],[224,6,267,4],[225,6,269,4],[225,10,269,8,"handler"],[225,17,269,15],[225,18,269,16,"awaiting"],[225,26,269,24],[225,30,269,28,"handler"],[225,37,269,35],[225,38,269,36,"state"],[225,43,269,41],[225,48,269,46,"_State"],[225,54,269,52],[225,55,269,53,"State"],[225,60,269,58],[225,61,269,59,"ACTIVE"],[225,67,269,65],[225,69,269,67],[226,8,270,6],[227,8,271,6],[227,15,271,13,"handler"],[227,22,271,20],[227,23,271,21,"shouldBeCancelledByOther"],[227,47,271,45],[227,48,271,46,"otherHandler"],[227,60,271,58],[227,61,271,59],[228,6,272,4],[229,6,274,4],[229,12,274,10,"handlerPointers"],[229,27,274,25],[229,30,274,28,"handler"],[229,37,274,35],[229,38,274,36,"getTrackedPointersID"],[229,58,274,56],[229,59,274,57],[229,60,274,58],[230,6,275,4],[230,12,275,10,"otherPointers"],[230,25,275,23],[230,28,275,26,"otherHandler"],[230,40,275,38],[230,41,275,39,"getTrackedPointersID"],[230,61,275,59],[230,62,275,60],[230,63,275,61],[231,6,277,4],[231,10,277,8],[231,11,277,9,"_PointerTracker"],[231,26,277,24],[231,27,277,25,"default"],[231,34,277,32],[231,35,277,33,"shareCommonPointers"],[231,54,277,52],[231,55,277,53,"handlerPointers"],[231,70,277,68],[231,72,277,70,"otherPointers"],[231,85,277,83],[231,86,277,84],[231,90,277,88,"handler"],[231,97,277,95],[231,98,277,96,"delegate"],[231,106,277,104],[231,107,277,105,"view"],[231,111,277,109],[231,116,277,114,"otherHandler"],[231,128,277,126],[231,129,277,127,"delegate"],[231,137,277,135],[231,138,277,136,"view"],[231,142,277,140],[231,144,277,142],[232,8,278,6],[232,15,278,13],[232,19,278,17],[232,20,278,18,"checkOverlap"],[232,32,278,30],[232,33,278,31,"handler"],[232,40,278,38],[232,42,278,40,"otherHandler"],[232,54,278,52],[232,55,278,53],[233,6,279,4],[234,6,281,4],[234,13,281,11],[234,17,281,15],[235,4,282,2],[236,4,284,2,"checkOverlap"],[236,16,284,14,"checkOverlap"],[236,17,284,15,"handler"],[236,24,284,22],[236,26,284,24,"otherHandler"],[236,38,284,36],[236,40,284,38],[237,6,285,4],[238,6,286,4],[239,6,287,4],[240,6,288,4],[241,6,289,4],[241,12,289,10,"isPointerWithinBothBounds"],[241,37,289,35],[241,40,289,38,"pointer"],[241,47,289,45],[241,51,289,49],[242,8,290,6],[242,14,290,12,"point"],[242,19,290,17],[242,22,290,20,"handler"],[242,29,290,27],[242,30,290,28,"tracker"],[242,37,290,35],[242,38,290,36,"getLastAbsoluteCoords"],[242,59,290,57],[242,60,290,58,"pointer"],[242,67,290,65],[242,68,290,66],[243,8,291,6],[243,15,291,13,"handler"],[243,22,291,20],[243,23,291,21,"delegate"],[243,31,291,29],[243,32,291,30,"isPointerInBounds"],[243,49,291,47],[243,50,291,48,"point"],[243,55,291,53],[243,56,291,54],[243,60,291,58,"otherHandler"],[243,72,291,70],[243,73,291,71,"delegate"],[243,81,291,79],[243,82,291,80,"isPointerInBounds"],[243,99,291,97],[243,100,291,98,"point"],[243,105,291,103],[243,106,291,104],[244,6,292,4],[244,7,292,5],[245,6,294,4],[245,13,294,11,"handler"],[245,20,294,18],[245,21,294,19,"getTrackedPointersID"],[245,41,294,39],[245,42,294,40],[245,43,294,41],[245,44,294,42,"some"],[245,48,294,46],[245,49,294,47,"isPointerWithinBothBounds"],[245,74,294,72],[245,75,294,73],[246,4,295,2],[247,4,297,2,"isFinished"],[247,14,297,12,"isFinished"],[247,15,297,13,"state"],[247,20,297,18],[247,22,297,20],[248,6,298,4],[248,13,298,11,"state"],[248,18,298,16],[248,23,298,21,"_State"],[248,29,298,27],[248,30,298,28,"State"],[248,35,298,33],[248,36,298,34,"END"],[248,39,298,37],[248,43,298,41,"state"],[248,48,298,46],[248,53,298,51,"_State"],[248,59,298,57],[248,60,298,58,"State"],[248,65,298,63],[248,66,298,64,"FAILED"],[248,72,298,70],[248,76,298,74,"state"],[248,81,298,79],[248,86,298,84,"_State"],[248,92,298,90],[248,93,298,91,"State"],[248,98,298,96],[248,99,298,97,"CANCELLED"],[248,108,298,106],[249,4,299,2],[249,5,299,3],[249,6,299,4],[250,4,300,2],[251,4,301,2],[252,4,302,2],[253,4,303,2],[254,4,304,2],[256,4,307,2,"cancelMouseAndPenGestures"],[256,29,307,27,"cancelMouseAndPenGestures"],[256,30,307,28,"currentHandler"],[256,44,307,42],[256,46,307,44],[257,6,308,4],[257,10,308,8],[257,11,308,9,"gestureHandlers"],[257,26,308,24],[257,27,308,25,"forEach"],[257,34,308,32],[257,35,308,33,"handler"],[257,42,308,40],[257,46,308,44],[258,8,309,6],[258,12,309,10,"handler"],[258,19,309,17],[258,20,309,18,"pointerType"],[258,31,309,29],[258,36,309,34,"_PointerType"],[258,48,309,46],[258,49,309,47,"PointerType"],[258,60,309,58],[258,61,309,59,"MOUSE"],[258,66,309,64],[258,70,309,68,"handler"],[258,77,309,75],[258,78,309,76,"pointerType"],[258,89,309,87],[258,94,309,92,"_PointerType"],[258,106,309,104],[258,107,309,105,"PointerType"],[258,118,309,116],[258,119,309,117,"STYLUS"],[258,125,309,123],[258,127,309,125],[259,10,310,8],[260,8,311,6],[261,8,313,6],[261,12,313,10,"handler"],[261,19,313,17],[261,24,313,22,"currentHandler"],[261,38,313,36],[261,40,313,38],[262,10,314,8,"handler"],[262,17,314,15],[262,18,314,16,"cancel"],[262,24,314,22],[262,25,314,23],[262,26,314,24],[263,8,315,6],[263,9,315,7],[263,15,315,13],[264,10,316,8],[265,10,317,8],[266,10,318,8],[267,10,319,8],[268,10,320,8],[269,10,321,8],[270,10,322,8],[271,10,323,8,"handler"],[271,17,323,15],[271,18,323,16,"tracker"],[271,25,323,23],[271,26,323,24,"resetTracker"],[271,38,323,36],[271,39,323,37],[271,40,323,38],[272,8,324,6],[273,6,325,4],[273,7,325,5],[273,8,325,6],[274,4,326,2],[275,4,328,2],[275,15,328,13,"instance"],[275,23,328,21,"instance"],[275,24,328,21],[275,26,328,24],[276,6,329,4],[276,10,329,8],[276,11,329,9,"GestureHandlerOrchestrator"],[276,37,329,35],[276,38,329,36,"_instance"],[276,47,329,45],[276,49,329,47],[277,8,330,6,"GestureHandlerOrchestrator"],[277,34,330,32],[277,35,330,33,"_instance"],[277,44,330,42],[277,47,330,45],[277,51,330,49,"GestureHandlerOrchestrator"],[277,77,330,75],[277,78,330,76],[277,79,330,77],[278,6,331,4],[279,6,333,4],[279,13,333,11,"GestureHandlerOrchestrator"],[279,39,333,37],[279,40,333,38,"_instance"],[279,49,333,47],[280,4,334,2],[281,2,336,0],[282,2,338,0,"exports"],[282,9,338,7],[282,10,338,8,"default"],[282,17,338,15],[282,20,338,18,"GestureHandlerOrchestrator"],[282,46,338,44],[283,2,340,0,"_defineProperty"],[283,17,340,15],[283,18,340,16,"GestureHandlerOrchestrator"],[283,44,340,42],[283,46,340,44],[283,57,340,55],[283,59,340,57],[283,64,340,62],[283,65,340,63],[283,66,340,64],[284,0,340,65],[284,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_defineProperty","GestureHandlerOrchestrator","constructor","scheduleFinishedHandlersCleanup","cleanHandler","removeHandlerFromOrchestrator","cleanupFinishedHandlers","gestureHandlers.filter$argument_0","hasOtherHandlerToWaitFor","hasToWaitFor","shouldBeCancelledByFinishedHandler","shouldBeCancelled","tryActivate","shouldActivate","shouldBeCancelledBy","cleanupAwaitingHandlers","shouldWait","awaitingHandlers.filter$argument_0","onHandlerStateChange","makeActive","addAwaitingHandler","recordHandlerIfNotPresent","shouldHandlerWaitForOther","canRunSimultaneously","shouldHandlerBeCancelledBy","checkOverlap","isPointerWithinBothBounds","isFinished","cancelMouseAndPenGestures","gestureHandlers.forEach$argument_0","get__instance"],"mappings":"AAA;ACa,+FD;AEE,iNF;AGE;ECG;GDU;EEE;GFI;EGE;GHK;EIE;GJY;EKE;uDCY,yCD;GLC;EOE;yBCC;KDE;GPG;ESE;8BCC;KDE;GTG;EWE;GX8B;EYE;gCCC;KDE;GZG;EcE;uBCC;KDE;yDES,sEF;GdC;EiBE;GjBkD;EkBE;yDFiC,wCE;GlBC;EmBE;GnBS;EoBE;GpBS;EqBE;GrBE;EsBE;GtBE;EuBE;GvBkB;EwBE;sCCK;KDG;GxBG;E0BE;G1BE;E2BQ;iCCC;KDiB;G3BC;E6BE;G7BM;CHE"},"hasCjsExports":true},"type":"js/module"}]}