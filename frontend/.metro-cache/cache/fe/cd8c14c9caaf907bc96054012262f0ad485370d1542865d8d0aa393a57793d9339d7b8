{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":119},"end":{"line":5,"column":66,"index":185}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":186},"end":{"line":6,"column":63,"index":249}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":250},"end":{"line":7,"column":33,"index":283}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":284},"end":{"line":8,"column":108,"index":392}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":393},"end":{"line":9,"column":56,"index":449}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":450},"end":{"line":10,"column":64,"index":514}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":515},"end":{"line":11,"column":47,"index":562}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":563},"end":{"line":12,"column":81,"index":644}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":645},"end":{"line":13,"column":43,"index":688}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":689},"end":{"line":14,"column":64,"index":753}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":754},"end":{"line":15,"column":77,"index":831}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":832},"end":{"line":16,"column":55,"index":887}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":888},"end":{"line":17,"column":49,"index":937}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":938},"end":{"line":18,"column":48,"index":986}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsUIManager = require(_dependencyMap[2], \"react-native-web/dist/exports/UIManager\");\n  var UIManager = _interopDefault(_reactNativeWebDistExportsUIManager);\n  var _reactNativeWebDistExportsDeviceEventEmitter = require(_dependencyMap[3], \"react-native-web/dist/exports/DeviceEventEmitter\");\n  var DeviceEventEmitter = _interopDefault(_reactNativeWebDistExportsDeviceEventEmitter);\n  var _customDirectEventTypes = require(_dependencyMap[4], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = require(_dependencyMap[5], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[6], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[7], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[8], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[9], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[10], \"../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[11], \"../utils\");\n  var _ActionType = require(_dependencyMap[12], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[13], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[14], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[15], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[16], \"../mountRegistry\");\n  var _reactJsxRuntime = require(_dependencyMap[17], \"react/jsx-runtime\");\n  const UIManagerAny = UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _utils2.isFabric)() && Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid);\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig);\n  const UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  const {\n    setJSResponder: oldSetJSResponder = () => {\n      // no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {\n      // no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && Platform.default.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      static displayName = name;\n      static contextType = GestureHandlerRootViewContext.default;\n      handlerTag = -1;\n      constructor(props) {\n        super(props);\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        this.inspectorToggleListener?.remove();\n        this.isMountedRef.current = false;\n        if (Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)();\n        // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      onGestureHandlerEvent = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onGestureEvent === 'function') {\n            this.props.onGestureEvent?.(event);\n          }\n        } else {\n          this.props.onGestureHandlerEvent?.(event);\n        }\n      };\n\n      // TODO(TS) - make sure this is right type for event\n      onGestureHandlerStateChange = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onHandlerStateChange === 'function') {\n            this.props.onHandlerStateChange?.(event);\n          }\n          const state = event.nativeEvent.state;\n          const stateEventName = stateToPropMappings[state];\n          const eventHandler = stateEventName && this.props[stateEventName];\n          if (eventHandler && typeof eventHandler === 'function') {\n            eventHandler(event);\n          }\n        } else {\n          this.props.onGestureHandlerStateChange?.(event);\n        }\n      };\n      refHandler = node => {\n        this.viewNode = node;\n        const child = React.Children.only(this.props.children);\n        // @ts-ignore Since React 19 ref is accessible as standard prop\n        // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n        const ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n        if (!ref) {\n          return;\n        }\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      };\n      createGestureHandler = newConfig => {\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = newConfig;\n        RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n      };\n      attachGestureHandler = newViewTag => {\n        this.viewTag = newViewTag;\n        if (Platform.default.OS === 'web') {\n          // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n          RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n          // ignored on web\n          this.propsRef);\n        } else {\n          (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n            onGestureEvent: this.onGestureHandlerEvent,\n            onGestureStateChange: this.onGestureHandlerStateChange\n          });\n          const actionType = (() => {\n            const onGestureEvent = this.props?.onGestureEvent;\n            const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n            const onHandlerStateChange = this.props?.onHandlerStateChange;\n            const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n            const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n            if (isReanimatedHandler) {\n              // Reanimated worklet\n              return _ActionType.ActionType.REANIMATED_WORKLET;\n            } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n              // Animated.event with useNativeDriver: true\n              return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n            } else {\n              // JS callback or Animated.event with useNativeDriver: false\n              return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n            }\n          })();\n          RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n        }\n        (0, _utils.scheduleFlushOperations)();\n        (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n          _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n        });\n      };\n      updateGestureHandler = newConfig => {\n        this.config = newConfig;\n        RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n        (0, _utils.scheduleFlushOperations)();\n      };\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props;\n\n        // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n\n      // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      setNativeProps(updates) {\n        const mergedProps = Object.assign({}, this.props, updates);\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/(0, _reactJsxRuntime.jsx)(_PressabilityDebugView.PressabilityDebugView, {\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }, \"pressabilityDebugView\"));\n        }\n        return /*#__PURE__*/React.cloneElement(child, Object.assign({\n          ref: this.refHandler,\n          collapsable: false\n        }, (0, _utils2.isTestEnv)() ? {\n          handlerType: name,\n          handlerTag: this.handlerTag,\n          enabled: this.props.enabled\n        } : {}, {\n          testID: this.props.testID ?? child.props.testID\n        }, events), grandChildren);\n      }\n    }\n    return Handler;\n  }\n});","lineCount":407,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13],[11,10,1,13,"d"],[11,11,1,13],[11,14,1,13,"Object"],[11,20,1,13],[11,21,1,13,"getOwnPropertyDescriptor"],[11,45,1,13],[11,46,1,13,"e"],[11,47,1,13],[11,49,1,13,"k"],[11,50,1,13],[12,6,1,13,"Object"],[12,12,1,13],[12,13,1,13,"defineProperty"],[12,27,1,13],[12,28,1,13,"n"],[12,29,1,13],[12,31,1,13,"k"],[12,32,1,13],[12,34,1,13,"d"],[12,35,1,13],[12,36,1,13,"get"],[12,39,1,13],[12,42,1,13,"d"],[12,43,1,13],[13,8,1,13,"enumerable"],[13,18,1,13],[14,8,1,13,"get"],[14,11,1,13],[14,22,1,13,"get"],[14,23,1,13],[15,10,1,13],[15,17,1,13,"e"],[15,18,1,13],[15,19,1,13,"k"],[15,20,1,13],[16,8,1,13],[17,6,1,13],[18,4,1,13],[19,4,1,13,"n"],[19,5,1,13],[19,6,1,13,"default"],[19,13,1,13],[19,16,1,13,"e"],[19,17,1,13],[20,4,1,13],[20,11,1,13,"n"],[20,12,1,13],[21,2,1,13],[22,2,1,13],[22,11,1,13,"_interopDefault"],[22,27,1,13,"e"],[22,28,1,13],[23,4,1,13],[23,11,1,13,"e"],[23,12,1,13],[23,16,1,13,"e"],[23,17,1,13],[23,18,1,13,"__esModule"],[23,28,1,13],[23,31,1,13,"e"],[23,32,1,13],[24,6,1,13,"default"],[24,13,1,13],[24,15,1,13,"e"],[25,4,1,13],[26,2,1,13],[27,2,115,15,"Object"],[27,8,115,15],[27,9,115,15,"defineProperty"],[27,23,115,15],[27,24,115,15,"exports"],[27,31,115,15],[28,4,115,15,"enumerable"],[28,14,115,15],[29,4,115,15,"get"],[29,7,115,15],[29,18,115,15,"get"],[29,19,115,15],[30,6,115,15],[30,13,115,15,"createHandler"],[30,26,115,15],[31,4,115,15],[32,2,115,15],[33,2,3,0],[33,6,3,0,"_react"],[33,12,3,0],[33,15,3,0,"require"],[33,22,3,0],[33,23,3,0,"_dependencyMap"],[33,37,3,0],[34,2,3,0],[34,6,3,0,"React"],[34,11,3,0],[34,14,3,0,"_interopNamespace"],[34,31,3,0],[34,32,3,0,"_react"],[34,38,3,0],[35,2,3,31],[35,6,3,31,"_reactNativeWebDistExportsPlatform"],[35,40,3,31],[35,43,3,31,"require"],[35,50,3,31],[35,51,3,31,"_dependencyMap"],[35,65,3,31],[36,2,3,31],[36,6,3,31,"Platform"],[36,14,3,31],[36,17,3,31,"_interopDefault"],[36,32,3,31],[36,33,3,31,"_reactNativeWebDistExportsPlatform"],[36,67,3,31],[37,2,3,31],[37,6,3,31,"_reactNativeWebDistExportsUIManager"],[37,41,3,31],[37,44,3,31,"require"],[37,51,3,31],[37,52,3,31,"_dependencyMap"],[37,66,3,31],[38,2,3,31],[38,6,3,31,"UIManager"],[38,15,3,31],[38,18,3,31,"_interopDefault"],[38,33,3,31],[38,34,3,31,"_reactNativeWebDistExportsUIManager"],[38,69,3,31],[39,2,3,31],[39,6,3,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[39,50,3,31],[39,53,3,31,"require"],[39,60,3,31],[39,61,3,31,"_dependencyMap"],[39,75,3,31],[40,2,3,31],[40,6,3,31,"DeviceEventEmitter"],[40,24,3,31],[40,27,3,31,"_interopDefault"],[40,42,3,31],[40,43,3,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[40,87,3,31],[41,2,5,0],[41,6,5,0,"_customDirectEventTypes"],[41,29,5,0],[41,32,5,0,"require"],[41,39,5,0],[41,40,5,0,"_dependencyMap"],[41,54,5,0],[42,2,6,0],[42,6,6,0,"_RNGestureHandlerModule"],[42,29,6,0],[42,32,6,0,"require"],[42,39,6,0],[42,40,6,0,"_dependencyMap"],[42,54,6,0],[43,2,6,0],[43,6,6,0,"RNGestureHandlerModule"],[43,28,6,0],[43,31,6,0,"_interopDefault"],[43,46,6,0],[43,47,6,0,"_RNGestureHandlerModule"],[43,70,6,0],[44,2,7,0],[44,6,7,0,"_State"],[44,12,7,0],[44,15,7,0,"require"],[44,22,7,0],[44,23,7,0,"_dependencyMap"],[44,37,7,0],[45,2,8,0],[45,6,8,0,"_handlersRegistry"],[45,23,8,0],[45,26,8,0,"require"],[45,33,8,0],[45,34,8,0,"_dependencyMap"],[45,48,8,0],[46,2,9,0],[46,6,9,0,"_getNextHandlerTag"],[46,24,9,0],[46,27,9,0,"require"],[46,34,9,0],[46,35,9,0,"_dependencyMap"],[46,49,9,0],[47,2,10,0],[47,6,10,0,"_utils"],[47,12,10,0],[47,15,10,0,"require"],[47,22,10,0],[47,23,10,0,"_dependencyMap"],[47,37,10,0],[48,2,11,0],[48,6,11,0,"_findNodeHandle"],[48,21,11,0],[48,24,11,0,"require"],[48,31,11,0],[48,32,11,0,"_dependencyMap"],[48,46,11,0],[49,2,11,0],[49,6,11,0,"findNodeHandle"],[49,20,11,0],[49,23,11,0,"_interopDefault"],[49,38,11,0],[49,39,11,0,"_findNodeHandle"],[49,54,11,0],[50,2,12,0],[50,6,12,0,"_utils2"],[50,13,12,0],[50,16,12,0,"require"],[50,23,12,0],[50,24,12,0,"_dependencyMap"],[50,38,12,0],[51,2,13,0],[51,6,13,0,"_ActionType"],[51,17,13,0],[51,20,13,0,"require"],[51,27,13,0],[51,28,13,0,"_dependencyMap"],[51,42,13,0],[52,2,14,0],[52,6,14,0,"_PressabilityDebugView"],[52,28,14,0],[52,31,14,0,"require"],[52,38,14,0],[52,39,14,0,"_dependencyMap"],[52,53,14,0],[53,2,15,0],[53,6,15,0,"_GestureHandlerRootViewContext"],[53,36,15,0],[53,39,15,0,"require"],[53,46,15,0],[53,47,15,0,"_dependencyMap"],[53,61,15,0],[54,2,15,0],[54,6,15,0,"GestureHandlerRootViewContext"],[54,35,15,0],[54,38,15,0,"_interopDefault"],[54,53,15,0],[54,54,15,0,"_GestureHandlerRootViewContext"],[54,84,15,0],[55,2,16,0],[55,6,16,0,"_ghQueueMicrotask"],[55,23,16,0],[55,26,16,0,"require"],[55,33,16,0],[55,34,16,0,"_dependencyMap"],[55,48,16,0],[56,2,17,0],[56,6,17,0,"_mountRegistry"],[56,20,17,0],[56,23,17,0,"require"],[56,30,17,0],[56,31,17,0,"_dependencyMap"],[56,45,17,0],[57,2,18,0],[57,6,18,0,"_reactJsxRuntime"],[57,22,18,0],[57,25,18,0,"require"],[57,32,18,0],[57,33,18,0,"_dependencyMap"],[57,47,18,0],[58,2,19,0],[58,8,19,6,"UIManagerAny"],[58,20,19,18],[58,23,19,21,"UIManager"],[58,32,19,30],[58,33,19,30,"default"],[58,40,19,30],[59,2,20,0,"customDirectEventTypes"],[59,25,20,22],[59,26,20,22,"customDirectEventTypes"],[59,48,20,22],[59,49,20,23,"topGestureHandlerEvent"],[59,71,20,45],[59,74,20,48],[60,4,21,2,"registrationName"],[60,20,21,18],[60,22,21,20],[61,2,22,0],[61,3,22,1],[62,2,23,0],[62,8,23,6,"customGHEventsConfigFabricAndroid"],[62,41,23,39],[62,44,23,42],[63,4,24,2,"topOnGestureHandlerEvent"],[63,28,24,26],[63,30,24,28],[64,6,25,4,"registrationName"],[64,22,25,20],[64,24,25,22],[65,4,26,2],[65,5,26,3],[66,4,27,2,"topOnGestureHandlerStateChange"],[66,34,27,32],[66,36,27,34],[67,6,28,4,"registrationName"],[67,22,28,20],[67,24,28,22],[68,4,29,2],[69,2,30,0],[69,3,30,1],[70,2,31,0],[70,8,31,6,"customGHEventsConfig"],[70,28,31,26],[70,31,31,26,"Object"],[70,37,31,26],[70,38,31,26,"assign"],[70,44,31,26],[71,4,32,2,"onGestureHandlerEvent"],[71,25,32,23],[71,27,32,25],[72,6,33,4,"registrationName"],[72,22,33,20],[72,24,33,22],[73,4,34,2],[73,5,34,3],[74,4,35,2,"onGestureHandlerStateChange"],[74,31,35,29],[74,33,35,31],[75,6,36,4,"registrationName"],[75,22,36,20],[75,24,36,22],[76,4,37,2],[77,2,37,3],[77,5,46,6],[77,9,46,6,"isFabric"],[77,16,46,14],[77,17,46,14,"isFabric"],[77,25,46,14],[77,27,46,15],[77,28,46,16],[77,32,46,20,"Platform"],[77,40,46,28],[77,41,46,28,"default"],[77,48,46,28],[77,49,46,29,"OS"],[77,51,46,31],[77,56,46,36],[77,65,46,45],[77,69,46,49,"customGHEventsConfigFabricAndroid"],[77,102,46,82],[77,103,47,1],[79,2,49,0],[80,2,50,0],[81,2,51,0],[82,2,52,0],[83,2,53,0,"UIManagerAny"],[83,14,53,12],[83,15,53,13,"genericDirectEventTypes"],[83,38,53,36],[83,41,53,36,"Object"],[83,47,53,36],[83,48,53,36,"assign"],[83,54,53,36],[83,59,54,5,"UIManagerAny"],[83,71,54,17],[83,72,54,18,"genericDirectEventTypes"],[83,95,54,41],[83,97,55,5,"customGHEventsConfig"],[83,117,55,25],[83,118,56,1],[84,2,57,0],[84,8,57,6,"UIManagerConstants"],[84,26,57,24],[84,29,57,27,"UIManagerAny"],[84,41,57,39],[84,42,57,40,"getViewManagerConfig"],[84,62,57,60],[84,65,57,63],[84,79,57,77],[84,80,57,78],[85,2,58,0],[85,6,58,4,"UIManagerConstants"],[85,24,58,22],[85,26,58,24],[86,4,59,2,"UIManagerConstants"],[86,22,59,20],[86,23,59,21,"genericDirectEventTypes"],[86,46,59,44],[86,49,59,44,"Object"],[86,55,59,44],[86,56,59,44,"assign"],[86,62,59,44],[86,67,60,7,"UIManagerConstants"],[86,85,60,25],[86,86,60,26,"genericDirectEventTypes"],[86,109,60,49],[86,111,61,7,"customGHEventsConfig"],[86,131,61,27],[86,132,62,3],[87,2,63,0],[89,2,65,0],[90,2,66,0],[90,8,66,6],[91,4,67,2,"setJSResponder"],[91,18,67,16],[91,20,67,18,"oldSetJSResponder"],[91,37,67,35],[91,40,67,38,"oldSetJSResponder"],[91,41,67,38],[91,46,67,44],[92,6,68,4],[93,4,68,4],[93,5,69,3],[94,4,70,2,"clearJSResponder"],[94,20,70,18],[94,22,70,20,"oldClearJSResponder"],[94,41,70,39],[94,44,70,42,"oldClearJSResponder"],[94,45,70,42],[94,50,70,48],[95,6,71,4],[96,4,71,4],[97,2,73,0],[97,3,73,1],[97,6,73,4,"UIManagerAny"],[97,18,73,16],[98,2,74,0,"UIManagerAny"],[98,14,74,12],[98,15,74,13,"setJSResponder"],[98,29,74,27],[98,32,74,30],[98,33,74,31,"tag"],[98,36,74,34],[98,38,74,36,"blockNativeResponder"],[98,58,74,56],[98,63,74,61],[99,4,75,2,"RNGestureHandlerModule"],[99,26,75,24],[99,27,75,24,"default"],[99,34,75,24],[99,35,75,25,"handleSetJSResponder"],[99,55,75,45],[99,56,75,46,"tag"],[99,59,75,49],[99,61,75,51,"blockNativeResponder"],[99,81,75,71],[99,82,75,72],[100,4,76,2,"oldSetJSResponder"],[100,21,76,19],[100,22,76,20,"tag"],[100,25,76,23],[100,27,76,25,"blockNativeResponder"],[100,47,76,45],[100,48,76,46],[101,2,77,0],[101,3,77,1],[102,2,78,0,"UIManagerAny"],[102,14,78,12],[102,15,78,13,"clearJSResponder"],[102,31,78,29],[102,34,78,32],[102,40,78,38],[103,4,79,2,"RNGestureHandlerModule"],[103,26,79,24],[103,27,79,24,"default"],[103,34,79,24],[103,35,79,25,"handleClearJSResponder"],[103,57,79,47],[103,58,79,48],[103,59,79,49],[104,4,80,2,"oldClearJSResponder"],[104,23,80,21],[104,24,80,22],[104,25,80,23],[105,2,81,0],[105,3,81,1],[106,2,82,0],[106,6,82,4,"allowTouches"],[106,18,82,16],[106,21,82,19],[106,25,82,23],[107,2,83,0],[107,8,83,6,"DEV_ON_ANDROID"],[107,22,83,20],[107,25,83,23,"__DEV__"],[107,32,83,30],[107,36,83,34,"Platform"],[107,44,83,42],[107,45,83,42,"default"],[107,52,83,42],[107,53,83,43,"OS"],[107,55,83,45],[107,60,83,50],[107,69,83,59],[108,2,84,0],[109,2,85,0],[110,2,86,0],[110,6,86,4,"DEV_ON_ANDROID"],[110,20,86,18],[110,22,86,20],[111,4,87,2,"DeviceEventEmitter"],[111,22,87,20],[111,23,87,20,"default"],[111,30,87,20],[111,31,87,21,"addListener"],[111,42,87,32],[111,43,87,33],[111,67,87,57],[111,69,87,59],[111,75,87,65],[112,6,88,4,"allowTouches"],[112,18,88,16],[112,21,88,19],[112,22,88,20,"allowTouches"],[112,34,88,32],[113,4,89,2],[113,5,89,3],[113,6,89,4],[114,2,90,0],[115,2,91,0],[115,11,91,9,"hasUnresolvedRefs"],[115,28,91,26,"hasUnresolvedRefs"],[115,29,91,27,"props"],[115,34,91,32],[115,36,91,34],[116,4,92,2],[117,4,93,2],[117,10,93,8,"extract"],[117,17,93,15],[117,20,93,18,"refs"],[117,24,93,22],[117,28,93,26],[118,6,94,4],[118,10,94,8],[118,11,94,9,"Array"],[118,16,94,14],[118,17,94,15,"isArray"],[118,24,94,22],[118,25,94,23,"refs"],[118,29,94,27],[118,30,94,28],[118,32,94,30],[119,8,95,6],[119,15,95,13,"refs"],[119,19,95,17],[119,23,95,21,"refs"],[119,27,95,25],[119,28,95,26,"current"],[119,35,95,33],[119,40,95,38],[119,44,95,42],[120,6,96,4],[121,6,97,4],[121,13,97,11,"refs"],[121,17,97,15],[121,18,97,16,"some"],[121,22,97,20],[121,23,97,21,"r"],[121,24,97,22],[121,28,97,26,"r"],[121,29,97,27],[121,33,97,31,"r"],[121,34,97,32],[121,35,97,33,"current"],[121,42,97,40],[121,47,97,45],[121,51,97,49],[121,52,97,50],[122,4,98,2],[122,5,98,3],[123,4,99,2],[123,11,99,9,"extract"],[123,18,99,16],[123,19,99,17,"props"],[123,24,99,22],[123,25,99,23],[123,47,99,45],[123,48,99,46],[123,49,99,47],[123,53,99,51,"extract"],[123,60,99,58],[123,61,99,59,"props"],[123,66,99,64],[123,67,99,65],[123,76,99,74],[123,77,99,75],[123,78,99,76],[124,2,100,0],[125,2,101,0],[125,8,101,6,"stateToPropMappings"],[125,27,101,25],[125,30,101,28],[126,4,102,2],[126,5,102,3,"State"],[126,11,102,8],[126,12,102,8,"State"],[126,17,102,8],[126,18,102,9,"UNDETERMINED"],[126,30,102,21],[126,33,102,24,"undefined"],[126,42,102,33],[127,4,103,2],[127,5,103,3,"State"],[127,11,103,8],[127,12,103,8,"State"],[127,17,103,8],[127,18,103,9,"BEGAN"],[127,23,103,14],[127,26,103,17],[127,35,103,26],[128,4,104,2],[128,5,104,3,"State"],[128,11,104,8],[128,12,104,8,"State"],[128,17,104,8],[128,18,104,9,"FAILED"],[128,24,104,15],[128,27,104,18],[128,37,104,28],[129,4,105,2],[129,5,105,3,"State"],[129,11,105,8],[129,12,105,8,"State"],[129,17,105,8],[129,18,105,9,"CANCELLED"],[129,27,105,18],[129,30,105,21],[129,43,105,34],[130,4,106,2],[130,5,106,3,"State"],[130,11,106,8],[130,12,106,8,"State"],[130,17,106,8],[130,18,106,9,"ACTIVE"],[130,24,106,15],[130,27,106,18],[130,40,106,31],[131,4,107,2],[131,5,107,3,"State"],[131,11,107,8],[131,12,107,8,"State"],[131,17,107,8],[131,18,107,9,"END"],[131,21,107,12],[131,24,107,15],[132,2,108,0],[132,3,108,1],[134,2,110,0],[136,2,112,0],[136,8,112,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[136,35,112,33],[136,38,112,36],[136,39,112,37],[138,2,114,0],[139,2,115,15],[139,11,115,24,"createHandler"],[139,24,115,37,"createHandler"],[139,25,115,38],[140,4,116,2,"name"],[140,8,116,6],[141,4,117,2,"allowedProps"],[141,16,117,14],[141,19,117,17],[141,21,117,19],[142,4,118,2,"config"],[142,10,118,8],[142,13,118,11],[142,14,118,12],[142,15,118,13],[143,4,119,2,"transformProps"],[143,18,119,16],[144,4,120,2,"customNativeProps"],[144,21,120,19],[144,24,120,22],[145,2,121,0],[145,3,121,1],[145,5,121,3],[146,4,122,2],[146,10,122,8,"Handler"],[146,17,122,15],[146,26,122,24,"React"],[146,31,122,29],[146,32,122,30,"Component"],[146,41,122,39],[146,42,122,40],[147,6,123,4],[147,13,123,11,"displayName"],[147,24,123,22],[147,27,123,25,"name"],[147,31,123,29],[148,6,124,4],[148,13,124,11,"contextType"],[148,24,124,22],[148,27,124,25,"GestureHandlerRootViewContext"],[148,56,124,54],[148,57,124,54,"default"],[148,64,124,54],[149,6,125,4,"handlerTag"],[149,16,125,14],[149,19,125,17],[149,20,125,18],[149,21,125,19],[150,6,126,4,"constructor"],[150,17,126,15,"constructor"],[150,18,126,16,"props"],[150,23,126,21],[150,25,126,23],[151,8,127,6],[151,13,127,11],[151,14,127,12,"props"],[151,19,127,17],[151,20,127,18],[152,8,128,6],[152,12,128,10],[152,13,128,11,"config"],[152,19,128,17],[152,22,128,20],[152,23,128,21],[152,24,128,22],[153,8,129,6],[153,12,129,10],[153,13,129,11,"propsRef"],[153,21,129,19],[153,24,129,22],[153,37,129,35,"React"],[153,42,129,40],[153,43,129,41,"createRef"],[153,52,129,50],[153,53,129,51],[153,54,129,52],[154,8,130,6],[154,12,130,10],[154,13,130,11,"isMountedRef"],[154,25,130,23],[154,28,130,26],[154,41,130,39,"React"],[154,46,130,44],[154,47,130,45,"createRef"],[154,56,130,54],[154,57,130,55],[154,58,130,56],[155,8,131,6],[155,12,131,10],[155,13,131,11,"state"],[155,18,131,16],[155,21,131,19],[156,10,132,8,"allowTouches"],[157,8,133,6],[157,9,133,7],[158,8,134,6],[158,12,134,10,"props"],[158,17,134,15],[158,18,134,16,"id"],[158,20,134,18],[158,22,134,20],[159,10,135,8],[159,14,135,12,"handlerIDToTag"],[159,31,135,26],[159,32,135,26,"handlerIDToTag"],[159,46,135,26],[159,47,135,27,"props"],[159,52,135,32],[159,53,135,33,"id"],[159,55,135,35],[159,56,135,36],[159,61,135,41,"undefined"],[159,70,135,50],[159,72,135,52],[160,12,136,10],[160,18,136,16],[160,22,136,20,"Error"],[160,27,136,25],[160,28,136,26],[160,48,136,46,"props"],[160,53,136,51],[160,54,136,52,"id"],[160,56,136,54],[160,78,136,76],[160,79,136,77],[161,10,137,8],[162,10,138,8,"handlerIDToTag"],[162,27,138,22],[162,28,138,22,"handlerIDToTag"],[162,42,138,22],[162,43,138,23,"props"],[162,48,138,28],[162,49,138,29,"id"],[162,51,138,31],[162,52,138,32],[162,55,138,35],[162,59,138,39],[162,60,138,40,"handlerTag"],[162,70,138,50],[163,8,139,6],[164,6,140,4],[165,6,141,4,"componentDidMount"],[165,23,141,21,"componentDidMount"],[165,24,141,21],[165,26,141,24],[166,8,142,6],[166,14,142,12,"props"],[166,19,142,17],[166,22,142,20],[166,26,142,24],[166,27,142,25,"props"],[166,32,142,30],[167,8,143,6],[167,12,143,10],[167,13,143,11,"isMountedRef"],[167,25,143,23],[167,26,143,24,"current"],[167,33,143,31],[167,36,143,34],[167,40,143,38],[168,8,144,6],[168,12,144,10,"DEV_ON_ANDROID"],[168,26,144,24],[168,28,144,26],[169,10,145,8],[169,14,145,12],[169,15,145,13,"inspectorToggleListener"],[169,38,145,36],[169,41,145,39,"DeviceEventEmitter"],[169,59,145,57],[169,60,145,57,"default"],[169,67,145,57],[169,68,145,58,"addListener"],[169,79,145,69],[169,80,145,70],[169,104,145,94],[169,106,145,96],[169,112,145,102],[170,12,146,10],[170,16,146,14],[170,17,146,15,"setState"],[170,25,146,23],[170,26,146,24,"_"],[170,27,146,25],[170,32,146,30],[171,14,147,12,"allowTouches"],[172,12,148,10],[172,13,148,11],[172,14,148,12],[172,15,148,13],[173,12,149,10],[173,16,149,14],[173,17,149,15,"update"],[173,23,149,21],[173,24,149,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[173,51,149,49],[173,52,149,50],[174,10,150,8],[174,11,150,9],[174,12,150,10],[175,8,151,6],[176,8,152,6],[176,12,152,10,"hasUnresolvedRefs"],[176,29,152,27],[176,30,152,28,"props"],[176,35,152,33],[176,36,152,34],[176,38,152,36],[177,10,153,8],[178,10,154,8],[179,10,155,8],[180,10,156,8],[181,10,157,8],[182,10,158,8],[183,10,159,8],[183,14,159,8,"ghQueueMicrotask"],[183,31,159,24],[183,32,159,24,"ghQueueMicrotask"],[183,48,159,24],[183,50,159,25],[183,56,159,31],[184,12,160,10],[184,16,160,14],[184,17,160,15,"update"],[184,23,160,21],[184,24,160,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[184,51,160,49],[184,52,160,50],[185,10,161,8],[185,11,161,9],[185,12,161,10],[186,8,162,6],[187,8,163,6],[187,12,163,10],[187,13,163,11,"createGestureHandler"],[187,33,163,31],[187,34,163,32],[187,38,163,32,"filterConfig"],[187,44,163,44],[187,45,163,44,"filterConfig"],[187,57,163,44],[187,59,163,45,"transformProps"],[187,73,163,59],[187,76,163,62,"transformProps"],[187,90,163,76],[187,91,163,77],[187,95,163,81],[187,96,163,82,"props"],[187,101,163,87],[187,102,163,88],[187,105,163,91],[187,109,163,95],[187,110,163,96,"props"],[187,115,163,101],[187,117,163,103],[187,118,163,104],[187,121,163,107,"allowedProps"],[187,133,163,119],[187,135,163,121],[187,138,163,124,"customNativeProps"],[187,155,163,141],[187,156,163,142],[187,158,163,144,"config"],[187,164,163,150],[187,165,163,151],[187,166,163,152],[188,8,164,6],[188,12,164,10],[188,13,164,11],[188,17,164,15],[188,18,164,16,"viewNode"],[188,26,164,24],[188,28,164,26],[189,10,165,8],[189,16,165,14],[189,20,165,18,"Error"],[189,25,165,23],[189,26,165,24],[189,73,165,71,"Handler"],[189,80,165,78],[189,81,165,79,"displayName"],[189,92,165,90],[189,152,165,150],[189,153,165,151],[190,8,166,6],[191,8,167,6],[191,12,167,10],[191,13,167,11,"attachGestureHandler"],[191,33,167,31],[191,34,167,32],[191,38,167,32,"findNodeHandle"],[191,52,167,46],[191,53,167,46,"default"],[191,60,167,46],[191,62,167,47],[191,66,167,51],[191,67,167,52,"viewNode"],[191,75,167,60],[191,76,167,61],[191,77,167,62],[191,78,167,63],[191,79,167,64],[192,6,168,4],[193,6,169,4,"componentDidUpdate"],[193,24,169,22,"componentDidUpdate"],[193,25,169,22],[193,27,169,25],[194,8,170,6],[194,14,170,12,"viewTag"],[194,21,170,19],[194,24,170,22],[194,28,170,22,"findNodeHandle"],[194,42,170,36],[194,43,170,36,"default"],[194,50,170,36],[194,52,170,37],[194,56,170,41],[194,57,170,42,"viewNode"],[194,65,170,50],[194,66,170,51],[195,8,171,6],[195,12,171,10],[195,16,171,14],[195,17,171,15,"viewTag"],[195,24,171,22],[195,29,171,27,"viewTag"],[195,36,171,34],[195,38,171,36],[196,10,172,8],[196,14,172,12],[196,15,172,13,"attachGestureHandler"],[196,35,172,33],[196,36,172,34,"viewTag"],[196,43,172,41],[196,44,172,42],[196,45,172,43],[196,46,172,44],[197,8,173,6],[198,8,174,6],[198,12,174,10],[198,13,174,11,"update"],[198,19,174,17],[198,20,174,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[198,47,174,45],[198,48,174,46],[199,6,175,4],[200,6,176,4,"componentWillUnmount"],[200,26,176,24,"componentWillUnmount"],[200,27,176,24],[200,29,176,27],[201,8,177,6],[201,12,177,10],[201,13,177,11,"inspectorToggleListener"],[201,36,177,34],[201,38,177,36,"remove"],[201,44,177,42],[201,45,177,43],[201,46,177,44],[202,8,178,6],[202,12,178,10],[202,13,178,11,"isMountedRef"],[202,25,178,23],[202,26,178,24,"current"],[202,33,178,31],[202,36,178,34],[202,41,178,39],[203,8,179,6],[203,12,179,10,"Platform"],[203,20,179,18],[203,21,179,18,"default"],[203,28,179,18],[203,29,179,19,"OS"],[203,31,179,21],[203,36,179,26],[203,41,179,31],[203,43,179,33],[204,10,180,8],[204,14,180,8,"unregisterOldGestureHandler"],[204,31,180,35],[204,32,180,35,"unregisterOldGestureHandler"],[204,59,180,35],[204,61,180,36],[204,65,180,40],[204,66,180,41,"handlerTag"],[204,76,180,51],[204,77,180,52],[205,8,181,6],[206,8,182,6,"RNGestureHandlerModule"],[206,30,182,28],[206,31,182,28,"default"],[206,38,182,28],[206,39,182,29,"dropGestureHandler"],[206,57,182,47],[206,58,182,48],[206,62,182,52],[206,63,182,53,"handlerTag"],[206,73,182,63],[206,74,182,64],[207,8,183,6],[207,12,183,6,"scheduleFlushOperations"],[207,18,183,29],[207,19,183,29,"scheduleFlushOperations"],[207,42,183,29],[207,44,183,30],[207,45,183,31],[208,8,184,6],[209,8,185,6],[209,14,185,12,"handlerID"],[209,23,185,21],[209,26,185,24],[209,30,185,28],[209,31,185,29,"props"],[209,36,185,34],[209,37,185,35,"id"],[209,39,185,37],[210,8,186,6],[210,12,186,10,"handlerID"],[210,21,186,19],[210,23,186,21],[211,10,187,8],[212,10,188,8],[212,17,188,15,"handlerIDToTag"],[212,34,188,29],[212,35,188,29,"handlerIDToTag"],[212,49,188,29],[212,50,188,30,"handlerID"],[212,59,188,39],[212,60,188,40],[213,8,189,6],[214,8,190,6,"MountRegistry"],[214,22,190,19],[214,23,190,19,"MountRegistry"],[214,36,190,19],[214,37,190,20,"gestureHandlerWillUnmount"],[214,62,190,45],[214,63,190,46],[214,67,190,50],[214,68,190,51],[215,6,191,4],[216,6,192,4,"onGestureHandlerEvent"],[216,27,192,25],[216,30,192,28,"event"],[216,35,192,33],[216,39,192,37],[217,8,193,6],[217,12,193,10,"event"],[217,17,193,15],[217,18,193,16,"nativeEvent"],[217,29,193,27],[217,30,193,28,"handlerTag"],[217,40,193,38],[217,45,193,43],[217,49,193,47],[217,50,193,48,"handlerTag"],[217,60,193,58],[217,62,193,60],[218,10,194,8],[218,14,194,12],[218,21,194,19],[218,25,194,23],[218,26,194,24,"props"],[218,31,194,29],[218,32,194,30,"onGestureEvent"],[218,46,194,44],[218,51,194,49],[218,61,194,59],[218,63,194,61],[219,12,195,10],[219,16,195,14],[219,17,195,15,"props"],[219,22,195,20],[219,23,195,21,"onGestureEvent"],[219,37,195,35],[219,40,195,38,"event"],[219,45,195,43],[219,46,195,44],[220,10,196,8],[221,8,197,6],[221,9,197,7],[221,15,197,13],[222,10,198,8],[222,14,198,12],[222,15,198,13,"props"],[222,20,198,18],[222,21,198,19,"onGestureHandlerEvent"],[222,42,198,40],[222,45,198,43,"event"],[222,50,198,48],[222,51,198,49],[223,8,199,6],[224,6,200,4],[224,7,200,5],[226,6,202,4],[227,6,203,4,"onGestureHandlerStateChange"],[227,33,203,31],[227,36,203,34,"event"],[227,41,203,39],[227,45,203,43],[228,8,204,6],[228,12,204,10,"event"],[228,17,204,15],[228,18,204,16,"nativeEvent"],[228,29,204,27],[228,30,204,28,"handlerTag"],[228,40,204,38],[228,45,204,43],[228,49,204,47],[228,50,204,48,"handlerTag"],[228,60,204,58],[228,62,204,60],[229,10,205,8],[229,14,205,12],[229,21,205,19],[229,25,205,23],[229,26,205,24,"props"],[229,31,205,29],[229,32,205,30,"onHandlerStateChange"],[229,52,205,50],[229,57,205,55],[229,67,205,65],[229,69,205,67],[230,12,206,10],[230,16,206,14],[230,17,206,15,"props"],[230,22,206,20],[230,23,206,21,"onHandlerStateChange"],[230,43,206,41],[230,46,206,44,"event"],[230,51,206,49],[230,52,206,50],[231,10,207,8],[232,10,208,8],[232,16,208,14,"state"],[232,21,208,19],[232,24,208,22,"event"],[232,29,208,27],[232,30,208,28,"nativeEvent"],[232,41,208,39],[232,42,208,40,"state"],[232,47,208,45],[233,10,209,8],[233,16,209,14,"stateEventName"],[233,30,209,28],[233,33,209,31,"stateToPropMappings"],[233,52,209,50],[233,53,209,51,"state"],[233,58,209,56],[233,59,209,57],[234,10,210,8],[234,16,210,14,"eventHandler"],[234,28,210,26],[234,31,210,29,"stateEventName"],[234,45,210,43],[234,49,210,47],[234,53,210,51],[234,54,210,52,"props"],[234,59,210,57],[234,60,210,58,"stateEventName"],[234,74,210,72],[234,75,210,73],[235,10,211,8],[235,14,211,12,"eventHandler"],[235,26,211,24],[235,30,211,28],[235,37,211,35,"eventHandler"],[235,49,211,47],[235,54,211,52],[235,64,211,62],[235,66,211,64],[236,12,212,10,"eventHandler"],[236,24,212,22],[236,25,212,23,"event"],[236,30,212,28],[236,31,212,29],[237,10,213,8],[238,8,214,6],[238,9,214,7],[238,15,214,13],[239,10,215,8],[239,14,215,12],[239,15,215,13,"props"],[239,20,215,18],[239,21,215,19,"onGestureHandlerStateChange"],[239,48,215,46],[239,51,215,49,"event"],[239,56,215,54],[239,57,215,55],[240,8,216,6],[241,6,217,4],[241,7,217,5],[242,6,218,4,"refHandler"],[242,16,218,14],[242,19,218,17,"node"],[242,23,218,21],[242,27,218,25],[243,8,219,6],[243,12,219,10],[243,13,219,11,"viewNode"],[243,21,219,19],[243,24,219,22,"node"],[243,28,219,26],[244,8,220,6],[244,14,220,12,"child"],[244,19,220,17],[244,22,220,20,"React"],[244,27,220,25],[244,28,220,26,"Children"],[244,36,220,34],[244,37,220,35,"only"],[244,41,220,39],[244,42,220,40],[244,46,220,44],[244,47,220,45,"props"],[244,52,220,50],[244,53,220,51,"children"],[244,61,220,59],[244,62,220,60],[245,8,221,6],[246,8,222,6],[247,8,223,6],[247,14,223,12,"ref"],[247,17,223,15],[247,20,223,18],[247,24,223,18,"isReact19"],[247,31,223,27],[247,32,223,27,"isReact19"],[247,41,223,27],[247,43,223,28],[247,44,223,29],[247,47,223,32,"child"],[247,52,223,37],[247,53,223,38,"props"],[247,58,223,43],[247,60,223,45,"ref"],[247,63,223,48],[247,66,223,51,"child"],[247,71,223,56],[247,73,223,58,"ref"],[247,76,223,61],[248,8,224,6],[248,12,224,10],[248,13,224,11,"ref"],[248,16,224,14],[248,18,224,16],[249,10,225,8],[250,8,226,6],[251,8,227,6],[251,12,227,10],[251,19,227,17,"ref"],[251,22,227,20],[251,27,227,25],[251,37,227,35],[251,39,227,37],[252,10,228,8,"ref"],[252,13,228,11],[252,14,228,12,"node"],[252,18,228,16],[252,19,228,17],[253,8,229,6],[253,9,229,7],[253,15,229,13],[254,10,230,8,"ref"],[254,13,230,11],[254,14,230,12,"current"],[254,21,230,19],[254,24,230,22,"node"],[254,28,230,26],[255,8,231,6],[256,6,232,4],[256,7,232,5],[257,6,233,4,"createGestureHandler"],[257,26,233,24],[257,29,233,27,"newConfig"],[257,38,233,36],[257,42,233,40],[258,8,234,6],[258,12,234,10],[258,13,234,11,"handlerTag"],[258,23,234,21],[258,26,234,24],[258,30,234,24,"getNextHandlerTag"],[258,48,234,41],[258,49,234,41,"getNextHandlerTag"],[258,66,234,41],[258,68,234,42],[258,69,234,43],[259,8,235,6],[259,12,235,10],[259,13,235,11,"config"],[259,19,235,17],[259,22,235,20,"newConfig"],[259,31,235,29],[260,8,236,6,"RNGestureHandlerModule"],[260,30,236,28],[260,31,236,28,"default"],[260,38,236,28],[260,39,236,29,"createGestureHandler"],[260,59,236,49],[260,60,236,50,"name"],[260,64,236,54],[260,66,236,56],[260,70,236,60],[260,71,236,61,"handlerTag"],[260,81,236,71],[260,83,236,73,"newConfig"],[260,92,236,82],[260,93,236,83],[261,6,237,4],[261,7,237,5],[262,6,238,4,"attachGestureHandler"],[262,26,238,24],[262,29,238,27,"newViewTag"],[262,39,238,37],[262,43,238,41],[263,8,239,6],[263,12,239,10],[263,13,239,11,"viewTag"],[263,20,239,18],[263,23,239,21,"newViewTag"],[263,33,239,31],[264,8,240,6],[264,12,240,10,"Platform"],[264,20,240,18],[264,21,240,18,"default"],[264,28,240,18],[264,29,240,19,"OS"],[264,31,240,21],[264,36,240,26],[264,41,240,31],[264,43,240,33],[265,10,241,8],[266,10,242,8,"RNGestureHandlerModule"],[266,32,242,30],[266,33,242,30,"default"],[266,40,242,30],[266,41,242,31,"attachGestureHandler"],[266,61,242,51],[266,62,242,52],[266,66,242,56],[266,67,242,57,"handlerTag"],[266,77,242,67],[266,79,242,69,"newViewTag"],[266,89,242,79],[266,91,242,81,"ActionType"],[266,102,242,91],[266,103,242,91,"ActionType"],[266,113,242,91],[266,114,242,92,"JS_FUNCTION_OLD_API"],[266,133,242,111],[267,10,243,8],[268,10,244,8],[268,14,244,12],[268,15,244,13,"propsRef"],[268,23,244,21],[268,24,244,22],[269,8,245,6],[269,9,245,7],[269,15,245,13],[270,10,246,8],[270,14,246,8,"registerOldGestureHandler"],[270,31,246,33],[270,32,246,33,"registerOldGestureHandler"],[270,57,246,33],[270,59,246,34],[270,63,246,38],[270,64,246,39,"handlerTag"],[270,74,246,49],[270,76,246,51],[271,12,247,10,"onGestureEvent"],[271,26,247,24],[271,28,247,26],[271,32,247,30],[271,33,247,31,"onGestureHandlerEvent"],[271,54,247,52],[272,12,248,10,"onGestureStateChange"],[272,32,248,30],[272,34,248,32],[272,38,248,36],[272,39,248,37,"onGestureHandlerStateChange"],[273,10,249,8],[273,11,249,9],[273,12,249,10],[274,10,250,8],[274,16,250,14,"actionType"],[274,26,250,24],[274,29,250,27],[274,30,250,28],[274,36,250,34],[275,12,251,10],[275,18,251,16,"onGestureEvent"],[275,32,251,30],[275,35,251,33],[275,39,251,37],[275,40,251,38,"props"],[275,45,251,43],[275,47,251,45,"onGestureEvent"],[275,61,251,59],[276,12,252,10],[276,18,252,16,"isGestureHandlerWorklet"],[276,41,252,39],[276,44,252,42,"onGestureEvent"],[276,58,252,56],[276,63,252,61],[276,72,252,70],[276,76,252,74,"onGestureEvent"],[276,90,252,88],[276,94,252,92],[276,115,252,113],[276,119,252,117,"onGestureEvent"],[276,133,252,131],[276,134,252,132],[277,12,253,10],[277,18,253,16,"onHandlerStateChange"],[277,38,253,36],[277,41,253,39],[277,45,253,43],[277,46,253,44,"props"],[277,51,253,49],[277,53,253,51,"onHandlerStateChange"],[277,73,253,71],[278,12,254,10],[278,18,254,16,"isStateChangeHandlerWorklet"],[278,45,254,43],[278,48,254,46,"onHandlerStateChange"],[278,68,254,66],[278,73,254,71],[278,82,254,80],[278,86,254,84,"onHandlerStateChange"],[278,106,254,104],[278,110,254,108],[278,131,254,129],[278,135,254,133,"onHandlerStateChange"],[278,155,254,153],[278,156,254,154],[279,12,255,10],[279,18,255,16,"isReanimatedHandler"],[279,37,255,35],[279,40,255,38,"isGestureHandlerWorklet"],[279,63,255,61],[279,67,255,65,"isStateChangeHandlerWorklet"],[279,94,255,92],[280,12,256,10],[280,16,256,14,"isReanimatedHandler"],[280,35,256,33],[280,37,256,35],[281,14,257,12],[282,14,258,12],[282,21,258,19,"ActionType"],[282,32,258,29],[282,33,258,29,"ActionType"],[282,43,258,29],[282,44,258,30,"REANIMATED_WORKLET"],[282,62,258,48],[283,12,259,10],[283,13,259,11],[283,19,259,17],[283,23,259,21,"onGestureEvent"],[283,37,259,35],[283,41,259,39],[283,53,259,51],[283,57,259,55,"onGestureEvent"],[283,71,259,69],[283,73,259,71],[284,14,260,12],[285,14,261,12],[285,21,261,19,"ActionType"],[285,32,261,29],[285,33,261,29,"ActionType"],[285,43,261,29],[285,44,261,30,"NATIVE_ANIMATED_EVENT"],[285,65,261,51],[286,12,262,10],[286,13,262,11],[286,19,262,17],[287,14,263,12],[288,14,264,12],[288,21,264,19,"ActionType"],[288,32,264,29],[288,33,264,29,"ActionType"],[288,43,264,29],[288,44,264,30,"JS_FUNCTION_OLD_API"],[288,63,264,49],[289,12,265,10],[290,10,266,8],[290,11,266,9],[290,13,266,11],[290,14,266,12],[291,10,267,8,"RNGestureHandlerModule"],[291,32,267,30],[291,33,267,30,"default"],[291,40,267,30],[291,41,267,31,"attachGestureHandler"],[291,61,267,51],[291,62,267,52],[291,66,267,56],[291,67,267,57,"handlerTag"],[291,77,267,67],[291,79,267,69,"newViewTag"],[291,89,267,79],[291,91,267,81,"actionType"],[291,101,267,91],[291,102,267,92],[292,8,268,6],[293,8,269,6],[293,12,269,6,"scheduleFlushOperations"],[293,18,269,29],[293,19,269,29,"scheduleFlushOperations"],[293,42,269,29],[293,44,269,30],[293,45,269,31],[294,8,270,6],[294,12,270,6,"ghQueueMicrotask"],[294,29,270,22],[294,30,270,22,"ghQueueMicrotask"],[294,46,270,22],[294,48,270,23],[294,54,270,29],[295,10,271,8,"MountRegistry"],[295,24,271,21],[295,25,271,21,"MountRegistry"],[295,38,271,21],[295,39,271,22,"gestureHandlerWillMount"],[295,62,271,45],[295,63,271,46],[295,67,271,50],[295,68,271,51],[296,8,272,6],[296,9,272,7],[296,10,272,8],[297,6,273,4],[297,7,273,5],[298,6,274,4,"updateGestureHandler"],[298,26,274,24],[298,29,274,27,"newConfig"],[298,38,274,36],[298,42,274,40],[299,8,275,6],[299,12,275,10],[299,13,275,11,"config"],[299,19,275,17],[299,22,275,20,"newConfig"],[299,31,275,29],[300,8,276,6,"RNGestureHandlerModule"],[300,30,276,28],[300,31,276,28,"default"],[300,38,276,28],[300,39,276,29,"updateGestureHandler"],[300,59,276,49],[300,60,276,50],[300,64,276,54],[300,65,276,55,"handlerTag"],[300,75,276,65],[300,77,276,67,"newConfig"],[300,86,276,76],[300,87,276,77],[301,8,277,6],[301,12,277,6,"scheduleFlushOperations"],[301,18,277,29],[301,19,277,29,"scheduleFlushOperations"],[301,42,277,29],[301,44,277,30],[301,45,277,31],[302,6,278,4],[302,7,278,5],[303,6,279,4,"update"],[303,12,279,10,"update"],[303,13,279,11,"remainingTries"],[303,27,279,25],[303,29,279,27],[304,8,280,6],[304,12,280,10],[304,13,280,11],[304,17,280,15],[304,18,280,16,"isMountedRef"],[304,30,280,28],[304,31,280,29,"current"],[304,38,280,36],[304,40,280,38],[305,10,281,8],[306,8,282,6],[307,8,283,6],[307,14,283,12,"props"],[307,19,283,17],[307,22,283,20],[307,26,283,24],[307,27,283,25,"props"],[307,32,283,30],[309,8,285,6],[310,8,286,6],[311,8,287,6],[312,8,288,6],[312,12,288,10,"hasUnresolvedRefs"],[312,29,288,27],[312,30,288,28,"props"],[312,35,288,33],[312,36,288,34],[312,40,288,38,"remainingTries"],[312,54,288,52],[312,57,288,55],[312,58,288,56],[312,60,288,58],[313,10,289,8],[313,14,289,8,"ghQueueMicrotask"],[313,31,289,24],[313,32,289,24,"ghQueueMicrotask"],[313,48,289,24],[313,50,289,25],[313,56,289,31],[314,12,290,10],[314,16,290,14],[314,17,290,15,"update"],[314,23,290,21],[314,24,290,22,"remainingTries"],[314,38,290,36],[314,41,290,39],[314,42,290,40],[314,43,290,41],[315,10,291,8],[315,11,291,9],[315,12,291,10],[316,8,292,6],[316,9,292,7],[316,15,292,13],[317,10,293,8],[317,16,293,14,"newConfig"],[317,25,293,23],[317,28,293,26],[317,32,293,26,"filterConfig"],[317,38,293,38],[317,39,293,38,"filterConfig"],[317,51,293,38],[317,53,293,39,"transformProps"],[317,67,293,53],[317,70,293,56,"transformProps"],[317,84,293,70],[317,85,293,71],[317,89,293,75],[317,90,293,76,"props"],[317,95,293,81],[317,96,293,82],[317,99,293,85],[317,103,293,89],[317,104,293,90,"props"],[317,109,293,95],[317,111,293,97],[317,112,293,98],[317,115,293,101,"allowedProps"],[317,127,293,113],[317,129,293,115],[317,132,293,118,"customNativeProps"],[317,149,293,135],[317,150,293,136],[317,152,293,138,"config"],[317,158,293,144],[317,159,293,145],[318,10,294,8],[318,14,294,12],[318,15,294,13],[318,19,294,13,"deepEqual"],[318,26,294,22],[318,27,294,22,"deepEqual"],[318,36,294,22],[318,38,294,23],[318,42,294,27],[318,43,294,28,"config"],[318,49,294,34],[318,51,294,36,"newConfig"],[318,60,294,45],[318,61,294,46],[318,63,294,48],[319,12,295,10],[319,16,295,14],[319,17,295,15,"updateGestureHandler"],[319,37,295,35],[319,38,295,36,"newConfig"],[319,47,295,45],[319,48,295,46],[320,10,296,8],[321,8,297,6],[322,6,298,4],[324,6,300,4],[325,6,301,4,"setNativeProps"],[325,20,301,18,"setNativeProps"],[325,21,301,19,"updates"],[325,28,301,26],[325,30,301,28],[326,8,302,6],[326,14,302,12,"mergedProps"],[326,25,302,23],[326,28,302,23,"Object"],[326,34,302,23],[326,35,302,23,"assign"],[326,41,302,23],[326,46,303,11],[326,50,303,15],[326,51,303,16,"props"],[326,56,303,21],[326,58,304,11,"updates"],[326,65,304,18],[326,66,305,7],[327,8,306,6],[327,14,306,12,"newConfig"],[327,23,306,21],[327,26,306,24],[327,30,306,24,"filterConfig"],[327,36,306,36],[327,37,306,36,"filterConfig"],[327,49,306,36],[327,51,306,37,"transformProps"],[327,65,306,51],[327,68,306,54,"transformProps"],[327,82,306,68],[327,83,306,69,"mergedProps"],[327,94,306,80],[327,95,306,81],[327,98,306,84,"mergedProps"],[327,109,306,95],[327,111,306,97],[327,112,306,98],[327,115,306,101,"allowedProps"],[327,127,306,113],[327,129,306,115],[327,132,306,118,"customNativeProps"],[327,149,306,135],[327,150,306,136],[327,152,306,138,"config"],[327,158,306,144],[327,159,306,145],[328,8,307,6],[328,12,307,10],[328,13,307,11,"updateGestureHandler"],[328,33,307,31],[328,34,307,32,"newConfig"],[328,43,307,41],[328,44,307,42],[329,6,308,4],[330,6,309,4,"render"],[330,12,309,10,"render"],[330,13,309,10],[330,15,309,13],[331,8,310,6],[331,12,310,10,"__DEV__"],[331,19,310,17],[331,23,310,21],[331,24,310,22],[331,28,310,26],[331,29,310,27,"context"],[331,36,310,34],[331,40,310,38],[331,41,310,39],[331,45,310,39,"isTestEnv"],[331,52,310,48],[331,53,310,48,"isTestEnv"],[331,62,310,48],[331,64,310,49],[331,65,310,50],[331,69,310,54,"Platform"],[331,77,310,62],[331,78,310,62,"default"],[331,85,310,62],[331,86,310,63,"OS"],[331,88,310,65],[331,93,310,70],[331,98,310,75],[331,100,310,77],[332,10,311,8],[332,16,311,14],[332,20,311,18,"Error"],[332,25,311,23],[332,26,311,24,"name"],[332,30,311,28],[332,33,311,31],[332,247,311,245],[332,248,311,246],[333,8,312,6],[334,8,313,6],[334,12,313,10,"gestureEventHandler"],[334,31,313,29],[334,34,313,32],[334,38,313,36],[334,39,313,37,"onGestureHandlerEvent"],[334,60,313,58],[335,8,314,6],[337,8,316,6],[337,14,316,12],[338,10,317,8,"onGestureEvent"],[338,24,317,22],[339,10,318,8,"onGestureHandlerEvent"],[340,8,319,6],[340,9,319,7],[340,12,319,10],[340,16,319,14],[340,17,319,15,"props"],[340,22,319,20],[341,8,320,6],[341,12,320,10,"onGestureEvent"],[341,26,320,24],[341,30,320,28],[341,37,320,35,"onGestureEvent"],[341,51,320,49],[341,56,320,54],[341,66,320,64],[341,68,320,66],[342,10,321,8],[343,10,322,8],[344,10,323,8],[345,10,324,8],[345,14,324,12,"onGestureHandlerEvent"],[345,35,324,33],[345,37,324,35],[346,12,325,10],[346,18,325,16],[346,22,325,20,"Error"],[346,27,325,25],[346,28,325,26],[346,101,325,99],[346,102,325,100],[347,10,326,8],[348,10,327,8,"gestureEventHandler"],[348,29,327,27],[348,32,327,30,"onGestureEvent"],[348,46,327,44],[349,8,328,6],[349,9,328,7],[349,15,328,13],[350,10,329,8],[350,14,329,12,"onGestureHandlerEvent"],[350,35,329,33],[350,39,329,37],[350,46,329,44,"onGestureHandlerEvent"],[350,67,329,65],[350,72,329,70],[350,82,329,80],[350,84,329,82],[351,12,330,10],[351,18,330,16],[351,22,330,20,"Error"],[351,27,330,25],[351,28,330,26],[351,101,330,99],[351,102,330,100],[352,10,331,8],[353,8,332,6],[354,8,333,6],[354,12,333,10,"gestureStateEventHandler"],[354,36,333,34],[354,39,333,37],[354,43,333,41],[354,44,333,42,"onGestureHandlerStateChange"],[354,71,333,69],[355,8,334,6],[357,8,336,6],[357,14,336,12],[358,10,337,8,"onHandlerStateChange"],[358,30,337,28],[359,10,338,8,"onGestureHandlerStateChange"],[360,8,339,6],[360,9,339,7],[360,12,339,10],[360,16,339,14],[360,17,339,15,"props"],[360,22,339,20],[361,8,340,6],[361,12,340,10,"onHandlerStateChange"],[361,32,340,30],[361,36,340,34],[361,43,340,41,"onHandlerStateChange"],[361,63,340,61],[361,68,340,66],[361,78,340,76],[361,80,340,78],[362,10,341,8],[363,10,342,8],[364,10,343,8],[365,10,344,8],[365,14,344,12,"onGestureHandlerStateChange"],[365,41,344,39],[365,43,344,41],[366,12,345,10],[366,18,345,16],[366,22,345,20,"Error"],[366,27,345,25],[366,28,345,26],[366,101,345,99],[366,102,345,100],[367,10,346,8],[368,10,347,8,"gestureStateEventHandler"],[368,34,347,32],[368,37,347,35,"onHandlerStateChange"],[368,57,347,55],[369,8,348,6],[369,9,348,7],[369,15,348,13],[370,10,349,8],[370,14,349,12,"onGestureHandlerStateChange"],[370,41,349,39],[370,45,349,43],[370,52,349,50,"onGestureHandlerStateChange"],[370,79,349,77],[370,84,349,82],[370,94,349,92],[370,96,349,94],[371,12,350,10],[371,18,350,16],[371,22,350,20,"Error"],[371,27,350,25],[371,28,350,26],[371,101,350,99],[371,102,350,100],[372,10,351,8],[373,8,352,6],[374,8,353,6],[374,14,353,12,"events"],[374,20,353,18],[374,23,353,21],[375,10,354,8,"onGestureHandlerEvent"],[375,31,354,29],[375,33,354,31],[375,37,354,35],[375,38,354,36,"state"],[375,43,354,41],[375,44,354,42,"allowTouches"],[375,56,354,54],[375,59,354,57,"gestureEventHandler"],[375,78,354,76],[375,81,354,79,"undefined"],[375,90,354,88],[376,10,355,8,"onGestureHandlerStateChange"],[376,37,355,35],[376,39,355,37],[376,43,355,41],[376,44,355,42,"state"],[376,49,355,47],[376,50,355,48,"allowTouches"],[376,62,355,60],[376,65,355,63,"gestureStateEventHandler"],[376,89,355,87],[376,92,355,90,"undefined"],[377,8,356,6],[377,9,356,7],[378,8,357,6],[378,12,357,10],[378,13,357,11,"propsRef"],[378,21,357,19],[378,22,357,20,"current"],[378,29,357,27],[378,32,357,30,"events"],[378,38,357,36],[379,8,358,6],[379,12,358,10,"child"],[379,17,358,15],[379,20,358,18],[379,24,358,22],[380,8,359,6],[380,12,359,10],[381,10,360,8,"child"],[381,15,360,13],[381,18,360,16,"React"],[381,23,360,21],[381,24,360,22,"Children"],[381,32,360,30],[381,33,360,31,"only"],[381,37,360,35],[381,38,360,36],[381,42,360,40],[381,43,360,41,"props"],[381,48,360,46],[381,49,360,47,"children"],[381,57,360,55],[381,58,360,56],[382,8,361,6],[382,9,361,7],[382,10,361,8],[382,17,361,15,"e"],[382,18,361,16],[382,20,361,18],[383,10,362,8],[383,16,362,14],[383,20,362,18,"Error"],[383,25,362,23],[383,26,362,24],[383,30,362,24,"tagMessage"],[383,37,362,34],[383,38,362,34,"tagMessage"],[383,48,362,34],[383,50,362,35],[383,53,362,38,"name"],[383,57,362,42],[383,213,362,198],[383,214,362,199],[383,215,362,200],[384,8,363,6],[385,8,364,6],[385,12,364,10,"grandChildren"],[385,25,364,23],[385,28,364,26,"child"],[385,33,364,31],[385,34,364,32,"props"],[385,39,364,37],[385,40,364,38,"children"],[385,48,364,46],[386,8,365,6],[386,12,365,10,"__DEV__"],[386,19,365,17],[386,23,365,21,"child"],[386,28,365,26],[386,29,365,27,"type"],[386,33,365,31],[386,38,365,36,"child"],[386,43,365,41],[386,44,365,42,"type"],[386,48,365,46],[386,53,365,51],[386,77,365,75],[386,81,365,79,"child"],[386,86,365,84],[386,87,365,85,"type"],[386,91,365,89],[386,92,365,90,"name"],[386,96,365,94],[386,101,365,99],[386,107,365,105],[386,111,365,109,"child"],[386,116,365,114],[386,117,365,115,"type"],[386,121,365,119],[386,122,365,120,"displayName"],[386,133,365,131],[386,138,365,136],[386,144,365,142],[386,145,365,143],[386,147,365,145],[387,10,366,8,"grandChildren"],[387,23,366,21],[387,26,366,24,"React"],[387,31,366,29],[387,32,366,30,"Children"],[387,40,366,38],[387,41,366,39,"toArray"],[387,48,366,46],[387,49,366,47,"grandChildren"],[387,62,366,60],[387,63,366,61],[388,10,367,8,"grandChildren"],[388,23,367,21],[388,24,367,22,"push"],[388,28,367,26],[388,29,367,27],[388,42,367,40],[388,46,367,40,"_jsx"],[388,62,367,44],[388,63,367,44,"jsx"],[388,66,367,44],[388,68,367,45,"PressabilityDebugView"],[388,90,367,66],[388,91,367,66,"PressabilityDebugView"],[388,112,367,66],[388,114,367,68],[389,12,368,10,"color"],[389,17,368,15],[389,19,368,17],[389,38,368,36],[390,12,369,10,"hitSlop"],[390,19,369,17],[390,21,369,19,"child"],[390,26,369,24],[390,27,369,25,"props"],[390,32,369,30],[390,33,369,31,"hitSlop"],[391,10,370,8],[391,11,370,9],[391,13,370,11],[391,36,370,34],[391,37,370,35],[391,38,370,36],[392,8,371,6],[393,8,372,6],[393,15,372,13],[393,28,372,26,"React"],[393,33,372,31],[393,34,372,32,"cloneElement"],[393,46,372,44],[393,47,372,45,"child"],[393,52,372,50],[393,54,372,50,"Object"],[393,60,372,50],[393,61,372,50,"assign"],[393,67,372,50],[394,10,373,8,"ref"],[394,13,373,11],[394,15,373,13],[394,19,373,17],[394,20,373,18,"refHandler"],[394,30,373,28],[395,10,374,8,"collapsable"],[395,21,374,19],[395,23,374,21],[396,8,374,26],[396,11,375,12],[396,15,375,12,"isTestEnv"],[396,22,375,21],[396,23,375,21,"isTestEnv"],[396,32,375,21],[396,34,375,22],[396,35,375,23],[396,38,375,26],[397,10,376,10,"handlerType"],[397,21,376,21],[397,23,376,23,"name"],[397,27,376,27],[398,10,377,10,"handlerTag"],[398,20,377,20],[398,22,377,22],[398,26,377,26],[398,27,377,27,"handlerTag"],[398,37,377,37],[399,10,378,10,"enabled"],[399,17,378,17],[399,19,378,19],[399,23,378,23],[399,24,378,24,"props"],[399,29,378,29],[399,30,378,30,"enabled"],[400,8,379,8],[400,9,379,9],[400,12,379,12],[400,13,379,13],[400,14,379,14],[401,10,380,8,"testID"],[401,16,380,14],[401,18,380,16],[401,22,380,20],[401,23,380,21,"props"],[401,28,380,26],[401,29,380,27,"testID"],[401,35,380,33],[401,39,380,37,"child"],[401,44,380,42],[401,45,380,43,"props"],[401,50,380,48],[401,51,380,49,"testID"],[402,8,380,55],[402,11,381,11,"events"],[402,17,381,17],[402,20,382,9,"grandChildren"],[402,33,382,22],[402,34,382,23],[403,6,383,4],[404,4,384,2],[405,4,385,2],[405,11,385,9,"Handler"],[405,18,385,16],[406,2,386,0],[407,0,386,1],[407,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCkE;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIM;GJE;AKE;kBCE;qBCI,4BD;GDC;CLE;eQe;ECO;ICI;KDc;IEC;gGPI;wBQC;YRE;SOE;yBES;SFE;KFO;IKC;KLM;IMC;KNe;4BOC;KPQ;kCQG;KRc;iBSC;KTc;2BUC;KVI;2BWC;4BnBY;SmBgB;uBPI;OOE;KXC;2BYC;KZI;IaC;yBTU;SSE;KbO;IcG;KdO;IeC;Kf0E;GDC;CRE"},"hasCjsExports":false},"type":"js/module"}]}