{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":143},"end":{"line":8,"column":29,"index":159}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":22,"index":184},"end":{"line":10,"column":49,"index":211}}],"key":"oeQTfrxJjWrqujOnmkexkfP2thU=","exportNames":["*"],"imports":1}},{"name":"./updateHandlers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":22,"index":236},"end":{"line":12,"column":49,"index":263}}],"key":"uYyZ77KwBF3ocB2CWB+S5Fh30eM=","exportNames":["*"],"imports":1}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":23,"index":289},"end":{"line":14,"column":51,"index":317}}],"key":"uhh1Qd4kAot/H/F9XNve/I2Qlu0=","exportNames":["*"],"imports":1}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":20,"index":340},"end":{"line":16,"column":45,"index":365}}],"key":"pc/an299aDD5JxGTf3pYOYBgHuw=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":13,"index":381},"end":{"line":18,"column":31,"index":399}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":45,"index":447},"end":{"line":20,"column":79,"index":481}}],"key":"a+XNRBzAwRb1cOdipqWWj9NE1pA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useDetectorUpdater = useDetectorUpdater;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _attachHandlers = require(_dependencyMap[1], \"./attachHandlers\");\n  var _updateHandlers = require(_dependencyMap[2], \"./updateHandlers\");\n  var _needsToReattach = require(_dependencyMap[3], \"./needsToReattach\");\n  var _dropHandlers = require(_dependencyMap[4], \"./dropHandlers\");\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[6], \"../../../findNodeHandle\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  // Returns a function that's responsible for updating the attached gestures\n  // If the view has changed, it will reattach the handlers to the new view\n  // If the view remains the same, it will update the handlers with the new config\n  function useDetectorUpdater(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef) {\n    const forceRender = (0, _utils.useForceRender)();\n    const updateAttachedGestures = (0, _react.useCallback)(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    skipConfigUpdate => {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      const viewTag = (0, _findNodeHandle.default)(state.viewRef);\n      const didUnderlyingViewChange = viewTag !== state.previousViewTag;\n      if (didUnderlyingViewChange || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach)) {\n        (0, _utils.validateDetectorChildren)(state.viewRef);\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n        (0, _attachHandlers.attachHandlers)({\n          preparedGesture,\n          gestureConfig,\n          gesturesToAttach,\n          webEventHandlersRef,\n          viewTag\n        });\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        (0, _updateHandlers.updateHandlers)(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    }, [forceRender, gestureConfig, gesturesToAttach, preparedGesture, state, webEventHandlersRef]);\n    return updateAttachedGestures;\n  }\n});","lineCount":53,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"useDetectorUpdater"],[7,28,6,26],[7,31,6,29,"useDetectorUpdater"],[7,49,6,47],[8,2,8,0],[8,6,8,4,"_react"],[8,12,8,10],[8,15,8,13,"require"],[8,22,8,20],[8,23,8,20,"_dependencyMap"],[8,37,8,20],[8,49,8,28],[8,50,8,29],[9,2,10,0],[9,6,10,4,"_attachHandlers"],[9,21,10,19],[9,24,10,22,"require"],[9,31,10,29],[9,32,10,29,"_dependencyMap"],[9,46,10,29],[9,69,10,48],[9,70,10,49],[10,2,12,0],[10,6,12,4,"_updateHandlers"],[10,21,12,19],[10,24,12,22,"require"],[10,31,12,29],[10,32,12,29,"_dependencyMap"],[10,46,12,29],[10,69,12,48],[10,70,12,49],[11,2,14,0],[11,6,14,4,"_needsToReattach"],[11,22,14,20],[11,25,14,23,"require"],[11,32,14,30],[11,33,14,30,"_dependencyMap"],[11,47,14,30],[11,71,14,50],[11,72,14,51],[12,2,16,0],[12,6,16,4,"_dropHandlers"],[12,19,16,17],[12,22,16,20,"require"],[12,29,16,27],[12,30,16,27,"_dependencyMap"],[12,44,16,27],[12,65,16,44],[12,66,16,45],[13,2,18,0],[13,6,18,4,"_utils"],[13,12,18,10],[13,15,18,13,"require"],[13,22,18,20],[13,23,18,20,"_dependencyMap"],[13,37,18,20],[13,51,18,30],[13,52,18,31],[14,2,20,0],[14,6,20,4,"_findNodeHandle"],[14,21,20,19],[14,24,20,22,"_interopRequireDefault"],[14,46,20,44],[14,47,20,45,"require"],[14,54,20,52],[14,55,20,52,"_dependencyMap"],[14,69,20,52],[14,99,20,78],[14,100,20,79],[14,101,20,80],[15,2,22,0],[15,11,22,9,"_interopRequireDefault"],[15,33,22,31,"_interopRequireDefault"],[15,34,22,32,"obj"],[15,37,22,35],[15,39,22,37],[16,4,22,39],[16,11,22,46,"obj"],[16,14,22,49],[16,18,22,53,"obj"],[16,21,22,56],[16,22,22,57,"__esModule"],[16,32,22,67],[16,35,22,70,"obj"],[16,38,22,73],[16,41,22,76],[17,6,22,78,"default"],[17,13,22,85],[17,15,22,87,"obj"],[18,4,22,91],[18,5,22,92],[19,2,22,94],[21,2,24,0],[22,2,25,0],[23,2,26,0],[24,2,27,0],[24,11,27,9,"useDetectorUpdater"],[24,29,27,27,"useDetectorUpdater"],[24,30,27,28,"state"],[24,35,27,33],[24,37,27,35,"preparedGesture"],[24,52,27,50],[24,54,27,52,"gesturesToAttach"],[24,70,27,68],[24,72,27,70,"gestureConfig"],[24,85,27,83],[24,87,27,85,"webEventHandlersRef"],[24,106,27,104],[24,108,27,106],[25,4,28,2],[25,10,28,8,"forceRender"],[25,21,28,19],[25,24,28,22],[25,25,28,23],[25,26,28,24],[25,28,28,26,"_utils"],[25,34,28,32],[25,35,28,33,"useForceRender"],[25,49,28,47],[25,51,28,49],[25,52,28,50],[26,4,29,2],[26,10,29,8,"updateAttachedGestures"],[26,32,29,30],[26,35,29,33],[26,36,29,34],[26,37,29,35],[26,39,29,37,"_react"],[26,45,29,43],[26,46,29,44,"useCallback"],[26,57,29,55],[27,4,29,58],[28,4,30,2,"skipConfigUpdate"],[28,20,30,18],[28,24,30,22],[29,6,31,4],[30,6,32,4],[30,12,32,10,"viewTag"],[30,19,32,17],[30,22,32,20],[30,23,32,21],[30,24,32,22],[30,26,32,24,"_findNodeHandle"],[30,41,32,39],[30,42,32,40,"default"],[30,49,32,47],[30,51,32,49,"state"],[30,56,32,54],[30,57,32,55,"viewRef"],[30,64,32,62],[30,65,32,63],[31,6,33,4],[31,12,33,10,"didUnderlyingViewChange"],[31,35,33,33],[31,38,33,36,"viewTag"],[31,45,33,43],[31,50,33,48,"state"],[31,55,33,53],[31,56,33,54,"previousViewTag"],[31,71,33,69],[32,6,35,4],[32,10,35,8,"didUnderlyingViewChange"],[32,33,35,31],[32,37,35,35],[32,38,35,36],[32,39,35,37],[32,41,35,39,"_needsToReattach"],[32,57,35,55],[32,58,35,56,"needsToReattach"],[32,73,35,71],[32,75,35,73,"preparedGesture"],[32,90,35,88],[32,92,35,90,"gesturesToAttach"],[32,108,35,106],[32,109,35,107],[32,111,35,109],[33,8,36,6],[33,9,36,7],[33,10,36,8],[33,12,36,10,"_utils"],[33,18,36,16],[33,19,36,17,"validateDetectorChildren"],[33,43,36,41],[33,45,36,43,"state"],[33,50,36,48],[33,51,36,49,"viewRef"],[33,58,36,56],[33,59,36,57],[34,8,37,6],[34,9,37,7],[34,10,37,8],[34,12,37,10,"_dropHandlers"],[34,25,37,23],[34,26,37,24,"dropHandlers"],[34,38,37,36],[34,40,37,38,"preparedGesture"],[34,55,37,53],[34,56,37,54],[35,8,38,6],[35,9,38,7],[35,10,38,8],[35,12,38,10,"_attachHandlers"],[35,27,38,25],[35,28,38,26,"attachHandlers"],[35,42,38,40],[35,44,38,42],[36,10,39,8,"preparedGesture"],[36,25,39,23],[37,10,40,8,"gestureConfig"],[37,23,40,21],[38,10,41,8,"gesturesToAttach"],[38,26,41,24],[39,10,42,8,"webEventHandlersRef"],[39,29,42,27],[40,10,43,8,"viewTag"],[41,8,44,6],[41,9,44,7],[41,10,44,8],[42,8,46,6],[42,12,46,10,"didUnderlyingViewChange"],[42,35,46,33],[42,37,46,35],[43,10,47,8,"state"],[43,15,47,13],[43,16,47,14,"previousViewTag"],[43,31,47,29],[43,34,47,32,"viewTag"],[43,41,47,39],[44,10,48,8,"state"],[44,15,48,13],[44,16,48,14,"forceRebuildReanimatedEvent"],[44,43,48,41],[44,46,48,44],[44,50,48,48],[45,10,49,8,"forceRender"],[45,21,49,19],[45,22,49,20],[45,23,49,21],[46,8,50,6],[47,6,51,4],[47,7,51,5],[47,13,51,11],[47,17,51,15],[47,18,51,16,"skipConfigUpdate"],[47,34,51,32],[47,36,51,34],[48,8,52,6],[48,9,52,7],[48,10,52,8],[48,12,52,10,"_updateHandlers"],[48,27,52,25],[48,28,52,26,"updateHandlers"],[48,42,52,40],[48,44,52,42,"preparedGesture"],[48,59,52,57],[48,61,52,59,"gestureConfig"],[48,74,52,72],[48,76,52,74,"gesturesToAttach"],[48,92,52,90],[48,93,52,91],[49,6,53,4],[50,4,54,2],[50,5,54,3],[50,7,54,5],[50,8,54,6,"forceRender"],[50,19,54,17],[50,21,54,19,"gestureConfig"],[50,34,54,32],[50,36,54,34,"gesturesToAttach"],[50,52,54,50],[50,54,54,52,"preparedGesture"],[50,69,54,67],[50,71,54,69,"state"],[50,76,54,74],[50,78,54,76,"webEventHandlersRef"],[50,97,54,95],[50,98,54,96],[50,99,54,97],[51,4,55,2],[51,11,55,9,"updateAttachedGestures"],[51,33,55,31],[52,2,56,0],[53,0,56,1],[53,3]],"functionMap":{"names":["<global>","_interopRequireDefault","useDetectorUpdater","<anonymous>"],"mappings":"AAA;ACqB,+FD;AEK;ECG;GDwB;CFE"},"hasCjsExports":true},"type":"js/module"}]}