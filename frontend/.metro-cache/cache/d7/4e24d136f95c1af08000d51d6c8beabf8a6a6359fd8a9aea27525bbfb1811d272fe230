{"dependencies":[{"name":"./createHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"j9sUgJL2drnBoAedJuo4/l2ILqw=","exportNames":["*"],"imports":1}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":65,"index":125}}],"key":"M3YJtGPnWOlAL/cGsCkMRGpSLhc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"tapGestureHandlerProps\", {\n    enumerable: true,\n    get: function () {\n      return tapGestureHandlerProps;\n    }\n  });\n  Object.defineProperty(exports, \"tapHandlerName\", {\n    enumerable: true,\n    get: function () {\n      return tapHandlerName;\n    }\n  });\n  Object.defineProperty(exports, \"TapGestureHandler\", {\n    enumerable: true,\n    get: function () {\n      return TapGestureHandler;\n    }\n  });\n  var _createHandler = require(_dependencyMap[0], \"./createHandler\");\n  var createHandler = _interopDefault(_createHandler);\n  var _gestureHandlerCommon = require(_dependencyMap[1], \"./gestureHandlerCommon\");\n  const tapGestureHandlerProps = ['maxDurationMs', 'maxDelayMs', 'numberOfTaps', 'maxDeltaX', 'maxDeltaY', 'maxDist', 'minPointers'];\n\n  /**\n   * @deprecated TapGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Tap()` instead.\n   */\n\n  const tapHandlerName = 'TapGestureHandler';\n\n  /**\n   * @deprecated TapGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Tap()` instead.\n   */\n\n  /**\n   * @deprecated TapGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Tap()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\n  const TapGestureHandler = (0, createHandler.default)({\n    name: tapHandlerName,\n    allowedProps: [..._gestureHandlerCommon.baseGestureHandlerProps, ...tapGestureHandlerProps],\n    config: {\n      shouldCancelWhenOutside: true\n    }\n  });\n});","lineCount":56,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,5,0,"Object"],[12,8,5,0],[12,9,5,0,"defineProperty"],[12,23,5,0],[12,24,5,0,"exports"],[12,31,5,0],[13,4,5,0,"enumerable"],[13,14,5,0],[14,4,5,0,"get"],[14,7,5,0],[14,18,5,0,"get"],[14,19,5,0],[15,6,5,0],[15,13,5,0,"tapGestureHandlerProps"],[15,35,5,0],[16,4,5,0],[17,2,5,0],[18,2,11,0,"Object"],[18,8,11,0],[18,9,11,0,"defineProperty"],[18,23,11,0],[18,24,11,0,"exports"],[18,31,11,0],[19,4,11,0,"enumerable"],[19,14,11,0],[20,4,11,0,"get"],[20,7,11,0],[20,18,11,0,"get"],[20,19,11,0],[21,6,11,0],[21,13,11,0,"tapHandlerName"],[21,27,11,0],[22,4,11,0],[23,2,11,0],[24,2,21,0,"Object"],[24,8,21,0],[24,9,21,0,"defineProperty"],[24,23,21,0],[24,24,21,0,"exports"],[24,31,21,0],[25,4,21,0,"enumerable"],[25,14,21,0],[26,4,21,0,"get"],[26,7,21,0],[26,18,21,0,"get"],[26,19,21,0],[27,6,21,0],[27,13,21,0,"TapGestureHandler"],[27,30,21,0],[28,4,21,0],[29,2,21,0],[30,2,3,0],[30,6,3,0,"_createHandler"],[30,20,3,0],[30,23,3,0,"require"],[30,30,3,0],[30,31,3,0,"_dependencyMap"],[30,45,3,0],[31,2,3,0],[31,6,3,0,"createHandler"],[31,19,3,0],[31,22,3,0,"_interopDefault"],[31,37,3,0],[31,38,3,0,"_createHandler"],[31,52,3,0],[32,2,4,0],[32,6,4,0,"_gestureHandlerCommon"],[32,27,4,0],[32,30,4,0,"require"],[32,37,4,0],[32,38,4,0,"_dependencyMap"],[32,52,4,0],[33,2,5,7],[33,8,5,13,"tapGestureHandlerProps"],[33,30,5,35],[33,33,5,38],[33,34,5,39],[33,49,5,54],[33,51,5,56],[33,63,5,68],[33,65,5,70],[33,79,5,84],[33,81,5,86],[33,92,5,97],[33,94,5,99],[33,105,5,110],[33,107,5,112],[33,116,5,121],[33,118,5,123],[33,131,5,136],[33,132,5,137],[35,2,7,0],[36,0,8,0],[37,0,9,0],[39,2,11,7],[39,8,11,13,"tapHandlerName"],[39,22,11,27],[39,25,11,30],[39,44,11,49],[41,2,13,0],[42,0,14,0],[43,0,15,0],[45,2,17,0],[46,0,18,0],[47,0,19,0],[48,2,20,0],[49,2,21,7],[49,8,21,13,"TapGestureHandler"],[49,25,21,30],[49,28,21,33],[49,32,21,33,"createHandler"],[49,45,21,46],[49,46,21,46,"default"],[49,53,21,46],[49,55,21,47],[50,4,22,2,"name"],[50,8,22,6],[50,10,22,8,"tapHandlerName"],[50,24,22,22],[51,4,23,2,"allowedProps"],[51,16,23,14],[51,18,23,16],[51,19,23,17],[51,22,23,20,"baseGestureHandlerProps"],[51,43,23,43],[51,44,23,43,"baseGestureHandlerProps"],[51,67,23,43],[51,69,23,45],[51,72,23,48,"tapGestureHandlerProps"],[51,94,23,70],[51,95,23,71],[52,4,24,2,"config"],[52,10,24,8],[52,12,24,10],[53,6,25,4,"shouldCancelWhenOutside"],[53,29,25,27],[53,31,25,29],[54,4,26,2],[55,2,27,0],[55,3,27,1],[55,4,27,2],[56,0,27,3],[56,3]],"functionMap":{"names":["<global>"],"mappings":"AAA"},"hasCjsExports":false},"type":"js/module"}]}