{"dependencies":[{"name":"./flingGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":20,"index":134},"end":{"line":8,"column":45,"index":159}}],"key":"Qo2tLOG1OJl/6EwtGlRuX3dZXkg=","exportNames":["*"],"imports":1}},{"name":"./forceTouchGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":25,"index":187},"end":{"line":10,"column":55,"index":217}}],"key":"FQEHpuyTwsIk4ZGTvolDI9Uggr8=","exportNames":["*"],"imports":1}},{"name":"./gestureComposition","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":26,"index":246},"end":{"line":12,"column":57,"index":277}}],"key":"CzaLaXaAjnbh3Y7D5eZmMDqRqAo=","exportNames":["*"],"imports":1}},{"name":"./longPressGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":24,"index":304},"end":{"line":14,"column":53,"index":333}}],"key":"5Z+RW/IQ/CGIVGVFijh7QxVgiOQ=","exportNames":["*"],"imports":1}},{"name":"./panGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":18,"index":354},"end":{"line":16,"column":41,"index":377}}],"key":"FewYScBwJxagHvVm5wao6gIdrD4=","exportNames":["*"],"imports":1}},{"name":"./pinchGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":20,"index":400},"end":{"line":18,"column":45,"index":425}}],"key":"wLAuWCaDSh+9YlB6lAJaBUSgLEo=","exportNames":["*"],"imports":1}},{"name":"./rotationGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":23,"index":451},"end":{"line":20,"column":51,"index":479}}],"key":"fMkPnpy9RBZmM8GaQ3raypOXoJU=","exportNames":["*"],"imports":1}},{"name":"./tapGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":18,"index":500},"end":{"line":22,"column":41,"index":523}}],"key":"wowBsYoaXBg5S6nfjJdljX0xK64=","exportNames":["*"],"imports":1}},{"name":"./nativeGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":21,"index":547},"end":{"line":24,"column":47,"index":573}}],"key":"S+p7eSZgZpvo85svVpwXNxpdenU=","exportNames":["*"],"imports":1}},{"name":"./manualGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":21,"index":597},"end":{"line":26,"column":47,"index":623}}],"key":"ptvMrM2Ns5ezi+xfRMQPHhI0VFA=","exportNames":["*"],"imports":1}},{"name":"./hoverGesture","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":20,"index":646},"end":{"line":28,"column":45,"index":671}}],"key":"xvkC+casoq/9tEiez+vwITQC3ZA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureObjects = void 0;\n  var _flingGesture = require(_dependencyMap[0], \"./flingGesture\");\n  var _forceTouchGesture = require(_dependencyMap[1], \"./forceTouchGesture\");\n  var _gestureComposition = require(_dependencyMap[2], \"./gestureComposition\");\n  var _longPressGesture = require(_dependencyMap[3], \"./longPressGesture\");\n  var _panGesture = require(_dependencyMap[4], \"./panGesture\");\n  var _pinchGesture = require(_dependencyMap[5], \"./pinchGesture\");\n  var _rotationGesture = require(_dependencyMap[6], \"./rotationGesture\");\n  var _tapGesture = require(_dependencyMap[7], \"./tapGesture\");\n  var _nativeGesture = require(_dependencyMap[8], \"./nativeGesture\");\n  var _manualGesture = require(_dependencyMap[9], \"./manualGesture\");\n  var _hoverGesture = require(_dependencyMap[10], \"./hoverGesture\");\n\n  /**\n   * `Gesture` is the object that allows you to create and compose gestures.\n   *\n   * ### Remarks\n   * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n   */\n  const GestureObjects = {\n    /**\n     * A discrete gesture that recognizes one or many taps.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n     */\n    Tap: () => {\n      return new _tapGesture.TapGesture();\n    },\n    /**\n     * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n     */\n    Pan: () => {\n      return new _panGesture.PanGesture();\n    },\n    /**\n     * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n     */\n    Pinch: () => {\n      return new _pinchGesture.PinchGesture();\n    },\n    /**\n     * A continuous gesture that can recognize rotation and track its movement.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n     */\n    Rotation: () => {\n      return new _rotationGesture.RotationGesture();\n    },\n    /**\n     * A discrete gesture that activates when the movement is sufficiently fast.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n     */\n    Fling: () => {\n      return new _flingGesture.FlingGesture();\n    },\n    /**\n     * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n     */\n    LongPress: () => {\n      return new _longPressGesture.LongPressGesture();\n    },\n    /**\n     * #### iOS only\n     * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n     */\n    ForceTouch: () => {\n      return new _forceTouchGesture.ForceTouchGesture();\n    },\n    /**\n     * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n     * When used, the other component should be the direct child of a `GestureDetector`.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n     */\n    Native: () => {\n      return new _nativeGesture.NativeGesture();\n    },\n    /**\n     * A plain gesture that has no specific activation criteria nor event data set.\n     * Its state has to be controlled manually using a state manager.\n     * It will not fail when all the pointers are lifted from the screen.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n     */\n    Manual: () => {\n      return new _manualGesture.ManualGesture();\n    },\n    /**\n     * A continuous gesture that can recognize hovering above the view it's attached to.\n     * The hover effect may be activated by moving a mouse or a stylus over the view.\n     *\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n     */\n    Hover: () => {\n      return new _hoverGesture.HoverGesture();\n    },\n    /**\n     * Builds a composed gesture consisting of gestures provided as parameters.\n     * The first one that becomes active cancels the rest of gestures.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n     */\n    Race: (...gestures) => {\n      return new _gestureComposition.ComposedGesture(...gestures);\n    },\n    /**\n     * Builds a composed gesture that allows all base gestures to run simultaneously.\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n     */\n    Simultaneous(...gestures) {\n      return new _gestureComposition.SimultaneousGesture(...gestures);\n    },\n    /**\n     * Builds a composed gesture where only one of the provided gestures can become active.\n     * Priority is decided through the order of gestures: the first one has higher priority\n     * than the second one, second one has higher priority than the third one, and so on.\n     * For example, to make a gesture that recognizes both single and double tap you need\n     * to call Exclusive(doubleTap, singleTap).\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n     */\n    Exclusive(...gestures) {\n      return new _gestureComposition.ExclusiveGesture(...gestures);\n    }\n  };\n  exports.GestureObjects = GestureObjects;\n});","lineCount":133,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"GestureObjects"],[7,24,6,22],[7,27,6,25],[7,32,6,30],[7,33,6,31],[8,2,8,0],[8,6,8,4,"_flingGesture"],[8,19,8,17],[8,22,8,20,"require"],[8,29,8,27],[8,30,8,27,"_dependencyMap"],[8,44,8,27],[8,65,8,44],[8,66,8,45],[9,2,10,0],[9,6,10,4,"_forceTouchGesture"],[9,24,10,22],[9,27,10,25,"require"],[9,34,10,32],[9,35,10,32,"_dependencyMap"],[9,49,10,32],[9,75,10,54],[9,76,10,55],[10,2,12,0],[10,6,12,4,"_gestureComposition"],[10,25,12,23],[10,28,12,26,"require"],[10,35,12,33],[10,36,12,33,"_dependencyMap"],[10,50,12,33],[10,77,12,56],[10,78,12,57],[11,2,14,0],[11,6,14,4,"_longPressGesture"],[11,23,14,21],[11,26,14,24,"require"],[11,33,14,31],[11,34,14,31,"_dependencyMap"],[11,48,14,31],[11,73,14,52],[11,74,14,53],[12,2,16,0],[12,6,16,4,"_panGesture"],[12,17,16,15],[12,20,16,18,"require"],[12,27,16,25],[12,28,16,25,"_dependencyMap"],[12,42,16,25],[12,61,16,40],[12,62,16,41],[13,2,18,0],[13,6,18,4,"_pinchGesture"],[13,19,18,17],[13,22,18,20,"require"],[13,29,18,27],[13,30,18,27,"_dependencyMap"],[13,44,18,27],[13,65,18,44],[13,66,18,45],[14,2,20,0],[14,6,20,4,"_rotationGesture"],[14,22,20,20],[14,25,20,23,"require"],[14,32,20,30],[14,33,20,30,"_dependencyMap"],[14,47,20,30],[14,71,20,50],[14,72,20,51],[15,2,22,0],[15,6,22,4,"_tapGesture"],[15,17,22,15],[15,20,22,18,"require"],[15,27,22,25],[15,28,22,25,"_dependencyMap"],[15,42,22,25],[15,61,22,40],[15,62,22,41],[16,2,24,0],[16,6,24,4,"_nativeGesture"],[16,20,24,18],[16,23,24,21,"require"],[16,30,24,28],[16,31,24,28,"_dependencyMap"],[16,45,24,28],[16,67,24,46],[16,68,24,47],[17,2,26,0],[17,6,26,4,"_manualGesture"],[17,20,26,18],[17,23,26,21,"require"],[17,30,26,28],[17,31,26,28,"_dependencyMap"],[17,45,26,28],[17,67,26,46],[17,68,26,47],[18,2,28,0],[18,6,28,4,"_hoverGesture"],[18,19,28,17],[18,22,28,20,"require"],[18,29,28,27],[18,30,28,27,"_dependencyMap"],[18,44,28,27],[18,66,28,44],[18,67,28,45],[20,2,30,0],[21,0,31,0],[22,0,32,0],[23,0,33,0],[24,0,34,0],[25,0,35,0],[26,0,36,0],[27,0,37,0],[28,2,38,0],[28,8,38,6,"GestureObjects"],[28,22,38,20],[28,25,38,23],[29,4,39,2],[30,0,40,0],[31,0,41,0],[32,0,42,0],[33,4,43,2,"Tap"],[33,7,43,5],[33,9,43,7,"Tap"],[33,10,43,7],[33,15,43,13],[34,6,44,4],[34,13,44,11],[34,17,44,15,"_tapGesture"],[34,28,44,26],[34,29,44,27,"TapGesture"],[34,39,44,37],[34,40,44,38],[34,41,44,39],[35,4,45,2],[35,5,45,3],[36,4,47,2],[37,0,48,0],[38,0,49,0],[39,0,50,0],[40,4,51,2,"Pan"],[40,7,51,5],[40,9,51,7,"Pan"],[40,10,51,7],[40,15,51,13],[41,6,52,4],[41,13,52,11],[41,17,52,15,"_panGesture"],[41,28,52,26],[41,29,52,27,"PanGesture"],[41,39,52,37],[41,40,52,38],[41,41,52,39],[42,4,53,2],[42,5,53,3],[43,4,55,2],[44,0,56,0],[45,0,57,0],[46,0,58,0],[47,4,59,2,"Pinch"],[47,9,59,7],[47,11,59,9,"Pinch"],[47,12,59,9],[47,17,59,15],[48,6,60,4],[48,13,60,11],[48,17,60,15,"_pinchGesture"],[48,30,60,28],[48,31,60,29,"PinchGesture"],[48,43,60,41],[48,44,60,42],[48,45,60,43],[49,4,61,2],[49,5,61,3],[50,4,63,2],[51,0,64,0],[52,0,65,0],[53,0,66,0],[54,4,67,2,"Rotation"],[54,12,67,10],[54,14,67,12,"Rotation"],[54,15,67,12],[54,20,67,18],[55,6,68,4],[55,13,68,11],[55,17,68,15,"_rotationGesture"],[55,33,68,31],[55,34,68,32,"RotationGesture"],[55,49,68,47],[55,50,68,48],[55,51,68,49],[56,4,69,2],[56,5,69,3],[57,4,71,2],[58,0,72,0],[59,0,73,0],[60,0,74,0],[61,4,75,2,"Fling"],[61,9,75,7],[61,11,75,9,"Fling"],[61,12,75,9],[61,17,75,15],[62,6,76,4],[62,13,76,11],[62,17,76,15,"_flingGesture"],[62,30,76,28],[62,31,76,29,"FlingGesture"],[62,43,76,41],[62,44,76,42],[62,45,76,43],[63,4,77,2],[63,5,77,3],[64,4,79,2],[65,0,80,0],[66,0,81,0],[67,0,82,0],[68,4,83,2,"LongPress"],[68,13,83,11],[68,15,83,13,"LongPress"],[68,16,83,13],[68,21,83,19],[69,6,84,4],[69,13,84,11],[69,17,84,15,"_longPressGesture"],[69,34,84,32],[69,35,84,33,"LongPressGesture"],[69,51,84,49],[69,52,84,50],[69,53,84,51],[70,4,85,2],[70,5,85,3],[71,4,87,2],[72,0,88,0],[73,0,89,0],[74,0,90,0],[75,0,91,0],[76,4,92,2,"ForceTouch"],[76,14,92,12],[76,16,92,14,"ForceTouch"],[76,17,92,14],[76,22,92,20],[77,6,93,4],[77,13,93,11],[77,17,93,15,"_forceTouchGesture"],[77,35,93,33],[77,36,93,34,"ForceTouchGesture"],[77,53,93,51],[77,54,93,52],[77,55,93,53],[78,4,94,2],[78,5,94,3],[79,4,96,2],[80,0,97,0],[81,0,98,0],[82,0,99,0],[83,0,100,0],[84,4,101,2,"Native"],[84,10,101,8],[84,12,101,10,"Native"],[84,13,101,10],[84,18,101,16],[85,6,102,4],[85,13,102,11],[85,17,102,15,"_nativeGesture"],[85,31,102,29],[85,32,102,30,"NativeGesture"],[85,45,102,43],[85,46,102,44],[85,47,102,45],[86,4,103,2],[86,5,103,3],[87,4,105,2],[88,0,106,0],[89,0,107,0],[90,0,108,0],[91,0,109,0],[92,0,110,0],[93,4,111,2,"Manual"],[93,10,111,8],[93,12,111,10,"Manual"],[93,13,111,10],[93,18,111,16],[94,6,112,4],[94,13,112,11],[94,17,112,15,"_manualGesture"],[94,31,112,29],[94,32,112,30,"ManualGesture"],[94,45,112,43],[94,46,112,44],[94,47,112,45],[95,4,113,2],[95,5,113,3],[96,4,115,2],[97,0,116,0],[98,0,117,0],[99,0,118,0],[100,0,119,0],[101,0,120,0],[102,4,121,2,"Hover"],[102,9,121,7],[102,11,121,9,"Hover"],[102,12,121,9],[102,17,121,15],[103,6,122,4],[103,13,122,11],[103,17,122,15,"_hoverGesture"],[103,30,122,28],[103,31,122,29,"HoverGesture"],[103,43,122,41],[103,44,122,42],[103,45,122,43],[104,4,123,2],[104,5,123,3],[105,4,125,2],[106,0,126,0],[107,0,127,0],[108,0,128,0],[109,0,129,0],[110,4,130,2,"Race"],[110,8,130,6],[110,10,130,8,"Race"],[110,11,130,9],[110,14,130,12,"gestures"],[110,22,130,20],[110,27,130,25],[111,6,131,4],[111,13,131,11],[111,17,131,15,"_gestureComposition"],[111,36,131,34],[111,37,131,35,"ComposedGesture"],[111,52,131,50],[111,53,131,51],[111,56,131,54,"gestures"],[111,64,131,62],[111,65,131,63],[112,4,132,2],[112,5,132,3],[113,4,134,2],[114,0,135,0],[115,0,136,0],[116,0,137,0],[117,4,138,2,"Simultaneous"],[117,16,138,14,"Simultaneous"],[117,17,138,15],[117,20,138,18,"gestures"],[117,28,138,26],[117,30,138,28],[118,6,139,4],[118,13,139,11],[118,17,139,15,"_gestureComposition"],[118,36,139,34],[118,37,139,35,"SimultaneousGesture"],[118,56,139,54],[118,57,139,55],[118,60,139,58,"gestures"],[118,68,139,66],[118,69,139,67],[119,4,140,2],[119,5,140,3],[120,4,142,2],[121,0,143,0],[122,0,144,0],[123,0,145,0],[124,0,146,0],[125,0,147,0],[126,0,148,0],[127,0,149,0],[128,4,150,2,"Exclusive"],[128,13,150,11,"Exclusive"],[128,14,150,12],[128,17,150,15,"gestures"],[128,25,150,23],[128,27,150,25],[129,6,151,4],[129,13,151,11],[129,17,151,15,"_gestureComposition"],[129,36,151,34],[129,37,151,35,"ExclusiveGesture"],[129,53,151,51],[129,54,151,52],[129,57,151,55,"gestures"],[129,65,151,63],[129,66,151,64],[130,4,152,2],[131,2,154,0],[131,3,154,1],[132,2,155,0,"exports"],[132,9,155,7],[132,10,155,8,"GestureObjects"],[132,24,155,22],[132,27,155,25,"GestureObjects"],[132,41,155,39],[133,0,155,40],[133,3]],"functionMap":{"names":["<global>","GestureObjects.Tap","GestureObjects.Pan","GestureObjects.Pinch","GestureObjects.Rotation","GestureObjects.Fling","GestureObjects.LongPress","GestureObjects.ForceTouch","GestureObjects.Native","GestureObjects.Manual","GestureObjects.Hover","GestureObjects.Race","GestureObjects.Simultaneous","GestureObjects.Exclusive"],"mappings":"AAA;OC0C;GDE;OEM;GFE;SGM;GHE;YIM;GJE;SKM;GLE;aMM;GNE;cOO;GPE;UQO;GRE;USQ;GTE;SUQ;GVE;QWO;GXE;EYM;GZE;EaU;GbE"},"hasCjsExports":true},"type":"js/module"}]}