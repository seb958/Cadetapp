{"dependencies":[{"name":"react-native-web/dist/exports/FlatList","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"DmaJKCBnIi5ZEPZkQdrt7FKBDEo=","exportNames":["*"],"imports":1}},{"name":"./web/utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":56},"end":{"line":4,"column":45,"index":101}}],"key":"0QFKLjYfUp4whm+krxBKZT/mgNk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return findNodeHandle;\n    }\n  });\n  var _reactNativeWebDistExportsFlatList = require(_dependencyMap[0], \"react-native-web/dist/exports/FlatList\");\n  var FlatList = _interopDefault(_reactNativeWebDistExportsFlatList);\n  var _webUtils = require(_dependencyMap[1], \"./web/utils\");\n  function findNodeHandle(viewRef) {\n    // TODO: Remove this once we remove old API.\n    if (viewRef instanceof FlatList.default) {\n      // @ts-ignore This is the only way to get the scroll ref from FlatList.\n      return viewRef._listRef._scrollRef.firstChild;\n    }\n    // Old API assumes that child handler is HTMLElement.\n    // However, if we nest handlers, we will get ref to another handler.\n    // In that case, we want to recursively call findNodeHandle with new handler viewTag (which can also be ref to another handler).\n    if (viewRef?.viewTag !== undefined) {\n      return findNodeHandle(viewRef.viewTag);\n    }\n    if (viewRef instanceof Element) {\n      if (viewRef.style.display === 'contents') {\n        return findNodeHandle(viewRef.firstChild);\n      }\n      return viewRef;\n    }\n    if ((0, _webUtils.isRNSVGElement)(viewRef)) {\n      return viewRef.elementRef.current;\n    }\n\n    // In new API, we receive ref object which `current` field points to  wrapper `div` with `display: contents;`.\n    // We want to return the first descendant (in DFS order) that doesn't have this property.\n    let element = viewRef?.current;\n    while (element && element.style.display === 'contents') {\n      element = element.firstChild;\n    }\n    return element;\n  }\n});","lineCount":51,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,5,15,"Object"],[12,8,5,15],[12,9,5,15,"defineProperty"],[12,23,5,15],[12,24,5,15,"exports"],[12,31,5,15],[13,4,5,15,"enumerable"],[13,14,5,15],[14,4,5,15,"get"],[14,7,5,15],[14,18,5,15,"get"],[14,19,5,15],[15,6,5,15],[15,13,5,15,"findNodeHandle"],[15,27,5,15],[16,4,5,15],[17,2,5,15],[18,2,34,1],[18,6,34,1,"_reactNativeWebDistExportsFlatList"],[18,40,34,1],[18,43,34,1,"require"],[18,50,34,1],[18,51,34,1,"_dependencyMap"],[18,65,34,1],[19,2,34,1],[19,6,34,1,"FlatList"],[19,14,34,1],[19,17,34,1,"_interopDefault"],[19,32,34,1],[19,33,34,1,"_reactNativeWebDistExportsFlatList"],[19,67,34,1],[20,2,4,0],[20,6,4,0,"_webUtils"],[20,15,4,0],[20,18,4,0,"require"],[20,25,4,0],[20,26,4,0,"_dependencyMap"],[20,40,4,0],[21,2,5,15],[21,11,5,24,"findNodeHandle"],[21,25,5,38,"findNodeHandle"],[21,26,5,39,"viewRef"],[21,33,5,46],[21,35,5,48],[22,4,6,2],[23,4,7,2],[23,8,7,6,"viewRef"],[23,15,7,13],[23,27,7,25,"FlatList"],[23,35,7,33],[23,36,7,33,"default"],[23,43,7,33],[23,45,7,35],[24,6,8,4],[25,6,9,4],[25,13,9,11,"viewRef"],[25,20,9,18],[25,21,9,19,"_listRef"],[25,29,9,27],[25,30,9,28,"_scrollRef"],[25,40,9,38],[25,41,9,39,"firstChild"],[25,51,9,49],[26,4,10,2],[27,4,11,2],[28,4,12,2],[29,4,13,2],[30,4,14,2],[30,8,14,6,"viewRef"],[30,15,14,13],[30,17,14,15,"viewTag"],[30,24,14,22],[30,29,14,27,"undefined"],[30,38,14,36],[30,40,14,38],[31,6,15,4],[31,13,15,11,"findNodeHandle"],[31,27,15,25],[31,28,15,26,"viewRef"],[31,35,15,33],[31,36,15,34,"viewTag"],[31,43,15,41],[31,44,15,42],[32,4,16,2],[33,4,17,2],[33,8,17,6,"viewRef"],[33,15,17,13],[33,27,17,25,"Element"],[33,34,17,32],[33,36,17,34],[34,6,18,4],[34,10,18,8,"viewRef"],[34,17,18,15],[34,18,18,16,"style"],[34,23,18,21],[34,24,18,22,"display"],[34,31,18,29],[34,36,18,34],[34,46,18,44],[34,48,18,46],[35,8,19,6],[35,15,19,13,"findNodeHandle"],[35,29,19,27],[35,30,19,28,"viewRef"],[35,37,19,35],[35,38,19,36,"firstChild"],[35,48,19,46],[35,49,19,47],[36,6,20,4],[37,6,21,4],[37,13,21,11,"viewRef"],[37,20,21,18],[38,4,22,2],[39,4,23,2],[39,8,23,6],[39,12,23,6,"isRNSVGElement"],[39,21,23,20],[39,22,23,20,"isRNSVGElement"],[39,36,23,20],[39,38,23,21,"viewRef"],[39,45,23,28],[39,46,23,29],[39,48,23,31],[40,6,24,4],[40,13,24,11,"viewRef"],[40,20,24,18],[40,21,24,19,"elementRef"],[40,31,24,29],[40,32,24,30,"current"],[40,39,24,37],[41,4,25,2],[43,4,27,2],[44,4,28,2],[45,4,29,2],[45,8,29,6,"element"],[45,15,29,13],[45,18,29,16,"viewRef"],[45,25,29,23],[45,27,29,25,"current"],[45,34,29,32],[46,4,30,2],[46,11,30,9,"element"],[46,18,30,16],[46,22,30,20,"element"],[46,29,30,27],[46,30,30,28,"style"],[46,35,30,33],[46,36,30,34,"display"],[46,43,30,41],[46,48,30,46],[46,58,30,56],[46,60,30,58],[47,6,31,4,"element"],[47,13,31,11],[47,16,31,14,"element"],[47,23,31,21],[47,24,31,22,"firstChild"],[47,34,31,32],[48,4,32,2],[49,4,33,2],[49,11,33,9,"element"],[49,18,33,16],[50,2,34,0],[51,0,34,1],[51,3]],"functionMap":{"names":["<global>","findNodeHandle"],"mappings":"AAA;eCI;CD6B"},"hasCjsExports":false},"type":"js/module"}]}