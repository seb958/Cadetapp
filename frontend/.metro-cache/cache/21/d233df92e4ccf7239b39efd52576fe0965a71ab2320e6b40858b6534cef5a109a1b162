{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":36,"index":472},"end":{"line":17,"column":52,"index":488}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  exports.hasProperty = hasProperty;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.deepEqual = deepEqual;\n  exports.INT32_MAX = void 0;\n  var _react = _interopRequireDefault(require(_dependencyMap[0], \"react\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    const previousArr = [null];\n    const currentArr = [...array];\n    const transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const previous = previousArr[i];\n      const transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  } // eslint-disable-next-line @typescript-eslint/ban-types\n\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  } // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n\n  function isFabric() {\n    var _global;\n\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!((_global = global) !== null && _global !== void 0 && _global.nativeFabricUIManager);\n  }\n  function isReact19() {\n    return _react.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    const localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const INT32_MAX = 2 ** 31 - 1;\n  exports.INT32_MAX = INT32_MAX;\n});","lineCount":103,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"toArray"],[7,17,6,15],[7,20,6,18,"toArray"],[7,27,6,25],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"withPrevAndCurrent"],[8,28,7,26],[8,31,7,29,"withPrevAndCurrent"],[8,49,7,47],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"hasProperty"],[9,21,8,19],[9,24,8,22,"hasProperty"],[9,35,8,33],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"isTestEnv"],[10,19,9,17],[10,22,9,20,"isTestEnv"],[10,31,9,29],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"tagMessage"],[11,20,10,18],[11,23,10,21,"tagMessage"],[11,33,10,31],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"isFabric"],[12,18,11,16],[12,21,11,19,"isFabric"],[12,29,11,27],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"isReact19"],[13,19,12,17],[13,22,12,20,"isReact19"],[13,31,12,29],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"isRemoteDebuggingEnabled"],[14,34,13,32],[14,37,13,35,"isRemoteDebuggingEnabled"],[14,61,13,59],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"deepEqual"],[15,19,14,17],[15,22,14,20,"deepEqual"],[15,31,14,29],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"INT32_MAX"],[16,19,15,17],[16,22,15,20],[16,27,15,25],[16,28,15,26],[17,2,17,0],[17,6,17,4,"_react"],[17,12,17,10],[17,15,17,13,"_interopRequireDefault"],[17,37,17,35],[17,38,17,36,"require"],[17,45,17,43],[17,46,17,43,"_dependencyMap"],[17,60,17,43],[17,72,17,51],[17,73,17,52],[17,74,17,53],[18,2,19,0],[18,11,19,9,"_interopRequireDefault"],[18,33,19,31,"_interopRequireDefault"],[18,34,19,32,"obj"],[18,37,19,35],[18,39,19,37],[19,4,19,39],[19,11,19,46,"obj"],[19,14,19,49],[19,18,19,53,"obj"],[19,21,19,56],[19,22,19,57,"__esModule"],[19,32,19,67],[19,35,19,70,"obj"],[19,38,19,73],[19,41,19,76],[20,6,19,78,"default"],[20,13,19,85],[20,15,19,87,"obj"],[21,4,19,91],[21,5,19,92],[22,2,19,94],[23,2,21,0],[23,11,21,9,"toArray"],[23,18,21,16,"toArray"],[23,19,21,17,"object"],[23,25,21,23],[23,27,21,25],[24,4,22,2],[24,8,22,6],[24,9,22,7,"Array"],[24,14,22,12],[24,15,22,13,"isArray"],[24,22,22,20],[24,23,22,21,"object"],[24,29,22,27],[24,30,22,28],[24,32,22,30],[25,6,23,4],[25,13,23,11],[25,14,23,12,"object"],[25,20,23,18],[25,21,23,19],[26,4,24,2],[27,4,26,2],[27,11,26,9,"object"],[27,17,26,15],[28,2,27,0],[29,2,29,0],[29,11,29,9,"withPrevAndCurrent"],[29,29,29,27,"withPrevAndCurrent"],[29,30,29,28,"array"],[29,35,29,33],[29,37,29,35,"mapFn"],[29,42,29,40],[29,44,29,42],[30,4,30,2],[30,10,30,8,"previousArr"],[30,21,30,19],[30,24,30,22],[30,25,30,23],[30,29,30,27],[30,30,30,28],[31,4,31,2],[31,10,31,8,"currentArr"],[31,20,31,18],[31,23,31,21],[31,24,31,22],[31,27,31,25,"array"],[31,32,31,30],[31,33,31,31],[32,4,32,2],[32,10,32,8,"transformedArr"],[32,24,32,22],[32,27,32,25],[32,29,32,27],[33,4,33,2,"currentArr"],[33,14,33,12],[33,15,33,13,"forEach"],[33,22,33,20],[33,23,33,21],[33,24,33,22,"current"],[33,31,33,29],[33,33,33,31,"i"],[33,34,33,32],[33,39,33,37],[34,6,34,4],[35,6,35,4],[36,6,36,4],[37,6,37,4],[37,12,37,10,"previous"],[37,20,37,18],[37,23,37,21,"previousArr"],[37,34,37,32],[37,35,37,33,"i"],[37,36,37,34],[37,37,37,35],[38,6,38,4],[38,12,38,10,"transformed"],[38,23,38,21],[38,26,38,24,"mapFn"],[38,31,38,29],[38,32,38,30,"previous"],[38,40,38,38],[38,42,38,40,"current"],[38,49,38,47],[38,50,38,48],[39,6,39,4,"previousArr"],[39,17,39,15],[39,18,39,16,"push"],[39,22,39,20],[39,23,39,21,"transformed"],[39,34,39,32],[39,35,39,33],[40,6,40,4,"transformedArr"],[40,20,40,18],[40,21,40,19,"push"],[40,25,40,23],[40,26,40,24,"transformed"],[40,37,40,35],[40,38,40,36],[41,4,41,2],[41,5,41,3],[41,6,41,4],[42,4,42,2],[42,11,42,9,"transformedArr"],[42,25,42,23],[43,2,43,0],[43,3,43,1],[43,4,43,2],[45,2,46,0],[45,11,46,9,"hasProperty"],[45,22,46,20,"hasProperty"],[45,23,46,21,"object"],[45,29,46,27],[45,31,46,29,"key"],[45,34,46,32],[45,36,46,34],[46,4,47,2],[46,11,47,9,"Object"],[46,17,47,15],[46,18,47,16,"prototype"],[46,27,47,25],[46,28,47,26,"hasOwnProperty"],[46,42,47,40],[46,43,47,41,"call"],[46,47,47,45],[46,48,47,46,"object"],[46,54,47,52],[46,56,47,54,"key"],[46,59,47,57],[46,60,47,58],[47,2,48,0],[48,2,50,0],[48,11,50,9,"isTestEnv"],[48,20,50,18,"isTestEnv"],[48,21,50,18],[48,23,50,21],[49,4,51,2],[50,4,52,2],[50,11,52,9,"hasProperty"],[50,22,52,20],[50,23,52,21,"global"],[50,29,52,27],[50,31,52,29],[50,40,52,38],[50,41,52,39],[50,45,52,43,"process"],[50,52,52,50],[50,53,52,51,"env"],[50,56,52,54],[50,57,52,55,"NODE_ENV"],[50,65,52,63],[50,70,52,68],[50,76,52,74],[51,2,53,0],[52,2,55,0],[52,11,55,9,"tagMessage"],[52,21,55,19,"tagMessage"],[52,22,55,20,"msg"],[52,25,55,23],[52,27,55,25],[53,4,56,2],[53,11,56,9],[53,45,56,43,"msg"],[53,48,56,46],[53,50,56,48],[54,2,57,0],[54,3,57,1],[54,4,57,2],[55,2,58,0],[57,2,61,0],[57,11,61,9,"isFabric"],[57,19,61,17,"isFabric"],[57,20,61,17],[57,22,61,20],[58,4,62,2],[58,8,62,6,"_global"],[58,15,62,13],[60,4,64,2],[61,4,65,2],[61,11,65,9],[61,12,65,10],[61,14,65,12],[61,15,65,13,"_global"],[61,22,65,20],[61,25,65,23,"global"],[61,31,65,29],[61,37,65,35],[61,41,65,39],[61,45,65,43,"_global"],[61,52,65,50],[61,57,65,55],[61,62,65,60],[61,63,65,61],[61,67,65,65,"_global"],[61,74,65,72],[61,75,65,73,"nativeFabricUIManager"],[61,96,65,94],[61,97,65,95],[62,2,66,0],[63,2,68,0],[63,11,68,9,"isReact19"],[63,20,68,18,"isReact19"],[63,21,68,18],[63,23,68,21],[64,4,69,2],[64,11,69,9,"_react"],[64,17,69,15],[64,18,69,16,"default"],[64,25,69,23],[64,26,69,24,"version"],[64,33,69,31],[64,34,69,32,"startsWith"],[64,44,69,42],[64,45,69,43],[64,50,69,48],[64,51,69,49],[65,2,70,0],[66,2,72,0],[66,11,72,9,"isRemoteDebuggingEnabled"],[66,35,72,33,"isRemoteDebuggingEnabled"],[66,36,72,33],[66,38,72,36],[67,4,73,2],[68,4,74,2],[69,4,75,2],[69,10,75,8,"localGlobal"],[69,21,75,19],[69,24,75,22,"global"],[69,30,75,28],[70,4,76,2],[70,11,76,9],[70,12,76,10],[70,13,76,11,"localGlobal"],[70,24,76,22],[70,25,76,23,"nativeCallSyncHook"],[70,43,76,41],[70,47,76,45],[70,48,76,46],[70,49,76,47,"localGlobal"],[70,60,76,58],[70,61,76,59,"__REMOTEDEV__"],[70,74,76,72],[70,79,76,77],[70,80,76,78,"localGlobal"],[70,91,76,89],[70,92,76,90,"RN$Bridgeless"],[70,105,76,103],[71,2,77,0],[72,2,78,0],[73,0,79,0],[74,0,80,0],[75,0,81,0],[76,0,82,0],[77,0,83,0],[78,0,84,0],[79,0,85,0],[80,0,86,0],[82,2,89,0],[82,11,89,9,"deepEqual"],[82,20,89,18,"deepEqual"],[82,21,89,19,"obj1"],[82,25,89,23],[82,27,89,25,"obj2"],[82,31,89,29],[82,33,89,31],[83,4,90,2],[83,8,90,6,"obj1"],[83,12,90,10],[83,17,90,15,"obj2"],[83,21,90,19],[83,23,90,21],[84,6,91,4],[84,13,91,11],[84,17,91,15],[85,4,92,2],[86,4,94,2],[86,8,94,6],[86,15,94,13,"obj1"],[86,19,94,17],[86,24,94,22],[86,32,94,30],[86,36,94,34],[86,43,94,41,"obj2"],[86,47,94,45],[86,52,94,50],[86,60,94,58],[86,64,94,62,"obj1"],[86,68,94,66],[86,73,94,71],[86,77,94,75],[86,81,94,79,"obj2"],[86,85,94,83],[86,90,94,88],[86,94,94,92],[86,96,94,94],[87,6,95,4],[87,13,95,11],[87,18,95,16],[88,4,96,2],[89,4,98,2],[89,10,98,8,"keys1"],[89,15,98,13],[89,18,98,16,"Object"],[89,24,98,22],[89,25,98,23,"keys"],[89,29,98,27],[89,30,98,28,"obj1"],[89,34,98,32],[89,35,98,33],[90,4,99,2],[90,10,99,8,"keys2"],[90,15,99,13],[90,18,99,16,"Object"],[90,24,99,22],[90,25,99,23,"keys"],[90,29,99,27],[90,30,99,28,"obj2"],[90,34,99,32],[90,35,99,33],[91,4,101,2],[91,8,101,6,"keys1"],[91,13,101,11],[91,14,101,12,"length"],[91,20,101,18],[91,25,101,23,"keys2"],[91,30,101,28],[91,31,101,29,"length"],[91,37,101,35],[91,39,101,37],[92,6,102,4],[92,13,102,11],[92,18,102,16],[93,4,103,2],[94,4,105,2],[94,9,105,7],[94,15,105,13,"key"],[94,18,105,16],[94,22,105,20,"keys1"],[94,27,105,25],[94,29,105,27],[95,6,106,4],[95,10,106,8],[95,11,106,9,"keys2"],[95,16,106,14],[95,17,106,15,"includes"],[95,25,106,23],[95,26,106,24,"key"],[95,29,106,27],[95,30,106,28],[95,34,106,32],[95,35,106,33,"deepEqual"],[95,44,106,42],[95,45,106,43,"obj1"],[95,49,106,47],[95,50,106,48,"key"],[95,53,106,51],[95,54,106,52],[95,56,106,54,"obj2"],[95,60,106,58],[95,61,106,59,"key"],[95,64,106,62],[95,65,106,63],[95,66,106,64],[95,68,106,66],[96,8,107,6],[96,15,107,13],[96,20,107,18],[97,6,108,4],[98,4,109,2],[99,4,111,2],[99,11,111,9],[99,15,111,13],[100,2,112,0],[101,2,114,0],[101,8,114,6,"INT32_MAX"],[101,17,114,15],[101,20,114,18],[101,21,114,19],[101,25,114,23],[101,27,114,25],[101,30,114,28],[101,31,114,29],[102,2,115,0,"exports"],[102,9,115,7],[102,10,115,8,"INT32_MAX"],[102,19,115,17],[102,22,115,20,"INT32_MAX"],[102,31,115,29],[103,0,115,30],[103,3]],"functionMap":{"names":["<global>","_interopRequireDefault","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;ACkB,+FD;AEE;CFM;AGE;qBCI;GDQ;CHE;AKG;CLE;AME;CNG;AOE;CPE;AQI;CRK;ASE;CTE;AUE;CVK;AWY;CXuB"},"hasCjsExports":true},"type":"js/module"}]}