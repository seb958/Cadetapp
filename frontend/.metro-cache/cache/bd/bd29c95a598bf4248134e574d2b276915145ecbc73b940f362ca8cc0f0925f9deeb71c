{"dependencies":[{"name":"./createHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":83},"end":{"line":2,"column":44,"index":127}}],"key":"j9sUgJL2drnBoAedJuo4/l2ILqw=","exportNames":["*"],"imports":1}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":128},"end":{"line":6,"column":32,"index":223}}],"key":"M3YJtGPnWOlAL/cGsCkMRGpSLhc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"panGestureHandlerProps\", {\n    enumerable: true,\n    get: function () {\n      return panGestureHandlerProps;\n    }\n  });\n  Object.defineProperty(exports, \"panGestureHandlerCustomNativeProps\", {\n    enumerable: true,\n    get: function () {\n      return panGestureHandlerCustomNativeProps;\n    }\n  });\n  Object.defineProperty(exports, \"panHandlerName\", {\n    enumerable: true,\n    get: function () {\n      return panHandlerName;\n    }\n  });\n  Object.defineProperty(exports, \"PanGestureHandler\", {\n    enumerable: true,\n    get: function () {\n      return PanGestureHandler;\n    }\n  });\n  exports.managePanProps = managePanProps;\n  var _createHandler = require(_dependencyMap[0], \"./createHandler\");\n  var createHandler = _interopDefault(_createHandler);\n  var _gestureHandlerCommon = require(_dependencyMap[1], \"./gestureHandlerCommon\");\n  var panGestureHandlerProps = ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture', 'activateAfterLongPress'];\n  var panGestureHandlerCustomNativeProps = ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd'];\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  var panHandlerName = 'PanGestureHandler';\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\n  var PanGestureHandler = (0, createHandler.default)({\n    name: panHandlerName,\n    allowedProps: [..._gestureHandlerCommon.baseGestureHandlerProps, ...panGestureHandlerProps],\n    config: {},\n    transformProps: managePanProps,\n    customNativeProps: panGestureHandlerCustomNativeProps\n  });\n  function validatePanGestureHandlerProps(props) {\n    if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n      throw new Error(`First element of activeOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n      throw new Error(`First element of activeOffsetY should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n      throw new Error(`First element of failOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n      throw new Error(`First element of failOffsetY should be negative, a the second one should be positive`);\n    }\n    if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n      throw new Error(`It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead`);\n    }\n    if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n      throw new Error(`It is not supported to use minDist with activeOffsetX or activeOffsetY`);\n    }\n  }\n  function transformPanGestureHandlerProps(props) {\n    var res = {\n      ...props\n    };\n    if (props.activeOffsetX !== undefined) {\n      delete res.activeOffsetX;\n      if (Array.isArray(props.activeOffsetX)) {\n        res.activeOffsetXStart = props.activeOffsetX[0];\n        res.activeOffsetXEnd = props.activeOffsetX[1];\n      } else if (props.activeOffsetX < 0) {\n        res.activeOffsetXStart = props.activeOffsetX;\n      } else {\n        res.activeOffsetXEnd = props.activeOffsetX;\n      }\n    }\n    if (props.activeOffsetY !== undefined) {\n      delete res.activeOffsetY;\n      if (Array.isArray(props.activeOffsetY)) {\n        res.activeOffsetYStart = props.activeOffsetY[0];\n        res.activeOffsetYEnd = props.activeOffsetY[1];\n      } else if (props.activeOffsetY < 0) {\n        res.activeOffsetYStart = props.activeOffsetY;\n      } else {\n        res.activeOffsetYEnd = props.activeOffsetY;\n      }\n    }\n    if (props.failOffsetX !== undefined) {\n      delete res.failOffsetX;\n      if (Array.isArray(props.failOffsetX)) {\n        res.failOffsetXStart = props.failOffsetX[0];\n        res.failOffsetXEnd = props.failOffsetX[1];\n      } else if (props.failOffsetX < 0) {\n        res.failOffsetXStart = props.failOffsetX;\n      } else {\n        res.failOffsetXEnd = props.failOffsetX;\n      }\n    }\n    if (props.failOffsetY !== undefined) {\n      delete res.failOffsetY;\n      if (Array.isArray(props.failOffsetY)) {\n        res.failOffsetYStart = props.failOffsetY[0];\n        res.failOffsetYEnd = props.failOffsetY[1];\n      } else if (props.failOffsetY < 0) {\n        res.failOffsetYStart = props.failOffsetY;\n      } else {\n        res.failOffsetYEnd = props.failOffsetY;\n      }\n    }\n    return res;\n  }\n  function managePanProps(props) {\n    if (__DEV__) {\n      validatePanGestureHandlerProps(props);\n    }\n    return transformPanGestureHandlerProps(props);\n  }\n});","lineCount":140,"map":[[12,2,8,0,"Object"],[12,8,8,0],[12,9,8,0,"defineProperty"],[12,23,8,0],[12,24,8,0,"exports"],[12,31,8,0],[13,4,8,0,"enumerable"],[13,14,8,0],[14,4,8,0,"get"],[14,7,8,0],[14,18,8,0,"get"],[14,19,8,0],[15,6,8,0],[15,13,8,0,"panGestureHandlerProps"],[15,35,8,0],[16,4,8,0],[17,2,8,0],[18,2,24,0,"Object"],[18,8,24,0],[18,9,24,0,"defineProperty"],[18,23,24,0],[18,24,24,0,"exports"],[18,31,24,0],[19,4,24,0,"enumerable"],[19,14,24,0],[20,4,24,0,"get"],[20,7,24,0],[20,18,24,0,"get"],[20,19,24,0],[21,6,24,0],[21,13,24,0,"panGestureHandlerCustomNativeProps"],[21,47,24,0],[22,4,24,0],[23,2,24,0],[24,2,136,0,"Object"],[24,8,136,0],[24,9,136,0,"defineProperty"],[24,23,136,0],[24,24,136,0,"exports"],[24,31,136,0],[25,4,136,0,"enumerable"],[25,14,136,0],[26,4,136,0,"get"],[26,7,136,0],[26,18,136,0,"get"],[26,19,136,0],[27,6,136,0],[27,13,136,0,"panHandlerName"],[27,27,136,0],[28,4,136,0],[29,2,136,0],[30,2,147,0,"Object"],[30,8,147,0],[30,9,147,0,"defineProperty"],[30,23,147,0],[30,24,147,0,"exports"],[30,31,147,0],[31,4,147,0,"enumerable"],[31,14,147,0],[32,4,147,0,"get"],[32,7,147,0],[32,18,147,0,"get"],[32,19,147,0],[33,6,147,0],[33,13,147,0,"PanGestureHandler"],[33,30,147,0],[34,4,147,0],[35,2,147,0],[36,2,277,0,"exports"],[36,9,277,0],[36,10,277,0,"managePanProps"],[36,24,277,0],[36,27,277,0,"managePanProps"],[36,41,277,0],[37,2,2,0],[37,6,2,0,"_createHandler"],[37,20,2,0],[37,23,2,0,"require"],[37,30,2,0],[37,31,2,0,"_dependencyMap"],[37,45,2,0],[38,2,2,0],[38,6,2,0,"createHandler"],[38,19,2,0],[38,22,2,0,"_interopDefault"],[38,37,2,0],[38,38,2,0,"_createHandler"],[38,52,2,0],[39,2,3,0],[39,6,3,0,"_gestureHandlerCommon"],[39,27,3,0],[39,30,3,0,"require"],[39,37,3,0],[39,38,3,0,"_dependencyMap"],[39,52,3,0],[40,2,8,7],[40,6,8,13,"panGestureHandlerProps"],[40,28,8,35],[40,31,8,38],[40,32,9,2],[40,47,9,17],[40,49,10,2],[40,64,10,17],[40,66,11,2],[40,79,11,15],[40,81,12,2],[40,94,12,15],[40,96,13,2],[40,105,13,11],[40,107,14,2],[40,120,14,15],[40,122,15,2],[40,136,15,16],[40,138,16,2],[40,152,16,16],[40,154,17,2],[40,167,17,15],[40,169,18,2],[40,182,18,15],[40,184,19,2],[40,196,19,14],[40,198,20,2],[40,230,20,34],[40,232,21,2],[40,256,21,26],[40,257,22,10],[41,2,24,7],[41,6,24,13,"panGestureHandlerCustomNativeProps"],[41,40,24,47],[41,43,24,50],[41,44,25,2],[41,64,25,22],[41,66,26,2],[41,84,26,20],[41,86,27,2],[41,106,27,22],[41,108,28,2],[41,126,28,20],[41,128,29,2],[41,146,29,20],[41,148,30,2],[41,164,30,18],[41,166,31,2],[41,184,31,20],[41,186,32,2],[41,202,32,18],[41,203,33,10],[43,2,85,0],[44,0,86,0],[45,0,87,0],[47,2,136,7],[47,6,136,13,"panHandlerName"],[47,20,136,27],[47,23,136,30],[47,42,136,49],[49,2,138,0],[50,0,139,0],[51,0,140,0],[53,2,143,0],[54,0,144,0],[55,0,145,0],[56,2,146,0],[57,2,147,7],[57,6,147,13,"PanGestureHandler"],[57,23,147,30],[57,26,147,33],[57,30,147,33,"createHandler"],[57,43,147,46],[57,44,147,46,"default"],[57,51,147,46],[57,53,150,2],[58,4,151,2,"name"],[58,8,151,6],[58,10,151,8,"panHandlerName"],[58,24,151,22],[59,4,152,2,"allowedProps"],[59,16,152,14],[59,18,152,16],[59,19,153,4],[59,22,153,7,"baseGestureHandlerProps"],[59,43,153,30],[59,44,153,30,"baseGestureHandlerProps"],[59,67,153,30],[59,69,154,4],[59,72,154,7,"panGestureHandlerProps"],[59,94,154,29],[59,95,155,12],[60,4,156,2,"config"],[60,10,156,8],[60,12,156,10],[60,13,156,11],[60,14,156,12],[61,4,157,2,"transformProps"],[61,18,157,16],[61,20,157,18,"managePanProps"],[61,34,157,32],[62,4,158,2,"customNativeProps"],[62,21,158,19],[62,23,158,21,"panGestureHandlerCustomNativeProps"],[63,2,159,0],[63,3,159,1],[63,4,159,2],[64,2,161,0],[64,11,161,9,"validatePanGestureHandlerProps"],[64,41,161,39,"validatePanGestureHandlerProps"],[64,42,161,40,"props"],[64,47,161,69],[64,49,161,71],[65,4,162,2],[65,8,163,4,"Array"],[65,13,163,9],[65,14,163,10,"isArray"],[65,21,163,17],[65,22,163,18,"props"],[65,27,163,23],[65,28,163,24,"activeOffsetX"],[65,41,163,37],[65,42,163,38],[65,47,164,5,"props"],[65,52,164,10],[65,53,164,11,"activeOffsetX"],[65,66,164,24],[65,67,164,25],[65,68,164,26],[65,69,164,27],[65,72,164,30],[65,73,164,31],[65,77,164,35,"props"],[65,82,164,40],[65,83,164,41,"activeOffsetX"],[65,96,164,54],[65,97,164,55],[65,98,164,56],[65,99,164,57],[65,102,164,60],[65,103,164,61],[65,104,164,62],[65,106,165,4],[66,6,166,4],[66,12,166,10],[66,16,166,14,"Error"],[66,21,166,19],[66,22,167,6],[66,110,168,4],[66,111,168,5],[67,4,169,2],[68,4,171,2],[68,8,172,4,"Array"],[68,13,172,9],[68,14,172,10,"isArray"],[68,21,172,17],[68,22,172,18,"props"],[68,27,172,23],[68,28,172,24,"activeOffsetY"],[68,41,172,37],[68,42,172,38],[68,47,173,5,"props"],[68,52,173,10],[68,53,173,11,"activeOffsetY"],[68,66,173,24],[68,67,173,25],[68,68,173,26],[68,69,173,27],[68,72,173,30],[68,73,173,31],[68,77,173,35,"props"],[68,82,173,40],[68,83,173,41,"activeOffsetY"],[68,96,173,54],[68,97,173,55],[68,98,173,56],[68,99,173,57],[68,102,173,60],[68,103,173,61],[68,104,173,62],[68,106,174,4],[69,6,175,4],[69,12,175,10],[69,16,175,14,"Error"],[69,21,175,19],[69,22,176,6],[69,110,177,4],[69,111,177,5],[70,4,178,2],[71,4,180,2],[71,8,181,4,"Array"],[71,13,181,9],[71,14,181,10,"isArray"],[71,21,181,17],[71,22,181,18,"props"],[71,27,181,23],[71,28,181,24,"failOffsetX"],[71,39,181,35],[71,40,181,36],[71,45,182,5,"props"],[71,50,182,10],[71,51,182,11,"failOffsetX"],[71,62,182,22],[71,63,182,23],[71,64,182,24],[71,65,182,25],[71,68,182,28],[71,69,182,29],[71,73,182,33,"props"],[71,78,182,38],[71,79,182,39,"failOffsetX"],[71,90,182,50],[71,91,182,51],[71,92,182,52],[71,93,182,53],[71,96,182,56],[71,97,182,57],[71,98,182,58],[71,100,183,4],[72,6,184,4],[72,12,184,10],[72,16,184,14,"Error"],[72,21,184,19],[72,22,185,6],[72,108,186,4],[72,109,186,5],[73,4,187,2],[74,4,189,2],[74,8,190,4,"Array"],[74,13,190,9],[74,14,190,10,"isArray"],[74,21,190,17],[74,22,190,18,"props"],[74,27,190,23],[74,28,190,24,"failOffsetY"],[74,39,190,35],[74,40,190,36],[74,45,191,5,"props"],[74,50,191,10],[74,51,191,11,"failOffsetY"],[74,62,191,22],[74,63,191,23],[74,64,191,24],[74,65,191,25],[74,68,191,28],[74,69,191,29],[74,73,191,33,"props"],[74,78,191,38],[74,79,191,39,"failOffsetY"],[74,90,191,50],[74,91,191,51],[74,92,191,52],[74,93,191,53],[74,96,191,56],[74,97,191,57],[74,98,191,58],[74,100,192,4],[75,6,193,4],[75,12,193,10],[75,16,193,14,"Error"],[75,21,193,19],[75,22,194,6],[75,108,195,4],[75,109,195,5],[76,4,196,2],[77,4,198,2],[77,8,198,6,"props"],[77,13,198,11],[77,14,198,12,"minDist"],[77,21,198,19],[77,26,198,24,"props"],[77,31,198,29],[77,32,198,30,"failOffsetX"],[77,43,198,41],[77,47,198,45,"props"],[77,52,198,50],[77,53,198,51,"failOffsetY"],[77,64,198,62],[77,65,198,63],[77,67,198,65],[78,6,199,4],[78,12,199,10],[78,16,199,14,"Error"],[78,21,199,19],[78,22,200,6],[78,135,201,4],[78,136,201,5],[79,4,202,2],[80,4,204,2],[80,8,204,6,"props"],[80,13,204,11],[80,14,204,12,"minDist"],[80,21,204,19],[80,26,204,24,"props"],[80,31,204,29],[80,32,204,30,"activeOffsetX"],[80,45,204,43],[80,49,204,47,"props"],[80,54,204,52],[80,55,204,53,"activeOffsetY"],[80,68,204,66],[80,69,204,67],[80,71,204,69],[81,6,205,4],[81,12,205,10],[81,16,205,14,"Error"],[81,21,205,19],[81,22,206,6],[81,94,207,4],[81,95,207,5],[82,4,208,2],[83,2,209,0],[84,2,211,0],[84,11,211,9,"transformPanGestureHandlerProps"],[84,42,211,40,"transformPanGestureHandlerProps"],[84,43,211,41,"props"],[84,48,211,70],[84,50,211,72],[85,4,224,2],[85,8,224,8,"res"],[85,11,224,43],[85,14,224,46],[86,6,224,48],[86,9,224,51,"props"],[87,4,224,57],[87,5,224,58],[88,4,226,2],[88,8,226,6,"props"],[88,13,226,11],[88,14,226,12,"activeOffsetX"],[88,27,226,25],[88,32,226,30,"undefined"],[88,41,226,39],[88,43,226,41],[89,6,227,4],[89,13,227,11,"res"],[89,16,227,14],[89,17,227,15,"activeOffsetX"],[89,30,227,28],[90,6,228,4],[90,10,228,8,"Array"],[90,15,228,13],[90,16,228,14,"isArray"],[90,23,228,21],[90,24,228,22,"props"],[90,29,228,27],[90,30,228,28,"activeOffsetX"],[90,43,228,41],[90,44,228,42],[90,46,228,44],[91,8,229,6,"res"],[91,11,229,9],[91,12,229,10,"activeOffsetXStart"],[91,30,229,28],[91,33,229,31,"props"],[91,38,229,36],[91,39,229,37,"activeOffsetX"],[91,52,229,50],[91,53,229,51],[91,54,229,52],[91,55,229,53],[92,8,230,6,"res"],[92,11,230,9],[92,12,230,10,"activeOffsetXEnd"],[92,28,230,26],[92,31,230,29,"props"],[92,36,230,34],[92,37,230,35,"activeOffsetX"],[92,50,230,48],[92,51,230,49],[92,52,230,50],[92,53,230,51],[93,6,231,4],[93,7,231,5],[93,13,231,11],[93,17,231,15,"props"],[93,22,231,20],[93,23,231,21,"activeOffsetX"],[93,36,231,34],[93,39,231,37],[93,40,231,38],[93,42,231,40],[94,8,232,6,"res"],[94,11,232,9],[94,12,232,10,"activeOffsetXStart"],[94,30,232,28],[94,33,232,31,"props"],[94,38,232,36],[94,39,232,37,"activeOffsetX"],[94,52,232,50],[95,6,233,4],[95,7,233,5],[95,13,233,11],[96,8,234,6,"res"],[96,11,234,9],[96,12,234,10,"activeOffsetXEnd"],[96,28,234,26],[96,31,234,29,"props"],[96,36,234,34],[96,37,234,35,"activeOffsetX"],[96,50,234,48],[97,6,235,4],[98,4,236,2],[99,4,238,2],[99,8,238,6,"props"],[99,13,238,11],[99,14,238,12,"activeOffsetY"],[99,27,238,25],[99,32,238,30,"undefined"],[99,41,238,39],[99,43,238,41],[100,6,239,4],[100,13,239,11,"res"],[100,16,239,14],[100,17,239,15,"activeOffsetY"],[100,30,239,28],[101,6,240,4],[101,10,240,8,"Array"],[101,15,240,13],[101,16,240,14,"isArray"],[101,23,240,21],[101,24,240,22,"props"],[101,29,240,27],[101,30,240,28,"activeOffsetY"],[101,43,240,41],[101,44,240,42],[101,46,240,44],[102,8,241,6,"res"],[102,11,241,9],[102,12,241,10,"activeOffsetYStart"],[102,30,241,28],[102,33,241,31,"props"],[102,38,241,36],[102,39,241,37,"activeOffsetY"],[102,52,241,50],[102,53,241,51],[102,54,241,52],[102,55,241,53],[103,8,242,6,"res"],[103,11,242,9],[103,12,242,10,"activeOffsetYEnd"],[103,28,242,26],[103,31,242,29,"props"],[103,36,242,34],[103,37,242,35,"activeOffsetY"],[103,50,242,48],[103,51,242,49],[103,52,242,50],[103,53,242,51],[104,6,243,4],[104,7,243,5],[104,13,243,11],[104,17,243,15,"props"],[104,22,243,20],[104,23,243,21,"activeOffsetY"],[104,36,243,34],[104,39,243,37],[104,40,243,38],[104,42,243,40],[105,8,244,6,"res"],[105,11,244,9],[105,12,244,10,"activeOffsetYStart"],[105,30,244,28],[105,33,244,31,"props"],[105,38,244,36],[105,39,244,37,"activeOffsetY"],[105,52,244,50],[106,6,245,4],[106,7,245,5],[106,13,245,11],[107,8,246,6,"res"],[107,11,246,9],[107,12,246,10,"activeOffsetYEnd"],[107,28,246,26],[107,31,246,29,"props"],[107,36,246,34],[107,37,246,35,"activeOffsetY"],[107,50,246,48],[108,6,247,4],[109,4,248,2],[110,4,250,2],[110,8,250,6,"props"],[110,13,250,11],[110,14,250,12,"failOffsetX"],[110,25,250,23],[110,30,250,28,"undefined"],[110,39,250,37],[110,41,250,39],[111,6,251,4],[111,13,251,11,"res"],[111,16,251,14],[111,17,251,15,"failOffsetX"],[111,28,251,26],[112,6,252,4],[112,10,252,8,"Array"],[112,15,252,13],[112,16,252,14,"isArray"],[112,23,252,21],[112,24,252,22,"props"],[112,29,252,27],[112,30,252,28,"failOffsetX"],[112,41,252,39],[112,42,252,40],[112,44,252,42],[113,8,253,6,"res"],[113,11,253,9],[113,12,253,10,"failOffsetXStart"],[113,28,253,26],[113,31,253,29,"props"],[113,36,253,34],[113,37,253,35,"failOffsetX"],[113,48,253,46],[113,49,253,47],[113,50,253,48],[113,51,253,49],[114,8,254,6,"res"],[114,11,254,9],[114,12,254,10,"failOffsetXEnd"],[114,26,254,24],[114,29,254,27,"props"],[114,34,254,32],[114,35,254,33,"failOffsetX"],[114,46,254,44],[114,47,254,45],[114,48,254,46],[114,49,254,47],[115,6,255,4],[115,7,255,5],[115,13,255,11],[115,17,255,15,"props"],[115,22,255,20],[115,23,255,21,"failOffsetX"],[115,34,255,32],[115,37,255,35],[115,38,255,36],[115,40,255,38],[116,8,256,6,"res"],[116,11,256,9],[116,12,256,10,"failOffsetXStart"],[116,28,256,26],[116,31,256,29,"props"],[116,36,256,34],[116,37,256,35,"failOffsetX"],[116,48,256,46],[117,6,257,4],[117,7,257,5],[117,13,257,11],[118,8,258,6,"res"],[118,11,258,9],[118,12,258,10,"failOffsetXEnd"],[118,26,258,24],[118,29,258,27,"props"],[118,34,258,32],[118,35,258,33,"failOffsetX"],[118,46,258,44],[119,6,259,4],[120,4,260,2],[121,4,262,2],[121,8,262,6,"props"],[121,13,262,11],[121,14,262,12,"failOffsetY"],[121,25,262,23],[121,30,262,28,"undefined"],[121,39,262,37],[121,41,262,39],[122,6,263,4],[122,13,263,11,"res"],[122,16,263,14],[122,17,263,15,"failOffsetY"],[122,28,263,26],[123,6,264,4],[123,10,264,8,"Array"],[123,15,264,13],[123,16,264,14,"isArray"],[123,23,264,21],[123,24,264,22,"props"],[123,29,264,27],[123,30,264,28,"failOffsetY"],[123,41,264,39],[123,42,264,40],[123,44,264,42],[124,8,265,6,"res"],[124,11,265,9],[124,12,265,10,"failOffsetYStart"],[124,28,265,26],[124,31,265,29,"props"],[124,36,265,34],[124,37,265,35,"failOffsetY"],[124,48,265,46],[124,49,265,47],[124,50,265,48],[124,51,265,49],[125,8,266,6,"res"],[125,11,266,9],[125,12,266,10,"failOffsetYEnd"],[125,26,266,24],[125,29,266,27,"props"],[125,34,266,32],[125,35,266,33,"failOffsetY"],[125,46,266,44],[125,47,266,45],[125,48,266,46],[125,49,266,47],[126,6,267,4],[126,7,267,5],[126,13,267,11],[126,17,267,15,"props"],[126,22,267,20],[126,23,267,21,"failOffsetY"],[126,34,267,32],[126,37,267,35],[126,38,267,36],[126,40,267,38],[127,8,268,6,"res"],[127,11,268,9],[127,12,268,10,"failOffsetYStart"],[127,28,268,26],[127,31,268,29,"props"],[127,36,268,34],[127,37,268,35,"failOffsetY"],[127,48,268,46],[128,6,269,4],[128,7,269,5],[128,13,269,11],[129,8,270,6,"res"],[129,11,270,9],[129,12,270,10,"failOffsetYEnd"],[129,26,270,24],[129,29,270,27,"props"],[129,34,270,32],[129,35,270,33,"failOffsetY"],[129,46,270,44],[130,6,271,4],[131,4,272,2],[132,4,274,2],[132,11,274,9,"res"],[132,14,274,12],[133,2,275,0],[134,2,277,7],[134,11,277,16,"managePanProps"],[134,25,277,30,"managePanProps"],[134,26,277,31,"props"],[134,31,277,60],[134,33,277,62],[135,4,278,2],[135,8,278,6,"__DEV__"],[135,15,278,13],[135,17,278,15],[136,6,279,4,"validatePanGestureHandlerProps"],[136,36,279,34],[136,37,279,35,"props"],[136,42,279,40],[136,43,279,41],[137,4,280,2],[138,4,281,2],[138,11,281,9,"transformPanGestureHandlerProps"],[138,42,281,40],[138,43,281,41,"props"],[138,48,281,46],[138,49,281,47],[139,2,282,0],[140,0,282,1],[140,3]],"functionMap":{"names":["<global>","validatePanGestureHandlerProps","transformPanGestureHandlerProps","managePanProps"],"mappings":"AAA;ACgK;CDgD;AEE;CFgE;OGE;CHK"},"hasCjsExports":false},"type":"js/module"}]}