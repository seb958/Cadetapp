{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":55,"index":97}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"],"imports":1}},{"name":"../gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":98},"end":{"line":4,"column":66,"index":164}}],"key":"tAi+3DTq2/XlM2rT1I9X7ektuV0=","exportNames":["*"],"imports":1}},{"name":"../../FlingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":166},"end":{"line":6,"column":69,"index":235}}],"key":"m7drCniziiNjEu9Grhe6bV/AFd0=","exportNames":["*"],"imports":1}},{"name":"../../ForceTouchGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":236},"end":{"line":7,"column":79,"index":315}}],"key":"Zs82FqJFIcjv50A58P90bQbMZ6s=","exportNames":["*"],"imports":1}},{"name":"../../LongPressGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":316},"end":{"line":8,"column":77,"index":393}}],"key":"xLOe4E3z7HzpJ/yq6aTNrEbuZio=","exportNames":["*"],"imports":1}},{"name":"../../PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":394},"end":{"line":12,"column":33,"index":500}}],"key":"bk07O1d6H26279U6oqqnjaS7c4c=","exportNames":["*"],"imports":1}},{"name":"../../TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":501},"end":{"line":13,"column":65,"index":566}}],"key":"ZqoHIcC0SF6bf3AIHltJPu1k9xI=","exportNames":["*"],"imports":1}},{"name":"../hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":567},"end":{"line":14,"column":59,"index":626}}],"key":"2DA6Vfuec14INlrI/GwdOE0FAK4=","exportNames":["*"],"imports":1}},{"name":"../../NativeViewGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":627},"end":{"line":15,"column":79,"index":706}}],"key":"FiQaORn3aiHBJrGlJ2FeE26dr38=","exportNames":["*"],"imports":1}},{"name":"../../gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":707},"end":{"line":19,"column":36,"index":818}}],"key":"iYkm+MgDTErKT5jbMC97JfuzH7k=","exportNames":["*"],"imports":1}},{"name":"../../../EnableNewWebImplementation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":819},"end":{"line":20,"column":84,"index":903}}],"key":"eaIoOU9/v4mL1aA6FJZKxHzRNGE=","exportNames":["*"],"imports":1}},{"name":"../../../getReactNativeVersion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":904},"end":{"line":21,"column":71,"index":975}}],"key":"LRN+jz/5KqOYFnR82ORUXrazSTg=","exportNames":["*"],"imports":1}},{"name":"../../../RNRenderer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":976},"end":{"line":22,"column":49,"index":1025}}],"key":"dd5GIUVDNjn2BlVM36KIcGPscVA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1026},"end":{"line":23,"column":54,"index":1080}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1081},"end":{"line":24,"column":50,"index":1131}}],"key":"55E8XkeO+dzLnJh3bfoVrgRwD58=","exportNames":["*"],"imports":1}},{"name":"../eventReceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1132},"end":{"line":25,"column":57,"index":1189}}],"key":"5nSvdaEKN+h/ZTz2T/BGCtOX48A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"ALLOWED_PROPS\", {\n    enumerable: true,\n    get: function () {\n      return ALLOWED_PROPS;\n    }\n  });\n  exports.extractGestureRelations = extractGestureRelations;\n  exports.checkGestureCallbacksForWorklets = checkGestureCallbacksForWorklets;\n  exports.validateDetectorChildren = validateDetectorChildren;\n  exports.useForceRender = useForceRender;\n  exports.useWebEventHandlers = useWebEventHandlers;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _reactNative = require(_dependencyMap[1], \"react-native\");\n  var _utils = require(_dependencyMap[2], \"../../../utils\");\n  var _gesture = require(_dependencyMap[3], \"../gesture\");\n  var _FlingGestureHandler = require(_dependencyMap[4], \"../../FlingGestureHandler\");\n  var _ForceTouchGestureHandler = require(_dependencyMap[5], \"../../ForceTouchGestureHandler\");\n  var _LongPressGestureHandler = require(_dependencyMap[6], \"../../LongPressGestureHandler\");\n  var _PanGestureHandler = require(_dependencyMap[7], \"../../PanGestureHandler\");\n  var _TapGestureHandler = require(_dependencyMap[8], \"../../TapGestureHandler\");\n  var _hoverGesture = require(_dependencyMap[9], \"../hoverGesture\");\n  var _NativeViewGestureHandler = require(_dependencyMap[10], \"../../NativeViewGestureHandler\");\n  var _gestureHandlerCommon = require(_dependencyMap[11], \"../../gestureHandlerCommon\");\n  var _EnableNewWebImplementation = require(_dependencyMap[12], \"../../../EnableNewWebImplementation\");\n  var _getReactNativeVersion = require(_dependencyMap[13], \"../../../getReactNativeVersion\");\n  var _RNRenderer = require(_dependencyMap[14], \"../../../RNRenderer\");\n  var _react = require(_dependencyMap[15], \"react\");\n  var _reanimatedWrapper = require(_dependencyMap[16], \"../reanimatedWrapper\");\n  var _eventReceiver = require(_dependencyMap[17], \"../eventReceiver\");\n  var ALLOWED_PROPS = [..._gestureHandlerCommon.baseGestureHandlerWithDetectorProps, ..._TapGestureHandler.tapGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerProps, ..._PanGestureHandler.panGestureHandlerCustomNativeProps, ..._LongPressGestureHandler.longPressGestureHandlerProps, ..._ForceTouchGestureHandler.forceTouchGestureHandlerProps, ..._FlingGestureHandler.flingGestureHandlerProps, ..._hoverGesture.hoverGestureHandlerProps, ..._NativeViewGestureHandler.nativeViewGestureHandlerProps];\n  function convertToHandlerTag(ref) {\n    if (typeof ref === 'number') {\n      return ref;\n    } else if (ref instanceof _gesture.BaseGesture) {\n      return ref.handlerTag;\n    } else {\n      // @ts-ignore in this case it should be a ref either to gesture object or\n      // a gesture handler component, in both cases handlerTag property exists\n      return ref.current?.handlerTag ?? -1;\n    }\n  }\n  function extractValidHandlerTags(interactionGroup) {\n    return interactionGroup?.map(convertToHandlerTag)?.filter(tag => tag > 0) ?? [];\n  }\n  function extractGestureRelations(gesture) {\n    var requireToFail = extractValidHandlerTags(gesture.config.requireToFail);\n    var simultaneousWith = extractValidHandlerTags(gesture.config.simultaneousWith);\n    var blocksHandlers = extractValidHandlerTags(gesture.config.blocksHandlers);\n    return {\n      waitFor: requireToFail,\n      simultaneousHandlers: simultaneousWith,\n      blocksHandlers: blocksHandlers\n    };\n  }\n  function checkGestureCallbacksForWorklets(gesture) {\n    if (!__DEV__) {\n      return;\n    }\n    // If a gesture is explicitly marked to run on the JS thread there is no need to check\n    // if callbacks are worklets as the user is aware they will be ran on the JS thread\n    if (gesture.config.runOnJS) {\n      return;\n    }\n    var areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n    var areSomeWorklets = gesture.handlers.isWorklet.includes(true);\n\n    // If some of the callbacks are worklets and some are not, and the gesture is not\n    // explicitly marked with `.runOnJS(true)` show an error\n    if (areSomeNotWorklets && areSomeWorklets) {\n      console.error((0, _utils.tagMessage)(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n    }\n    if (_reanimatedWrapper.Reanimated === undefined) {\n      // If Reanimated is not available, we can't run worklets, so we shouldn't show the warning\n      return;\n    }\n    var areAllNotWorklets = !areSomeWorklets && areSomeNotWorklets;\n    // If none of the callbacks are worklets and the gesture is not explicitly marked with\n    // `.runOnJS(true)` show a warning\n    if (areAllNotWorklets && !(0, _utils.isTestEnv)()) {\n      console.warn((0, _utils.tagMessage)(`None of the callbacks in the gesture are worklets. If you wish to run them on the JS thread use '.runOnJS(true)' modifier on the gesture to make this explicit. Otherwise, mark the callbacks as 'worklet' to run them on the UI thread.`));\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function validateDetectorChildren(ref) {\n    // Finds the first native view under the Wrap component and traverses the fiber tree upwards\n    // to check whether there is more than one native view as a pseudo-direct child of GestureDetector\n    // i.e. this is not ok:\n    //            Wrap\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    //\n    // but this is fine:\n    //            Wrap\n    //             |\n    //         NativeView\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    if (__DEV__ && _reactNative.Platform.OS !== 'web') {\n      var REACT_NATIVE_VERSION = (0, _getReactNativeVersion.getReactNativeVersion)();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var wrapType = REACT_NATIVE_VERSION.minor > 63 || REACT_NATIVE_VERSION.major > 0 ?\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternals.elementType :\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternalFiber.elementType;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var instance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      while (instance && instance.elementType !== wrapType) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (instance.sibling) {\n          throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        instance = instance.return;\n      }\n    }\n  }\n  function useForceRender() {\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      renderState = _useState2[0],\n      setRenderState = _useState2[1];\n    var forceRender = (0, _react.useCallback)(() => {\n      setRenderState(!renderState);\n    }, [renderState, setRenderState]);\n    return forceRender;\n  }\n  function useWebEventHandlers() {\n    return (0, _react.useRef)({\n      onGestureHandlerEvent: e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      },\n      onGestureHandlerStateChange: (0, _EnableNewWebImplementation.isNewWebImplementationEnabled)() ? e => {\n        (0, _eventReceiver.onGestureHandlerEvent)(e.nativeEvent);\n      } : undefined\n    });\n  }\n});","lineCount":162,"map":[[12,2,28,0,"Object"],[12,8,28,0],[12,9,28,0,"defineProperty"],[12,23,28,0],[12,24,28,0,"exports"],[12,31,28,0],[13,4,28,0,"enumerable"],[13,14,28,0],[14,4,28,0,"get"],[14,7,28,0],[14,18,28,0,"get"],[14,19,28,0],[15,6,28,0],[15,13,28,0,"ALLOWED_PROPS"],[15,26,28,0],[16,4,28,0],[17,2,28,0],[18,2,58,0,"exports"],[18,9,58,0],[18,10,58,0,"extractGestureRelations"],[18,33,58,0],[18,36,58,0,"extractGestureRelations"],[18,59,58,0],[19,2,72,0,"exports"],[19,9,72,0],[19,10,72,0,"checkGestureCallbacksForWorklets"],[19,42,72,0],[19,45,72,0,"checkGestureCallbacksForWorklets"],[19,77,72,0],[20,2,113,0,"exports"],[20,9,113,0],[20,10,113,0,"validateDetectorChildren"],[20,34,113,0],[20,37,113,0,"validateDetectorChildren"],[20,61,113,0],[21,2,165,0,"exports"],[21,9,165,0],[21,10,165,0,"useForceRender"],[21,24,165,0],[21,27,165,0,"useForceRender"],[21,41,165,0],[22,2,174,0,"exports"],[22,9,174,0],[22,10,174,0,"useWebEventHandlers"],[22,29,174,0],[22,32,174,0,"useWebEventHandlers"],[22,51,174,0],[23,2,185,1],[23,6,185,1,"_babelRuntimeHelpersSlicedToArray"],[23,39,185,1],[23,42,185,1,"require"],[23,49,185,1],[23,50,185,1,"_dependencyMap"],[23,64,185,1],[24,2,185,1],[24,6,185,1,"_slicedToArray"],[24,20,185,1],[24,23,185,1,"_interopDefault"],[24,38,185,1],[24,39,185,1,"_babelRuntimeHelpersSlicedToArray"],[24,72,185,1],[25,2,1,0],[25,6,1,0,"_reactNative"],[25,18,1,0],[25,21,1,0,"require"],[25,28,1,0],[25,29,1,0,"_dependencyMap"],[25,43,1,0],[26,2,3,0],[26,6,3,0,"_utils"],[26,12,3,0],[26,15,3,0,"require"],[26,22,3,0],[26,23,3,0,"_dependencyMap"],[26,37,3,0],[27,2,4,0],[27,6,4,0,"_gesture"],[27,14,4,0],[27,17,4,0,"require"],[27,24,4,0],[27,25,4,0,"_dependencyMap"],[27,39,4,0],[28,2,6,0],[28,6,6,0,"_FlingGestureHandler"],[28,26,6,0],[28,29,6,0,"require"],[28,36,6,0],[28,37,6,0,"_dependencyMap"],[28,51,6,0],[29,2,7,0],[29,6,7,0,"_ForceTouchGestureHandler"],[29,31,7,0],[29,34,7,0,"require"],[29,41,7,0],[29,42,7,0,"_dependencyMap"],[29,56,7,0],[30,2,8,0],[30,6,8,0,"_LongPressGestureHandler"],[30,30,8,0],[30,33,8,0,"require"],[30,40,8,0],[30,41,8,0,"_dependencyMap"],[30,55,8,0],[31,2,9,0],[31,6,9,0,"_PanGestureHandler"],[31,24,9,0],[31,27,9,0,"require"],[31,34,9,0],[31,35,9,0,"_dependencyMap"],[31,49,9,0],[32,2,13,0],[32,6,13,0,"_TapGestureHandler"],[32,24,13,0],[32,27,13,0,"require"],[32,34,13,0],[32,35,13,0,"_dependencyMap"],[32,49,13,0],[33,2,14,0],[33,6,14,0,"_hoverGesture"],[33,19,14,0],[33,22,14,0,"require"],[33,29,14,0],[33,30,14,0,"_dependencyMap"],[33,44,14,0],[34,2,15,0],[34,6,15,0,"_NativeViewGestureHandler"],[34,31,15,0],[34,34,15,0,"require"],[34,41,15,0],[34,42,15,0,"_dependencyMap"],[34,56,15,0],[35,2,16,0],[35,6,16,0,"_gestureHandlerCommon"],[35,27,16,0],[35,30,16,0,"require"],[35,37,16,0],[35,38,16,0,"_dependencyMap"],[35,52,16,0],[36,2,20,0],[36,6,20,0,"_EnableNewWebImplementation"],[36,33,20,0],[36,36,20,0,"require"],[36,43,20,0],[36,44,20,0,"_dependencyMap"],[36,58,20,0],[37,2,21,0],[37,6,21,0,"_getReactNativeVersion"],[37,28,21,0],[37,31,21,0,"require"],[37,38,21,0],[37,39,21,0,"_dependencyMap"],[37,53,21,0],[38,2,22,0],[38,6,22,0,"_RNRenderer"],[38,17,22,0],[38,20,22,0,"require"],[38,27,22,0],[38,28,22,0,"_dependencyMap"],[38,42,22,0],[39,2,23,0],[39,6,23,0,"_react"],[39,12,23,0],[39,15,23,0,"require"],[39,22,23,0],[39,23,23,0,"_dependencyMap"],[39,37,23,0],[40,2,24,0],[40,6,24,0,"_reanimatedWrapper"],[40,24,24,0],[40,27,24,0,"require"],[40,34,24,0],[40,35,24,0,"_dependencyMap"],[40,49,24,0],[41,2,25,0],[41,6,25,0,"_eventReceiver"],[41,20,25,0],[41,23,25,0,"require"],[41,30,25,0],[41,31,25,0,"_dependencyMap"],[41,45,25,0],[42,2,28,7],[42,6,28,13,"ALLOWED_PROPS"],[42,19,28,26],[42,22,28,29],[42,23,29,2],[42,26,29,5,"baseGestureHandlerWithDetectorProps"],[42,47,29,40],[42,48,29,40,"baseGestureHandlerWithDetectorProps"],[42,83,29,40],[42,85,30,2],[42,88,30,5,"tapGestureHandlerProps"],[42,106,30,27],[42,107,30,27,"tapGestureHandlerProps"],[42,129,30,27],[42,131,31,2],[42,134,31,5,"panGestureHandlerProps"],[42,152,31,27],[42,153,31,27,"panGestureHandlerProps"],[42,175,31,27],[42,177,32,2],[42,180,32,5,"panGestureHandlerCustomNativeProps"],[42,198,32,39],[42,199,32,39,"panGestureHandlerCustomNativeProps"],[42,233,32,39],[42,235,33,2],[42,238,33,5,"longPressGestureHandlerProps"],[42,262,33,33],[42,263,33,33,"longPressGestureHandlerProps"],[42,291,33,33],[42,293,34,2],[42,296,34,5,"forceTouchGestureHandlerProps"],[42,321,34,34],[42,322,34,34,"forceTouchGestureHandlerProps"],[42,351,34,34],[42,353,35,2],[42,356,35,5,"flingGestureHandlerProps"],[42,376,35,29],[42,377,35,29,"flingGestureHandlerProps"],[42,401,35,29],[42,403,36,2],[42,406,36,5,"hoverGestureHandlerProps"],[42,419,36,29],[42,420,36,29,"hoverGestureHandlerProps"],[42,444,36,29],[42,446,37,2],[42,449,37,5,"nativeViewGestureHandlerProps"],[42,474,37,34],[42,475,37,34,"nativeViewGestureHandlerProps"],[42,504,37,34],[42,505,38,1],[43,2,40,0],[43,11,40,9,"convertToHandlerTag"],[43,30,40,28,"convertToHandlerTag"],[43,31,40,29,"ref"],[43,34,40,44],[43,36,40,54],[44,4,41,2],[44,8,41,6],[44,15,41,13,"ref"],[44,18,41,16],[44,23,41,21],[44,31,41,29],[44,33,41,31],[45,6,42,4],[45,13,42,11,"ref"],[45,16,42,14],[46,4,43,2],[46,5,43,3],[46,11,43,9],[46,15,43,13,"ref"],[46,18,43,16],[46,30,43,28,"BaseGesture"],[46,38,43,39],[46,39,43,39,"BaseGesture"],[46,50,43,39],[46,52,43,41],[47,6,44,4],[47,13,44,11,"ref"],[47,16,44,14],[47,17,44,15,"handlerTag"],[47,27,44,25],[48,4,45,2],[48,5,45,3],[48,11,45,9],[49,6,46,4],[50,6,47,4],[51,6,48,4],[51,13,48,11,"ref"],[51,16,48,14],[51,17,48,15,"current"],[51,24,48,22],[51,26,48,24,"handlerTag"],[51,36,48,34],[51,40,48,38],[51,41,48,39],[51,42,48,40],[52,4,49,2],[53,2,50,0],[54,2,52,0],[54,11,52,9,"extractValidHandlerTags"],[54,34,52,32,"extractValidHandlerTags"],[54,35,52,33,"interactionGroup"],[54,51,52,75],[54,53,52,77],[55,4,53,2],[55,11,54,4,"interactionGroup"],[55,27,54,20],[55,29,54,22,"map"],[55,32,54,25],[55,33,54,26,"convertToHandlerTag"],[55,52,54,45],[55,53,54,46],[55,55,54,48,"filter"],[55,61,54,54],[55,62,54,56,"tag"],[55,65,54,59],[55,69,54,64,"tag"],[55,72,54,67],[55,75,54,70],[55,76,54,71],[55,77,54,72],[55,81,54,76],[55,83,54,78],[56,2,56,0],[57,2,58,7],[57,11,58,16,"extractGestureRelations"],[57,34,58,39,"extractGestureRelations"],[57,35,58,40,"gesture"],[57,42,58,60],[57,44,58,62],[58,4,59,2],[58,8,59,8,"requireToFail"],[58,21,59,21],[58,24,59,24,"extractValidHandlerTags"],[58,47,59,47],[58,48,59,48,"gesture"],[58,55,59,55],[58,56,59,56,"config"],[58,62,59,62],[58,63,59,63,"requireToFail"],[58,76,59,76],[58,77,59,77],[59,4,60,2],[59,8,60,8,"simultaneousWith"],[59,24,60,24],[59,27,60,27,"extractValidHandlerTags"],[59,50,60,50],[59,51,61,4,"gesture"],[59,58,61,11],[59,59,61,12,"config"],[59,65,61,18],[59,66,61,19,"simultaneousWith"],[59,82,62,2],[59,83,62,3],[60,4,63,2],[60,8,63,8,"blocksHandlers"],[60,22,63,22],[60,25,63,25,"extractValidHandlerTags"],[60,48,63,48],[60,49,63,49,"gesture"],[60,56,63,56],[60,57,63,57,"config"],[60,63,63,63],[60,64,63,64,"blocksHandlers"],[60,78,63,78],[60,79,63,79],[61,4,65,2],[61,11,65,9],[62,6,66,4,"waitFor"],[62,13,66,11],[62,15,66,13,"requireToFail"],[62,28,66,26],[63,6,67,4,"simultaneousHandlers"],[63,26,67,24],[63,28,67,26,"simultaneousWith"],[63,44,67,42],[64,6,68,4,"blocksHandlers"],[64,20,68,18],[64,22,68,20,"blocksHandlers"],[65,4,69,2],[65,5,69,3],[66,2,70,0],[67,2,72,7],[67,11,72,16,"checkGestureCallbacksForWorklets"],[67,43,72,48,"checkGestureCallbacksForWorklets"],[67,44,72,49,"gesture"],[67,51,72,69],[67,53,72,71],[68,4,73,2],[68,8,73,6],[68,9,73,7,"__DEV__"],[68,16,73,14],[68,18,73,16],[69,6,74,4],[70,4,75,2],[71,4,76,2],[72,4,77,2],[73,4,78,2],[73,8,78,6,"gesture"],[73,15,78,13],[73,16,78,14,"config"],[73,22,78,20],[73,23,78,21,"runOnJS"],[73,30,78,28],[73,32,78,30],[74,6,79,4],[75,4,80,2],[76,4,82,2],[76,8,82,8,"areSomeNotWorklets"],[76,26,82,26],[76,29,82,29,"gesture"],[76,36,82,36],[76,37,82,37,"handlers"],[76,45,82,45],[76,46,82,46,"isWorklet"],[76,55,82,55],[76,56,82,56,"includes"],[76,64,82,64],[76,65,82,65],[76,70,82,70],[76,71,82,71],[77,4,83,2],[77,8,83,8,"areSomeWorklets"],[77,23,83,23],[77,26,83,26,"gesture"],[77,33,83,33],[77,34,83,34,"handlers"],[77,42,83,42],[77,43,83,43,"isWorklet"],[77,52,83,52],[77,53,83,53,"includes"],[77,61,83,61],[77,62,83,62],[77,66,83,66],[77,67,83,67],[79,4,85,2],[80,4,86,2],[81,4,87,2],[81,8,87,6,"areSomeNotWorklets"],[81,26,87,24],[81,30,87,28,"areSomeWorklets"],[81,45,87,43],[81,47,87,45],[82,6,88,4,"console"],[82,13,88,11],[82,14,88,12,"error"],[82,19,88,17],[82,20,89,6],[82,24,89,6,"tagMessage"],[82,30,89,16],[82,31,89,16,"tagMessage"],[82,41,89,16],[82,43,90,8],[82,310,91,6],[82,311,92,4],[82,312,92,5],[83,4,93,2],[84,4,95,2],[84,8,95,6,"Reanimated"],[84,26,95,16],[84,27,95,16,"Reanimated"],[84,37,95,16],[84,42,95,21,"undefined"],[84,51,95,30],[84,53,95,32],[85,6,96,4],[86,6,97,4],[87,4,98,2],[88,4,100,2],[88,8,100,8,"areAllNotWorklets"],[88,25,100,25],[88,28,100,28],[88,29,100,29,"areSomeWorklets"],[88,44,100,44],[88,48,100,48,"areSomeNotWorklets"],[88,66,100,66],[89,4,101,2],[90,4,102,2],[91,4,103,2],[91,8,103,6,"areAllNotWorklets"],[91,25,103,23],[91,29,103,27],[91,30,103,28],[91,34,103,28,"isTestEnv"],[91,40,103,37],[91,41,103,37,"isTestEnv"],[91,50,103,37],[91,52,103,38],[91,53,103,39],[91,55,103,41],[92,6,104,4,"console"],[92,13,104,11],[92,14,104,12,"warn"],[92,18,104,16],[92,19,105,6],[92,23,105,6,"tagMessage"],[92,29,105,16],[92,30,105,16,"tagMessage"],[92,40,105,16],[92,42,106,8],[92,276,107,6],[92,277,108,4],[92,278,108,5],[93,4,109,2],[94,2,110,0],[96,2,112,0],[97,2,113,7],[97,11,113,16,"validateDetectorChildren"],[97,35,113,40,"validateDetectorChildren"],[97,36,113,41,"ref"],[97,39,113,49],[97,41,113,51],[98,4,114,2],[99,4,115,2],[100,4,116,2],[101,4,117,2],[102,4,118,2],[103,4,119,2],[104,4,120,2],[105,4,121,2],[106,4,122,2],[107,4,123,2],[108,4,124,2],[109,4,125,2],[110,4,126,2],[111,4,127,2],[112,4,128,2],[113,4,129,2],[114,4,130,2],[115,4,131,2],[116,4,132,2],[117,4,133,2],[118,4,134,2],[119,4,135,2],[119,8,135,6,"__DEV__"],[119,15,135,13],[119,19,135,17,"Platform"],[119,31,135,25],[119,32,135,25,"Platform"],[119,40,135,25],[119,41,135,26,"OS"],[119,43,135,28],[119,48,135,33],[119,53,135,38],[119,55,135,40],[120,6,136,4],[120,10,136,10,"REACT_NATIVE_VERSION"],[120,30,136,30],[120,33,136,33],[120,37,136,33,"getReactNativeVersion"],[120,59,136,54],[120,60,136,54,"getReactNativeVersion"],[120,81,136,54],[120,83,136,55],[120,84,136,56],[121,6,137,4],[122,6,138,4],[122,10,138,10,"wrapType"],[122,18,138,18],[122,21,139,6,"REACT_NATIVE_VERSION"],[122,41,139,26],[122,42,139,27,"minor"],[122,47,139,32],[122,50,139,35],[122,52,139,37],[122,56,139,41,"REACT_NATIVE_VERSION"],[122,76,139,61],[122,77,139,62,"major"],[122,82,139,67],[122,85,139,70],[122,86,139,71],[123,6,140,10],[124,6,141,10,"ref"],[124,9,141,13],[124,10,141,14,"_reactInternals"],[124,25,141,29],[124,26,141,30,"elementType"],[124,37,141,41],[125,6,142,10],[126,6,143,10,"ref"],[126,9,143,13],[126,10,143,14,"_reactInternalFiber"],[126,29,143,33],[126,30,143,34,"elementType"],[126,41,143,45],[127,6,144,4],[128,6,145,4],[128,10,145,8,"instance"],[128,18,145,16],[128,21,146,6,"RNRenderer"],[128,32,146,16],[128,33,146,16,"RNRenderer"],[128,43,146,16],[128,44,146,17,"findHostInstance_DEPRECATED"],[128,71,146,44],[128,72,147,8,"ref"],[128,75,148,6],[128,76,148,7],[128,77,148,8,"_internalFiberInstanceHandleDEV"],[128,108,148,39],[130,6,150,4],[131,6,151,4],[131,13,151,11,"instance"],[131,21,151,19],[131,25,151,23,"instance"],[131,33,151,31],[131,34,151,32,"elementType"],[131,45,151,43],[131,50,151,48,"wrapType"],[131,58,151,56],[131,60,151,58],[132,8,152,6],[133,8,153,6],[133,12,153,10,"instance"],[133,20,153,18],[133,21,153,19,"sibling"],[133,28,153,26],[133,30,153,28],[134,10,154,8],[134,16,154,14],[134,20,154,18,"Error"],[134,25,154,23],[134,26,155,10],[134,269,156,8],[134,270,156,9],[135,8,157,6],[137,8,159,6],[138,8,160,6,"instance"],[138,16,160,14],[138,19,160,17,"instance"],[138,27,160,25],[138,28,160,26,"return"],[138,34,160,32],[139,6,161,4],[140,4,162,2],[141,2,163,0],[142,2,165,7],[142,11,165,16,"useForceRender"],[142,25,165,30,"useForceRender"],[142,26,165,30],[142,28,165,33],[143,4,166,2],[143,8,166,2,"_useState"],[143,17,166,2],[143,20,166,40],[143,24,166,40,"useState"],[143,30,166,48],[143,31,166,48,"useState"],[143,39,166,48],[143,41,166,49],[143,46,166,54],[143,47,166,55],[144,6,166,55,"_useState2"],[144,16,166,55],[144,23,166,55,"_slicedToArray"],[144,37,166,55],[144,38,166,55,"default"],[144,45,166,55],[144,47,166,55,"_useState"],[144,56,166,55],[145,6,166,9,"renderState"],[145,17,166,20],[145,20,166,20,"_useState2"],[145,30,166,20],[146,6,166,22,"setRenderState"],[146,20,166,36],[146,23,166,36,"_useState2"],[146,33,166,36],[147,4,167,2],[147,8,167,8,"forceRender"],[147,19,167,19],[147,22,167,22],[147,26,167,22,"useCallback"],[147,32,167,33],[147,33,167,33,"useCallback"],[147,44,167,33],[147,46,167,34],[147,52,167,40],[148,6,168,4,"setRenderState"],[148,20,168,18],[148,21,168,19],[148,22,168,20,"renderState"],[148,33,168,31],[148,34,168,32],[149,4,169,2],[149,5,169,3],[149,7,169,5],[149,8,169,6,"renderState"],[149,19,169,17],[149,21,169,19,"setRenderState"],[149,35,169,33],[149,36,169,34],[149,37,169,35],[150,4,171,2],[150,11,171,9,"forceRender"],[150,22,171,20],[151,2,172,0],[152,2,174,7],[152,11,174,16,"useWebEventHandlers"],[152,30,174,35,"useWebEventHandlers"],[152,31,174,35],[152,33,174,38],[153,4,175,2],[153,11,175,9],[153,15,175,9,"useRef"],[153,21,175,15],[153,22,175,15,"useRef"],[153,28,175,15],[153,30,175,33],[154,6,176,4,"onGestureHandlerEvent"],[154,27,176,25],[154,29,176,28,"e"],[154,30,176,63],[154,34,176,68],[155,8,177,6],[155,12,177,6,"onGestureHandlerEvent"],[155,26,177,27],[155,27,177,27,"onGestureHandlerEvent"],[155,48,177,27],[155,50,177,28,"e"],[155,51,177,29],[155,52,177,30,"nativeEvent"],[155,63,177,41],[155,64,177,42],[156,6,178,4],[156,7,178,5],[157,6,179,4,"onGestureHandlerStateChange"],[157,33,179,31],[157,35,179,33],[157,39,179,33,"isNewWebImplementationEnabled"],[157,66,179,62],[157,67,179,62,"isNewWebImplementationEnabled"],[157,96,179,62],[157,98,179,63],[157,99,179,64],[157,102,180,9,"e"],[157,103,180,44],[157,107,180,49],[158,8,181,10],[158,12,181,10,"onGestureHandlerEvent"],[158,26,181,31],[158,27,181,31,"onGestureHandlerEvent"],[158,48,181,31],[158,50,181,32,"e"],[158,51,181,33],[158,52,181,34,"nativeEvent"],[158,63,181,45],[158,64,181,46],[159,6,182,8],[159,7,182,9],[159,10,183,8,"undefined"],[160,4,184,2],[160,5,184,3],[160,6,184,4],[161,2,185,0],[162,0,185,1],[162,3]],"functionMap":{"names":["<global>","convertToHandlerTag","extractValidHandlerTags","interactionGroup.map.filter$argument_0","extractGestureRelations","checkGestureCallbacksForWorklets","validateDetectorChildren","useForceRender","forceRender","useWebEventHandlers","useRef$argument_0.onGestureHandlerEvent","<anonymous>"],"mappings":"AAA;ACuC;CDU;AEE;uDCE,gBD;CFE;OIE;CJY;OKE;CLsC;OMG;CNkD;OOE;kCCE;GDE;CPG;OSE;2BCE;KDE;QEE;SFE;CTG"},"hasCjsExports":false},"type":"js/module"}]}