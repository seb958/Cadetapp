{"dependencies":[{"name":"./createHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"j9sUgJL2drnBoAedJuo4/l2ILqw=","exportNames":["*"],"imports":1}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":65,"index":110}}],"key":"M3YJtGPnWOlAL/cGsCkMRGpSLhc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"panGestureHandlerProps\", {\n    enumerable: true,\n    get: function () {\n      return panGestureHandlerProps;\n    }\n  });\n  Object.defineProperty(exports, \"panGestureHandlerCustomNativeProps\", {\n    enumerable: true,\n    get: function () {\n      return panGestureHandlerCustomNativeProps;\n    }\n  });\n  Object.defineProperty(exports, \"panHandlerName\", {\n    enumerable: true,\n    get: function () {\n      return panHandlerName;\n    }\n  });\n  Object.defineProperty(exports, \"PanGestureHandler\", {\n    enumerable: true,\n    get: function () {\n      return PanGestureHandler;\n    }\n  });\n  exports.managePanProps = managePanProps;\n  var _createHandler = require(_dependencyMap[0], \"./createHandler\");\n  var createHandler = _interopDefault(_createHandler);\n  var _gestureHandlerCommon = require(_dependencyMap[1], \"./gestureHandlerCommon\");\n  const panGestureHandlerProps = ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture', 'activateAfterLongPress'];\n  const panGestureHandlerCustomNativeProps = ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd'];\n  const panHandlerName = 'PanGestureHandler';\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\n  const PanGestureHandler = (0, createHandler.default)({\n    name: panHandlerName,\n    allowedProps: [..._gestureHandlerCommon.baseGestureHandlerProps, ...panGestureHandlerProps],\n    config: {},\n    transformProps: managePanProps,\n    customNativeProps: panGestureHandlerCustomNativeProps\n  });\n  function validatePanGestureHandlerProps(props) {\n    if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n      throw new Error(`First element of activeOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n      throw new Error(`First element of activeOffsetY should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n      throw new Error(`First element of failOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n      throw new Error(`First element of failOffsetY should be negative, a the second one should be positive`);\n    }\n    if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n      throw new Error(`It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead`);\n    }\n    if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n      throw new Error(`It is not supported to use minDist with activeOffsetX or activeOffsetY`);\n    }\n  }\n  function transformPanGestureHandlerProps(props) {\n    const res = {\n      ...props\n    };\n    if (props.activeOffsetX !== undefined) {\n      delete res.activeOffsetX;\n      if (Array.isArray(props.activeOffsetX)) {\n        res.activeOffsetXStart = props.activeOffsetX[0];\n        res.activeOffsetXEnd = props.activeOffsetX[1];\n      } else if (props.activeOffsetX < 0) {\n        res.activeOffsetXStart = props.activeOffsetX;\n      } else {\n        res.activeOffsetXEnd = props.activeOffsetX;\n      }\n    }\n    if (props.activeOffsetY !== undefined) {\n      delete res.activeOffsetY;\n      if (Array.isArray(props.activeOffsetY)) {\n        res.activeOffsetYStart = props.activeOffsetY[0];\n        res.activeOffsetYEnd = props.activeOffsetY[1];\n      } else if (props.activeOffsetY < 0) {\n        res.activeOffsetYStart = props.activeOffsetY;\n      } else {\n        res.activeOffsetYEnd = props.activeOffsetY;\n      }\n    }\n    if (props.failOffsetX !== undefined) {\n      delete res.failOffsetX;\n      if (Array.isArray(props.failOffsetX)) {\n        res.failOffsetXStart = props.failOffsetX[0];\n        res.failOffsetXEnd = props.failOffsetX[1];\n      } else if (props.failOffsetX < 0) {\n        res.failOffsetXStart = props.failOffsetX;\n      } else {\n        res.failOffsetXEnd = props.failOffsetX;\n      }\n    }\n    if (props.failOffsetY !== undefined) {\n      delete res.failOffsetY;\n      if (Array.isArray(props.failOffsetY)) {\n        res.failOffsetYStart = props.failOffsetY[0];\n        res.failOffsetYEnd = props.failOffsetY[1];\n      } else if (props.failOffsetY < 0) {\n        res.failOffsetYStart = props.failOffsetY;\n      } else {\n        res.failOffsetYEnd = props.failOffsetY;\n      }\n    }\n    return res;\n  }\n  function managePanProps(props) {\n    if (__DEV__) {\n      validatePanGestureHandlerProps(props);\n    }\n    return transformPanGestureHandlerProps(props);\n  }\n});","lineCount":134,"map":[[12,2,3,0,"Object"],[12,8,3,0],[12,9,3,0,"defineProperty"],[12,23,3,0],[12,24,3,0,"exports"],[12,31,3,0],[13,4,3,0,"enumerable"],[13,14,3,0],[14,4,3,0,"get"],[14,7,3,0],[14,18,3,0,"get"],[14,19,3,0],[15,6,3,0],[15,13,3,0,"panGestureHandlerProps"],[15,35,3,0],[16,4,3,0],[17,2,3,0],[18,2,4,0,"Object"],[18,8,4,0],[18,9,4,0,"defineProperty"],[18,23,4,0],[18,24,4,0,"exports"],[18,31,4,0],[19,4,4,0,"enumerable"],[19,14,4,0],[20,4,4,0,"get"],[20,7,4,0],[20,18,4,0,"get"],[20,19,4,0],[21,6,4,0],[21,13,4,0,"panGestureHandlerCustomNativeProps"],[21,47,4,0],[22,4,4,0],[23,2,4,0],[24,2,5,0,"Object"],[24,8,5,0],[24,9,5,0,"defineProperty"],[24,23,5,0],[24,24,5,0,"exports"],[24,31,5,0],[25,4,5,0,"enumerable"],[25,14,5,0],[26,4,5,0,"get"],[26,7,5,0],[26,18,5,0,"get"],[26,19,5,0],[27,6,5,0],[27,13,5,0,"panHandlerName"],[27,27,5,0],[28,4,5,0],[29,2,5,0],[30,2,14,0,"Object"],[30,8,14,0],[30,9,14,0,"defineProperty"],[30,23,14,0],[30,24,14,0,"exports"],[30,31,14,0],[31,4,14,0,"enumerable"],[31,14,14,0],[32,4,14,0,"get"],[32,7,14,0],[32,18,14,0,"get"],[32,19,14,0],[33,6,14,0],[33,13,14,0,"PanGestureHandler"],[33,30,14,0],[34,4,14,0],[35,2,14,0],[36,2,107,0,"exports"],[36,9,107,0],[36,10,107,0,"managePanProps"],[36,24,107,0],[36,27,107,0,"managePanProps"],[36,41,107,0],[37,2,1,0],[37,6,1,0,"_createHandler"],[37,20,1,0],[37,23,1,0,"require"],[37,30,1,0],[37,31,1,0,"_dependencyMap"],[37,45,1,0],[38,2,1,0],[38,6,1,0,"createHandler"],[38,19,1,0],[38,22,1,0,"_interopDefault"],[38,37,1,0],[38,38,1,0,"_createHandler"],[38,52,1,0],[39,2,2,0],[39,6,2,0,"_gestureHandlerCommon"],[39,27,2,0],[39,30,2,0,"require"],[39,37,2,0],[39,38,2,0,"_dependencyMap"],[39,52,2,0],[40,2,3,7],[40,8,3,13,"panGestureHandlerProps"],[40,30,3,35],[40,33,3,38],[40,34,3,39],[40,49,3,54],[40,51,3,56],[40,66,3,71],[40,68,3,73],[40,81,3,86],[40,83,3,88],[40,96,3,101],[40,98,3,103],[40,107,3,112],[40,109,3,114],[40,122,3,127],[40,124,3,129],[40,138,3,143],[40,140,3,145],[40,154,3,159],[40,156,3,161],[40,169,3,174],[40,171,3,176],[40,184,3,189],[40,186,3,191],[40,198,3,203],[40,200,3,205],[40,232,3,237],[40,234,3,239],[40,258,3,263],[40,259,3,264],[41,2,4,7],[41,8,4,13,"panGestureHandlerCustomNativeProps"],[41,42,4,47],[41,45,4,50],[41,46,4,51],[41,66,4,71],[41,68,4,73],[41,86,4,91],[41,88,4,93],[41,108,4,113],[41,110,4,115],[41,128,4,133],[41,130,4,135],[41,148,4,153],[41,150,4,155],[41,166,4,171],[41,168,4,173],[41,186,4,191],[41,188,4,193],[41,204,4,209],[41,205,4,210],[42,2,5,7],[42,8,5,13,"panHandlerName"],[42,22,5,27],[42,25,5,30],[42,44,5,49],[43,2,6,0],[44,0,7,0],[45,0,8,0],[47,2,10,0],[48,0,11,0],[49,0,12,0],[50,2,13,0],[51,2,14,7],[51,8,14,13,"PanGestureHandler"],[51,25,14,30],[51,28,14,33],[51,32,14,33,"createHandler"],[51,45,14,46],[51,46,14,46,"default"],[51,53,14,46],[51,55,14,47],[52,4,15,2,"name"],[52,8,15,6],[52,10,15,8,"panHandlerName"],[52,24,15,22],[53,4,16,2,"allowedProps"],[53,16,16,14],[53,18,16,16],[53,19,16,17],[53,22,16,20,"baseGestureHandlerProps"],[53,43,16,43],[53,44,16,43,"baseGestureHandlerProps"],[53,67,16,43],[53,69,16,45],[53,72,16,48,"panGestureHandlerProps"],[53,94,16,70],[53,95,16,71],[54,4,17,2,"config"],[54,10,17,8],[54,12,17,10],[54,13,17,11],[54,14,17,12],[55,4,18,2,"transformProps"],[55,18,18,16],[55,20,18,18,"managePanProps"],[55,34,18,32],[56,4,19,2,"customNativeProps"],[56,21,19,19],[56,23,19,21,"panGestureHandlerCustomNativeProps"],[57,2,20,0],[57,3,20,1],[57,4,20,2],[58,2,22,0],[58,11,22,9,"validatePanGestureHandlerProps"],[58,41,22,39,"validatePanGestureHandlerProps"],[58,42,22,40,"props"],[58,47,22,45],[58,49,22,47],[59,4,23,2],[59,8,23,6,"Array"],[59,13,23,11],[59,14,23,12,"isArray"],[59,21,23,19],[59,22,23,20,"props"],[59,27,23,25],[59,28,23,26,"activeOffsetX"],[59,41,23,39],[59,42,23,40],[59,47,23,45,"props"],[59,52,23,50],[59,53,23,51,"activeOffsetX"],[59,66,23,64],[59,67,23,65],[59,68,23,66],[59,69,23,67],[59,72,23,70],[59,73,23,71],[59,77,23,75,"props"],[59,82,23,80],[59,83,23,81,"activeOffsetX"],[59,96,23,94],[59,97,23,95],[59,98,23,96],[59,99,23,97],[59,102,23,100],[59,103,23,101],[59,104,23,102],[59,106,23,104],[60,6,24,4],[60,12,24,10],[60,16,24,14,"Error"],[60,21,24,19],[60,22,24,20],[60,110,24,108],[60,111,24,109],[61,4,25,2],[62,4,27,2],[62,8,27,6,"Array"],[62,13,27,11],[62,14,27,12,"isArray"],[62,21,27,19],[62,22,27,20,"props"],[62,27,27,25],[62,28,27,26,"activeOffsetY"],[62,41,27,39],[62,42,27,40],[62,47,27,45,"props"],[62,52,27,50],[62,53,27,51,"activeOffsetY"],[62,66,27,64],[62,67,27,65],[62,68,27,66],[62,69,27,67],[62,72,27,70],[62,73,27,71],[62,77,27,75,"props"],[62,82,27,80],[62,83,27,81,"activeOffsetY"],[62,96,27,94],[62,97,27,95],[62,98,27,96],[62,99,27,97],[62,102,27,100],[62,103,27,101],[62,104,27,102],[62,106,27,104],[63,6,28,4],[63,12,28,10],[63,16,28,14,"Error"],[63,21,28,19],[63,22,28,20],[63,110,28,108],[63,111,28,109],[64,4,29,2],[65,4,31,2],[65,8,31,6,"Array"],[65,13,31,11],[65,14,31,12,"isArray"],[65,21,31,19],[65,22,31,20,"props"],[65,27,31,25],[65,28,31,26,"failOffsetX"],[65,39,31,37],[65,40,31,38],[65,45,31,43,"props"],[65,50,31,48],[65,51,31,49,"failOffsetX"],[65,62,31,60],[65,63,31,61],[65,64,31,62],[65,65,31,63],[65,68,31,66],[65,69,31,67],[65,73,31,71,"props"],[65,78,31,76],[65,79,31,77,"failOffsetX"],[65,90,31,88],[65,91,31,89],[65,92,31,90],[65,93,31,91],[65,96,31,94],[65,97,31,95],[65,98,31,96],[65,100,31,98],[66,6,32,4],[66,12,32,10],[66,16,32,14,"Error"],[66,21,32,19],[66,22,32,20],[66,108,32,106],[66,109,32,107],[67,4,33,2],[68,4,35,2],[68,8,35,6,"Array"],[68,13,35,11],[68,14,35,12,"isArray"],[68,21,35,19],[68,22,35,20,"props"],[68,27,35,25],[68,28,35,26,"failOffsetY"],[68,39,35,37],[68,40,35,38],[68,45,35,43,"props"],[68,50,35,48],[68,51,35,49,"failOffsetY"],[68,62,35,60],[68,63,35,61],[68,64,35,62],[68,65,35,63],[68,68,35,66],[68,69,35,67],[68,73,35,71,"props"],[68,78,35,76],[68,79,35,77,"failOffsetY"],[68,90,35,88],[68,91,35,89],[68,92,35,90],[68,93,35,91],[68,96,35,94],[68,97,35,95],[68,98,35,96],[68,100,35,98],[69,6,36,4],[69,12,36,10],[69,16,36,14,"Error"],[69,21,36,19],[69,22,36,20],[69,108,36,106],[69,109,36,107],[70,4,37,2],[71,4,39,2],[71,8,39,6,"props"],[71,13,39,11],[71,14,39,12,"minDist"],[71,21,39,19],[71,26,39,24,"props"],[71,31,39,29],[71,32,39,30,"failOffsetX"],[71,43,39,41],[71,47,39,45,"props"],[71,52,39,50],[71,53,39,51,"failOffsetY"],[71,64,39,62],[71,65,39,63],[71,67,39,65],[72,6,40,4],[72,12,40,10],[72,16,40,14,"Error"],[72,21,40,19],[72,22,40,20],[72,135,40,133],[72,136,40,134],[73,4,41,2],[74,4,43,2],[74,8,43,6,"props"],[74,13,43,11],[74,14,43,12,"minDist"],[74,21,43,19],[74,26,43,24,"props"],[74,31,43,29],[74,32,43,30,"activeOffsetX"],[74,45,43,43],[74,49,43,47,"props"],[74,54,43,52],[74,55,43,53,"activeOffsetY"],[74,68,43,66],[74,69,43,67],[74,71,43,69],[75,6,44,4],[75,12,44,10],[75,16,44,14,"Error"],[75,21,44,19],[75,22,44,20],[75,94,44,92],[75,95,44,93],[76,4,45,2],[77,2,46,0],[78,2,48,0],[78,11,48,9,"transformPanGestureHandlerProps"],[78,42,48,40,"transformPanGestureHandlerProps"],[78,43,48,41,"props"],[78,48,48,46],[78,50,48,48],[79,4,49,2],[79,10,49,8,"res"],[79,13,49,11],[79,16,49,14],[80,6,49,16],[80,9,49,19,"props"],[81,4,50,2],[81,5,50,3],[82,4,52,2],[82,8,52,6,"props"],[82,13,52,11],[82,14,52,12,"activeOffsetX"],[82,27,52,25],[82,32,52,30,"undefined"],[82,41,52,39],[82,43,52,41],[83,6,53,4],[83,13,53,11,"res"],[83,16,53,14],[83,17,53,15,"activeOffsetX"],[83,30,53,28],[84,6,55,4],[84,10,55,8,"Array"],[84,15,55,13],[84,16,55,14,"isArray"],[84,23,55,21],[84,24,55,22,"props"],[84,29,55,27],[84,30,55,28,"activeOffsetX"],[84,43,55,41],[84,44,55,42],[84,46,55,44],[85,8,56,6,"res"],[85,11,56,9],[85,12,56,10,"activeOffsetXStart"],[85,30,56,28],[85,33,56,31,"props"],[85,38,56,36],[85,39,56,37,"activeOffsetX"],[85,52,56,50],[85,53,56,51],[85,54,56,52],[85,55,56,53],[86,8,57,6,"res"],[86,11,57,9],[86,12,57,10,"activeOffsetXEnd"],[86,28,57,26],[86,31,57,29,"props"],[86,36,57,34],[86,37,57,35,"activeOffsetX"],[86,50,57,48],[86,51,57,49],[86,52,57,50],[86,53,57,51],[87,6,58,4],[87,7,58,5],[87,13,58,11],[87,17,58,15,"props"],[87,22,58,20],[87,23,58,21,"activeOffsetX"],[87,36,58,34],[87,39,58,37],[87,40,58,38],[87,42,58,40],[88,8,59,6,"res"],[88,11,59,9],[88,12,59,10,"activeOffsetXStart"],[88,30,59,28],[88,33,59,31,"props"],[88,38,59,36],[88,39,59,37,"activeOffsetX"],[88,52,59,50],[89,6,60,4],[89,7,60,5],[89,13,60,11],[90,8,61,6,"res"],[90,11,61,9],[90,12,61,10,"activeOffsetXEnd"],[90,28,61,26],[90,31,61,29,"props"],[90,36,61,34],[90,37,61,35,"activeOffsetX"],[90,50,61,48],[91,6,62,4],[92,4,63,2],[93,4,65,2],[93,8,65,6,"props"],[93,13,65,11],[93,14,65,12,"activeOffsetY"],[93,27,65,25],[93,32,65,30,"undefined"],[93,41,65,39],[93,43,65,41],[94,6,66,4],[94,13,66,11,"res"],[94,16,66,14],[94,17,66,15,"activeOffsetY"],[94,30,66,28],[95,6,68,4],[95,10,68,8,"Array"],[95,15,68,13],[95,16,68,14,"isArray"],[95,23,68,21],[95,24,68,22,"props"],[95,29,68,27],[95,30,68,28,"activeOffsetY"],[95,43,68,41],[95,44,68,42],[95,46,68,44],[96,8,69,6,"res"],[96,11,69,9],[96,12,69,10,"activeOffsetYStart"],[96,30,69,28],[96,33,69,31,"props"],[96,38,69,36],[96,39,69,37,"activeOffsetY"],[96,52,69,50],[96,53,69,51],[96,54,69,52],[96,55,69,53],[97,8,70,6,"res"],[97,11,70,9],[97,12,70,10,"activeOffsetYEnd"],[97,28,70,26],[97,31,70,29,"props"],[97,36,70,34],[97,37,70,35,"activeOffsetY"],[97,50,70,48],[97,51,70,49],[97,52,70,50],[97,53,70,51],[98,6,71,4],[98,7,71,5],[98,13,71,11],[98,17,71,15,"props"],[98,22,71,20],[98,23,71,21,"activeOffsetY"],[98,36,71,34],[98,39,71,37],[98,40,71,38],[98,42,71,40],[99,8,72,6,"res"],[99,11,72,9],[99,12,72,10,"activeOffsetYStart"],[99,30,72,28],[99,33,72,31,"props"],[99,38,72,36],[99,39,72,37,"activeOffsetY"],[99,52,72,50],[100,6,73,4],[100,7,73,5],[100,13,73,11],[101,8,74,6,"res"],[101,11,74,9],[101,12,74,10,"activeOffsetYEnd"],[101,28,74,26],[101,31,74,29,"props"],[101,36,74,34],[101,37,74,35,"activeOffsetY"],[101,50,74,48],[102,6,75,4],[103,4,76,2],[104,4,78,2],[104,8,78,6,"props"],[104,13,78,11],[104,14,78,12,"failOffsetX"],[104,25,78,23],[104,30,78,28,"undefined"],[104,39,78,37],[104,41,78,39],[105,6,79,4],[105,13,79,11,"res"],[105,16,79,14],[105,17,79,15,"failOffsetX"],[105,28,79,26],[106,6,81,4],[106,10,81,8,"Array"],[106,15,81,13],[106,16,81,14,"isArray"],[106,23,81,21],[106,24,81,22,"props"],[106,29,81,27],[106,30,81,28,"failOffsetX"],[106,41,81,39],[106,42,81,40],[106,44,81,42],[107,8,82,6,"res"],[107,11,82,9],[107,12,82,10,"failOffsetXStart"],[107,28,82,26],[107,31,82,29,"props"],[107,36,82,34],[107,37,82,35,"failOffsetX"],[107,48,82,46],[107,49,82,47],[107,50,82,48],[107,51,82,49],[108,8,83,6,"res"],[108,11,83,9],[108,12,83,10,"failOffsetXEnd"],[108,26,83,24],[108,29,83,27,"props"],[108,34,83,32],[108,35,83,33,"failOffsetX"],[108,46,83,44],[108,47,83,45],[108,48,83,46],[108,49,83,47],[109,6,84,4],[109,7,84,5],[109,13,84,11],[109,17,84,15,"props"],[109,22,84,20],[109,23,84,21,"failOffsetX"],[109,34,84,32],[109,37,84,35],[109,38,84,36],[109,40,84,38],[110,8,85,6,"res"],[110,11,85,9],[110,12,85,10,"failOffsetXStart"],[110,28,85,26],[110,31,85,29,"props"],[110,36,85,34],[110,37,85,35,"failOffsetX"],[110,48,85,46],[111,6,86,4],[111,7,86,5],[111,13,86,11],[112,8,87,6,"res"],[112,11,87,9],[112,12,87,10,"failOffsetXEnd"],[112,26,87,24],[112,29,87,27,"props"],[112,34,87,32],[112,35,87,33,"failOffsetX"],[112,46,87,44],[113,6,88,4],[114,4,89,2],[115,4,91,2],[115,8,91,6,"props"],[115,13,91,11],[115,14,91,12,"failOffsetY"],[115,25,91,23],[115,30,91,28,"undefined"],[115,39,91,37],[115,41,91,39],[116,6,92,4],[116,13,92,11,"res"],[116,16,92,14],[116,17,92,15,"failOffsetY"],[116,28,92,26],[117,6,94,4],[117,10,94,8,"Array"],[117,15,94,13],[117,16,94,14,"isArray"],[117,23,94,21],[117,24,94,22,"props"],[117,29,94,27],[117,30,94,28,"failOffsetY"],[117,41,94,39],[117,42,94,40],[117,44,94,42],[118,8,95,6,"res"],[118,11,95,9],[118,12,95,10,"failOffsetYStart"],[118,28,95,26],[118,31,95,29,"props"],[118,36,95,34],[118,37,95,35,"failOffsetY"],[118,48,95,46],[118,49,95,47],[118,50,95,48],[118,51,95,49],[119,8,96,6,"res"],[119,11,96,9],[119,12,96,10,"failOffsetYEnd"],[119,26,96,24],[119,29,96,27,"props"],[119,34,96,32],[119,35,96,33,"failOffsetY"],[119,46,96,44],[119,47,96,45],[119,48,96,46],[119,49,96,47],[120,6,97,4],[120,7,97,5],[120,13,97,11],[120,17,97,15,"props"],[120,22,97,20],[120,23,97,21,"failOffsetY"],[120,34,97,32],[120,37,97,35],[120,38,97,36],[120,40,97,38],[121,8,98,6,"res"],[121,11,98,9],[121,12,98,10,"failOffsetYStart"],[121,28,98,26],[121,31,98,29,"props"],[121,36,98,34],[121,37,98,35,"failOffsetY"],[121,48,98,46],[122,6,99,4],[122,7,99,5],[122,13,99,11],[123,8,100,6,"res"],[123,11,100,9],[123,12,100,10,"failOffsetYEnd"],[123,26,100,24],[123,29,100,27,"props"],[123,34,100,32],[123,35,100,33,"failOffsetY"],[123,46,100,44],[124,6,101,4],[125,4,102,2],[126,4,104,2],[126,11,104,9,"res"],[126,14,104,12],[127,2,105,0],[128,2,107,7],[128,11,107,16,"managePanProps"],[128,25,107,30,"managePanProps"],[128,26,107,31,"props"],[128,31,107,36],[128,33,107,38],[129,4,108,2],[129,8,108,6,"__DEV__"],[129,15,108,13],[129,17,108,15],[130,6,109,4,"validatePanGestureHandlerProps"],[130,36,109,34],[130,37,109,35,"props"],[130,42,109,40],[130,43,109,41],[131,4,110,2],[132,4,112,2],[132,11,112,9,"transformPanGestureHandlerProps"],[132,42,112,40],[132,43,112,41,"props"],[132,48,112,46],[132,49,112,47],[133,2,113,0],[134,0,113,1],[134,3]],"functionMap":{"names":["<global>","validatePanGestureHandlerProps","transformPanGestureHandlerProps","managePanProps"],"mappings":"AAA;ACqB;CDwB;AEE;CFyD;OGE;CHM"},"hasCjsExports":false},"type":"js/module"}]}