{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":37},"end":{"line":2,"column":108,"index":145}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":146},"end":{"line":3,"column":62,"index":208}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":209},"end":{"line":4,"column":80,"index":289}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":290},"end":{"line":5,"column":33,"index":323}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _constants = require(_dependencyMap[1], \"./constants\");\n  var _DraggingGestureHandler = require(_dependencyMap[2], \"./DraggingGestureHandler\");\n  var DraggingGestureHandler = _interopDefault(_DraggingGestureHandler);\n  var _utils = require(_dependencyMap[3], \"./utils\");\n  var _State = require(_dependencyMap[4], \"../State\");\n  class PanGestureHandler extends DraggingGestureHandler.default {\n    get name() {\n      return 'pan';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Pan;\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        direction: this.getDirection()\n      });\n    }\n    getState(type) {\n      const nextState = super.getState(type); // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n      return nextState;\n    }\n    getDirection() {\n      const config = this.getConfig();\n      const {\n        activeOffsetXStart,\n        activeOffsetXEnd,\n        activeOffsetYStart,\n        activeOffsetYEnd,\n        minDist\n      } = config;\n      let directions = [];\n      let horizontalDirections = [];\n      if (!(0, _utils.isnan)(minDist)) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      if (!(0, _utils.isnan)(activeOffsetXStart)) {\n        horizontalDirections.push(Hammer.default.DIRECTION_LEFT);\n      }\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) {\n        horizontalDirections.push(Hammer.default.DIRECTION_RIGHT);\n      }\n      if (horizontalDirections.length === 2) {\n        horizontalDirections = [Hammer.default.DIRECTION_HORIZONTAL];\n      }\n      directions = directions.concat(horizontalDirections);\n      let verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) {\n        verticalDirections.push(Hammer.default.DIRECTION_UP);\n      }\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) {\n        verticalDirections.push(Hammer.default.DIRECTION_DOWN);\n      }\n      if (verticalDirections.length === 2) {\n        verticalDirections = [Hammer.default.DIRECTION_VERTICAL];\n      }\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return Hammer.default.DIRECTION_NONE;\n      }\n      if (directions[0] === Hammer.default.DIRECTION_HORIZONTAL && directions[1] === Hammer.default.DIRECTION_VERTICAL) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return Hammer.default.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    shouldFailUnderCustomCriteria({\n      deltaX,\n      deltaY\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n    shouldActivateUnderCustomCriteria({\n      deltaX,\n      deltaY,\n      velocity\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n    shouldMultiFingerPanFail({\n      pointerLength,\n      scale,\n      deltaRotation\n    }) {\n      if (pointerLength <= 1) {\n        return false;\n      } // Test if the pan had too much pinching or rotating.\n\n      const deltaScale = Math.abs(scale - 1);\n      const absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      return false;\n    }\n    updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n    isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      const velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }\n  var _default = PanGestureHandler;\n});","lineCount":177,"map":[[12,2,193,0,"Object"],[12,8,193,0],[12,9,193,0,"defineProperty"],[12,23,193,0],[12,24,193,0,"exports"],[12,31,193,0],[13,4,193,0,"enumerable"],[13,14,193,0],[14,4,193,0,"get"],[14,7,193,0],[14,18,193,0,"get"],[14,19,193,0],[15,6,193,0],[15,13,193,0,"_default"],[15,21,193,0],[16,4,193,0],[17,2,193,0],[18,2,1,0],[18,6,1,0,"_egjsHammerjs"],[18,19,1,0],[18,22,1,0,"require"],[18,29,1,0],[18,30,1,0,"_dependencyMap"],[18,44,1,0],[19,2,1,0],[19,6,1,0,"Hammer"],[19,12,1,0],[19,15,1,0,"_interopDefault"],[19,30,1,0],[19,31,1,0,"_egjsHammerjs"],[19,44,1,0],[20,2,2,0],[20,6,2,0,"_constants"],[20,16,2,0],[20,19,2,0,"require"],[20,26,2,0],[20,27,2,0,"_dependencyMap"],[20,41,2,0],[21,2,3,0],[21,6,3,0,"_DraggingGestureHandler"],[21,29,3,0],[21,32,3,0,"require"],[21,39,3,0],[21,40,3,0,"_dependencyMap"],[21,54,3,0],[22,2,3,0],[22,6,3,0,"DraggingGestureHandler"],[22,28,3,0],[22,31,3,0,"_interopDefault"],[22,46,3,0],[22,47,3,0,"_DraggingGestureHandler"],[22,70,3,0],[23,2,4,0],[23,6,4,0,"_utils"],[23,12,4,0],[23,15,4,0,"require"],[23,22,4,0],[23,23,4,0,"_dependencyMap"],[23,37,4,0],[24,2,5,0],[24,6,5,0,"_State"],[24,12,5,0],[24,15,5,0,"require"],[24,22,5,0],[24,23,5,0,"_dependencyMap"],[24,37,5,0],[25,2,7,0],[25,8,7,6,"PanGestureHandler"],[25,25,7,23],[25,34,7,32,"DraggingGestureHandler"],[25,56,7,54],[25,57,7,54,"default"],[25,64,7,54],[25,65,7,55],[26,4,8,2],[26,8,8,6,"name"],[26,12,8,10,"name"],[26,13,8,10],[26,15,8,13],[27,6,9,4],[27,13,9,11],[27,18,9,16],[28,4,10,2],[29,4,12,2],[29,8,12,6,"NativeGestureClass"],[29,26,12,24,"NativeGestureClass"],[29,27,12,24],[29,29,12,27],[30,6,13,4],[30,13,13,11,"Hammer"],[30,19,13,17],[30,20,13,17,"default"],[30,27,13,17],[30,28,13,18,"Pan"],[30,31,13,21],[31,4,14,2],[32,4,16,2,"getHammerConfig"],[32,19,16,17,"getHammerConfig"],[32,20,16,17],[32,22,16,20],[33,6,17,4],[33,13,17,4,"Object"],[33,19,17,4],[33,20,17,4,"assign"],[33,26,17,4],[33,31,17,16],[33,36,17,21],[33,37,17,22,"getHammerConfig"],[33,52,17,37],[33,53,17,38],[33,54,17,39],[34,8,18,6,"direction"],[34,17,18,15],[34,19,18,17],[34,23,18,21],[34,24,18,22,"getDirection"],[34,36,18,34],[34,37,18,35],[35,6,18,36],[36,4,20,2],[37,4,22,2,"getState"],[37,12,22,10,"getState"],[37,13,22,11,"type"],[37,17,22,15],[37,19,22,17],[38,6,23,4],[38,12,23,10,"nextState"],[38,21,23,19],[38,24,23,22],[38,29,23,27],[38,30,23,28,"getState"],[38,38,23,36],[38,39,23,37,"type"],[38,43,23,41],[38,44,23,42],[38,45,23,43],[38,46,23,44],[40,6,25,4],[40,10,25,8],[40,14,25,12],[40,15,25,13,"previousState"],[40,28,25,26],[40,33,25,31,"State"],[40,39,25,36],[40,40,25,36,"State"],[40,45,25,36],[40,46,25,37,"UNDETERMINED"],[40,58,25,49],[40,62,25,53,"nextState"],[40,71,25,62],[40,76,25,67,"State"],[40,82,25,72],[40,83,25,72,"State"],[40,88,25,72],[40,89,25,73,"ACTIVE"],[40,95,25,79],[40,97,25,81],[41,8,26,6],[41,15,26,13,"State"],[41,21,26,18],[41,22,26,18,"State"],[41,27,26,18],[41,28,26,19,"BEGAN"],[41,33,26,24],[42,6,27,4],[43,6,29,4],[43,13,29,11,"nextState"],[43,22,29,20],[44,4,30,2],[45,4,32,2,"getDirection"],[45,16,32,14,"getDirection"],[45,17,32,14],[45,19,32,17],[46,6,33,4],[46,12,33,10,"config"],[46,18,33,16],[46,21,33,19],[46,25,33,23],[46,26,33,24,"getConfig"],[46,35,33,33],[46,36,33,34],[46,37,33,35],[47,6,34,4],[47,12,34,10],[48,8,35,6,"activeOffsetXStart"],[48,26,35,24],[49,8,36,6,"activeOffsetXEnd"],[49,24,36,22],[50,8,37,6,"activeOffsetYStart"],[50,26,37,24],[51,8,38,6,"activeOffsetYEnd"],[51,24,38,22],[52,8,39,6,"minDist"],[53,6,40,4],[53,7,40,5],[53,10,40,8,"config"],[53,16,40,14],[54,6,41,4],[54,10,41,8,"directions"],[54,20,41,18],[54,23,41,21],[54,25,41,23],[55,6,42,4],[55,10,42,8,"horizontalDirections"],[55,30,42,28],[55,33,42,31],[55,35,42,33],[56,6,44,4],[56,10,44,8],[56,11,44,9],[56,15,44,9,"isnan"],[56,21,44,14],[56,22,44,14,"isnan"],[56,27,44,14],[56,29,44,15,"minDist"],[56,36,44,22],[56,37,44,23],[56,39,44,25],[57,8,45,6],[57,15,45,13,"Hammer"],[57,21,45,19],[57,22,45,19,"default"],[57,29,45,19],[57,30,45,20,"DIRECTION_ALL"],[57,43,45,33],[58,6,46,4],[59,6,48,4],[59,10,48,8],[59,11,48,9],[59,15,48,9,"isnan"],[59,21,48,14],[59,22,48,14,"isnan"],[59,27,48,14],[59,29,48,15,"activeOffsetXStart"],[59,47,48,33],[59,48,48,34],[59,50,48,36],[60,8,49,6,"horizontalDirections"],[60,28,49,26],[60,29,49,27,"push"],[60,33,49,31],[60,34,49,32,"Hammer"],[60,40,49,38],[60,41,49,38,"default"],[60,48,49,38],[60,49,49,39,"DIRECTION_LEFT"],[60,63,49,53],[60,64,49,54],[61,6,50,4],[62,6,52,4],[62,10,52,8],[62,11,52,9],[62,15,52,9,"isnan"],[62,21,52,14],[62,22,52,14,"isnan"],[62,27,52,14],[62,29,52,15,"activeOffsetXEnd"],[62,45,52,31],[62,46,52,32],[62,48,52,34],[63,8,53,6,"horizontalDirections"],[63,28,53,26],[63,29,53,27,"push"],[63,33,53,31],[63,34,53,32,"Hammer"],[63,40,53,38],[63,41,53,38,"default"],[63,48,53,38],[63,49,53,39,"DIRECTION_RIGHT"],[63,64,53,54],[63,65,53,55],[64,6,54,4],[65,6,56,4],[65,10,56,8,"horizontalDirections"],[65,30,56,28],[65,31,56,29,"length"],[65,37,56,35],[65,42,56,40],[65,43,56,41],[65,45,56,43],[66,8,57,6,"horizontalDirections"],[66,28,57,26],[66,31,57,29],[66,32,57,30,"Hammer"],[66,38,57,36],[66,39,57,36,"default"],[66,46,57,36],[66,47,57,37,"DIRECTION_HORIZONTAL"],[66,67,57,57],[66,68,57,58],[67,6,58,4],[68,6,60,4,"directions"],[68,16,60,14],[68,19,60,17,"directions"],[68,29,60,27],[68,30,60,28,"concat"],[68,36,60,34],[68,37,60,35,"horizontalDirections"],[68,57,60,55],[68,58,60,56],[69,6,61,4],[69,10,61,8,"verticalDirections"],[69,28,61,26],[69,31,61,29],[69,33,61,31],[70,6,63,4],[70,10,63,8],[70,11,63,9],[70,15,63,9,"isnan"],[70,21,63,14],[70,22,63,14,"isnan"],[70,27,63,14],[70,29,63,15,"activeOffsetYStart"],[70,47,63,33],[70,48,63,34],[70,50,63,36],[71,8,64,6,"verticalDirections"],[71,26,64,24],[71,27,64,25,"push"],[71,31,64,29],[71,32,64,30,"Hammer"],[71,38,64,36],[71,39,64,36,"default"],[71,46,64,36],[71,47,64,37,"DIRECTION_UP"],[71,59,64,49],[71,60,64,50],[72,6,65,4],[73,6,67,4],[73,10,67,8],[73,11,67,9],[73,15,67,9,"isnan"],[73,21,67,14],[73,22,67,14,"isnan"],[73,27,67,14],[73,29,67,15,"activeOffsetYEnd"],[73,45,67,31],[73,46,67,32],[73,48,67,34],[74,8,68,6,"verticalDirections"],[74,26,68,24],[74,27,68,25,"push"],[74,31,68,29],[74,32,68,30,"Hammer"],[74,38,68,36],[74,39,68,36,"default"],[74,46,68,36],[74,47,68,37,"DIRECTION_DOWN"],[74,61,68,51],[74,62,68,52],[75,6,69,4],[76,6,71,4],[76,10,71,8,"verticalDirections"],[76,28,71,26],[76,29,71,27,"length"],[76,35,71,33],[76,40,71,38],[76,41,71,39],[76,43,71,41],[77,8,72,6,"verticalDirections"],[77,26,72,24],[77,29,72,27],[77,30,72,28,"Hammer"],[77,36,72,34],[77,37,72,34,"default"],[77,44,72,34],[77,45,72,35,"DIRECTION_VERTICAL"],[77,63,72,53],[77,64,72,54],[78,6,73,4],[79,6,75,4,"directions"],[79,16,75,14],[79,19,75,17,"directions"],[79,29,75,27],[79,30,75,28,"concat"],[79,36,75,34],[79,37,75,35,"verticalDirections"],[79,55,75,53],[79,56,75,54],[80,6,77,4],[80,10,77,8],[80,11,77,9,"directions"],[80,21,77,19],[80,22,77,20,"length"],[80,28,77,26],[80,30,77,28],[81,8,78,6],[81,15,78,13,"Hammer"],[81,21,78,19],[81,22,78,19,"default"],[81,29,78,19],[81,30,78,20,"DIRECTION_NONE"],[81,44,78,34],[82,6,79,4],[83,6,81,4],[83,10,81,8,"directions"],[83,20,81,18],[83,21,81,19],[83,22,81,20],[83,23,81,21],[83,28,81,26,"Hammer"],[83,34,81,32],[83,35,81,32,"default"],[83,42,81,32],[83,43,81,33,"DIRECTION_HORIZONTAL"],[83,63,81,53],[83,67,81,57,"directions"],[83,77,81,67],[83,78,81,68],[83,79,81,69],[83,80,81,70],[83,85,81,75,"Hammer"],[83,91,81,81],[83,92,81,81,"default"],[83,99,81,81],[83,100,81,82,"DIRECTION_VERTICAL"],[83,118,81,100],[83,120,81,102],[84,8,82,6],[84,15,82,13,"Hammer"],[84,21,82,19],[84,22,82,19,"default"],[84,29,82,19],[84,30,82,20,"DIRECTION_ALL"],[84,43,82,33],[85,6,83,4],[86,6,85,4],[86,10,85,8,"horizontalDirections"],[86,30,85,28],[86,31,85,29,"length"],[86,37,85,35],[86,41,85,39,"verticalDirections"],[86,59,85,57],[86,60,85,58,"length"],[86,66,85,64],[86,68,85,66],[87,8,86,6],[87,15,86,13,"Hammer"],[87,21,86,19],[87,22,86,19,"default"],[87,29,86,19],[87,30,86,20,"DIRECTION_ALL"],[87,43,86,33],[88,6,87,4],[89,6,89,4],[89,13,89,11,"directions"],[89,23,89,21],[89,24,89,22],[89,25,89,23],[89,26,89,24],[90,4,90,2],[91,4,92,2,"getConfig"],[91,13,92,11,"getConfig"],[91,14,92,11],[91,16,92,14],[92,6,93,4],[92,10,93,8],[92,11,93,9],[92,15,93,13],[92,16,93,14,"hasCustomActivationCriteria"],[92,43,93,41],[92,45,93,43],[93,8,94,6],[94,8,95,6],[95,8,96,6],[95,15,96,13],[96,10,97,8,"minDistSq"],[96,19,97,17],[96,21,97,19],[97,8,98,6],[97,9,98,7],[98,6,99,4],[99,6,101,4],[99,13,101,11],[99,17,101,15],[99,18,101,16,"config"],[99,24,101,22],[100,4,102,2],[101,4,104,2,"shouldFailUnderCustomCriteria"],[101,33,104,31,"shouldFailUnderCustomCriteria"],[101,34,104,32],[102,6,105,4,"deltaX"],[102,12,105,10],[103,6,106,4,"deltaY"],[104,4,107,2],[104,5,107,3],[104,7,107,5,"criteria"],[104,15,107,13],[104,17,107,15],[105,6,108,4],[105,13,108,11],[105,14,108,12],[105,18,108,12,"isnan"],[105,24,108,17],[105,25,108,17,"isnan"],[105,30,108,17],[105,32,108,18,"criteria"],[105,40,108,26],[105,41,108,27,"failOffsetXStart"],[105,57,108,43],[105,58,108,44],[105,62,108,48,"deltaX"],[105,68,108,54],[105,71,108,57,"criteria"],[105,79,108,65],[105,80,108,66,"failOffsetXStart"],[105,96,108,82],[105,100,108,86],[105,101,108,87],[105,105,108,87,"isnan"],[105,111,108,92],[105,112,108,92,"isnan"],[105,117,108,92],[105,119,108,93,"criteria"],[105,127,108,101],[105,128,108,102,"failOffsetXEnd"],[105,142,108,116],[105,143,108,117],[105,147,108,121,"deltaX"],[105,153,108,127],[105,156,108,130,"criteria"],[105,164,108,138],[105,165,108,139,"failOffsetXEnd"],[105,179,108,153],[105,183,108,157],[105,184,108,158],[105,188,108,158,"isnan"],[105,194,108,163],[105,195,108,163,"isnan"],[105,200,108,163],[105,202,108,164,"criteria"],[105,210,108,172],[105,211,108,173,"failOffsetYStart"],[105,227,108,189],[105,228,108,190],[105,232,108,194,"deltaY"],[105,238,108,200],[105,241,108,203,"criteria"],[105,249,108,211],[105,250,108,212,"failOffsetYStart"],[105,266,108,228],[105,270,108,232],[105,271,108,233],[105,275,108,233,"isnan"],[105,281,108,238],[105,282,108,238,"isnan"],[105,287,108,238],[105,289,108,239,"criteria"],[105,297,108,247],[105,298,108,248,"failOffsetYEnd"],[105,312,108,262],[105,313,108,263],[105,317,108,267,"deltaY"],[105,323,108,273],[105,326,108,276,"criteria"],[105,334,108,284],[105,335,108,285,"failOffsetYEnd"],[105,349,108,299],[106,4,109,2],[107,4,111,2,"shouldActivateUnderCustomCriteria"],[107,37,111,35,"shouldActivateUnderCustomCriteria"],[107,38,111,36],[108,6,112,4,"deltaX"],[108,12,112,10],[109,6,113,4,"deltaY"],[109,12,113,10],[110,6,114,4,"velocity"],[111,4,115,2],[111,5,115,3],[111,7,115,5,"criteria"],[111,15,115,13],[111,17,115,15],[112,6,116,4],[112,13,116,11],[112,14,116,12],[112,18,116,12,"isnan"],[112,24,116,17],[112,25,116,17,"isnan"],[112,30,116,17],[112,32,116,18,"criteria"],[112,40,116,26],[112,41,116,27,"activeOffsetXStart"],[112,59,116,45],[112,60,116,46],[112,64,116,50,"deltaX"],[112,70,116,56],[112,73,116,59,"criteria"],[112,81,116,67],[112,82,116,68,"activeOffsetXStart"],[112,100,116,86],[112,104,116,90],[112,105,116,91],[112,109,116,91,"isnan"],[112,115,116,96],[112,116,116,96,"isnan"],[112,121,116,96],[112,123,116,97,"criteria"],[112,131,116,105],[112,132,116,106,"activeOffsetXEnd"],[112,148,116,122],[112,149,116,123],[112,153,116,127,"deltaX"],[112,159,116,133],[112,162,116,136,"criteria"],[112,170,116,144],[112,171,116,145,"activeOffsetXEnd"],[112,187,116,161],[112,191,116,165],[112,192,116,166],[112,196,116,166,"isnan"],[112,202,116,171],[112,203,116,171,"isnan"],[112,208,116,171],[112,210,116,172,"criteria"],[112,218,116,180],[112,219,116,181,"activeOffsetYStart"],[112,237,116,199],[112,238,116,200],[112,242,116,204,"deltaY"],[112,248,116,210],[112,251,116,213,"criteria"],[112,259,116,221],[112,260,116,222,"activeOffsetYStart"],[112,278,116,240],[112,282,116,244],[112,283,116,245],[112,287,116,245,"isnan"],[112,293,116,250],[112,294,116,250,"isnan"],[112,299,116,250],[112,301,116,251,"criteria"],[112,309,116,259],[112,310,116,260,"activeOffsetYEnd"],[112,326,116,276],[112,327,116,277],[112,331,116,281,"deltaY"],[112,337,116,287],[112,340,116,290,"criteria"],[112,348,116,298],[112,349,116,299,"activeOffsetYEnd"],[112,365,116,315],[112,369,116,319],[112,373,116,319,"TEST_MIN_IF_NOT_NAN"],[112,379,116,338],[112,380,116,338,"TEST_MIN_IF_NOT_NAN"],[112,399,116,338],[112,401,116,339],[112,405,116,339,"VEC_LEN_SQ"],[112,411,116,349],[112,412,116,349,"VEC_LEN_SQ"],[112,422,116,349],[112,424,116,350],[113,8,117,6,"x"],[113,9,117,7],[113,11,117,9,"deltaX"],[113,17,117,15],[114,8,118,6,"y"],[114,9,118,7],[114,11,118,9,"deltaY"],[115,6,119,4],[115,7,119,5],[115,8,119,6],[115,10,119,8,"criteria"],[115,18,119,16],[115,19,119,17,"minDistSq"],[115,28,119,26],[115,29,119,27],[115,33,119,31],[115,37,119,31,"TEST_MIN_IF_NOT_NAN"],[115,43,119,50],[115,44,119,50,"TEST_MIN_IF_NOT_NAN"],[115,63,119,50],[115,65,119,51,"velocity"],[115,73,119,59],[115,74,119,60,"x"],[115,75,119,61],[115,77,119,63,"criteria"],[115,85,119,71],[115,86,119,72,"minVelocityX"],[115,98,119,84],[115,99,119,85],[115,103,119,89],[115,107,119,89,"TEST_MIN_IF_NOT_NAN"],[115,113,119,108],[115,114,119,108,"TEST_MIN_IF_NOT_NAN"],[115,133,119,108],[115,135,119,109,"velocity"],[115,143,119,117],[115,144,119,118,"y"],[115,145,119,119],[115,147,119,121,"criteria"],[115,155,119,129],[115,156,119,130,"minVelocityY"],[115,168,119,142],[115,169,119,143],[115,173,119,147],[115,177,119,147,"TEST_MIN_IF_NOT_NAN"],[115,183,119,166],[115,184,119,166,"TEST_MIN_IF_NOT_NAN"],[115,203,119,166],[115,205,119,167],[115,209,119,167,"VEC_LEN_SQ"],[115,215,119,177],[115,216,119,177,"VEC_LEN_SQ"],[115,226,119,177],[115,228,119,178,"velocity"],[115,236,119,186],[115,237,119,187],[115,239,119,189,"criteria"],[115,247,119,197],[115,248,119,198,"minVelocitySq"],[115,261,119,211],[115,262,119,212],[116,4,120,2],[117,4,122,2,"shouldMultiFingerPanFail"],[117,28,122,26,"shouldMultiFingerPanFail"],[117,29,122,27],[118,6,123,4,"pointerLength"],[118,19,123,17],[119,6,124,4,"scale"],[119,11,124,9],[120,6,125,4,"deltaRotation"],[121,4,126,2],[121,5,126,3],[121,7,126,5],[122,6,127,4],[122,10,127,8,"pointerLength"],[122,23,127,21],[122,27,127,25],[122,28,127,26],[122,30,127,28],[123,8,128,6],[123,15,128,13],[123,20,128,18],[124,6,129,4],[124,7,129,5],[124,8,129,6],[126,6,132,4],[126,12,132,10,"deltaScale"],[126,22,132,20],[126,25,132,23,"Math"],[126,29,132,27],[126,30,132,28,"abs"],[126,33,132,31],[126,34,132,32,"scale"],[126,39,132,37],[126,42,132,40],[126,43,132,41],[126,44,132,42],[127,6,133,4],[127,12,133,10,"absDeltaRotation"],[127,28,133,26],[127,31,133,29,"Math"],[127,35,133,33],[127,36,133,34,"abs"],[127,39,133,37],[127,40,133,38,"deltaRotation"],[127,53,133,51],[127,54,133,52],[128,6,135,4],[128,10,135,8,"deltaScale"],[128,20,135,18],[128,23,135,21,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[128,33,135,57],[128,34,135,57,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[128,70,135,57],[128,72,135,59],[129,8,136,6],[130,8,137,6],[131,8,138,6],[131,15,138,13],[131,19,138,17],[132,6,139,4],[133,6,141,4],[133,10,141,8,"absDeltaRotation"],[133,26,141,24],[133,29,141,27,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[133,39,141,66],[133,40,141,66,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[133,79,141,66],[133,81,141,68],[134,8,142,6],[135,8,143,6],[136,8,144,6],[136,15,144,13],[136,19,144,17],[137,6,145,4],[138,6,147,4],[138,13,147,11],[138,18,147,16],[139,4,148,2],[140,4,150,2,"updateHasCustomActivationCriteria"],[140,37,150,35,"updateHasCustomActivationCriteria"],[140,38,150,36,"criteria"],[140,46,150,44],[140,48,150,46],[141,6,151,4],[141,13,151,11],[141,17,151,11,"isValidNumber"],[141,23,151,24],[141,24,151,24,"isValidNumber"],[141,37,151,24],[141,39,151,25,"criteria"],[141,47,151,33],[141,48,151,34,"minDistSq"],[141,57,151,43],[141,58,151,44],[141,62,151,48],[141,66,151,48,"isValidNumber"],[141,72,151,61],[141,73,151,61,"isValidNumber"],[141,86,151,61],[141,88,151,62,"criteria"],[141,96,151,70],[141,97,151,71,"minVelocityX"],[141,109,151,83],[141,110,151,84],[141,114,151,88],[141,118,151,88,"isValidNumber"],[141,124,151,101],[141,125,151,101,"isValidNumber"],[141,138,151,101],[141,140,151,102,"criteria"],[141,148,151,110],[141,149,151,111,"minVelocityY"],[141,161,151,123],[141,162,151,124],[141,166,151,128],[141,170,151,128,"isValidNumber"],[141,176,151,141],[141,177,151,141,"isValidNumber"],[141,190,151,141],[141,192,151,142,"criteria"],[141,200,151,150],[141,201,151,151,"minVelocitySq"],[141,214,151,164],[141,215,151,165],[141,219,151,169],[141,223,151,169,"isValidNumber"],[141,229,151,182],[141,230,151,182,"isValidNumber"],[141,243,151,182],[141,245,151,183,"criteria"],[141,253,151,191],[141,254,151,192,"activeOffsetXStart"],[141,272,151,210],[141,273,151,211],[141,277,151,215],[141,281,151,215,"isValidNumber"],[141,287,151,228],[141,288,151,228,"isValidNumber"],[141,301,151,228],[141,303,151,229,"criteria"],[141,311,151,237],[141,312,151,238,"activeOffsetXEnd"],[141,328,151,254],[141,329,151,255],[141,333,151,259],[141,337,151,259,"isValidNumber"],[141,343,151,272],[141,344,151,272,"isValidNumber"],[141,357,151,272],[141,359,151,273,"criteria"],[141,367,151,281],[141,368,151,282,"activeOffsetYStart"],[141,386,151,300],[141,387,151,301],[141,391,151,305],[141,395,151,305,"isValidNumber"],[141,401,151,318],[141,402,151,318,"isValidNumber"],[141,415,151,318],[141,417,151,319,"criteria"],[141,425,151,327],[141,426,151,328,"activeOffsetYEnd"],[141,442,151,344],[141,443,151,345],[142,4,152,2],[143,4,154,2,"isGestureEnabledForEvent"],[143,28,154,26,"isGestureEnabledForEvent"],[143,29,154,27,"props"],[143,34,154,32],[143,36,154,34,"_recognizer"],[143,47,154,45],[143,49,154,47,"inputData"],[143,58,154,56],[143,60,154,58],[144,6,155,4],[144,10,155,8],[144,14,155,12],[144,15,155,13,"shouldFailUnderCustomCriteria"],[144,44,155,42],[144,45,155,43,"inputData"],[144,54,155,52],[144,56,155,54,"props"],[144,61,155,59],[144,62,155,60],[144,64,155,62],[145,8,156,6],[145,15,156,13],[146,10,157,8,"failed"],[146,16,157,14],[146,18,157,16],[147,8,158,6],[147,9,158,7],[148,6,159,4],[149,6,161,4],[149,12,161,10,"velocity"],[149,20,161,18],[149,23,161,21],[150,8,162,6,"x"],[150,9,162,7],[150,11,162,9,"inputData"],[150,20,162,18],[150,21,162,19,"velocityX"],[150,30,162,28],[151,8,163,6,"y"],[151,9,163,7],[151,11,163,9,"inputData"],[151,20,163,18],[151,21,163,19,"velocityY"],[152,6,164,4],[152,7,164,5],[153,6,166,4],[153,10,166,8],[153,14,166,12],[153,15,166,13,"hasCustomActivationCriteria"],[153,42,166,40],[153,46,166,44],[153,50,166,48],[153,51,166,49,"shouldActivateUnderCustomCriteria"],[153,84,166,82],[153,85,166,83],[154,8,167,6,"deltaX"],[154,14,167,12],[154,16,167,14,"inputData"],[154,25,167,23],[154,26,167,24,"deltaX"],[154,32,167,30],[155,8,168,6,"deltaY"],[155,14,168,12],[155,16,168,14,"inputData"],[155,25,168,23],[155,26,168,24,"deltaY"],[155,32,168,30],[156,8,169,6,"velocity"],[157,6,170,4],[157,7,170,5],[157,9,170,7,"props"],[157,14,170,12],[157,15,170,13],[157,17,170,15],[158,8,171,6],[158,12,171,10],[158,16,171,14],[158,17,171,15,"shouldMultiFingerPanFail"],[158,41,171,39],[158,42,171,40],[159,10,172,8,"pointerLength"],[159,23,172,21],[159,25,172,23,"inputData"],[159,34,172,32],[159,35,172,33,"maxPointers"],[159,46,172,44],[160,10,173,8,"scale"],[160,15,173,13],[160,17,173,15,"inputData"],[160,26,173,24],[160,27,173,25,"scale"],[160,32,173,30],[161,10,174,8,"deltaRotation"],[161,23,174,21],[161,25,174,23,"inputData"],[161,34,174,32],[161,35,174,33,"deltaRotation"],[162,8,175,6],[162,9,175,7],[162,10,175,8],[162,12,175,10],[163,10,176,8],[163,17,176,15],[164,12,177,10,"failed"],[164,18,177,16],[164,20,177,18],[165,10,178,8],[165,11,178,9],[166,8,179,6],[167,8,181,6],[167,15,181,13],[168,10,182,8,"success"],[168,17,182,15],[168,19,182,17],[169,8,183,6],[169,9,183,7],[170,6,184,4],[171,6,186,4],[171,13,186,11],[172,8,187,6,"success"],[172,15,187,13],[172,17,187,15],[173,6,188,4],[173,7,188,5],[174,4,189,2],[175,2,191,0],[176,2,193,0],[176,6,193,0,"_default"],[176,14,193,0],[176,17,193,15,"PanGestureHandler"],[176,34,193,32],[177,0,193,33],[177,3]],"functionMap":{"names":["<global>","PanGestureHandler","get__name","get__NativeGestureClass","getHammerConfig","getState","getDirection","getConfig","shouldFailUnderCustomCriteria","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","updateHasCustomActivationCriteria","isGestureEnabledForEvent"],"mappings":"AAA;ACM;ECC;GDE;EEE;GFE;EGE;GHI;EIE;GJQ;EKE;GL0D;EME;GNU;EOE;GPK;EQE;GRS;ESE;GT0B;EUE;GVE;EWE;GXmC;CDE"},"hasCjsExports":false},"type":"js/module"}]}