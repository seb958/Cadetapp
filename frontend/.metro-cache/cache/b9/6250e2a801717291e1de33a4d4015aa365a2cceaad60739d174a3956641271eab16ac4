{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":875},"end":{"line":34,"column":64,"index":939}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":940},"end":{"line":35,"column":77,"index":1017}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/createHandler.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNative = require(_dependencyMap[5], \"react-native\");\n  var _customDirectEventTypes = require(_dependencyMap[6], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = require(_dependencyMap[7], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[8], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[9], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[10], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[11], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[12], \"../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[13], \"../utils\");\n  var _ActionType = require(_dependencyMap[14], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[15], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[16], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[17], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[18], \"../mountRegistry\");\n  var _reactJsxDevRuntime = require(_dependencyMap[19], \"react/jsx-dev-runtime\");\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants') ?? UIManagerAny.getConstants?.();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck.default)(this, Handler);\n        _this = (0, _callSuper.default)(this, Handler, [props]);\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n          var ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits.default)(Handler, _React$Component);\n      return (0, _createClass.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n              this.setState(_ => ({\n                allowTouches\n              }));\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          if (_reactNative.Platform.OS !== 'web') {\n            (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n          }\n          RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _utils.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n          _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_PressabilityDebugView.PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 11\n            }, this));\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, _utils2.isTestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag,\n              enabled: this.props.enabled\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":450,"map":[[28,2,173,15,"Object"],[28,8,173,15],[28,9,173,15,"defineProperty"],[28,23,173,15],[28,24,173,15,"exports"],[28,31,173,15],[29,4,173,15,"enumerable"],[29,14,173,15],[30,4,173,15,"get"],[30,7,173,15],[30,18,173,15,"get"],[30,19,173,15],[31,6,173,15],[31,13,173,15,"createHandler"],[31,26,173,15],[32,4,173,15],[33,2,173,15],[34,2,575,1],[34,6,575,1,"_babelRuntimeHelpersClassCallCheck"],[34,40,575,1],[34,43,575,1,"require"],[34,50,575,1],[34,51,575,1,"_dependencyMap"],[34,65,575,1],[35,2,575,1],[35,6,575,1,"_classCallCheck"],[35,21,575,1],[35,24,575,1,"_interopDefault"],[35,39,575,1],[35,40,575,1,"_babelRuntimeHelpersClassCallCheck"],[35,74,575,1],[36,2,575,1],[36,6,575,1,"_babelRuntimeHelpersCreateClass"],[36,37,575,1],[36,40,575,1,"require"],[36,47,575,1],[36,48,575,1,"_dependencyMap"],[36,62,575,1],[37,2,575,1],[37,6,575,1,"_createClass"],[37,18,575,1],[37,21,575,1,"_interopDefault"],[37,36,575,1],[37,37,575,1,"_babelRuntimeHelpersCreateClass"],[37,68,575,1],[38,2,575,1],[38,6,575,1,"_babelRuntimeHelpersCallSuper"],[38,35,575,1],[38,38,575,1,"require"],[38,45,575,1],[38,46,575,1,"_dependencyMap"],[38,60,575,1],[39,2,575,1],[39,6,575,1,"_callSuper"],[39,16,575,1],[39,19,575,1,"_interopDefault"],[39,34,575,1],[39,35,575,1,"_babelRuntimeHelpersCallSuper"],[39,64,575,1],[40,2,575,1],[40,6,575,1,"_babelRuntimeHelpersInherits"],[40,34,575,1],[40,37,575,1,"require"],[40,44,575,1],[40,45,575,1,"_dependencyMap"],[40,59,575,1],[41,2,575,1],[41,6,575,1,"_inherits"],[41,15,575,1],[41,18,575,1,"_interopDefault"],[41,33,575,1],[41,34,575,1,"_babelRuntimeHelpersInherits"],[41,62,575,1],[42,2,1,0],[42,6,1,0,"_react"],[42,12,1,0],[42,15,1,0,"require"],[42,22,1,0],[42,23,1,0,"_dependencyMap"],[42,37,1,0],[43,2,1,0],[43,6,1,0,"React"],[43,11,1,0],[43,14,1,0,"_interopNamespace"],[43,31,1,0],[43,32,1,0,"_react"],[43,38,1,0],[44,2,2,0],[44,6,2,0,"_reactNative"],[44,18,2,0],[44,21,2,0,"require"],[44,28,2,0],[44,29,2,0,"_dependencyMap"],[44,43,2,0],[45,2,8,0],[45,6,8,0,"_customDirectEventTypes"],[45,29,8,0],[45,32,8,0,"require"],[45,39,8,0],[45,40,8,0,"_dependencyMap"],[45,54,8,0],[46,2,9,0],[46,6,9,0,"_RNGestureHandlerModule"],[46,29,9,0],[46,32,9,0,"require"],[46,39,9,0],[46,40,9,0,"_dependencyMap"],[46,54,9,0],[47,2,9,0],[47,6,9,0,"RNGestureHandlerModule"],[47,28,9,0],[47,31,9,0,"_interopDefault"],[47,46,9,0],[47,47,9,0,"_RNGestureHandlerModule"],[47,70,9,0],[48,2,10,0],[48,6,10,0,"_State"],[48,12,10,0],[48,15,10,0,"require"],[48,22,10,0],[48,23,10,0,"_dependencyMap"],[48,37,10,0],[49,2,11,0],[49,6,11,0,"_handlersRegistry"],[49,23,11,0],[49,26,11,0,"require"],[49,33,11,0],[49,34,11,0,"_dependencyMap"],[49,48,11,0],[50,2,16,0],[50,6,16,0,"_getNextHandlerTag"],[50,24,16,0],[50,27,16,0,"require"],[50,34,16,0],[50,35,16,0,"_dependencyMap"],[50,49,16,0],[51,2,23,0],[51,6,23,0,"_utils"],[51,12,23,0],[51,15,23,0,"require"],[51,22,23,0],[51,23,23,0,"_dependencyMap"],[51,37,23,0],[52,2,24,0],[52,6,24,0,"_findNodeHandle"],[52,21,24,0],[52,24,24,0,"require"],[52,31,24,0],[52,32,24,0,"_dependencyMap"],[52,46,24,0],[53,2,24,0],[53,6,24,0,"findNodeHandle"],[53,20,24,0],[53,23,24,0,"_interopDefault"],[53,38,24,0],[53,39,24,0,"_findNodeHandle"],[53,54,24,0],[54,2,26,0],[54,6,26,0,"_utils2"],[54,13,26,0],[54,16,26,0,"require"],[54,23,26,0],[54,24,26,0,"_dependencyMap"],[54,38,26,0],[55,2,33,0],[55,6,33,0,"_ActionType"],[55,17,33,0],[55,20,33,0,"require"],[55,27,33,0],[55,28,33,0,"_dependencyMap"],[55,42,33,0],[56,2,34,0],[56,6,34,0,"_PressabilityDebugView"],[56,28,34,0],[56,31,34,0,"require"],[56,38,34,0],[56,39,34,0,"_dependencyMap"],[56,53,34,0],[57,2,35,0],[57,6,35,0,"_GestureHandlerRootViewContext"],[57,36,35,0],[57,39,35,0,"require"],[57,46,35,0],[57,47,35,0,"_dependencyMap"],[57,61,35,0],[58,2,35,0],[58,6,35,0,"GestureHandlerRootViewContext"],[58,35,35,0],[58,38,35,0,"_interopDefault"],[58,53,35,0],[58,54,35,0,"_GestureHandlerRootViewContext"],[58,84,35,0],[59,2,36,0],[59,6,36,0,"_ghQueueMicrotask"],[59,23,36,0],[59,26,36,0,"require"],[59,33,36,0],[59,34,36,0,"_dependencyMap"],[59,48,36,0],[60,2,37,0],[60,6,37,0,"_mountRegistry"],[60,20,37,0],[60,23,37,0,"require"],[60,30,37,0],[60,31,37,0,"_dependencyMap"],[60,45,37,0],[61,2,37,49],[61,6,37,49,"_reactJsxDevRuntime"],[61,25,37,49],[61,28,37,49,"require"],[61,35,37,49],[61,36,37,49,"_dependencyMap"],[61,50,37,49],[62,2,40,0],[62,6,40,6,"UIManagerAny"],[62,18,40,18],[62,21,40,21,"UIManager"],[62,33,40,30],[62,34,40,30,"UIManager"],[62,43,40,37],[63,2,42,0,"customDirectEventTypes"],[63,25,42,22],[63,26,42,22,"customDirectEventTypes"],[63,48,42,22],[63,49,42,23,"topGestureHandlerEvent"],[63,71,42,45],[63,74,42,48],[64,4,43,2,"registrationName"],[64,20,43,18],[64,22,43,20],[65,2,44,0],[65,3,44,1],[66,2,46,0],[66,6,46,6,"customGHEventsConfigFabricAndroid"],[66,39,46,39],[66,42,46,42],[67,4,47,2,"topOnGestureHandlerEvent"],[67,28,47,26],[67,30,47,28],[68,6,47,30,"registrationName"],[68,22,47,46],[68,24,47,48],[69,4,47,72],[69,5,47,73],[70,4,48,2,"topOnGestureHandlerStateChange"],[70,34,48,32],[70,36,48,34],[71,6,49,4,"registrationName"],[71,22,49,20],[71,24,49,22],[72,4,50,2],[73,2,51,0],[73,3,51,1],[74,2,53,0],[74,6,53,6,"customGHEventsConfig"],[74,26,53,26],[74,29,53,29],[75,4,54,2,"onGestureHandlerEvent"],[75,25,54,23],[75,27,54,25],[76,6,54,27,"registrationName"],[76,22,54,43],[76,24,54,45],[77,4,54,69],[77,5,54,70],[78,4,55,2,"onGestureHandlerStateChange"],[78,31,55,29],[78,33,55,31],[79,6,56,4,"registrationName"],[79,22,56,20],[79,24,56,22],[80,4,57,2],[80,5,57,3],[81,4,59,2],[82,4,60,2],[83,4,61,2],[84,4,62,2],[85,4,63,2],[86,4,64,2],[87,4,65,2],[88,4,66,2],[89,4,67,2],[89,8,67,6],[89,12,67,6,"isFabric"],[89,19,67,14],[89,20,67,14,"isFabric"],[89,28,67,14],[89,30,67,15],[89,31,67,16],[89,35,68,4,"Platform"],[89,47,68,12],[89,48,68,12,"Platform"],[89,56,68,12],[89,57,68,13,"OS"],[89,59,68,15],[89,64,68,20],[89,73,68,29],[89,77,69,4,"customGHEventsConfigFabricAndroid"],[89,110,69,37],[90,2,70,0],[90,3,70,1],[92,2,72,0],[93,2,73,0],[94,2,74,0],[95,2,75,0],[96,2,76,0,"UIManagerAny"],[96,14,76,12],[96,15,76,13,"genericDirectEventTypes"],[96,38,76,36],[96,41,76,39],[97,4,77,2],[97,7,77,5,"UIManagerAny"],[97,19,77,17],[97,20,77,18,"genericDirectEventTypes"],[97,43,77,41],[98,4,78,2],[98,7,78,5,"customGHEventsConfig"],[99,2,79,0],[99,3,79,1],[100,2,80,0],[101,2,81,0],[102,2,82,0],[103,2,83,0],[103,6,83,6,"UIManagerConstants"],[103,24,83,24],[103,27,84,2,"UIManagerAny"],[103,39,84,14],[103,40,84,15,"getViewManagerConfig"],[103,60,84,35],[103,63,84,38],[103,77,84,52],[103,78,84,53],[103,82,85,2,"UIManagerAny"],[103,94,85,14],[103,95,85,15,"getConstants"],[103,107,85,27],[103,110,85,30],[103,111,85,31],[104,2,87,0],[104,6,87,4,"UIManagerConstants"],[104,24,87,22],[104,26,87,24],[105,4,88,2,"UIManagerConstants"],[105,22,88,20],[105,23,88,21,"genericDirectEventTypes"],[105,46,88,44],[105,49,88,47],[106,6,89,4],[106,9,89,7,"UIManagerConstants"],[106,27,89,25],[106,28,89,26,"genericDirectEventTypes"],[106,51,89,49],[107,6,90,4],[107,9,90,7,"customGHEventsConfig"],[108,4,91,2],[108,5,91,3],[109,2,92,0],[111,2,94,0],[112,2,95,0],[112,6,95,0,"_UIManagerAny$setJSRe"],[112,27,95,0],[112,30,102,4,"UIManagerAny"],[112,42,102,16],[112,43,96,2,"setJSResponder"],[112,57,96,16],[113,4,96,18,"oldSetJSResponder"],[113,21,96,35],[113,24,96,35,"_UIManagerAny$setJSRe"],[113,45,96,35],[113,59,96,38],[113,65,96,44],[114,6,97,4],[115,4,97,4],[115,5,98,3],[115,8,98,3,"_UIManagerAny$setJSRe"],[115,29,98,3],[116,4,98,3,"_UIManagerAny$clearJS"],[116,25,98,3],[116,28,102,4,"UIManagerAny"],[116,40,102,16],[116,41,99,2,"clearJSResponder"],[116,57,99,18],[117,4,99,20,"oldClearJSResponder"],[117,23,99,39],[117,26,99,39,"_UIManagerAny$clearJS"],[117,47,99,39],[117,61,99,42],[117,67,99,48],[118,6,100,4],[119,4,100,4],[119,5,101,3],[119,8,101,3,"_UIManagerAny$clearJS"],[119,29,101,3],[120,2,103,0,"UIManagerAny"],[120,14,103,12],[120,15,103,13,"setJSResponder"],[120,29,103,27],[120,32,103,30],[120,33,103,31,"tag"],[120,36,103,42],[120,38,103,44,"blockNativeResponder"],[120,58,103,73],[120,63,103,78],[121,4,104,2,"RNGestureHandlerModule"],[121,26,104,24],[121,27,104,24,"default"],[121,34,104,24],[121,35,104,25,"handleSetJSResponder"],[121,55,104,45],[121,56,104,46,"tag"],[121,59,104,49],[121,61,104,51,"blockNativeResponder"],[121,81,104,71],[121,82,104,72],[122,4,105,2,"oldSetJSResponder"],[122,21,105,19],[122,22,105,20,"tag"],[122,25,105,23],[122,27,105,25,"blockNativeResponder"],[122,47,105,45],[122,48,105,46],[123,2,106,0],[123,3,106,1],[124,2,107,0,"UIManagerAny"],[124,14,107,12],[124,15,107,13,"clearJSResponder"],[124,31,107,29],[124,34,107,32],[124,40,107,38],[125,4,108,2,"RNGestureHandlerModule"],[125,26,108,24],[125,27,108,24,"default"],[125,34,108,24],[125,35,108,25,"handleClearJSResponder"],[125,57,108,47],[125,58,108,48],[125,59,108,49],[126,4,109,2,"oldClearJSResponder"],[126,23,109,21],[126,24,109,22],[126,25,109,23],[127,2,110,0],[127,3,110,1],[128,2,112,0],[128,6,112,4,"allowTouches"],[128,18,112,16],[128,21,112,19],[128,25,112,23],[129,2,113,0],[129,6,113,6,"DEV_ON_ANDROID"],[129,20,113,20],[129,23,113,23,"__DEV__"],[129,30,113,30],[129,34,113,34,"Platform"],[129,46,113,42],[129,47,113,42,"Platform"],[129,55,113,42],[129,56,113,43,"OS"],[129,58,113,45],[129,63,113,50],[129,72,113,59],[130,2,114,0],[131,2,115,0],[132,2,116,0],[132,6,116,4,"DEV_ON_ANDROID"],[132,20,116,18],[132,22,116,20],[133,4,117,2,"DeviceEventEmitter"],[133,16,117,20],[133,17,117,20,"DeviceEventEmitter"],[133,35,117,20],[133,36,117,21,"addListener"],[133,47,117,32],[133,48,117,33],[133,72,117,57],[133,74,117,59],[133,80,117,65],[134,6,118,4,"allowTouches"],[134,18,118,16],[134,21,118,19],[134,22,118,20,"allowTouches"],[134,34,118,32],[135,4,119,2],[135,5,119,3],[135,6,119,4],[136,2,120,0],[137,2,125,0],[137,11,125,9,"hasUnresolvedRefs"],[137,28,125,26,"hasUnresolvedRefs"],[137,29,126,2,"props"],[137,34,126,24],[137,36,127,2],[138,4,128,2],[139,4,129,2],[139,8,129,8,"extract"],[139,15,129,15],[139,18,129,19,"refs"],[139,22,129,36],[139,26,129,41],[140,6,130,4],[140,10,130,8],[140,11,130,9,"Array"],[140,16,130,14],[140,17,130,15,"isArray"],[140,24,130,22],[140,25,130,23,"refs"],[140,29,130,27],[140,30,130,28],[140,32,130,30],[141,8,131,6],[141,15,131,13,"refs"],[141,19,131,17],[141,23,131,21,"refs"],[141,27,131,25],[141,28,131,26,"current"],[141,35,131,33],[141,40,131,38],[141,44,131,42],[142,6,132,4],[143,6,133,4],[143,13,133,11,"refs"],[143,17,133,15],[143,18,133,16,"some"],[143,22,133,20],[143,23,133,22,"r"],[143,24,133,23],[143,28,133,28,"r"],[143,29,133,29],[143,33,133,33,"r"],[143,34,133,34],[143,35,133,35,"current"],[143,42,133,42],[143,47,133,47],[143,51,133,51],[143,52,133,52],[144,4,134,2],[144,5,134,3],[145,4,135,2],[145,11,135,9,"extract"],[145,18,135,16],[145,19,135,17,"props"],[145,24,135,22],[145,25,135,23],[145,47,135,45],[145,48,135,46],[145,49,135,47],[145,53,135,51,"extract"],[145,60,135,58],[145,61,135,59,"props"],[145,66,135,64],[145,67,135,65],[145,76,135,74],[145,77,135,75],[145,78,135,76],[146,2,136,0],[147,2,138,0],[147,6,138,6,"stateToPropMappings"],[147,25,138,25],[147,28,138,28],[148,4,139,2],[148,5,139,3,"State"],[148,11,139,8],[148,12,139,8,"State"],[148,17,139,8],[148,18,139,9,"UNDETERMINED"],[148,30,139,21],[148,33,139,24,"undefined"],[148,42,139,33],[149,4,140,2],[149,5,140,3,"State"],[149,11,140,8],[149,12,140,8,"State"],[149,17,140,8],[149,18,140,9,"BEGAN"],[149,23,140,14],[149,26,140,17],[149,35,140,26],[150,4,141,2],[150,5,141,3,"State"],[150,11,141,8],[150,12,141,8,"State"],[150,17,141,8],[150,18,141,9,"FAILED"],[150,24,141,15],[150,27,141,18],[150,37,141,28],[151,4,142,2],[151,5,142,3,"State"],[151,11,142,8],[151,12,142,8,"State"],[151,17,142,8],[151,18,142,9,"CANCELLED"],[151,27,142,18],[151,30,142,21],[151,43,142,34],[152,4,143,2],[152,5,143,3,"State"],[152,11,143,8],[152,12,143,8,"State"],[152,17,143,8],[152,18,143,9,"ACTIVE"],[152,24,143,15],[152,27,143,18],[152,40,143,31],[153,4,144,2],[153,5,144,3,"State"],[153,11,144,8],[153,12,144,8,"State"],[153,17,144,8],[153,18,144,9,"END"],[153,21,144,12],[153,24,144,15],[154,2,145,0],[154,3,145,10],[156,2,156,0],[158,2,170,0],[158,6,170,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[158,33,170,33],[158,36,170,36],[158,37,170,37],[160,2,172,0],[161,2,173,15],[161,11,173,24,"createHandler"],[161,24,173,37,"createHandler"],[161,25,173,37,"_ref"],[161,29,173,37],[161,31,182,76],[162,4,182,76],[162,8,177,2,"name"],[162,12,177,6],[162,15,177,6,"_ref"],[162,19,177,6],[162,20,177,2,"name"],[162,24,177,6],[163,6,177,6,"_ref$allowedProps"],[163,23,177,6],[163,26,177,6,"_ref"],[163,30,177,6],[163,31,178,2,"allowedProps"],[163,43,178,14],[164,6,178,2,"allowedProps"],[164,18,178,14],[164,21,178,14,"_ref$allowedProps"],[164,38,178,14],[164,52,178,17],[164,54,178,19],[164,57,178,19,"_ref$allowedProps"],[164,74,178,19],[165,6,178,19,"_ref$config"],[165,17,178,19],[165,20,178,19,"_ref"],[165,24,178,19],[165,25,179,2,"config"],[165,31,179,8],[166,6,179,2,"config"],[166,12,179,8],[166,15,179,8,"_ref$config"],[166,26,179,8],[166,40,179,11],[166,41,179,12],[166,42,179,13],[166,45,179,13,"_ref$config"],[166,56,179,13],[167,6,180,2,"transformProps"],[167,20,180,16],[167,23,180,16,"_ref"],[167,27,180,16],[167,28,180,2,"transformProps"],[167,42,180,16],[168,6,180,16,"_ref$customNativeProp"],[168,27,180,16],[168,30,180,16,"_ref"],[168,34,180,16],[168,35,181,2,"customNativeProps"],[168,52,181,19],[169,6,181,2,"customNativeProps"],[169,23,181,19],[169,26,181,19,"_ref$customNativeProp"],[169,47,181,19],[169,61,181,22],[169,63,181,24],[169,66,181,24,"_ref$customNativeProp"],[169,87,181,24],[170,4,181,24],[170,8,186,8,"Handler"],[170,15,186,15],[170,41,186,15,"_React$Component"],[170,57,186,15],[171,6,201,4],[171,15,201,4,"Handler"],[171,23,201,16,"props"],[171,28,201,48],[171,30,201,50],[172,8,201,50],[172,12,201,50,"_this"],[172,17,201,50],[173,8,201,50],[173,12,201,50,"_classCallCheck"],[173,27,201,50],[173,28,201,50,"default"],[173,35,201,50],[173,43,201,50,"Handler"],[173,50,201,50],[174,8,202,6,"_this"],[174,13,202,6],[174,20,202,6,"_callSuper"],[174,30,202,6],[174,31,202,6,"default"],[174,38,202,6],[174,46,202,6,"Handler"],[174,53,202,6],[174,56,202,12,"props"],[174,61,202,17],[175,8,202,19,"_this"],[175,13,202,19],[175,14,284,12,"onGestureHandlerEvent"],[175,35,284,33],[175,38,284,37,"event"],[175,43,284,59],[175,47,284,64],[176,10,285,6],[176,14,285,10,"event"],[176,19,285,15],[176,20,285,16,"nativeEvent"],[176,31,285,27],[176,32,285,28,"handlerTag"],[176,42,285,38],[176,47,285,43,"_this"],[176,52,285,43],[176,53,285,48,"handlerTag"],[176,63,285,58],[176,65,285,60],[177,12,286,8],[177,16,286,12],[177,23,286,19,"_this"],[177,28,286,19],[177,29,286,24,"props"],[177,34,286,29],[177,35,286,30,"onGestureEvent"],[177,49,286,44],[177,54,286,49],[177,64,286,59],[177,66,286,61],[178,14,287,10,"_this"],[178,19,287,10],[178,20,287,15,"props"],[178,25,287,20],[178,26,287,21,"onGestureEvent"],[178,40,287,35],[178,43,287,38,"event"],[178,48,287,43],[178,49,287,44],[179,12,288,8],[180,10,289,6],[180,11,289,7],[180,17,289,13],[181,12,290,8,"_this"],[181,17,290,8],[181,18,290,13,"props"],[181,23,290,18],[181,24,290,19,"onGestureHandlerEvent"],[181,45,290,40],[181,48,290,43,"event"],[181,53,290,48],[181,54,290,49],[182,10,291,6],[183,8,292,4],[183,9,292,5],[184,8,294,4],[185,8,294,4,"_this"],[185,13,294,4],[185,14,295,12,"onGestureHandlerStateChange"],[185,41,295,39],[185,44,296,6,"event"],[185,49,296,39],[185,53,297,9],[186,10,298,6],[186,14,298,10,"event"],[186,19,298,15],[186,20,298,16,"nativeEvent"],[186,31,298,27],[186,32,298,28,"handlerTag"],[186,42,298,38],[186,47,298,43,"_this"],[186,52,298,43],[186,53,298,48,"handlerTag"],[186,63,298,58],[186,65,298,60],[187,12,299,8],[187,16,299,12],[187,23,299,19,"_this"],[187,28,299,19],[187,29,299,24,"props"],[187,34,299,29],[187,35,299,30,"onHandlerStateChange"],[187,55,299,50],[187,60,299,55],[187,70,299,65],[187,72,299,67],[188,14,300,10,"_this"],[188,19,300,10],[188,20,300,15,"props"],[188,25,300,20],[188,26,300,21,"onHandlerStateChange"],[188,46,300,41],[188,49,300,44,"event"],[188,54,300,49],[188,55,300,50],[189,12,301,8],[190,12,303,8],[190,16,303,14,"state"],[190,21,303,42],[190,24,303,45,"event"],[190,29,303,50],[190,30,303,51,"nativeEvent"],[190,41,303,62],[190,42,303,63,"state"],[190,47,303,68],[191,12,304,8],[191,16,304,14,"stateEventName"],[191,30,304,28],[191,33,304,31,"stateToPropMappings"],[191,52,304,50],[191,53,304,51,"state"],[191,58,304,56],[191,59,304,57],[192,12,305,8],[192,16,305,14,"eventHandler"],[192,28,305,26],[192,31,305,29,"stateEventName"],[192,45,305,43],[192,49,305,47,"_this"],[192,54,305,47],[192,55,305,52,"props"],[192,60,305,57],[192,61,305,58,"stateEventName"],[192,75,305,72],[192,76,305,73],[193,12,306,8],[193,16,306,12,"eventHandler"],[193,28,306,24],[193,32,306,28],[193,39,306,35,"eventHandler"],[193,51,306,47],[193,56,306,52],[193,66,306,62],[193,68,306,64],[194,14,307,10,"eventHandler"],[194,26,307,22],[194,27,307,23,"event"],[194,32,307,28],[194,33,307,29],[195,12,308,8],[196,10,309,6],[196,11,309,7],[196,17,309,13],[197,12,310,8,"_this"],[197,17,310,8],[197,18,310,13,"props"],[197,23,310,18],[197,24,310,19,"onGestureHandlerStateChange"],[197,51,310,46],[197,54,310,49,"event"],[197,59,310,54],[197,60,310,55],[198,10,311,6],[199,8,312,4],[199,9,312,5],[200,8,312,5,"_this"],[200,13,312,5],[200,14,314,12,"refHandler"],[200,24,314,22],[200,27,314,26,"node"],[200,31,314,35],[200,35,314,40],[201,10,315,6,"_this"],[201,15,315,6],[201,16,315,11,"viewNode"],[201,24,315,19],[201,27,315,22,"node"],[201,31,315,26],[202,10,317,6],[202,14,317,12,"child"],[202,19,317,17],[202,22,317,20,"React"],[202,27,317,25],[202,28,317,26,"Children"],[202,36,317,34],[202,37,317,35,"only"],[202,41,317,39],[202,42,317,40,"_this"],[202,47,317,40],[202,48,317,45,"props"],[202,53,317,50],[202,54,317,51,"children"],[202,62,317,59],[202,63,317,60],[203,10,318,6],[204,10,319,6],[205,10,320,6],[205,14,320,12,"ref"],[205,17,320,15],[205,20,320,18],[205,24,320,18,"isReact19"],[205,31,320,27],[205,32,320,27,"isReact19"],[205,41,320,27],[205,43,320,28],[205,44,320,29],[205,47,320,33,"child"],[205,52,320,38],[205,53,320,56,"props"],[205,58,320,61],[205,60,320,63,"ref"],[205,63,320,66],[205,66,320,69,"child"],[205,71,320,74],[205,73,320,76,"ref"],[205,76,320,79],[206,10,322,6],[206,14,322,10],[206,15,322,11,"ref"],[206,18,322,14],[206,20,322,16],[207,12,323,8],[208,10,324,6],[209,10,326,6],[209,14,326,10],[209,21,326,17,"ref"],[209,24,326,20],[209,29,326,25],[209,39,326,35],[209,41,326,37],[210,12,327,8,"ref"],[210,15,327,11],[210,16,327,12,"node"],[210,20,327,16],[210,21,327,17],[211,10,328,6],[211,11,328,7],[211,17,328,13],[212,12,329,8,"ref"],[212,15,329,11],[212,16,329,12,"current"],[212,23,329,19],[212,26,329,22,"node"],[212,30,329,26],[213,10,330,6],[214,8,331,4],[214,9,331,5],[215,8,331,5,"_this"],[215,13,331,5],[215,14,333,12,"createGestureHandler"],[215,34,333,32],[215,37,334,6,"newConfig"],[215,46,334,50],[215,50,335,9],[216,10,336,6,"_this"],[216,15,336,6],[216,16,336,11,"config"],[216,22,336,17],[216,25,336,20,"newConfig"],[216,34,336,29],[217,10,338,6,"RNGestureHandlerModule"],[217,32,338,28],[217,33,338,28,"default"],[217,40,338,28],[217,41,338,29,"createGestureHandler"],[217,61,338,49],[217,62,339,8,"name"],[217,66,339,12],[217,68,340,8,"_this"],[217,73,340,8],[217,74,340,13,"handlerTag"],[217,84,340,23],[217,86,341,8,"newConfig"],[217,95,342,6],[217,96,342,7],[218,8,343,4],[218,9,343,5],[219,8,343,5,"_this"],[219,13,343,5],[219,14,345,12,"attachGestureHandler"],[219,34,345,32],[219,37,345,36,"newViewTag"],[219,47,345,54],[219,51,345,59],[220,10,346,6,"_this"],[220,15,346,6],[220,16,346,11,"viewTag"],[220,23,346,18],[220,26,346,21,"newViewTag"],[220,36,346,31],[221,10,348,6],[221,14,348,10,"Platform"],[221,26,348,18],[221,27,348,18,"Platform"],[221,35,348,18],[221,36,348,19,"OS"],[221,38,348,21],[221,43,348,26],[221,48,348,31],[221,50,348,33],[222,12,349,8],[223,12,351,10,"RNGestureHandlerModule"],[223,34,351,32],[223,35,351,32,"default"],[223,42,351,32],[223,43,351,33,"attachGestureHandler"],[223,63,351,53],[223,64,353,10,"_this"],[223,69,353,10],[223,70,353,15,"handlerTag"],[223,80,353,25],[223,82,354,10,"newViewTag"],[223,92,354,20],[223,94,355,10,"ActionType"],[223,105,355,20],[223,106,355,20,"ActionType"],[223,116,355,20],[223,117,355,21,"JS_FUNCTION_OLD_API"],[223,136,355,40],[224,12,355,42],[225,12,356,10,"_this"],[225,17,356,10],[225,18,356,15,"propsRef"],[225,26,357,8],[225,27,357,9],[226,10,358,6],[226,11,358,7],[226,17,358,13],[227,12,359,8],[227,16,359,8,"registerOldGestureHandler"],[227,33,359,33],[227,34,359,33,"registerOldGestureHandler"],[227,59,359,33],[227,61,359,34,"_this"],[227,66,359,34],[227,67,359,39,"handlerTag"],[227,77,359,49],[227,79,359,51],[228,14,360,10,"onGestureEvent"],[228,28,360,24],[228,30,360,26,"_this"],[228,35,360,26],[228,36,360,31,"onGestureHandlerEvent"],[228,57,360,52],[229,14,361,10,"onGestureStateChange"],[229,34,361,30],[229,36,361,32,"_this"],[229,41,361,32],[229,42,361,37,"onGestureHandlerStateChange"],[230,12,362,8],[230,13,362,9],[230,14,362,10],[231,12,364,8],[231,16,364,14,"actionType"],[231,26,364,24],[231,29,364,27],[231,30,364,28],[231,36,364,34],[232,14,365,10],[232,18,365,16,"onGestureEvent"],[232,32,365,30],[232,35,365,33,"_this"],[232,40,365,33],[232,41,365,38,"props"],[232,46,365,43],[232,48,365,45,"onGestureEvent"],[232,62,365,59],[233,14,366,10],[233,18,366,16,"isGestureHandlerWorklet"],[233,41,366,39],[233,44,367,12,"onGestureEvent"],[233,58,367,26],[233,63,368,13],[233,72,368,22],[233,76,368,26,"onGestureEvent"],[233,90,368,40],[233,94,369,14],[233,115,369,35],[233,119,369,39,"onGestureEvent"],[233,133,369,53],[233,134,369,54],[234,14,370,10],[234,18,370,16,"onHandlerStateChange"],[234,38,370,36],[234,41,370,39,"_this"],[234,46,370,39],[234,47,370,44,"props"],[234,52,370,49],[234,54,370,51,"onHandlerStateChange"],[234,74,370,71],[235,14,371,10],[235,18,371,16,"isStateChangeHandlerWorklet"],[235,45,371,43],[235,48,372,12,"onHandlerStateChange"],[235,68,372,32],[235,73,373,13],[235,82,373,22],[235,86,373,26,"onHandlerStateChange"],[235,106,373,46],[235,110,374,14],[235,131,374,35],[235,135,374,39,"onHandlerStateChange"],[235,155,374,59],[235,156,374,60],[236,14,375,10],[236,18,375,16,"isReanimatedHandler"],[236,37,375,35],[236,40,376,12,"isGestureHandlerWorklet"],[236,63,376,35],[236,67,376,39,"isStateChangeHandlerWorklet"],[236,94,376,66],[237,14,377,10],[237,18,377,14,"isReanimatedHandler"],[237,37,377,33],[237,39,377,35],[238,16,378,12],[239,16,379,12],[239,23,379,19,"ActionType"],[239,34,379,29],[239,35,379,29,"ActionType"],[239,45,379,29],[239,46,379,30,"REANIMATED_WORKLET"],[239,64,379,48],[240,14,380,10],[240,15,380,11],[240,21,380,17],[240,25,380,21,"onGestureEvent"],[240,39,380,35],[240,43,380,39],[240,55,380,51],[240,59,380,55,"onGestureEvent"],[240,73,380,69],[240,75,380,71],[241,16,381,12],[242,16,382,12],[242,23,382,19,"ActionType"],[242,34,382,29],[242,35,382,29,"ActionType"],[242,45,382,29],[242,46,382,30,"NATIVE_ANIMATED_EVENT"],[242,67,382,51],[243,14,383,10],[243,15,383,11],[243,21,383,17],[244,16,384,12],[245,16,385,12],[245,23,385,19,"ActionType"],[245,34,385,29],[245,35,385,29,"ActionType"],[245,45,385,29],[245,46,385,30,"JS_FUNCTION_OLD_API"],[245,65,385,49],[246,14,386,10],[247,12,387,8],[247,13,387,9],[247,15,387,11],[247,16,387,12],[248,12,389,8,"RNGestureHandlerModule"],[248,34,389,30],[248,35,389,30,"default"],[248,42,389,30],[248,43,389,31,"attachGestureHandler"],[248,63,389,51],[248,64,390,10,"_this"],[248,69,390,10],[248,70,390,15,"handlerTag"],[248,80,390,25],[248,82,391,10,"newViewTag"],[248,92,391,20],[248,94,392,10,"actionType"],[248,104,393,8],[248,105,393,9],[249,10,394,6],[250,10,396,6],[250,14,396,6,"scheduleFlushOperations"],[250,20,396,29],[250,21,396,29,"scheduleFlushOperations"],[250,44,396,29],[250,46,396,30],[250,47,396,31],[251,10,398,6],[251,14,398,6,"ghQueueMicrotask"],[251,31,398,22],[251,32,398,22,"ghQueueMicrotask"],[251,48,398,22],[251,50,398,23],[251,56,398,29],[252,12,399,8,"MountRegistry"],[252,26,399,21],[252,27,399,21,"MountRegistry"],[252,40,399,21],[252,41,399,22,"gestureHandlerWillMount"],[252,64,399,45],[252,65,399,45,"_this"],[252,70,399,50],[252,71,399,51],[253,10,400,6],[253,11,400,7],[253,12,400,8],[254,8,401,4],[254,9,401,5],[255,8,401,5,"_this"],[255,13,401,5],[255,14,403,12,"updateGestureHandler"],[255,34,403,32],[255,37,404,6,"newConfig"],[255,46,404,50],[255,50,405,9],[256,10,406,6,"_this"],[256,15,406,6],[256,16,406,11,"config"],[256,22,406,17],[256,25,406,20,"newConfig"],[256,34,406,29],[257,10,408,6,"RNGestureHandlerModule"],[257,32,408,28],[257,33,408,28,"default"],[257,40,408,28],[257,41,408,29,"updateGestureHandler"],[257,61,408,49],[257,62,408,50,"_this"],[257,67,408,50],[257,68,408,55,"handlerTag"],[257,78,408,65],[257,80,408,67,"newConfig"],[257,89,408,76],[257,90,408,77],[258,10,409,6],[258,14,409,6,"scheduleFlushOperations"],[258,20,409,29],[258,21,409,29,"scheduleFlushOperations"],[258,44,409,29],[258,46,409,30],[258,47,409,31],[259,8,410,4],[259,9,410,5],[260,8,203,6,"_this"],[260,13,203,6],[260,14,203,11,"handlerTag"],[260,24,203,21],[260,27,203,24],[260,31,203,24,"getNextHandlerTag"],[260,49,203,41],[260,50,203,41,"getNextHandlerTag"],[260,67,203,41],[260,69,203,42],[260,70,203,43],[261,8,204,6,"_this"],[261,13,204,6],[261,14,204,11,"config"],[261,20,204,17],[261,23,204,20],[261,24,204,21],[261,25,204,22],[262,8,205,6,"_this"],[262,13,205,6],[262,14,205,11,"propsRef"],[262,22,205,19],[262,38,205,22,"React"],[262,43,205,27],[262,44,205,28,"createRef"],[262,53,205,37],[262,54,205,38],[262,55,205,39],[263,8,206,6,"_this"],[263,13,206,6],[263,14,206,11,"isMountedRef"],[263,26,206,23],[263,42,206,26,"React"],[263,47,206,31],[263,48,206,32,"createRef"],[263,57,206,41],[263,58,206,42],[263,59,206,43],[264,8,207,6,"_this"],[264,13,207,6],[264,14,207,11,"state"],[264,19,207,16],[264,22,207,19],[265,10,207,21,"allowTouches"],[266,8,207,34],[266,9,207,35],[267,8,208,6],[267,12,208,10,"props"],[267,17,208,15],[267,18,208,16,"id"],[267,20,208,18],[267,22,208,20],[268,10,209,8],[268,14,209,12,"handlerIDToTag"],[268,31,209,26],[268,32,209,26,"handlerIDToTag"],[268,46,209,26],[268,47,209,27,"props"],[268,52,209,32],[268,53,209,33,"id"],[268,55,209,35],[268,56,209,36],[268,61,209,41,"undefined"],[268,70,209,50],[268,72,209,52],[269,12,210,10],[269,18,210,16],[269,22,210,20,"Error"],[269,27,210,25],[269,28,210,26],[269,48,210,46,"props"],[269,53,210,51],[269,54,210,52,"id"],[269,56,210,54],[269,78,210,76],[269,79,210,77],[270,10,211,8],[271,10,212,8,"handlerIDToTag"],[271,27,212,22],[271,28,212,22,"handlerIDToTag"],[271,42,212,22],[271,43,212,23,"props"],[271,48,212,28],[271,49,212,29,"id"],[271,51,212,31],[271,52,212,32],[271,55,212,35,"_this"],[271,60,212,35],[271,61,212,40,"handlerTag"],[271,71,212,50],[272,8,213,6],[273,8,213,7],[273,15,213,7,"_this"],[273,20,213,7],[274,6,214,4],[275,6,214,5],[275,10,214,5,"_inherits"],[275,19,214,5],[275,20,214,5,"default"],[275,27,214,5],[275,29,214,5,"Handler"],[275,36,214,5],[275,38,214,5,"_React$Component"],[275,54,214,5],[276,6,214,5],[276,17,214,5,"_createClass"],[276,29,214,5],[276,30,214,5,"default"],[276,37,214,5],[276,39,214,5,"Handler"],[276,46,214,5],[277,8,214,5,"key"],[277,11,214,5],[278,8,214,5,"value"],[278,13,214,5],[278,15,216,4],[278,24,216,4,"componentDidMount"],[278,41,216,21,"componentDidMount"],[278,42,216,21],[278,44,216,24],[279,10,217,6],[279,14,217,12,"props"],[279,19,217,34],[279,22,217,37],[279,26,217,41],[279,27,217,42,"props"],[279,32,217,47],[280,10,218,6],[280,14,218,10],[280,15,218,11,"isMountedRef"],[280,27,218,23],[280,28,218,24,"current"],[280,35,218,31],[280,38,218,34],[280,42,218,38],[281,10,220,6],[281,14,220,10,"DEV_ON_ANDROID"],[281,28,220,24],[281,30,220,26],[282,12,221,8],[282,16,221,12],[282,17,221,13,"inspectorToggleListener"],[282,40,221,36],[282,43,221,39,"DeviceEventEmitter"],[282,55,221,57],[282,56,221,57,"DeviceEventEmitter"],[282,74,221,57],[282,75,221,58,"addListener"],[282,86,221,69],[282,87,222,10],[282,111,222,34],[282,113,223,10],[282,119,223,16],[283,14,224,12],[283,18,224,16],[283,19,224,17,"setState"],[283,27,224,25],[283,28,224,27,"_"],[283,29,224,28],[283,34,224,34],[284,16,224,36,"allowTouches"],[285,14,224,49],[285,15,224,50],[285,16,224,51],[285,17,224,52],[286,14,225,12],[286,18,225,16],[286,19,225,17,"update"],[286,25,225,23],[286,26,225,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[286,53,225,51],[286,54,225,52],[287,12,226,10],[287,13,227,8],[287,14,227,9],[288,10,228,6],[289,10,229,6],[289,14,229,10,"hasUnresolvedRefs"],[289,31,229,27],[289,32,229,28,"props"],[289,37,229,33],[289,38,229,34],[289,40,229,36],[290,12,230,8],[291,12,231,8],[292,12,232,8],[293,12,233,8],[294,12,234,8],[295,12,235,8],[296,12,236,8],[296,16,236,8,"ghQueueMicrotask"],[296,33,236,24],[296,34,236,24,"ghQueueMicrotask"],[296,50,236,24],[296,52,236,25],[296,58,236,31],[297,14,237,10],[297,18,237,14],[297,19,237,15,"update"],[297,25,237,21],[297,26,237,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[297,53,237,49],[297,54,237,50],[298,12,238,8],[298,13,238,9],[298,14,238,10],[299,10,239,6],[300,10,241,6],[300,14,241,10],[300,15,241,11,"createGestureHandler"],[300,35,241,31],[300,36,242,8],[300,40,242,8,"filterConfig"],[300,46,242,20],[300,47,242,20,"filterConfig"],[300,59,242,20],[300,61,243,10,"transformProps"],[300,75,243,24],[300,78,243,27,"transformProps"],[300,92,243,41],[300,93,243,42],[300,97,243,46],[300,98,243,47,"props"],[300,103,243,52],[300,104,243,53],[300,107,243,56],[300,111,243,60],[300,112,243,61,"props"],[300,117,243,66],[300,119,244,10],[300,120,244,11],[300,123,244,14,"allowedProps"],[300,135,244,26],[300,137,244,28],[300,140,244,31,"customNativeProps"],[300,157,244,48],[300,158,244,49],[300,160,245,10,"config"],[300,166,246,8],[300,167,247,6],[300,168,247,7],[301,10,249,6],[301,14,249,10],[301,15,249,11],[301,19,249,15],[301,20,249,16,"viewNode"],[301,28,249,24],[301,30,249,26],[302,12,250,8],[302,18,250,14],[302,22,250,18,"Error"],[302,27,250,23],[302,28,251,10],[302,75,251,57,"Handler"],[302,82,251,64],[302,83,251,65,"displayName"],[302,94,251,76],[302,154,252,8],[302,155,252,9],[303,10,253,6],[304,10,255,6],[304,14,255,10],[304,15,255,11,"attachGestureHandler"],[304,35,255,31],[304,36,255,32],[304,40,255,32,"findNodeHandle"],[304,54,255,46],[304,55,255,46,"default"],[304,62,255,46],[304,64,255,47],[304,68,255,51],[304,69,255,52,"viewNode"],[304,77,255,60],[304,78,255,71],[304,79,255,72],[304,80,255,73],[304,81,255,74],[305,8,256,4],[306,6,256,5],[307,8,256,5,"key"],[307,11,256,5],[308,8,256,5,"value"],[308,13,256,5],[308,15,258,4],[308,24,258,4,"componentDidUpdate"],[308,42,258,22,"componentDidUpdate"],[308,43,258,22],[308,45,258,25],[309,10,259,6],[309,14,259,12,"viewTag"],[309,21,259,19],[309,24,259,22],[309,28,259,22,"findNodeHandle"],[309,42,259,36],[309,43,259,36,"default"],[309,50,259,36],[309,52,259,37],[309,56,259,41],[309,57,259,42,"viewNode"],[309,65,259,50],[309,66,259,51],[310,10,260,6],[310,14,260,10],[310,18,260,14],[310,19,260,15,"viewTag"],[310,26,260,22],[310,31,260,27,"viewTag"],[310,38,260,34],[310,40,260,36],[311,12,261,8],[311,16,261,12],[311,17,261,13,"attachGestureHandler"],[311,37,261,33],[311,38,261,34,"viewTag"],[311,45,261,51],[311,46,261,52],[311,47,261,53],[311,48,261,54],[312,10,262,6],[313,10,263,6],[313,14,263,10],[313,15,263,11,"update"],[313,21,263,17],[313,22,263,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[313,49,263,45],[313,50,263,46],[314,8,264,4],[315,6,264,5],[316,8,264,5,"key"],[316,11,264,5],[317,8,264,5,"value"],[317,13,264,5],[317,15,266,4],[317,24,266,4,"componentWillUnmount"],[317,44,266,24,"componentWillUnmount"],[317,45,266,24],[317,47,266,27],[318,10,267,6],[318,14,267,10],[318,15,267,11,"inspectorToggleListener"],[318,38,267,34],[318,40,267,36,"remove"],[318,46,267,42],[318,47,267,43],[318,48,267,44],[319,10,268,6],[319,14,268,10],[319,15,268,11,"isMountedRef"],[319,27,268,23],[319,28,268,24,"current"],[319,35,268,31],[319,38,268,34],[319,43,268,39],[320,10,269,6],[320,14,269,10,"Platform"],[320,26,269,18],[320,27,269,18,"Platform"],[320,35,269,18],[320,36,269,19,"OS"],[320,38,269,21],[320,43,269,26],[320,48,269,31],[320,50,269,33],[321,12,270,8],[321,16,270,8,"unregisterOldGestureHandler"],[321,33,270,35],[321,34,270,35,"unregisterOldGestureHandler"],[321,61,270,35],[321,63,270,36],[321,67,270,40],[321,68,270,41,"handlerTag"],[321,78,270,51],[321,79,270,52],[322,10,271,6],[323,10,272,6,"RNGestureHandlerModule"],[323,32,272,28],[323,33,272,28,"default"],[323,40,272,28],[323,41,272,29,"dropGestureHandler"],[323,59,272,47],[323,60,272,48],[323,64,272,52],[323,65,272,53,"handlerTag"],[323,75,272,63],[323,76,272,64],[324,10,273,6],[324,14,273,6,"scheduleFlushOperations"],[324,20,273,29],[324,21,273,29,"scheduleFlushOperations"],[324,44,273,29],[324,46,273,30],[324,47,273,31],[325,10,274,6],[326,10,275,6],[326,14,275,12,"handlerID"],[326,23,275,41],[326,26,275,44],[326,30,275,48],[326,31,275,49,"props"],[326,36,275,54],[326,37,275,55,"id"],[326,39,275,57],[327,10,276,6],[327,14,276,10,"handlerID"],[327,23,276,19],[327,25,276,21],[328,12,277,8],[329,12,278,8],[329,19,278,15,"handlerIDToTag"],[329,36,278,29],[329,37,278,29,"handlerIDToTag"],[329,51,278,29],[329,52,278,30,"handlerID"],[329,61,278,39],[329,62,278,40],[330,10,279,6],[331,10,281,6,"MountRegistry"],[331,24,281,19],[331,25,281,19,"MountRegistry"],[331,38,281,19],[331,39,281,20,"gestureHandlerWillUnmount"],[331,64,281,45],[331,65,281,46],[331,69,281,50],[331,70,281,51],[332,8,282,4],[333,6,282,5],[334,8,282,5,"key"],[334,11,282,5],[335,8,282,5,"value"],[335,13,282,5],[335,15,412,4],[335,24,412,12,"update"],[335,30,412,18,"update"],[335,31,412,19,"remainingTries"],[335,45,412,41],[335,47,412,43],[336,10,413,6],[336,14,413,10],[336,15,413,11],[336,19,413,15],[336,20,413,16,"isMountedRef"],[336,32,413,28],[336,33,413,29,"current"],[336,40,413,36],[336,42,413,38],[337,12,414,8],[338,10,415,6],[339,10,417,6],[339,14,417,12,"props"],[339,19,417,34],[339,22,417,37],[339,26,417,41],[339,27,417,42,"props"],[339,32,417,47],[341,10,419,6],[342,10,420,6],[343,10,421,6],[344,10,422,6],[344,14,422,10,"hasUnresolvedRefs"],[344,31,422,27],[344,32,422,28,"props"],[344,37,422,33],[344,38,422,34],[344,42,422,38,"remainingTries"],[344,56,422,52],[344,59,422,55],[344,60,422,56],[344,62,422,58],[345,12,423,8],[345,16,423,8,"ghQueueMicrotask"],[345,33,423,24],[345,34,423,24,"ghQueueMicrotask"],[345,50,423,24],[345,52,423,25],[345,58,423,31],[346,14,424,10],[346,18,424,14],[346,19,424,15,"update"],[346,25,424,21],[346,26,424,22,"remainingTries"],[346,40,424,36],[346,43,424,39],[346,44,424,40],[346,45,424,41],[347,12,425,8],[347,13,425,9],[347,14,425,10],[348,10,426,6],[348,11,426,7],[348,17,426,13],[349,12,427,8],[349,16,427,14,"newConfig"],[349,25,427,23],[349,28,427,26],[349,32,427,26,"filterConfig"],[349,38,427,38],[349,39,427,38,"filterConfig"],[349,51,427,38],[349,53,428,10,"transformProps"],[349,67,428,24],[349,70,428,27,"transformProps"],[349,84,428,41],[349,85,428,42],[349,89,428,46],[349,90,428,47,"props"],[349,95,428,52],[349,96,428,53],[349,99,428,56],[349,103,428,60],[349,104,428,61,"props"],[349,109,428,66],[349,111,429,10],[349,112,429,11],[349,115,429,14,"allowedProps"],[349,127,429,26],[349,129,429,28],[349,132,429,31,"customNativeProps"],[349,149,429,48],[349,150,429,49],[349,152,430,10,"config"],[349,158,431,8],[349,159,431,9],[350,12,432,8],[350,16,432,12],[350,17,432,13],[350,21,432,13,"deepEqual"],[350,28,432,22],[350,29,432,22,"deepEqual"],[350,38,432,22],[350,40,432,23],[350,44,432,27],[350,45,432,28,"config"],[350,51,432,34],[350,53,432,36,"newConfig"],[350,62,432,45],[350,63,432,46],[350,65,432,48],[351,14,433,10],[351,18,433,14],[351,19,433,15,"updateGestureHandler"],[351,39,433,35],[351,40,433,36,"newConfig"],[351,49,433,45],[351,50,433,46],[352,12,434,8],[353,10,435,6],[354,8,436,4],[355,6,436,5],[356,8,436,5,"key"],[356,11,436,5],[357,8,436,5,"value"],[357,13,436,5],[357,15,438,4],[357,24,438,4,"setNativeProps"],[357,38,438,18,"setNativeProps"],[357,39,438,19,"updates"],[357,46,438,31],[357,48,438,33],[358,10,439,6],[358,14,439,12,"mergedProps"],[358,25,439,23],[358,28,439,26],[359,12,439,28],[359,15,439,31],[359,19,439,35],[359,20,439,36,"props"],[359,25,439,41],[360,12,439,43],[360,15,439,46,"updates"],[361,10,439,54],[361,11,439,55],[362,10,440,6],[362,14,440,12,"newConfig"],[362,23,440,21],[362,26,440,24],[362,30,440,24,"filterConfig"],[362,36,440,36],[362,37,440,36,"filterConfig"],[362,49,440,36],[362,51,441,8,"transformProps"],[362,65,441,22],[362,68,441,25,"transformProps"],[362,82,441,39],[362,83,441,40,"mergedProps"],[362,94,441,51],[362,95,441,52],[362,98,441,55,"mergedProps"],[362,109,441,66],[362,111,442,8],[362,112,442,9],[362,115,442,12,"allowedProps"],[362,127,442,24],[362,129,442,26],[362,132,442,29,"customNativeProps"],[362,149,442,46],[362,150,442,47],[362,152,443,8,"config"],[362,158,444,6],[362,159,444,7],[363,10,445,6],[363,14,445,10],[363,15,445,11,"updateGestureHandler"],[363,35,445,31],[363,36,445,32,"newConfig"],[363,45,445,41],[363,46,445,42],[364,8,446,4],[365,6,446,5],[366,8,446,5,"key"],[366,11,446,5],[367,8,446,5,"value"],[367,13,446,5],[367,15,448,4],[367,24,448,4,"render"],[367,30,448,10,"render"],[367,31,448,10],[367,33,448,13],[368,10,449,6],[368,14,449,10,"__DEV__"],[368,21,449,17],[368,25,449,21],[368,26,449,22],[368,30,449,26],[368,31,449,27,"context"],[368,38,449,34],[368,42,449,38],[368,43,449,39],[368,47,449,39,"isTestEnv"],[368,54,449,48],[368,55,449,48,"isTestEnv"],[368,64,449,48],[368,66,449,49],[368,67,449,50],[368,71,449,54,"Platform"],[368,83,449,62],[368,84,449,62,"Platform"],[368,92,449,62],[368,93,449,63,"OS"],[368,95,449,65],[368,100,449,70],[368,105,449,75],[368,107,449,77],[369,12,450,8],[369,18,450,14],[369,22,450,18,"Error"],[369,27,450,23],[369,28,451,10,"name"],[369,32,451,14],[369,35,452,12],[369,236,453,8],[369,237,453,9],[370,10,454,6],[371,10,456,6],[371,14,456,10,"gestureEventHandler"],[371,33,456,29],[371,36,456,32],[371,40,456,36],[371,41,456,37,"onGestureHandlerEvent"],[371,62,456,58],[372,10,457,6],[374,10,462,6],[374,14,462,6,"_this$props"],[374,25,462,6],[374,28,463,8],[374,32,463,12],[374,33,463,13,"props"],[374,38,463,18],[375,12,462,14,"onGestureEvent"],[375,26,462,28],[375,29,462,28,"_this$props"],[375,40,462,28],[375,41,462,14,"onGestureEvent"],[375,55,462,28],[376,12,462,30,"onGestureHandlerEvent"],[376,33,462,51],[376,36,462,51,"_this$props"],[376,47,462,51],[376,48,462,30,"onGestureHandlerEvent"],[376,69,462,51],[377,10,464,6],[377,14,464,10,"onGestureEvent"],[377,28,464,24],[377,32,464,28],[377,39,464,35,"onGestureEvent"],[377,53,464,49],[377,58,464,54],[377,68,464,64],[377,70,464,66],[378,12,465,8],[379,12,466,8],[380,12,467,8],[381,12,468,8],[381,16,468,12,"onGestureHandlerEvent"],[381,37,468,33],[381,39,468,35],[382,14,469,10],[382,20,469,16],[382,24,469,20,"Error"],[382,29,469,25],[382,30,470,12],[382,103,471,10],[382,104,471,11],[383,12,472,8],[384,12,473,8,"gestureEventHandler"],[384,31,473,27],[384,34,473,30,"onGestureEvent"],[384,48,473,44],[385,10,474,6],[385,11,474,7],[385,17,474,13],[386,12,475,8],[386,16,476,10,"onGestureHandlerEvent"],[386,37,476,31],[386,41,477,10],[386,48,477,17,"onGestureHandlerEvent"],[386,69,477,38],[386,74,477,43],[386,84,477,53],[386,86,478,10],[387,14,479,10],[387,20,479,16],[387,24,479,20,"Error"],[387,29,479,25],[387,30,480,12],[387,103,481,10],[387,104,481,11],[388,12,482,8],[389,10,483,6],[390,10,485,6],[390,14,485,10,"gestureStateEventHandler"],[390,38,485,34],[390,41,485,37],[390,45,485,41],[390,46,485,42,"onGestureHandlerStateChange"],[390,73,485,69],[391,10,486,6],[393,10,491,6],[393,14,491,6,"_this$props2"],[393,26,491,6],[393,29,494,40],[393,33,494,44],[393,34,494,45,"props"],[393,39,494,50],[394,12,492,8,"onHandlerStateChange"],[394,32,492,28],[394,35,492,28,"_this$props2"],[394,47,492,28],[394,48,492,8,"onHandlerStateChange"],[394,68,492,28],[395,12,493,8,"onGestureHandlerStateChange"],[395,39,493,35],[395,42,493,35,"_this$props2"],[395,54,493,35],[395,55,493,8,"onGestureHandlerStateChange"],[395,82,493,35],[396,10,495,6],[396,14,495,10,"onHandlerStateChange"],[396,34,495,30],[396,38,495,34],[396,45,495,41,"onHandlerStateChange"],[396,65,495,61],[396,70,495,66],[396,80,495,76],[396,82,495,78],[397,12,496,8],[398,12,497,8],[399,12,498,8],[400,12,499,8],[400,16,499,12,"onGestureHandlerStateChange"],[400,43,499,39],[400,45,499,41],[401,14,500,10],[401,20,500,16],[401,24,500,20,"Error"],[401,29,500,25],[401,30,501,12],[401,103,502,10],[401,104,502,11],[402,12,503,8],[403,12,504,8,"gestureStateEventHandler"],[403,36,504,32],[403,39,504,35,"onHandlerStateChange"],[403,59,504,55],[404,10,505,6],[404,11,505,7],[404,17,505,13],[405,12,506,8],[405,16,507,10,"onGestureHandlerStateChange"],[405,43,507,37],[405,47,508,10],[405,54,508,17,"onGestureHandlerStateChange"],[405,81,508,44],[405,86,508,49],[405,96,508,59],[405,98,509,10],[406,14,510,10],[406,20,510,16],[406,24,510,20,"Error"],[406,29,510,25],[406,30,511,12],[406,103,512,10],[406,104,512,11],[407,12,513,8],[408,10,514,6],[409,10,515,6],[409,14,515,12,"events"],[409,20,515,18],[409,23,515,21],[410,12,516,8,"onGestureHandlerEvent"],[410,33,516,29],[410,35,516,31],[410,39,516,35],[410,40,516,36,"state"],[410,45,516,41],[410,46,516,42,"allowTouches"],[410,58,516,54],[410,61,517,12,"gestureEventHandler"],[410,80,517,31],[410,83,518,12,"undefined"],[410,92,518,21],[411,12,519,8,"onGestureHandlerStateChange"],[411,39,519,35],[411,41,519,37],[411,45,519,41],[411,46,519,42,"state"],[411,51,519,47],[411,52,519,48,"allowTouches"],[411,64,519,60],[411,67,520,12,"gestureStateEventHandler"],[411,91,520,36],[411,94,521,12,"undefined"],[412,10,522,6],[412,11,522,7],[413,10,524,6],[413,14,524,10],[413,15,524,11,"propsRef"],[413,23,524,19],[413,24,524,20,"current"],[413,31,524,27],[413,34,524,30,"events"],[413,40,524,36],[414,10,526,6],[414,14,526,10,"child"],[414,19,526,20],[414,22,526,23],[414,26,526,27],[415,10,527,6],[415,14,527,10],[416,12,528,8,"child"],[416,17,528,13],[416,20,528,16,"React"],[416,25,528,21],[416,26,528,22,"Children"],[416,34,528,30],[416,35,528,31,"only"],[416,39,528,35],[416,40,528,36],[416,44,528,40],[416,45,528,41,"props"],[416,50,528,46],[416,51,528,47,"children"],[416,59,528,55],[416,60,528,56],[417,10,529,6],[417,11,529,7],[417,12,529,8],[417,19,529,15,"e"],[417,20,529,16],[417,22,529,18],[418,12,530,8],[418,18,530,14],[418,22,530,18,"Error"],[418,27,530,23],[418,28,531,10],[418,32,531,10,"tagMessage"],[418,39,531,20],[418,40,531,20,"tagMessage"],[418,50,531,20],[418,52,532,12],[418,55,532,15,"name"],[418,59,532,19],[418,215,533,10],[418,216,534,8],[418,217,534,9],[419,10,535,6],[420,10,537,6],[420,14,537,10,"grandChildren"],[420,27,537,23],[420,30,537,26,"child"],[420,35,537,31],[420,36,537,32,"props"],[420,41,537,37],[420,42,537,38,"children"],[420,50,537,46],[421,10,538,6],[421,14,539,8,"__DEV__"],[421,21,539,15],[421,25,540,8,"child"],[421,30,540,13],[421,31,540,14,"type"],[421,35,540,18],[421,40,541,9,"child"],[421,45,541,14],[421,46,541,15,"type"],[421,50,541,19],[421,55,541,24],[421,79,541,48],[421,83,542,10,"child"],[421,88,542,15],[421,89,542,16,"type"],[421,93,542,20],[421,94,542,21,"name"],[421,98,542,25],[421,103,542,30],[421,109,542,36],[421,113,543,10,"child"],[421,118,543,15],[421,119,543,16,"type"],[421,123,543,20],[421,124,543,21,"displayName"],[421,135,543,32],[421,140,543,37],[421,146,543,43],[421,147,543,44],[421,149,544,8],[422,12,545,8,"grandChildren"],[422,25,545,21],[422,28,545,24,"React"],[422,33,545,29],[422,34,545,30,"Children"],[422,42,545,38],[422,43,545,39,"toArray"],[422,50,545,46],[422,51,545,47,"grandChildren"],[422,64,545,60],[422,65,545,61],[423,12,546,8,"grandChildren"],[423,25,546,21],[423,26,546,22,"push"],[423,30,546,26],[423,44,547,10],[423,48,547,10,"_reactJsxDevRuntime"],[423,67,547,10],[423,68,547,10,"jsxDEV"],[423,74,547,10],[423,76,547,11,"_PressabilityDebugView"],[423,98,547,32],[423,99,547,32,"PressabilityDebugView"],[423,120,547,32],[424,14,549,12,"color"],[424,19,549,17],[424,21,549,18],[424,40,549,37],[425,14,550,12,"hitSlop"],[425,21,550,19],[425,23,550,21,"child"],[425,28,550,26],[425,29,550,27,"props"],[425,34,550,32],[425,35,550,33,"hitSlop"],[426,12,550,41],[426,15,548,16],[426,38,548,39],[427,14,548,39,"fileName"],[427,22,548,39],[427,24,548,39,"_jsxFileName"],[427,36,548,39],[428,14,548,39,"lineNumber"],[428,24,548,39],[429,14,548,39,"columnNumber"],[429,26,548,39],[430,12,548,39],[430,19,551,11],[430,20,552,8],[430,21,552,9],[431,10,553,6],[432,10,555,6],[432,30,555,13,"React"],[432,35,555,18],[432,36,555,19,"cloneElement"],[432,48,555,31],[432,49,556,8,"child"],[432,54,556,13],[432,56,557,8],[433,12,558,10,"ref"],[433,15,558,13],[433,17,558,15],[433,21,558,19],[433,22,558,20,"refHandler"],[433,32,558,30],[434,12,559,10,"collapsable"],[434,23,559,21],[434,25,559,23],[434,30,559,28],[435,12,560,10],[435,16,560,14],[435,20,560,14,"isTestEnv"],[435,27,560,23],[435,28,560,23,"isTestEnv"],[435,37,560,23],[435,39,560,24],[435,40,560,25],[435,43,561,14],[436,14,562,16,"handlerType"],[436,25,562,27],[436,27,562,29,"name"],[436,31,562,33],[437,14,563,16,"handlerTag"],[437,24,563,26],[437,26,563,28],[437,30,563,32],[437,31,563,33,"handlerTag"],[437,41,563,43],[438,14,564,16,"enabled"],[438,21,564,23],[438,23,564,25],[438,27,564,29],[438,28,564,30,"props"],[438,33,564,35],[438,34,564,36,"enabled"],[439,12,565,14],[439,13,565,15],[439,16,566,14],[439,17,566,15],[439,18,566,16],[439,19,566,17],[440,12,567,10,"testID"],[440,18,567,16],[440,20,567,18],[440,24,567,22],[440,25,567,23,"props"],[440,30,567,28],[440,31,567,29,"testID"],[440,37,567,35],[440,41,567,39,"child"],[440,46,567,44],[440,47,567,45,"props"],[440,52,567,50],[440,53,567,51,"testID"],[440,59,567,57],[441,12,568,10],[441,15,568,13,"events"],[442,10,569,8],[442,11,569,9],[442,13,570,8,"grandChildren"],[442,26,571,6],[442,27,571,7],[443,8,572,4],[444,6,572,5],[445,4,572,5],[445,6,186,24,"React"],[445,11,186,29],[445,12,186,30,"Component"],[445,21,186,39],[446,4,186,8,"Handler"],[446,11,186,15],[446,12,190,11,"displayName"],[446,23,190,22],[446,26,190,25,"name"],[446,30,190,29],[447,4,186,8,"Handler"],[447,11,186,15],[447,12,191,11,"contextType"],[447,23,191,22],[447,26,191,25,"GestureHandlerRootViewContext"],[447,55,191,54],[447,56,191,54,"default"],[447,63,191,54],[448,4,574,2],[448,11,574,9,"Handler"],[448,18,574,16],[449,2,575,0],[450,0,575,1],[450,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCC+F;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTiB;mCUE;KVU;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"},"hasCjsExports":false},"type":"js/module"}]}