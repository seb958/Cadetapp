{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  /* eslint-disable @typescript-eslint/no-empty-function */\n\n  class EventManager {\n    pointersInBounds = [];\n    constructor(view) {\n      this.view = view;\n      this.activePointersCounter = 0;\n    }\n    onPointerDown(_event) {}\n    onPointerAdd(_event) {}\n    onPointerUp(_event) {}\n    onPointerRemove(_event) {}\n    onPointerMove(_event) {}\n    onPointerLeave(_event) {} // Called only when pointer is pressed (or touching)\n    onPointerEnter(_event) {} // Called only when pointer is pressed (or touching)\n    onPointerCancel(_event) {\n      // When pointer cancel is triggered and there are more pointers on the view, only one pointer is cancelled\n      // Because we want all pointers to be cancelled by that event, we are doing it manually by reseting handler and changing activePointersCounter to 0\n      // Events that correspond to removing the pointer (pointerup, touchend) have condition, that they don't perform any action when activePointersCounter\n      // is equal to 0. This prevents counter from going to negative values, when pointers are removed from view after one of them has been cancelled\n    }\n    onPointerOutOfBounds(_event) {}\n    onPointerMoveOver(_event) {}\n    onPointerMoveOut(_event) {}\n    onWheel(_event) {}\n    setOnPointerDown(callback) {\n      this.onPointerDown = callback;\n    }\n    setOnPointerAdd(callback) {\n      this.onPointerAdd = callback;\n    }\n    setOnPointerUp(callback) {\n      this.onPointerUp = callback;\n    }\n    setOnPointerRemove(callback) {\n      this.onPointerRemove = callback;\n    }\n    setOnPointerMove(callback) {\n      this.onPointerMove = callback;\n    }\n    setOnPointerLeave(callback) {\n      this.onPointerLeave = callback;\n    }\n    setOnPointerEnter(callback) {\n      this.onPointerEnter = callback;\n    }\n    setOnPointerCancel(callback) {\n      this.onPointerCancel = callback;\n    }\n    setOnPointerOutOfBounds(callback) {\n      this.onPointerOutOfBounds = callback;\n    }\n    setOnPointerMoveOver(callback) {\n      this.onPointerMoveOver = callback;\n    }\n    setOnPointerMoveOut(callback) {\n      this.onPointerMoveOut = callback;\n    }\n    setOnWheel(callback) {\n      this.onWheel = callback;\n    }\n    markAsInBounds(pointerId) {\n      if (this.pointersInBounds.indexOf(pointerId) >= 0) {\n        return;\n      }\n      this.pointersInBounds.push(pointerId);\n    }\n    markAsOutOfBounds(pointerId) {\n      const index = this.pointersInBounds.indexOf(pointerId);\n      if (index < 0) {\n        return;\n      }\n      this.pointersInBounds.splice(index, 1);\n    }\n    resetManager() {\n      // Reseting activePointersCounter is necessary to make gestures such as pinch work properly\n      // There are gestures that end when there is still one active pointer (like pinch/rotation)\n      // When these gestures end, they are reset, but they still receive events from pointer that is active\n      // This causes trouble, since only onPointerDown registers gesture in orchestrator, and while gestures receive\n      // Events from active pointer after they finished, next pointerdown event will be registered as additional pointer, not the first one\n      // This casues trouble like gestures getting stuck in END state, even though they should have gone to UNDETERMINED\n\n      this.activePointersCounter = 0;\n      this.pointersInBounds = [];\n    }\n  }\n  exports.default = EventManager;\n});","lineCount":95,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,7,0],[10,2,9,0],[10,8,9,6,"EventManager"],[10,20,9,18],[10,21,9,19],[11,4,10,2,"pointersInBounds"],[11,20,10,18],[11,23,10,21],[11,25,10,23],[12,4,11,2,"constructor"],[12,15,11,13,"constructor"],[12,16,11,14,"view"],[12,20,11,18],[12,22,11,20],[13,6,12,4],[13,10,12,8],[13,11,12,9,"view"],[13,15,12,13],[13,18,12,16,"view"],[13,22,12,20],[14,6,13,4],[14,10,13,8],[14,11,13,9,"activePointersCounter"],[14,32,13,30],[14,35,13,33],[14,36,13,34],[15,4,14,2],[16,4,15,2,"onPointerDown"],[16,17,15,15,"onPointerDown"],[16,18,15,16,"_event"],[16,24,15,22],[16,26,15,24],[16,27,15,25],[17,4,16,2,"onPointerAdd"],[17,16,16,14,"onPointerAdd"],[17,17,16,15,"_event"],[17,23,16,21],[17,25,16,23],[17,26,16,24],[18,4,17,2,"onPointerUp"],[18,15,17,13,"onPointerUp"],[18,16,17,14,"_event"],[18,22,17,20],[18,24,17,22],[18,25,17,23],[19,4,18,2,"onPointerRemove"],[19,19,18,17,"onPointerRemove"],[19,20,18,18,"_event"],[19,26,18,24],[19,28,18,26],[19,29,18,27],[20,4,19,2,"onPointerMove"],[20,17,19,15,"onPointerMove"],[20,18,19,16,"_event"],[20,24,19,22],[20,26,19,24],[20,27,19,25],[21,4,20,2,"onPointerLeave"],[21,18,20,16,"onPointerLeave"],[21,19,20,17,"_event"],[21,25,20,23],[21,27,20,25],[21,28,20,26],[21,29,20,27],[21,30,20,28],[22,4,21,2,"onPointerEnter"],[22,18,21,16,"onPointerEnter"],[22,19,21,17,"_event"],[22,25,21,23],[22,27,21,25],[22,28,21,26],[22,29,21,27],[22,30,21,28],[23,4,22,2,"onPointerCancel"],[23,19,22,17,"onPointerCancel"],[23,20,22,18,"_event"],[23,26,22,24],[23,28,22,26],[24,6,23,4],[25,6,24,4],[26,6,25,4],[27,6,26,4],[28,4,26,4],[29,4,28,2,"onPointerOutOfBounds"],[29,24,28,22,"onPointerOutOfBounds"],[29,25,28,23,"_event"],[29,31,28,29],[29,33,28,31],[29,34,28,32],[30,4,29,2,"onPointerMoveOver"],[30,21,29,19,"onPointerMoveOver"],[30,22,29,20,"_event"],[30,28,29,26],[30,30,29,28],[30,31,29,29],[31,4,30,2,"onPointerMoveOut"],[31,20,30,18,"onPointerMoveOut"],[31,21,30,19,"_event"],[31,27,30,25],[31,29,30,27],[31,30,30,28],[32,4,31,2,"onWheel"],[32,11,31,9,"onWheel"],[32,12,31,10,"_event"],[32,18,31,16],[32,20,31,18],[32,21,31,19],[33,4,32,2,"setOnPointerDown"],[33,20,32,18,"setOnPointerDown"],[33,21,32,19,"callback"],[33,29,32,27],[33,31,32,29],[34,6,33,4],[34,10,33,8],[34,11,33,9,"onPointerDown"],[34,24,33,22],[34,27,33,25,"callback"],[34,35,33,33],[35,4,34,2],[36,4,35,2,"setOnPointerAdd"],[36,19,35,17,"setOnPointerAdd"],[36,20,35,18,"callback"],[36,28,35,26],[36,30,35,28],[37,6,36,4],[37,10,36,8],[37,11,36,9,"onPointerAdd"],[37,23,36,21],[37,26,36,24,"callback"],[37,34,36,32],[38,4,37,2],[39,4,38,2,"setOnPointerUp"],[39,18,38,16,"setOnPointerUp"],[39,19,38,17,"callback"],[39,27,38,25],[39,29,38,27],[40,6,39,4],[40,10,39,8],[40,11,39,9,"onPointerUp"],[40,22,39,20],[40,25,39,23,"callback"],[40,33,39,31],[41,4,40,2],[42,4,41,2,"setOnPointerRemove"],[42,22,41,20,"setOnPointerRemove"],[42,23,41,21,"callback"],[42,31,41,29],[42,33,41,31],[43,6,42,4],[43,10,42,8],[43,11,42,9,"onPointerRemove"],[43,26,42,24],[43,29,42,27,"callback"],[43,37,42,35],[44,4,43,2],[45,4,44,2,"setOnPointerMove"],[45,20,44,18,"setOnPointerMove"],[45,21,44,19,"callback"],[45,29,44,27],[45,31,44,29],[46,6,45,4],[46,10,45,8],[46,11,45,9,"onPointerMove"],[46,24,45,22],[46,27,45,25,"callback"],[46,35,45,33],[47,4,46,2],[48,4,47,2,"setOnPointerLeave"],[48,21,47,19,"setOnPointerLeave"],[48,22,47,20,"callback"],[48,30,47,28],[48,32,47,30],[49,6,48,4],[49,10,48,8],[49,11,48,9,"onPointerLeave"],[49,25,48,23],[49,28,48,26,"callback"],[49,36,48,34],[50,4,49,2],[51,4,50,2,"setOnPointerEnter"],[51,21,50,19,"setOnPointerEnter"],[51,22,50,20,"callback"],[51,30,50,28],[51,32,50,30],[52,6,51,4],[52,10,51,8],[52,11,51,9,"onPointerEnter"],[52,25,51,23],[52,28,51,26,"callback"],[52,36,51,34],[53,4,52,2],[54,4,53,2,"setOnPointerCancel"],[54,22,53,20,"setOnPointerCancel"],[54,23,53,21,"callback"],[54,31,53,29],[54,33,53,31],[55,6,54,4],[55,10,54,8],[55,11,54,9,"onPointerCancel"],[55,26,54,24],[55,29,54,27,"callback"],[55,37,54,35],[56,4,55,2],[57,4,56,2,"setOnPointerOutOfBounds"],[57,27,56,25,"setOnPointerOutOfBounds"],[57,28,56,26,"callback"],[57,36,56,34],[57,38,56,36],[58,6,57,4],[58,10,57,8],[58,11,57,9,"onPointerOutOfBounds"],[58,31,57,29],[58,34,57,32,"callback"],[58,42,57,40],[59,4,58,2],[60,4,59,2,"setOnPointerMoveOver"],[60,24,59,22,"setOnPointerMoveOver"],[60,25,59,23,"callback"],[60,33,59,31],[60,35,59,33],[61,6,60,4],[61,10,60,8],[61,11,60,9,"onPointerMoveOver"],[61,28,60,26],[61,31,60,29,"callback"],[61,39,60,37],[62,4,61,2],[63,4,62,2,"setOnPointerMoveOut"],[63,23,62,21,"setOnPointerMoveOut"],[63,24,62,22,"callback"],[63,32,62,30],[63,34,62,32],[64,6,63,4],[64,10,63,8],[64,11,63,9,"onPointerMoveOut"],[64,27,63,25],[64,30,63,28,"callback"],[64,38,63,36],[65,4,64,2],[66,4,65,2,"setOnWheel"],[66,14,65,12,"setOnWheel"],[66,15,65,13,"callback"],[66,23,65,21],[66,25,65,23],[67,6,66,4],[67,10,66,8],[67,11,66,9,"onWheel"],[67,18,66,16],[67,21,66,19,"callback"],[67,29,66,27],[68,4,67,2],[69,4,68,2,"markAsInBounds"],[69,18,68,16,"markAsInBounds"],[69,19,68,17,"pointerId"],[69,28,68,26],[69,30,68,28],[70,6,69,4],[70,10,69,8],[70,14,69,12],[70,15,69,13,"pointersInBounds"],[70,31,69,29],[70,32,69,30,"indexOf"],[70,39,69,37],[70,40,69,38,"pointerId"],[70,49,69,47],[70,50,69,48],[70,54,69,52],[70,55,69,53],[70,57,69,55],[71,8,70,6],[72,6,71,4],[73,6,72,4],[73,10,72,8],[73,11,72,9,"pointersInBounds"],[73,27,72,25],[73,28,72,26,"push"],[73,32,72,30],[73,33,72,31,"pointerId"],[73,42,72,40],[73,43,72,41],[74,4,73,2],[75,4,74,2,"markAsOutOfBounds"],[75,21,74,19,"markAsOutOfBounds"],[75,22,74,20,"pointerId"],[75,31,74,29],[75,33,74,31],[76,6,75,4],[76,12,75,10,"index"],[76,17,75,15],[76,20,75,18],[76,24,75,22],[76,25,75,23,"pointersInBounds"],[76,41,75,39],[76,42,75,40,"indexOf"],[76,49,75,47],[76,50,75,48,"pointerId"],[76,59,75,57],[76,60,75,58],[77,6,76,4],[77,10,76,8,"index"],[77,15,76,13],[77,18,76,16],[77,19,76,17],[77,21,76,19],[78,8,77,6],[79,6,78,4],[80,6,79,4],[80,10,79,8],[80,11,79,9,"pointersInBounds"],[80,27,79,25],[80,28,79,26,"splice"],[80,34,79,32],[80,35,79,33,"index"],[80,40,79,38],[80,42,79,40],[80,43,79,41],[80,44,79,42],[81,4,80,2],[82,4,81,2,"resetManager"],[82,16,81,14,"resetManager"],[82,17,81,14],[82,19,81,17],[83,6,82,4],[84,6,83,4],[85,6,84,4],[86,6,85,4],[87,6,86,4],[88,6,87,4],[90,6,89,4],[90,10,89,8],[90,11,89,9,"activePointersCounter"],[90,32,89,30],[90,35,89,33],[90,36,89,34],[91,6,90,4],[91,10,90,8],[91,11,90,9,"pointersInBounds"],[91,27,90,25],[91,30,90,28],[91,32,90,30],[92,4,91,2],[93,2,92,0],[94,2,93,0,"exports"],[94,9,93,7],[94,10,93,8,"default"],[94,17,93,15],[94,20,93,18,"EventManager"],[94,32,93,30],[95,0,93,31],[95,3]],"functionMap":{"names":["<global>","EventManager","constructor","onPointerDown","onPointerAdd","onPointerUp","onPointerRemove","onPointerMove","onPointerLeave","onPointerEnter","onPointerCancel","onPointerOutOfBounds","onPointerMoveOver","onPointerMoveOut","onWheel","setOnPointerDown","setOnPointerAdd","setOnPointerUp","setOnPointerRemove","setOnPointerMove","setOnPointerLeave","setOnPointerEnter","setOnPointerCancel","setOnPointerOutOfBounds","setOnPointerMoveOver","setOnPointerMoveOut","setOnWheel","markAsInBounds","markAsOutOfBounds","resetManager"],"mappings":"AAA;ACQ;ECE;GDG;EEC,wBF;EGC,uBH;EIC,sBJ;EKC,0BL;EMC,wBN;EOC,yBP;EQC,yBR;ESC;GTK;EUC,+BV;EWC,4BX;EYC,2BZ;EaC,kBb;EcC;GdE;EeC;GfE;EgBC;GhBE;EiBC;GjBE;EkBC;GlBE;EmBC;GnBE;EoBC;GpBE;EqBC;GrBE;EsBC;GtBE;EuBC;GvBE;EwBC;GxBE;EyBC;GzBE;E0BC;G1BK;E2BC;G3BM;E4BC;G5BU;CDC"},"hasCjsExports":true},"type":"js/module"}]}