{"dependencies":[{"name":"./CircularBuffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":45,"index":151},"end":{"line":7,"column":72,"index":178}}],"key":"kLmCiPfKlVuhgpSUa2CQDmaipq8=","exportNames":["*"],"imports":1}},{"name":"./LeastSquareSolver","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":48,"index":229},"end":{"line":8,"column":78,"index":259}}],"key":"/RKGCJZSWujAKDAHNEtloslp9BQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _CircularBuffer = _interopRequireDefault(require(_dependencyMap[0], \"./CircularBuffer\"));\n  var _LeastSquareSolver = _interopRequireDefault(require(_dependencyMap[1], \"./LeastSquareSolver\"));\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  class VelocityTracker {\n    assumePointerMoveStoppedMilliseconds = 40;\n    historySize = 20;\n    horizonMilliseconds = 300;\n    minSampleSize = 3;\n    constructor() {\n      this.samples = new _CircularBuffer.default(this.historySize);\n    }\n    add(event) {\n      this.samples.push(event);\n    }\n\n    // Returns an estimate of the velocity of the object being tracked by the\n    // tracker given the current information available to the tracker.\n    //\n    // Information is added using [addPosition].\n    //\n    // Returns null if there is no data on which to base an estimate.\n    getVelocityEstimate() {\n      const x = [];\n      const y = [];\n      const w = [];\n      const time = [];\n      let sampleCount = 0;\n      let index = this.samples.size - 1;\n      const newestSample = this.samples.get(index);\n      if (!newestSample) {\n        return null;\n      }\n      let previousSample = newestSample;\n\n      // Starting with the most recent PointAtTime sample, iterate backwards while\n      // the samples represent continuous motion.\n      while (sampleCount < this.samples.size) {\n        const sample = this.samples.get(index);\n        const age = newestSample.time - sample.time;\n        const delta = Math.abs(sample.time - previousSample.time);\n        previousSample = sample;\n        if (age > this.horizonMilliseconds || delta > this.assumePointerMoveStoppedMilliseconds) {\n          break;\n        }\n        x.push(sample.x);\n        y.push(sample.y);\n        w.push(1);\n        time.push(-age);\n        sampleCount++;\n        index--;\n      }\n      if (sampleCount >= this.minSampleSize) {\n        const xSolver = new _LeastSquareSolver.default(time, x, w);\n        const xFit = xSolver.solve(2);\n        if (xFit !== null) {\n          const ySolver = new _LeastSquareSolver.default(time, y, w);\n          const yFit = ySolver.solve(2);\n          if (yFit !== null) {\n            const xVelocity = xFit.coefficients[1] * 1000;\n            const yVelocity = yFit.coefficients[1] * 1000;\n            return [xVelocity, yVelocity];\n          }\n        }\n      }\n      return null;\n    }\n    get velocity() {\n      const estimate = this.getVelocityEstimate();\n      if (estimate !== null) {\n        return estimate;\n      }\n      return [0, 0];\n    }\n    reset() {\n      this.samples.clear();\n    }\n  }\n  exports.default = VelocityTracker;\n});","lineCount":90,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,7,0],[8,6,7,4,"_CircularBuffer"],[8,21,7,19],[8,24,7,22,"_interopRequireDefault"],[8,46,7,44],[8,47,7,45,"require"],[8,54,7,52],[8,55,7,52,"_dependencyMap"],[8,69,7,52],[8,92,7,71],[8,93,7,72],[8,94,7,73],[9,2,8,0],[9,6,8,4,"_LeastSquareSolver"],[9,24,8,22],[9,27,8,25,"_interopRequireDefault"],[9,49,8,47],[9,50,8,48,"require"],[9,57,8,55],[9,58,8,55,"_dependencyMap"],[9,72,8,55],[9,98,8,77],[9,99,8,78],[9,100,8,79],[10,2,9,0],[10,11,9,9,"_interopRequireDefault"],[10,33,9,31,"_interopRequireDefault"],[10,34,9,32,"e"],[10,35,9,33],[10,37,9,35],[11,4,9,37],[11,11,9,44,"e"],[11,12,9,45],[11,16,9,49,"e"],[11,17,9,50],[11,18,9,51,"__esModule"],[11,28,9,61],[11,31,9,64,"e"],[11,32,9,65],[11,35,9,68],[12,6,9,70,"default"],[12,13,9,77],[12,15,9,79,"e"],[13,4,9,81],[13,5,9,82],[14,2,9,84],[15,2,10,0],[15,8,10,6,"VelocityTracker"],[15,23,10,21],[15,24,10,22],[16,4,11,2,"assumePointerMoveStoppedMilliseconds"],[16,40,11,38],[16,43,11,41],[16,45,11,43],[17,4,12,2,"historySize"],[17,15,12,13],[17,18,12,16],[17,20,12,18],[18,4,13,2,"horizonMilliseconds"],[18,23,13,21],[18,26,13,24],[18,29,13,27],[19,4,14,2,"minSampleSize"],[19,17,14,15],[19,20,14,18],[19,21,14,19],[20,4,15,2,"constructor"],[20,15,15,13,"constructor"],[20,16,15,13],[20,18,15,16],[21,6,16,4],[21,10,16,8],[21,11,16,9,"samples"],[21,18,16,16],[21,21,16,19],[21,25,16,23,"_CircularBuffer"],[21,40,16,38],[21,41,16,39,"default"],[21,48,16,46],[21,49,16,47],[21,53,16,51],[21,54,16,52,"historySize"],[21,65,16,63],[21,66,16,64],[22,4,17,2],[23,4,18,2,"add"],[23,7,18,5,"add"],[23,8,18,6,"event"],[23,13,18,11],[23,15,18,13],[24,6,19,4],[24,10,19,8],[24,11,19,9,"samples"],[24,18,19,16],[24,19,19,17,"push"],[24,23,19,21],[24,24,19,22,"event"],[24,29,19,27],[24,30,19,28],[25,4,20,2],[27,4,22,2],[28,4,23,2],[29,4,24,2],[30,4,25,2],[31,4,26,2],[32,4,27,2],[33,4,28,2,"getVelocityEstimate"],[33,23,28,21,"getVelocityEstimate"],[33,24,28,21],[33,26,28,24],[34,6,29,4],[34,12,29,10,"x"],[34,13,29,11],[34,16,29,14],[34,18,29,16],[35,6,30,4],[35,12,30,10,"y"],[35,13,30,11],[35,16,30,14],[35,18,30,16],[36,6,31,4],[36,12,31,10,"w"],[36,13,31,11],[36,16,31,14],[36,18,31,16],[37,6,32,4],[37,12,32,10,"time"],[37,16,32,14],[37,19,32,17],[37,21,32,19],[38,6,33,4],[38,10,33,8,"sampleCount"],[38,21,33,19],[38,24,33,22],[38,25,33,23],[39,6,34,4],[39,10,34,8,"index"],[39,15,34,13],[39,18,34,16],[39,22,34,20],[39,23,34,21,"samples"],[39,30,34,28],[39,31,34,29,"size"],[39,35,34,33],[39,38,34,36],[39,39,34,37],[40,6,35,4],[40,12,35,10,"newestSample"],[40,24,35,22],[40,27,35,25],[40,31,35,29],[40,32,35,30,"samples"],[40,39,35,37],[40,40,35,38,"get"],[40,43,35,41],[40,44,35,42,"index"],[40,49,35,47],[40,50,35,48],[41,6,36,4],[41,10,36,8],[41,11,36,9,"newestSample"],[41,23,36,21],[41,25,36,23],[42,8,37,6],[42,15,37,13],[42,19,37,17],[43,6,38,4],[44,6,39,4],[44,10,39,8,"previousSample"],[44,24,39,22],[44,27,39,25,"newestSample"],[44,39,39,37],[46,6,41,4],[47,6,42,4],[48,6,43,4],[48,13,43,11,"sampleCount"],[48,24,43,22],[48,27,43,25],[48,31,43,29],[48,32,43,30,"samples"],[48,39,43,37],[48,40,43,38,"size"],[48,44,43,42],[48,46,43,44],[49,8,44,6],[49,14,44,12,"sample"],[49,20,44,18],[49,23,44,21],[49,27,44,25],[49,28,44,26,"samples"],[49,35,44,33],[49,36,44,34,"get"],[49,39,44,37],[49,40,44,38,"index"],[49,45,44,43],[49,46,44,44],[50,8,45,6],[50,14,45,12,"age"],[50,17,45,15],[50,20,45,18,"newestSample"],[50,32,45,30],[50,33,45,31,"time"],[50,37,45,35],[50,40,45,38,"sample"],[50,46,45,44],[50,47,45,45,"time"],[50,51,45,49],[51,8,46,6],[51,14,46,12,"delta"],[51,19,46,17],[51,22,46,20,"Math"],[51,26,46,24],[51,27,46,25,"abs"],[51,30,46,28],[51,31,46,29,"sample"],[51,37,46,35],[51,38,46,36,"time"],[51,42,46,40],[51,45,46,43,"previousSample"],[51,59,46,57],[51,60,46,58,"time"],[51,64,46,62],[51,65,46,63],[52,8,47,6,"previousSample"],[52,22,47,20],[52,25,47,23,"sample"],[52,31,47,29],[53,8,48,6],[53,12,48,10,"age"],[53,15,48,13],[53,18,48,16],[53,22,48,20],[53,23,48,21,"horizonMilliseconds"],[53,42,48,40],[53,46,48,44,"delta"],[53,51,48,49],[53,54,48,52],[53,58,48,56],[53,59,48,57,"assumePointerMoveStoppedMilliseconds"],[53,95,48,93],[53,97,48,95],[54,10,49,8],[55,8,50,6],[56,8,51,6,"x"],[56,9,51,7],[56,10,51,8,"push"],[56,14,51,12],[56,15,51,13,"sample"],[56,21,51,19],[56,22,51,20,"x"],[56,23,51,21],[56,24,51,22],[57,8,52,6,"y"],[57,9,52,7],[57,10,52,8,"push"],[57,14,52,12],[57,15,52,13,"sample"],[57,21,52,19],[57,22,52,20,"y"],[57,23,52,21],[57,24,52,22],[58,8,53,6,"w"],[58,9,53,7],[58,10,53,8,"push"],[58,14,53,12],[58,15,53,13],[58,16,53,14],[58,17,53,15],[59,8,54,6,"time"],[59,12,54,10],[59,13,54,11,"push"],[59,17,54,15],[59,18,54,16],[59,19,54,17,"age"],[59,22,54,20],[59,23,54,21],[60,8,55,6,"sampleCount"],[60,19,55,17],[60,21,55,19],[61,8,56,6,"index"],[61,13,56,11],[61,15,56,13],[62,6,57,4],[63,6,58,4],[63,10,58,8,"sampleCount"],[63,21,58,19],[63,25,58,23],[63,29,58,27],[63,30,58,28,"minSampleSize"],[63,43,58,41],[63,45,58,43],[64,8,59,6],[64,14,59,12,"xSolver"],[64,21,59,19],[64,24,59,22],[64,28,59,26,"_LeastSquareSolver"],[64,46,59,44],[64,47,59,45,"default"],[64,54,59,52],[64,55,59,53,"time"],[64,59,59,57],[64,61,59,59,"x"],[64,62,59,60],[64,64,59,62,"w"],[64,65,59,63],[64,66,59,64],[65,8,60,6],[65,14,60,12,"xFit"],[65,18,60,16],[65,21,60,19,"xSolver"],[65,28,60,26],[65,29,60,27,"solve"],[65,34,60,32],[65,35,60,33],[65,36,60,34],[65,37,60,35],[66,8,61,6],[66,12,61,10,"xFit"],[66,16,61,14],[66,21,61,19],[66,25,61,23],[66,27,61,25],[67,10,62,8],[67,16,62,14,"ySolver"],[67,23,62,21],[67,26,62,24],[67,30,62,28,"_LeastSquareSolver"],[67,48,62,46],[67,49,62,47,"default"],[67,56,62,54],[67,57,62,55,"time"],[67,61,62,59],[67,63,62,61,"y"],[67,64,62,62],[67,66,62,64,"w"],[67,67,62,65],[67,68,62,66],[68,10,63,8],[68,16,63,14,"yFit"],[68,20,63,18],[68,23,63,21,"ySolver"],[68,30,63,28],[68,31,63,29,"solve"],[68,36,63,34],[68,37,63,35],[68,38,63,36],[68,39,63,37],[69,10,64,8],[69,14,64,12,"yFit"],[69,18,64,16],[69,23,64,21],[69,27,64,25],[69,29,64,27],[70,12,65,10],[70,18,65,16,"xVelocity"],[70,27,65,25],[70,30,65,28,"xFit"],[70,34,65,32],[70,35,65,33,"coefficients"],[70,47,65,45],[70,48,65,46],[70,49,65,47],[70,50,65,48],[70,53,65,51],[70,57,65,55],[71,12,66,10],[71,18,66,16,"yVelocity"],[71,27,66,25],[71,30,66,28,"yFit"],[71,34,66,32],[71,35,66,33,"coefficients"],[71,47,66,45],[71,48,66,46],[71,49,66,47],[71,50,66,48],[71,53,66,51],[71,57,66,55],[72,12,67,10],[72,19,67,17],[72,20,67,18,"xVelocity"],[72,29,67,27],[72,31,67,29,"yVelocity"],[72,40,67,38],[72,41,67,39],[73,10,68,8],[74,8,69,6],[75,6,70,4],[76,6,71,4],[76,13,71,11],[76,17,71,15],[77,4,72,2],[78,4,73,2],[78,8,73,6,"velocity"],[78,16,73,14,"velocity"],[78,17,73,14],[78,19,73,17],[79,6,74,4],[79,12,74,10,"estimate"],[79,20,74,18],[79,23,74,21],[79,27,74,25],[79,28,74,26,"getVelocityEstimate"],[79,47,74,45],[79,48,74,46],[79,49,74,47],[80,6,75,4],[80,10,75,8,"estimate"],[80,18,75,16],[80,23,75,21],[80,27,75,25],[80,29,75,27],[81,8,76,6],[81,15,76,13,"estimate"],[81,23,76,21],[82,6,77,4],[83,6,78,4],[83,13,78,11],[83,14,78,12],[83,15,78,13],[83,17,78,15],[83,18,78,16],[83,19,78,17],[84,4,79,2],[85,4,80,2,"reset"],[85,9,80,7,"reset"],[85,10,80,7],[85,12,80,10],[86,6,81,4],[86,10,81,8],[86,11,81,9,"samples"],[86,18,81,16],[86,19,81,17,"clear"],[86,24,81,22],[86,25,81,23],[86,26,81,24],[87,4,82,2],[88,2,83,0],[89,2,84,0,"exports"],[89,9,84,7],[89,10,84,8,"default"],[89,17,84,15],[89,20,84,18,"VelocityTracker"],[89,35,84,33],[90,0,84,34],[90,3]],"functionMap":{"names":["<global>","_interopRequireDefault","VelocityTracker","constructor","add","getVelocityEstimate","get__velocity","reset"],"mappings":"AAA;ACQ,qFD;AEC;ECK;GDE;EEC;GFE;EGQ;GH4C;EIC;GJM;EKC;GLE;CFC"},"hasCjsExports":true},"type":"js/module"}]}