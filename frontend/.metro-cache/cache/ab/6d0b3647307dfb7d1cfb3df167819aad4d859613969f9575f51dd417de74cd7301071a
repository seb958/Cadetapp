{"dependencies":[{"name":"./CircularBuffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":45,"index":152},"end":{"line":8,"column":72,"index":179}}],"key":"kLmCiPfKlVuhgpSUa2CQDmaipq8=","exportNames":["*"],"imports":1}},{"name":"./LeastSquareSolver","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":48,"index":231},"end":{"line":10,"column":78,"index":261}}],"key":"/RKGCJZSWujAKDAHNEtloslp9BQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _CircularBuffer = _interopRequireDefault(require(_dependencyMap[0], \"./CircularBuffer\"));\n  var _LeastSquareSolver = _interopRequireDefault(require(_dependencyMap[1], \"./LeastSquareSolver\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class VelocityTracker {\n    constructor() {\n      _defineProperty(this, \"assumePointerMoveStoppedMilliseconds\", 40);\n      _defineProperty(this, \"historySize\", 20);\n      _defineProperty(this, \"horizonMilliseconds\", 300);\n      _defineProperty(this, \"minSampleSize\", 3);\n      _defineProperty(this, \"samples\", void 0);\n      this.samples = new _CircularBuffer.default(this.historySize);\n    }\n    add(event) {\n      this.samples.push(event);\n    } // Returns an estimate of the velocity of the object being tracked by the\n    // tracker given the current information available to the tracker.\n    //\n    // Information is added using [addPosition].\n    //\n    // Returns null if there is no data on which to base an estimate.\n\n    getVelocityEstimate() {\n      const x = [];\n      const y = [];\n      const w = [];\n      const time = [];\n      let sampleCount = 0;\n      let index = this.samples.size - 1;\n      const newestSample = this.samples.get(index);\n      if (!newestSample) {\n        return null;\n      }\n      let previousSample = newestSample; // Starting with the most recent PointAtTime sample, iterate backwards while\n      // the samples represent continuous motion.\n\n      while (sampleCount < this.samples.size) {\n        const sample = this.samples.get(index);\n        const age = newestSample.time - sample.time;\n        const delta = Math.abs(sample.time - previousSample.time);\n        previousSample = sample;\n        if (age > this.horizonMilliseconds || delta > this.assumePointerMoveStoppedMilliseconds) {\n          break;\n        }\n        x.push(sample.x);\n        y.push(sample.y);\n        w.push(1);\n        time.push(-age);\n        sampleCount++;\n        index--;\n      }\n      if (sampleCount >= this.minSampleSize) {\n        const xSolver = new _LeastSquareSolver.default(time, x, w);\n        const xFit = xSolver.solve(2);\n        if (xFit !== null) {\n          const ySolver = new _LeastSquareSolver.default(time, y, w);\n          const yFit = ySolver.solve(2);\n          if (yFit !== null) {\n            const xVelocity = xFit.coefficients[1] * 1000;\n            const yVelocity = yFit.coefficients[1] * 1000;\n            return [xVelocity, yVelocity];\n          }\n        }\n      }\n      return null;\n    }\n    get velocity() {\n      const estimate = this.getVelocityEstimate();\n      if (estimate !== null) {\n        return estimate;\n      }\n      return [0, 0];\n    }\n    reset() {\n      this.samples.clear();\n    }\n  }\n  exports.default = VelocityTracker;\n});","lineCount":102,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,8,0],[8,6,8,4,"_CircularBuffer"],[8,21,8,19],[8,24,8,22,"_interopRequireDefault"],[8,46,8,44],[8,47,8,45,"require"],[8,54,8,52],[8,55,8,52,"_dependencyMap"],[8,69,8,52],[8,92,8,71],[8,93,8,72],[8,94,8,73],[9,2,10,0],[9,6,10,4,"_LeastSquareSolver"],[9,24,10,22],[9,27,10,25,"_interopRequireDefault"],[9,49,10,47],[9,50,10,48,"require"],[9,57,10,55],[9,58,10,55,"_dependencyMap"],[9,72,10,55],[9,98,10,77],[9,99,10,78],[9,100,10,79],[10,2,12,0],[10,11,12,9,"_interopRequireDefault"],[10,33,12,31,"_interopRequireDefault"],[10,34,12,32,"obj"],[10,37,12,35],[10,39,12,37],[11,4,12,39],[11,11,12,46,"obj"],[11,14,12,49],[11,18,12,53,"obj"],[11,21,12,56],[11,22,12,57,"__esModule"],[11,32,12,67],[11,35,12,70,"obj"],[11,38,12,73],[11,41,12,76],[12,6,12,78,"default"],[12,13,12,85],[12,15,12,87,"obj"],[13,4,12,91],[13,5,12,92],[14,2,12,94],[15,2,14,0],[15,11,14,9,"_defineProperty"],[15,26,14,24,"_defineProperty"],[15,27,14,25,"obj"],[15,30,14,28],[15,32,14,30,"key"],[15,35,14,33],[15,37,14,35,"value"],[15,42,14,40],[15,44,14,42],[16,4,14,44],[16,8,14,48,"key"],[16,11,14,51],[16,15,14,55,"obj"],[16,18,14,58],[16,20,14,60],[17,6,14,62,"Object"],[17,12,14,68],[17,13,14,69,"defineProperty"],[17,27,14,83],[17,28,14,84,"obj"],[17,31,14,87],[17,33,14,89,"key"],[17,36,14,92],[17,38,14,94],[18,8,14,96,"value"],[18,13,14,101],[18,15,14,103,"value"],[18,20,14,108],[19,8,14,110,"enumerable"],[19,18,14,120],[19,20,14,122],[19,24,14,126],[20,8,14,128,"configurable"],[20,20,14,140],[20,22,14,142],[20,26,14,146],[21,8,14,148,"writable"],[21,16,14,156],[21,18,14,158],[22,6,14,163],[22,7,14,164],[22,8,14,165],[23,4,14,167],[23,5,14,168],[23,11,14,174],[24,6,14,176,"obj"],[24,9,14,179],[24,10,14,180,"key"],[24,13,14,183],[24,14,14,184],[24,17,14,187,"value"],[24,22,14,192],[25,4,14,194],[26,4,14,196],[26,11,14,203,"obj"],[26,14,14,206],[27,2,14,208],[28,2,16,0],[28,8,16,6,"VelocityTracker"],[28,23,16,21],[28,24,16,22],[29,4,17,2,"constructor"],[29,15,17,13,"constructor"],[29,16,17,13],[29,18,17,16],[30,6,18,4,"_defineProperty"],[30,21,18,19],[30,22,18,20],[30,26,18,24],[30,28,18,26],[30,66,18,64],[30,68,18,66],[30,70,18,68],[30,71,18,69],[31,6,20,4,"_defineProperty"],[31,21,20,19],[31,22,20,20],[31,26,20,24],[31,28,20,26],[31,41,20,39],[31,43,20,41],[31,45,20,43],[31,46,20,44],[32,6,22,4,"_defineProperty"],[32,21,22,19],[32,22,22,20],[32,26,22,24],[32,28,22,26],[32,49,22,47],[32,51,22,49],[32,54,22,52],[32,55,22,53],[33,6,24,4,"_defineProperty"],[33,21,24,19],[33,22,24,20],[33,26,24,24],[33,28,24,26],[33,43,24,41],[33,45,24,43],[33,46,24,44],[33,47,24,45],[34,6,26,4,"_defineProperty"],[34,21,26,19],[34,22,26,20],[34,26,26,24],[34,28,26,26],[34,37,26,35],[34,39,26,37],[34,44,26,42],[34,45,26,43],[34,46,26,44],[35,6,28,4],[35,10,28,8],[35,11,28,9,"samples"],[35,18,28,16],[35,21,28,19],[35,25,28,23,"_CircularBuffer"],[35,40,28,38],[35,41,28,39,"default"],[35,48,28,46],[35,49,28,47],[35,53,28,51],[35,54,28,52,"historySize"],[35,65,28,63],[35,66,28,64],[36,4,29,2],[37,4,31,2,"add"],[37,7,31,5,"add"],[37,8,31,6,"event"],[37,13,31,11],[37,15,31,13],[38,6,32,4],[38,10,32,8],[38,11,32,9,"samples"],[38,18,32,16],[38,19,32,17,"push"],[38,23,32,21],[38,24,32,22,"event"],[38,29,32,27],[38,30,32,28],[39,4,33,2],[39,5,33,3],[39,6,33,4],[40,4,34,2],[41,4,35,2],[42,4,36,2],[43,4,37,2],[44,4,38,2],[46,4,41,2,"getVelocityEstimate"],[46,23,41,21,"getVelocityEstimate"],[46,24,41,21],[46,26,41,24],[47,6,42,4],[47,12,42,10,"x"],[47,13,42,11],[47,16,42,14],[47,18,42,16],[48,6,43,4],[48,12,43,10,"y"],[48,13,43,11],[48,16,43,14],[48,18,43,16],[49,6,44,4],[49,12,44,10,"w"],[49,13,44,11],[49,16,44,14],[49,18,44,16],[50,6,45,4],[50,12,45,10,"time"],[50,16,45,14],[50,19,45,17],[50,21,45,19],[51,6,46,4],[51,10,46,8,"sampleCount"],[51,21,46,19],[51,24,46,22],[51,25,46,23],[52,6,47,4],[52,10,47,8,"index"],[52,15,47,13],[52,18,47,16],[52,22,47,20],[52,23,47,21,"samples"],[52,30,47,28],[52,31,47,29,"size"],[52,35,47,33],[52,38,47,36],[52,39,47,37],[53,6,48,4],[53,12,48,10,"newestSample"],[53,24,48,22],[53,27,48,25],[53,31,48,29],[53,32,48,30,"samples"],[53,39,48,37],[53,40,48,38,"get"],[53,43,48,41],[53,44,48,42,"index"],[53,49,48,47],[53,50,48,48],[54,6,50,4],[54,10,50,8],[54,11,50,9,"newestSample"],[54,23,50,21],[54,25,50,23],[55,8,51,6],[55,15,51,13],[55,19,51,17],[56,6,52,4],[57,6,54,4],[57,10,54,8,"previousSample"],[57,24,54,22],[57,27,54,25,"newestSample"],[57,39,54,37],[57,40,54,38],[57,41,54,39],[58,6,55,4],[60,6,57,4],[60,13,57,11,"sampleCount"],[60,24,57,22],[60,27,57,25],[60,31,57,29],[60,32,57,30,"samples"],[60,39,57,37],[60,40,57,38,"size"],[60,44,57,42],[60,46,57,44],[61,8,58,6],[61,14,58,12,"sample"],[61,20,58,18],[61,23,58,21],[61,27,58,25],[61,28,58,26,"samples"],[61,35,58,33],[61,36,58,34,"get"],[61,39,58,37],[61,40,58,38,"index"],[61,45,58,43],[61,46,58,44],[62,8,59,6],[62,14,59,12,"age"],[62,17,59,15],[62,20,59,18,"newestSample"],[62,32,59,30],[62,33,59,31,"time"],[62,37,59,35],[62,40,59,38,"sample"],[62,46,59,44],[62,47,59,45,"time"],[62,51,59,49],[63,8,60,6],[63,14,60,12,"delta"],[63,19,60,17],[63,22,60,20,"Math"],[63,26,60,24],[63,27,60,25,"abs"],[63,30,60,28],[63,31,60,29,"sample"],[63,37,60,35],[63,38,60,36,"time"],[63,42,60,40],[63,45,60,43,"previousSample"],[63,59,60,57],[63,60,60,58,"time"],[63,64,60,62],[63,65,60,63],[64,8,61,6,"previousSample"],[64,22,61,20],[64,25,61,23,"sample"],[64,31,61,29],[65,8,63,6],[65,12,63,10,"age"],[65,15,63,13],[65,18,63,16],[65,22,63,20],[65,23,63,21,"horizonMilliseconds"],[65,42,63,40],[65,46,63,44,"delta"],[65,51,63,49],[65,54,63,52],[65,58,63,56],[65,59,63,57,"assumePointerMoveStoppedMilliseconds"],[65,95,63,93],[65,97,63,95],[66,10,64,8],[67,8,65,6],[68,8,67,6,"x"],[68,9,67,7],[68,10,67,8,"push"],[68,14,67,12],[68,15,67,13,"sample"],[68,21,67,19],[68,22,67,20,"x"],[68,23,67,21],[68,24,67,22],[69,8,68,6,"y"],[69,9,68,7],[69,10,68,8,"push"],[69,14,68,12],[69,15,68,13,"sample"],[69,21,68,19],[69,22,68,20,"y"],[69,23,68,21],[69,24,68,22],[70,8,69,6,"w"],[70,9,69,7],[70,10,69,8,"push"],[70,14,69,12],[70,15,69,13],[70,16,69,14],[70,17,69,15],[71,8,70,6,"time"],[71,12,70,10],[71,13,70,11,"push"],[71,17,70,15],[71,18,70,16],[71,19,70,17,"age"],[71,22,70,20],[71,23,70,21],[72,8,71,6,"sampleCount"],[72,19,71,17],[72,21,71,19],[73,8,72,6,"index"],[73,13,72,11],[73,15,72,13],[74,6,73,4],[75,6,75,4],[75,10,75,8,"sampleCount"],[75,21,75,19],[75,25,75,23],[75,29,75,27],[75,30,75,28,"minSampleSize"],[75,43,75,41],[75,45,75,43],[76,8,76,6],[76,14,76,12,"xSolver"],[76,21,76,19],[76,24,76,22],[76,28,76,26,"_LeastSquareSolver"],[76,46,76,44],[76,47,76,45,"default"],[76,54,76,52],[76,55,76,53,"time"],[76,59,76,57],[76,61,76,59,"x"],[76,62,76,60],[76,64,76,62,"w"],[76,65,76,63],[76,66,76,64],[77,8,77,6],[77,14,77,12,"xFit"],[77,18,77,16],[77,21,77,19,"xSolver"],[77,28,77,26],[77,29,77,27,"solve"],[77,34,77,32],[77,35,77,33],[77,36,77,34],[77,37,77,35],[78,8,79,6],[78,12,79,10,"xFit"],[78,16,79,14],[78,21,79,19],[78,25,79,23],[78,27,79,25],[79,10,80,8],[79,16,80,14,"ySolver"],[79,23,80,21],[79,26,80,24],[79,30,80,28,"_LeastSquareSolver"],[79,48,80,46],[79,49,80,47,"default"],[79,56,80,54],[79,57,80,55,"time"],[79,61,80,59],[79,63,80,61,"y"],[79,64,80,62],[79,66,80,64,"w"],[79,67,80,65],[79,68,80,66],[80,10,81,8],[80,16,81,14,"yFit"],[80,20,81,18],[80,23,81,21,"ySolver"],[80,30,81,28],[80,31,81,29,"solve"],[80,36,81,34],[80,37,81,35],[80,38,81,36],[80,39,81,37],[81,10,83,8],[81,14,83,12,"yFit"],[81,18,83,16],[81,23,83,21],[81,27,83,25],[81,29,83,27],[82,12,84,10],[82,18,84,16,"xVelocity"],[82,27,84,25],[82,30,84,28,"xFit"],[82,34,84,32],[82,35,84,33,"coefficients"],[82,47,84,45],[82,48,84,46],[82,49,84,47],[82,50,84,48],[82,53,84,51],[82,57,84,55],[83,12,85,10],[83,18,85,16,"yVelocity"],[83,27,85,25],[83,30,85,28,"yFit"],[83,34,85,32],[83,35,85,33,"coefficients"],[83,47,85,45],[83,48,85,46],[83,49,85,47],[83,50,85,48],[83,53,85,51],[83,57,85,55],[84,12,86,10],[84,19,86,17],[84,20,86,18,"xVelocity"],[84,29,86,27],[84,31,86,29,"yVelocity"],[84,40,86,38],[84,41,86,39],[85,10,87,8],[86,8,88,6],[87,6,89,4],[88,6,91,4],[88,13,91,11],[88,17,91,15],[89,4,92,2],[90,4,94,2],[90,8,94,6,"velocity"],[90,16,94,14,"velocity"],[90,17,94,14],[90,19,94,17],[91,6,95,4],[91,12,95,10,"estimate"],[91,20,95,18],[91,23,95,21],[91,27,95,25],[91,28,95,26,"getVelocityEstimate"],[91,47,95,45],[91,48,95,46],[91,49,95,47],[92,6,97,4],[92,10,97,8,"estimate"],[92,18,97,16],[92,23,97,21],[92,27,97,25],[92,29,97,27],[93,8,98,6],[93,15,98,13,"estimate"],[93,23,98,21],[94,6,99,4],[95,6,101,4],[95,13,101,11],[95,14,101,12],[95,15,101,13],[95,17,101,15],[95,18,101,16],[95,19,101,17],[96,4,102,2],[97,4,104,2,"reset"],[97,9,104,7,"reset"],[97,10,104,7],[97,12,104,10],[98,6,105,4],[98,10,105,8],[98,11,105,9,"samples"],[98,18,105,16],[98,19,105,17,"clear"],[98,24,105,22],[98,25,105,23],[98,26,105,24],[99,4,106,2],[100,2,108,0],[101,2,110,0,"exports"],[101,9,110,7],[101,10,110,8,"default"],[101,17,110,15],[101,20,110,18,"VelocityTracker"],[101,35,110,33],[102,0,110,34],[102,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_defineProperty","VelocityTracker","constructor","add","getVelocityEstimate","get__velocity","reset"],"mappings":"AAA;ACW,+FD;AEE,iNF;AGE;ECC;GDY;EEE;GFE;EGQ;GHmD;EIE;GJQ;EKE;GLE;CHE"},"hasCjsExports":true},"type":"js/module"}]}