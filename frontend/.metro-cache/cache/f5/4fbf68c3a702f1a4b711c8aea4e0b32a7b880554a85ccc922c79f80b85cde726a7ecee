{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":33,"column":66,"index":922}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA=","exportNames":["*"],"imports":1}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1052},"end":{"line":38,"column":66,"index":1118}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/node_modules/react-native-gesture-handler/src/components/DrawerLayout.tsx\"; // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return DrawerLayout;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4], \"react\");\n  var React = _interopNamespace(_react);\n  var _invariant = require(_dependencyMap[5], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _reactNative = require(_dependencyMap[6], \"react-native\");\n  var _handlersPanGestureHandler = require(_dependencyMap[7], \"../handlers/PanGestureHandler\");\n  var _handlersTapGestureHandler = require(_dependencyMap[8], \"../handlers/TapGestureHandler\");\n  var _State = require(_dependencyMap[9], \"../State\");\n  var _reactJsxDevRuntime = require(_dependencyMap[10], \"react/jsx-dev-runtime\");\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n  /**\n   * @deprecated use Reanimated version of DrawerLayout instead\n   */\n  var DrawerLayout = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck.default)(this, DrawerLayout);\n      _this = (0, _callSuper.default)(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = /*#__PURE__*/React.createRef();\n      _this.pointerEventsView = /*#__PURE__*/React.createRef();\n      _this.panGestureHandler = /*#__PURE__*/React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = (props, state) => {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = ev => {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide?.(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = _ref => {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = (newState, drawerWillShow) => {\n        _this.props.onDrawerStateChanged?.(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = _ref2 => {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _State.State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent\n          });\n        } else if (nativeEvent.state === _State.State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = _ref3 => {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _State.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = _ref4 => {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = showing => {\n        _this.drawerShown = showing;\n        _this.accessibilityIsModalView.current?.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this.pointerEventsView.current?.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        _this.panGestureHandler.current?.setNativeProps({\n          hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = (fromValue, toValue, velocity, speed) => {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity,\n          bounciness: 0,\n          toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed ?? undefined\n        }).start(_ref5 => {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // It's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen?.();\n            } else {\n              _this.props.onDrawerClose?.();\n            }\n          }\n        });\n      };\n      // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = () => {\n        /* Overlay styles */\n        (0, invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_handlersTapGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.renderDrawer = () => {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // We rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.setPanGestureRef = ref => {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef?.(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits.default)(DrawerLayout, _Component);\n    return (0, _createClass.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_handlersPanGestureHandler.PanGestureHandler // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 7\n        }, this);\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1001,\n      flexDirection: 'row'\n    },\n    containerInFront: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1002\n    },\n    containerOnBack: {\n      ..._reactNative.StyleSheet.absoluteFillObject\n    },\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1000\n    }\n  });\n});","lineCount":598,"map":[[4,112,1,0],[5,2,2,0],[6,2,3,0],[7,2,4,0],[8,2,5,0],[9,2,6,0],[10,2,7,0],[11,2,7,0,"Object"],[11,8,7,0],[11,9,7,0,"defineProperty"],[11,23,7,0],[11,24,7,0,"exports"],[11,31,7,0],[12,4,7,0,"value"],[12,9,7,0],[13,2,7,0],[14,2,7,0],[14,11,7,0,"_interopDefault"],[14,27,7,0,"e"],[14,28,7,0],[15,4,7,0],[15,11,7,0,"e"],[15,12,7,0],[15,16,7,0,"e"],[15,17,7,0],[15,18,7,0,"__esModule"],[15,28,7,0],[15,31,7,0,"e"],[15,32,7,0],[16,6,7,0,"default"],[16,13,7,0],[16,15,7,0,"e"],[17,4,7,0],[18,2,7,0],[19,2,7,0],[19,11,7,0,"_interopNamespace"],[19,29,7,0,"e"],[19,30,7,0],[20,4,7,0],[20,8,7,0,"e"],[20,9,7,0],[20,13,7,0,"e"],[20,14,7,0],[20,15,7,0,"__esModule"],[20,25,7,0],[20,34,7,0,"e"],[20,35,7,0],[21,4,7,0],[21,8,7,0,"n"],[21,9,7,0],[22,4,7,0],[22,8,7,0,"e"],[22,9,7,0],[22,11,7,0,"Object"],[22,17,7,0],[22,18,7,0,"keys"],[22,22,7,0],[22,23,7,0,"e"],[22,24,7,0],[22,26,7,0,"forEach"],[22,33,7,0],[22,44,7,0,"k"],[22,45,7,0],[23,6,7,0],[23,10,7,0,"d"],[23,11,7,0],[23,14,7,0,"Object"],[23,20,7,0],[23,21,7,0,"getOwnPropertyDescriptor"],[23,45,7,0],[23,46,7,0,"e"],[23,47,7,0],[23,49,7,0,"k"],[23,50,7,0],[24,6,7,0,"Object"],[24,12,7,0],[24,13,7,0,"defineProperty"],[24,27,7,0],[24,28,7,0,"n"],[24,29,7,0],[24,31,7,0,"k"],[24,32,7,0],[24,34,7,0,"d"],[24,35,7,0],[24,36,7,0,"get"],[24,39,7,0],[24,42,7,0,"d"],[24,43,7,0],[25,8,7,0,"enumerable"],[25,18,7,0],[26,8,7,0,"get"],[26,11,7,0],[26,22,7,0,"get"],[26,23,7,0],[27,10,7,0],[27,17,7,0,"e"],[27,18,7,0],[27,19,7,0,"k"],[27,20,7,0],[28,8,7,0],[29,6,7,0],[30,4,7,0],[31,4,7,0,"n"],[31,5,7,0],[31,6,7,0,"default"],[31,13,7,0],[31,16,7,0,"e"],[31,17,7,0],[32,4,7,0],[32,11,7,0,"n"],[32,12,7,0],[33,2,7,0],[34,2,7,0,"Object"],[34,8,7,0],[34,9,7,0,"defineProperty"],[34,23,7,0],[34,24,7,0,"exports"],[34,31,7,0],[35,4,7,0,"enumerable"],[35,14,7,0],[36,4,7,0,"get"],[36,7,7,0],[36,18,7,0,"get"],[36,19,7,0],[37,6,7,0],[37,13,231,21,"DrawerLayout"],[37,25,231,33],[38,4,231,33],[39,2,231,33],[40,2,231,33],[40,6,231,33,"_babelRuntimeHelpersClassCallCheck"],[40,40,231,33],[40,43,231,33,"require"],[40,50,231,33],[40,51,231,33,"_dependencyMap"],[40,65,231,33],[41,2,231,33],[41,6,231,33,"_classCallCheck"],[41,21,231,33],[41,24,231,33,"_interopDefault"],[41,39,231,33],[41,40,231,33,"_babelRuntimeHelpersClassCallCheck"],[41,74,231,33],[42,2,231,33],[42,6,231,33,"_babelRuntimeHelpersCreateClass"],[42,37,231,33],[42,40,231,33,"require"],[42,47,231,33],[42,48,231,33,"_dependencyMap"],[42,62,231,33],[43,2,231,33],[43,6,231,33,"_createClass"],[43,18,231,33],[43,21,231,33,"_interopDefault"],[43,36,231,33],[43,37,231,33,"_babelRuntimeHelpersCreateClass"],[43,68,231,33],[44,2,231,33],[44,6,231,33,"_babelRuntimeHelpersCallSuper"],[44,35,231,33],[44,38,231,33,"require"],[44,45,231,33],[44,46,231,33,"_dependencyMap"],[44,60,231,33],[45,2,231,33],[45,6,231,33,"_callSuper"],[45,16,231,33],[45,19,231,33,"_interopDefault"],[45,34,231,33],[45,35,231,33,"_babelRuntimeHelpersCallSuper"],[45,64,231,33],[46,2,231,33],[46,6,231,33,"_babelRuntimeHelpersInherits"],[46,34,231,33],[46,37,231,33,"require"],[46,44,231,33],[46,45,231,33,"_dependencyMap"],[46,59,231,33],[47,2,231,33],[47,6,231,33,"_inherits"],[47,15,231,33],[47,18,231,33,"_interopDefault"],[47,33,231,33],[47,34,231,33,"_babelRuntimeHelpersInherits"],[47,62,231,33],[48,2,9,0],[48,6,9,0,"_react"],[48,12,9,0],[48,15,9,0,"require"],[48,22,9,0],[48,23,9,0,"_dependencyMap"],[48,37,9,0],[49,2,9,0],[49,6,9,0,"React"],[49,11,9,0],[49,14,9,0,"_interopNamespace"],[49,31,9,0],[49,32,9,0,"_react"],[49,38,9,0],[50,2,11,0],[50,6,11,0,"_invariant"],[50,16,11,0],[50,19,11,0,"require"],[50,26,11,0],[50,27,11,0,"_dependencyMap"],[50,41,11,0],[51,2,11,0],[51,6,11,0,"invariant"],[51,15,11,0],[51,18,11,0,"_interopDefault"],[51,33,11,0],[51,34,11,0,"_invariant"],[51,44,11,0],[52,2,12,0],[52,6,12,0,"_reactNative"],[52,18,12,0],[52,21,12,0,"require"],[52,28,12,0],[52,29,12,0,"_dependencyMap"],[52,43,12,0],[53,2,33,0],[53,6,33,0,"_handlersPanGestureHandler"],[53,32,33,0],[53,35,33,0,"require"],[53,42,33,0],[53,43,33,0,"_dependencyMap"],[53,57,33,0],[54,2,38,0],[54,6,38,0,"_handlersTapGestureHandler"],[54,32,38,0],[54,35,38,0,"require"],[54,42,38,0],[54,43,38,0,"_dependencyMap"],[54,57,38,0],[55,2,39,0],[55,6,39,0,"_State"],[55,12,39,0],[55,15,39,0,"require"],[55,22,39,0],[55,23,39,0,"_dependencyMap"],[55,37,39,0],[56,2,39,33],[56,6,39,33,"_reactJsxDevRuntime"],[56,25,39,33],[56,28,39,33,"require"],[56,35,39,33],[56,36,39,33,"_dependencyMap"],[56,50,39,33],[57,2,41,0],[57,6,41,6,"DRAG_TOSS"],[57,15,41,15],[57,18,41,18],[57,22,41,22],[58,2,43,0],[58,6,43,6,"IDLE"],[58,10,43,23],[58,13,43,26],[58,19,43,32],[59,2,44,0],[59,6,44,6,"DRAGGING"],[59,14,44,27],[59,17,44,30],[59,27,44,40],[60,2,45,0],[60,6,45,6,"SETTLING"],[60,14,45,27],[60,17,45,30],[60,27,45,40],[62,2,47,0],[63,0,48,0],[64,0,49,0],[66,2,52,0],[67,0,53,0],[68,0,54,0],[70,2,57,0],[71,0,58,0],[72,0,59,0],[74,2,62,0],[75,0,63,0],[76,0,64,0],[78,2,67,0],[79,0,68,0],[80,0,69,0],[82,2,72,0],[83,2,73,0],[84,2,74,0],[86,2,77,0],[87,0,78,0],[88,0,79,0],[90,2,208,0],[91,0,209,0],[92,0,210,0],[94,2,220,0],[95,0,221,0],[96,0,222,0],[97,2,228,0],[98,0,229,0],[99,0,230,0],[100,2,228,0],[100,6,231,21,"DrawerLayout"],[100,18,231,33],[100,44,231,33,"_Component"],[100,54,231,33],[101,4,247,2],[101,13,247,2,"DrawerLayout"],[101,26,247,14,"props"],[101,32,247,38],[101,34,247,40],[102,6,247,40],[102,10,247,40,"_this"],[102,15,247,40],[103,6,247,40],[103,10,247,40,"_classCallCheck"],[103,25,247,40],[103,26,247,40,"default"],[103,33,247,40],[103,41,247,40,"DrawerLayout"],[103,53,247,40],[104,6,248,4,"_this"],[104,11,248,4],[104,18,248,4,"_callSuper"],[104,28,248,4],[104,29,248,4,"default"],[104,36,248,4],[104,44,248,4,"DrawerLayout"],[104,56,248,4],[104,59,248,10,"props"],[104,65,248,15],[105,6,248,17,"_this"],[105,11,248,17],[105,12,283,10,"accessibilityIsModalView"],[105,36,283,34],[105,52,284,4,"React"],[105,57,284,9],[105,58,284,10,"createRef"],[105,67,284,19],[105,68,284,53],[105,69,284,54],[106,6,284,54,"_this"],[106,11,284,54],[106,12,285,10,"pointerEventsView"],[106,29,285,27],[106,45,286,4,"React"],[106,50,286,9],[106,51,286,10,"createRef"],[106,60,286,19],[106,61,286,53],[106,62,286,54],[107,6,286,54,"_this"],[107,11,286,54],[107,12,287,10,"panGestureHandler"],[107,29,287,27],[107,45,287,30,"React"],[107,50,287,35],[107,51,287,36,"createRef"],[107,60,287,45],[107,61,287,72],[107,62,287,73],[108,6,287,73,"_this"],[108,11,287,73],[108,12,288,10,"drawerShown"],[108,23,288,21],[108,26,288,24],[108,31,288,29],[109,6,288,29,"_this"],[109,11,288,29],[109,12,295,10,"updateAnimatedEvent"],[109,31,295,29],[109,34,295,32],[109,35,296,4,"props"],[109,40,296,28],[109,42,297,4,"state"],[109,47,297,28],[109,52,298,7],[110,8,299,4],[111,8,300,4],[111,12,300,12,"drawerPosition"],[111,26,300,26],[111,29,300,56,"props"],[111,34,300,61],[111,35,300,12,"drawerPosition"],[111,49,300,26],[112,10,300,28,"drawerWidth"],[112,21,300,39],[112,24,300,56,"props"],[112,29,300,61],[112,30,300,28,"drawerWidth"],[112,41,300,39],[113,10,300,41,"drawerType"],[113,20,300,51],[113,23,300,56,"props"],[113,28,300,61],[113,29,300,41,"drawerType"],[113,39,300,51],[114,8,301,4],[114,12,302,13,"dragXValue"],[114,22,302,23],[114,25,306,8,"state"],[114,30,306,13],[114,31,302,6,"dragX"],[114,36,302,11],[115,10,303,14,"touchXValue"],[115,21,303,25],[115,24,306,8,"state"],[115,29,306,13],[115,30,303,6,"touchX"],[115,36,303,12],[116,10,304,6,"drawerTranslation"],[116,27,304,23],[116,30,306,8,"state"],[116,35,306,13],[116,36,304,6,"drawerTranslation"],[116,53,304,23],[117,10,305,6,"containerWidth"],[117,24,305,20],[117,27,306,8,"state"],[117,32,306,13],[117,33,305,6,"containerWidth"],[117,47,305,20],[118,8,308,4],[118,12,308,8,"dragX"],[118,17,308,13],[118,20,308,16,"dragXValue"],[118,30,308,26],[119,8,309,4],[119,12,309,8,"touchX"],[119,18,309,14],[119,21,309,17,"touchXValue"],[119,32,309,28],[120,8,311,4],[120,12,311,8,"drawerPosition"],[120,26,311,22],[120,31,311,27],[120,37,311,33],[120,39,311,35],[121,10,312,6],[122,10,313,6],[123,10,314,6],[124,10,315,6],[125,10,316,6],[126,10,317,6],[127,10,318,6,"dragX"],[127,15,318,11],[127,18,318,14,"Animated"],[127,30,318,22],[127,31,318,22,"Animated"],[127,39,318,22],[127,40,318,23,"multiply"],[127,48,318,31],[127,49,319,8],[127,53,319,12,"Animated"],[127,65,319,20],[127,66,319,20,"Animated"],[127,74,319,20],[127,75,319,21,"Value"],[127,80,319,26],[127,81,319,27],[127,82,319,28],[127,83,319,29],[127,84,319,30],[127,86,320,8,"dragXValue"],[127,96,321,6],[127,97,321,25],[127,98,321,26],[127,99,321,27],[128,10,322,6,"touchX"],[128,16,322,12],[128,19,322,15,"Animated"],[128,31,322,23],[128,32,322,23,"Animated"],[128,40,322,23],[128,41,322,24,"add"],[128,44,322,27],[128,45,323,8],[128,49,323,12,"Animated"],[128,61,323,20],[128,62,323,20,"Animated"],[128,70,323,20],[128,71,323,21,"Value"],[128,76,323,26],[128,77,323,27,"containerWidth"],[128,91,323,41],[128,92,323,42],[128,94,324,8,"Animated"],[128,106,324,16],[128,107,324,16,"Animated"],[128,115,324,16],[128,116,324,17,"multiply"],[128,124,324,25],[128,125,324,26],[128,129,324,30,"Animated"],[128,141,324,38],[128,142,324,38,"Animated"],[128,150,324,38],[128,151,324,39,"Value"],[128,156,324,44],[128,157,324,45],[128,158,324,46],[128,159,324,47],[128,160,324,48],[128,162,324,50,"touchXValue"],[128,173,324,61],[128,174,325,6],[128,175,325,25],[128,176,325,26],[128,177,325,27],[129,10,326,6,"touchXValue"],[129,21,326,17],[129,22,326,18,"setValue"],[129,30,326,26],[129,31,326,27,"containerWidth"],[129,45,326,41],[129,46,326,42],[130,8,327,4],[130,9,327,5],[130,15,327,11],[131,10,328,6,"touchXValue"],[131,21,328,17],[131,22,328,18,"setValue"],[131,30,328,26],[131,31,328,27],[131,32,328,28],[131,33,328,29],[132,8,329,4],[134,8,331,4],[135,8,332,4],[136,8,333,4],[137,8,334,4],[138,8,335,4],[139,8,336,4],[140,8,337,4],[141,8,338,4],[142,8,339,4],[143,8,340,4],[144,8,341,4],[145,8,342,4],[146,8,343,4],[147,8,344,4],[148,8,345,4],[149,8,346,4],[150,8,347,4],[151,8,348,4],[152,8,349,4],[153,8,350,4],[154,8,351,4],[155,8,352,4],[156,8,353,4],[157,8,354,4],[158,8,355,4],[159,8,356,4],[159,12,356,8,"translationX"],[159,24,356,20],[159,27,356,23,"dragX"],[159,32,356,28],[160,8,357,4],[160,12,357,8,"drawerType"],[160,22,357,18],[160,27,357,23],[160,34,357,30],[160,36,357,32],[161,10,358,6],[161,14,358,12,"startPositionX"],[161,28,358,26],[161,31,358,29,"Animated"],[161,43,358,37],[161,44,358,37,"Animated"],[161,52,358,37],[161,53,358,38,"add"],[161,56,358,41],[161,57,359,8,"touchX"],[161,63,359,14],[161,65,360,8,"Animated"],[161,77,360,16],[161,78,360,16,"Animated"],[161,86,360,16],[161,87,360,17,"multiply"],[161,95,360,25],[161,96,360,26],[161,100,360,30,"Animated"],[161,112,360,38],[161,113,360,38,"Animated"],[161,121,360,38],[161,122,360,39,"Value"],[161,127,360,44],[161,128,360,45],[161,129,360,46],[161,130,360,47],[161,131,360,48],[161,133,360,50,"dragX"],[161,138,360,55],[161,139,361,6],[161,140,361,7],[162,10,363,6],[162,14,363,12,"dragOffsetFromOnStartPosition"],[162,43,363,41],[162,46,363,44,"startPositionX"],[162,60,363,58],[162,61,363,59,"interpolate"],[162,72,363,70],[162,73,363,71],[163,12,364,8,"inputRange"],[163,22,364,18],[163,24,364,20],[163,25,364,21,"drawerWidth"],[163,36,364,32],[163,39,364,36],[163,40,364,37],[163,42,364,39,"drawerWidth"],[163,53,364,50],[163,55,364,53,"drawerWidth"],[163,66,364,64],[163,69,364,68],[163,70,364,69],[163,71,364,70],[164,12,365,8,"outputRange"],[164,23,365,19],[164,25,365,21],[164,26,365,22],[164,27,365,23],[164,29,365,25],[164,30,365,26],[164,32,365,28],[164,33,365,29],[165,10,366,6],[165,11,366,7],[165,12,366,8],[166,10,367,6,"translationX"],[166,22,367,18],[166,25,367,21,"Animated"],[166,37,367,29],[166,38,367,29,"Animated"],[166,46,367,29],[166,47,367,30,"add"],[166,50,367,33],[166,51,368,8,"dragX"],[166,56,368,13],[166,58,369,8,"dragOffsetFromOnStartPosition"],[166,87,370,6],[166,88,370,25],[166,89,370,26],[166,90,370,27],[167,8,371,4],[168,8,373,4,"_this"],[168,13,373,4],[168,14,373,9,"openValue"],[168,23,373,18],[168,26,373,21,"Animated"],[168,38,373,29],[168,39,373,29,"Animated"],[168,47,373,29],[168,48,373,30,"add"],[168,51,373,33],[168,52,373,34,"translationX"],[168,64,373,46],[168,66,373,48,"drawerTranslation"],[168,83,373,65],[168,84,373,66],[168,85,373,67,"interpolate"],[168,96,373,78],[168,97,373,79],[169,10,374,6,"inputRange"],[169,20,374,16],[169,22,374,18],[169,23,374,19],[169,24,374,20],[169,26,374,22,"drawerWidth"],[169,37,374,33],[169,38,374,35],[170,10,375,6,"outputRange"],[170,21,375,17],[170,23,375,19],[170,24,375,20],[170,25,375,21],[170,27,375,23],[170,28,375,24],[170,29,375,25],[171,10,376,6,"extrapolate"],[171,21,376,17],[171,23,376,19],[172,8,377,4],[172,9,377,5],[172,10,377,6],[173,8,379,4],[173,12,379,10,"gestureOptions"],[173,26,385,5],[173,29,385,8],[174,10,386,6,"useNativeDriver"],[174,25,386,21],[174,27,386,23,"props"],[174,32,386,28],[174,33,386,29,"useNativeAnimations"],[175,8,387,4],[175,9,387,5],[176,8,389,4],[176,12,389,8,"_this"],[176,17,389,8],[176,18,389,13,"props"],[176,23,389,18],[176,24,389,19,"onDrawerSlide"],[176,37,389,32],[176,39,389,34],[177,10,390,6,"gestureOptions"],[177,24,390,20],[177,25,390,21,"listener"],[177,33,390,29],[177,36,390,33,"ev"],[177,38,390,35],[177,42,390,40],[178,12,391,8],[178,16,391,14,"translationX"],[178,28,391,26],[178,31,391,29,"Math"],[178,35,391,33],[178,36,391,34,"floor"],[178,41,391,39],[178,42,391,40,"Math"],[178,46,391,44],[178,47,391,45,"abs"],[178,50,391,48],[178,51,391,49,"ev"],[178,53,391,51],[178,54,391,52,"nativeEvent"],[178,65,391,63],[178,66,391,64,"translationX"],[178,78,391,76],[178,79,391,77],[178,80,391,78],[179,12,392,8],[179,16,392,14,"position"],[179,24,392,22],[179,27,392,25,"translationX"],[179,39,392,37],[179,42,392,40,"_this"],[179,47,392,40],[179,48,392,45,"state"],[179,53,392,50],[179,54,392,51,"containerWidth"],[179,68,392,65],[180,12,394,8,"_this"],[180,17,394,8],[180,18,394,13,"props"],[180,23,394,18],[180,24,394,19,"onDrawerSlide"],[180,37,394,32],[180,40,394,35,"position"],[180,48,394,43],[180,49,394,44],[181,10,395,6],[181,11,395,7],[182,8,396,4],[183,8,398,4,"_this"],[183,13,398,4],[183,14,398,9,"onGestureEvent"],[183,28,398,23],[183,31,398,26,"Animated"],[183,43,398,34],[183,44,398,34,"Animated"],[183,52,398,34],[183,53,398,35,"event"],[183,58,398,40],[183,59,399,6],[183,60,399,7],[184,10,399,9,"nativeEvent"],[184,21,399,20],[184,23,399,22],[185,12,399,24,"translationX"],[185,24,399,36],[185,26,399,38,"dragXValue"],[185,36,399,48],[186,12,399,50,"x"],[186,13,399,51],[186,15,399,53,"touchXValue"],[187,10,399,65],[188,8,399,67],[188,9,399,68],[188,10,399,69],[188,12,400,6,"gestureOptions"],[188,26,401,4],[188,27,401,5],[189,6,402,2],[189,7,402,3],[190,6,402,3,"_this"],[190,11,402,3],[190,12,404,10,"handleContainerLayout"],[190,33,404,31],[190,36,404,34,"_ref"],[190,40,404,34],[190,44,404,74],[191,8,404,74],[191,12,404,37,"nativeEvent"],[191,23,404,48],[191,26,404,48,"_ref"],[191,30,404,48],[191,31,404,37,"nativeEvent"],[191,42,404,48],[192,8,405,4,"_this"],[192,13,405,4],[192,14,405,9,"setState"],[192,22,405,17],[192,23,405,18],[193,10,405,20,"containerWidth"],[193,24,405,34],[193,26,405,36,"nativeEvent"],[193,37,405,47],[193,38,405,48,"layout"],[193,44,405,54],[193,45,405,55,"width"],[194,8,405,61],[194,9,405,62],[194,10,405,63],[195,6,406,2],[195,7,406,3],[196,6,406,3,"_this"],[196,11,406,3],[196,12,408,10,"emitStateChanged"],[196,28,408,26],[196,31,408,29],[196,32,409,4,"newState"],[196,40,409,25],[196,42,410,4,"drawerWillShow"],[196,56,410,27],[196,61,411,7],[197,8,412,4,"_this"],[197,13,412,4],[197,14,412,9,"props"],[197,19,412,14],[197,20,412,15,"onDrawerStateChanged"],[197,40,412,35],[197,43,412,38,"newState"],[197,51,412,46],[197,53,412,48,"drawerWillShow"],[197,67,412,62],[197,68,412,63],[198,6,413,2],[198,7,413,3],[199,6,413,3,"_this"],[199,11,413,3],[199,12,415,10,"openingHandlerStateChange"],[199,37,415,35],[199,40,415,38,"_ref2"],[199,45,415,38],[199,49,417,64],[200,8,417,64],[200,12,416,4,"nativeEvent"],[200,23,416,15],[200,26,416,15,"_ref2"],[200,31,416,15],[200,32,416,4,"nativeEvent"],[200,43,416,15],[201,8,418,4],[201,12,418,8,"nativeEvent"],[201,23,418,19],[201,24,418,20,"oldState"],[201,32,418,28],[201,37,418,33,"State"],[201,43,418,38],[201,44,418,38,"State"],[201,49,418,38],[201,50,418,39,"ACTIVE"],[201,56,418,45],[201,58,418,47],[202,10,419,6,"_this"],[202,15,419,6],[202,16,419,11,"handleRelease"],[202,29,419,24],[202,30,419,25],[203,12,419,27,"nativeEvent"],[204,10,419,39],[204,11,419,40],[204,12,419,41],[205,8,420,4],[205,9,420,5],[205,15,420,11],[205,19,420,15,"nativeEvent"],[205,30,420,26],[205,31,420,27,"state"],[205,36,420,32],[205,41,420,37,"State"],[205,47,420,42],[205,48,420,42,"State"],[205,53,420,42],[205,54,420,43,"ACTIVE"],[205,60,420,49],[205,62,420,51],[206,10,421,6,"_this"],[206,15,421,6],[206,16,421,11,"emitStateChanged"],[206,32,421,27],[206,33,421,28,"DRAGGING"],[206,41,421,36],[206,43,421,38],[206,48,421,43],[206,49,421,44],[207,10,422,6,"_this"],[207,15,422,6],[207,16,422,11,"setState"],[207,24,422,19],[207,25,422,20],[208,12,422,22,"drawerState"],[208,23,422,33],[208,25,422,35,"DRAGGING"],[209,10,422,44],[209,11,422,45],[209,12,422,46],[210,10,423,6],[210,14,423,10,"_this"],[210,19,423,10],[210,20,423,15,"props"],[210,25,423,20],[210,26,423,21,"keyboardDismissMode"],[210,45,423,40],[210,50,423,45],[210,59,423,54],[210,61,423,56],[211,12,424,8,"Keyboard"],[211,24,424,16],[211,25,424,16,"Keyboard"],[211,33,424,16],[211,34,424,17,"dismiss"],[211,41,424,24],[211,42,424,25],[211,43,424,26],[212,10,425,6],[213,10,426,6],[213,14,426,10,"_this"],[213,19,426,10],[213,20,426,15,"props"],[213,25,426,20],[213,26,426,21,"hideStatusBar"],[213,39,426,34],[213,41,426,36],[214,12,427,8,"StatusBar"],[214,24,427,17],[214,25,427,17,"StatusBar"],[214,34,427,17],[214,35,427,18,"setHidden"],[214,44,427,27],[214,45,427,28],[214,49,427,32],[214,51,427,34,"_this"],[214,56,427,34],[214,57,427,39,"props"],[214,62,427,44],[214,63,427,45,"statusBarAnimation"],[214,81,427,63],[214,85,427,67],[214,92,427,74],[214,93,427,75],[215,10,428,6],[216,8,429,4],[217,6,430,2],[217,7,430,3],[218,6,430,3,"_this"],[218,11,430,3],[218,12,432,10,"onTapHandlerStateChange"],[218,35,432,33],[218,38,432,36,"_ref3"],[218,43,432,36],[218,47,434,64],[219,8,434,64],[219,12,433,4,"nativeEvent"],[219,23,433,15],[219,26,433,15,"_ref3"],[219,31,433,15],[219,32,433,4,"nativeEvent"],[219,43,433,15],[220,8,435,4],[220,12,436,6,"_this"],[220,17,436,6],[220,18,436,11,"drawerShown"],[220,29,436,22],[220,33,437,6,"nativeEvent"],[220,44,437,17],[220,45,437,18,"oldState"],[220,53,437,26],[220,58,437,31,"State"],[220,64,437,36],[220,65,437,36,"State"],[220,70,437,36],[220,71,437,37,"ACTIVE"],[220,77,437,43],[220,81,438,6,"_this"],[220,86,438,6],[220,87,438,11,"props"],[220,92,438,16],[220,93,438,17,"drawerLockMode"],[220,107,438,31],[220,112,438,36],[220,125,438,49],[220,127,439,6],[221,10,440,6,"_this"],[221,15,440,6],[221,16,440,11,"closeDrawer"],[221,27,440,22],[221,28,440,23],[221,29,440,24],[222,8,441,4],[223,6,442,2],[223,7,442,3],[224,6,442,3,"_this"],[224,11,442,3],[224,12,444,10,"handleRelease"],[224,25,444,23],[224,28,444,26,"_ref4"],[224,33,444,26],[224,37,446,64],[225,8,446,64],[225,12,445,4,"nativeEvent"],[225,23,445,15],[225,26,445,15,"_ref4"],[225,31,445,15],[225,32,445,4,"nativeEvent"],[225,43,445,15],[226,8,447,4],[226,12,447,4,"_this$props"],[226,23,447,4],[226,26,447,56,"_this"],[226,31,447,56],[226,32,447,61,"props"],[226,37,447,66],[227,10,447,12,"drawerWidth"],[227,21,447,23],[227,24,447,23,"_this$props"],[227,35,447,23],[227,36,447,12,"drawerWidth"],[227,47,447,23],[228,10,447,25,"drawerPosition"],[228,24,447,39],[228,27,447,39,"_this$props"],[228,38,447,39],[228,39,447,25,"drawerPosition"],[228,53,447,39],[229,10,447,41,"drawerType"],[229,20,447,51],[229,23,447,51,"_this$props"],[229,34,447,51],[229,35,447,41,"drawerType"],[229,45,447,51],[230,8,448,4],[230,12,448,12,"containerWidth"],[230,26,448,26],[230,29,448,31,"_this"],[230,34,448,31],[230,35,448,36,"state"],[230,40,448,41],[230,41,448,12,"containerWidth"],[230,55,448,26],[231,8,449,4],[231,12,449,24,"dragX"],[231,17,449,29],[231,20,449,56,"nativeEvent"],[231,31,449,67],[231,32,449,10,"translationX"],[231,44,449,22],[232,10,449,31,"velocityX"],[232,19,449,40],[232,22,449,56,"nativeEvent"],[232,33,449,67],[232,34,449,31,"velocityX"],[232,43,449,40],[233,10,449,45,"touchX"],[233,16,449,51],[233,19,449,56,"nativeEvent"],[233,30,449,67],[233,31,449,42,"x"],[233,32,449,43],[234,8,451,4],[234,12,451,8,"drawerPosition"],[234,26,451,22],[234,31,451,27],[234,37,451,33],[234,39,451,35],[235,10,452,6],[236,10,453,6],[237,10,454,6,"dragX"],[237,15,454,11],[237,18,454,14],[237,19,454,15,"dragX"],[237,24,454,20],[238,10,455,6,"touchX"],[238,16,455,12],[238,19,455,15,"containerWidth"],[238,33,455,29],[238,36,455,32,"touchX"],[238,42,455,38],[239,10,456,6,"velocityX"],[239,19,456,15],[239,22,456,18],[239,23,456,19,"velocityX"],[239,32,456,28],[240,8,457,4],[241,8,459,4],[241,12,459,10,"gestureStartX"],[241,25,459,23],[241,28,459,26,"touchX"],[241,34,459,32],[241,37,459,35,"dragX"],[241,42,459,40],[242,8,460,4],[242,12,460,8,"dragOffsetBasedOnStart"],[242,34,460,30],[242,37,460,33],[242,38,460,34],[243,8,462,4],[243,12,462,8,"drawerType"],[243,22,462,18],[243,27,462,23],[243,34,462,30],[243,36,462,32],[244,10,463,6,"dragOffsetBasedOnStart"],[244,32,463,28],[244,35,464,8,"gestureStartX"],[244,48,464,21],[244,51,464,24,"drawerWidth"],[244,62,464,36],[244,65,464,39,"gestureStartX"],[244,78,464,52],[244,81,464,55,"drawerWidth"],[244,92,464,67],[244,95,464,70],[244,96,464,71],[245,8,465,4],[246,8,467,4],[246,12,467,10,"startOffsetX"],[246,24,467,22],[246,27,468,6,"dragX"],[246,32,468,11],[246,35,468,14,"dragOffsetBasedOnStart"],[246,57,468,36],[246,61,468,40,"_this"],[246,66,468,40],[246,67,468,45,"drawerShown"],[246,78,468,56],[246,81,468,59,"drawerWidth"],[246,92,468,70],[246,95,468,74],[246,96,468,75],[246,97,468,76],[247,8,469,4],[247,12,469,10,"projOffsetX"],[247,23,469,21],[247,26,469,24,"startOffsetX"],[247,38,469,36],[247,41,469,39,"DRAG_TOSS"],[247,50,469,48],[247,53,469,51,"velocityX"],[247,62,469,60],[248,8,471,4],[248,12,471,10,"shouldOpen"],[248,22,471,20],[248,25,471,23,"projOffsetX"],[248,36,471,34],[248,39,471,37,"drawerWidth"],[248,50,471,48],[248,53,471,52],[248,54,471,53],[249,8,473,4],[249,12,473,8,"shouldOpen"],[249,22,473,18],[249,24,473,20],[250,10,474,6,"_this"],[250,15,474,6],[250,16,474,11,"animateDrawer"],[250,29,474,24],[250,30,474,25,"startOffsetX"],[250,42,474,37],[250,44,474,39,"drawerWidth"],[250,55,474,50],[250,57,474,53,"velocityX"],[250,66,474,62],[250,67,474,63],[251,8,475,4],[251,9,475,5],[251,15,475,11],[252,10,476,6,"_this"],[252,15,476,6],[252,16,476,11,"animateDrawer"],[252,29,476,24],[252,30,476,25,"startOffsetX"],[252,42,476,37],[252,44,476,39],[252,45,476,40],[252,47,476,42,"velocityX"],[252,56,476,51],[252,57,476,52],[253,8,477,4],[254,6,478,2],[254,7,478,3],[255,6,478,3,"_this"],[255,11,478,3],[255,12,480,10,"updateShowing"],[255,25,480,23],[255,28,480,27,"showing"],[255,35,480,43],[255,39,480,48],[256,8,481,4,"_this"],[256,13,481,4],[256,14,481,9,"drawerShown"],[256,25,481,20],[256,28,481,23,"showing"],[256,35,481,30],[257,8,482,4,"_this"],[257,13,482,4],[257,14,482,9,"accessibilityIsModalView"],[257,38,482,33],[257,39,482,34,"current"],[257,46,482,41],[257,48,482,43,"setNativeProps"],[257,62,482,57],[257,63,482,58],[258,10,483,6,"accessibilityViewIsModal"],[258,34,483,30],[258,36,483,32,"showing"],[259,8,484,4],[259,9,484,5],[259,10,484,6],[260,8,485,4,"_this"],[260,13,485,4],[260,14,485,9,"pointerEventsView"],[260,31,485,26],[260,32,485,27,"current"],[260,39,485,34],[260,41,485,36,"setNativeProps"],[260,55,485,50],[260,56,485,51],[261,10,486,6,"pointerEvents"],[261,23,486,19],[261,25,486,21,"showing"],[261,32,486,28],[261,35,486,31],[261,41,486,37],[261,44,486,40],[262,8,487,4],[262,9,487,5],[262,10,487,6],[263,8,488,4],[263,12,488,4,"_this$props2"],[263,24,488,4],[263,27,488,60,"_this"],[263,32,488,60],[263,33,488,65,"props"],[263,38,488,70],[264,10,488,12,"drawerPosition"],[264,24,488,26],[264,27,488,26,"_this$props2"],[264,39,488,26],[264,40,488,12,"drawerPosition"],[264,54,488,26],[265,10,488,28,"minSwipeDistance"],[265,26,488,44],[265,29,488,44,"_this$props2"],[265,41,488,44],[265,42,488,28,"minSwipeDistance"],[265,58,488,44],[266,10,488,46,"edgeWidth"],[266,19,488,55],[266,22,488,55,"_this$props2"],[266,34,488,55],[266,35,488,46,"edgeWidth"],[266,44,488,55],[267,8,489,4],[267,12,489,10,"fromLeft"],[267,20,489,18],[267,23,489,21,"drawerPosition"],[267,37,489,35],[267,42,489,40],[267,48,489,46],[268,8,490,4],[269,8,491,4],[270,8,492,4],[271,8,493,4],[271,12,493,10,"gestureOrientation"],[271,30,493,28],[271,33,494,6],[271,34,494,7,"fromLeft"],[271,42,494,15],[271,45,494,18],[271,46,494,19],[271,49,494,22],[271,50,494,23],[271,51,494,24],[271,56,494,29,"_this"],[271,61,494,29],[271,62,494,34,"drawerShown"],[271,73,494,45],[271,76,494,48],[271,77,494,49],[271,78,494,50],[271,81,494,53],[271,82,494,54],[271,83,494,55],[272,8,495,4],[273,8,496,4],[274,8,497,4],[275,8,498,4],[275,12,498,10,"hitSlop"],[275,19,498,17],[275,22,498,20,"fromLeft"],[275,30,498,28],[275,33,499,8],[276,10,499,10,"left"],[276,14,499,14],[276,16,499,16],[276,17,499,17],[277,10,499,19,"width"],[277,15,499,24],[277,17,499,26,"showing"],[277,24,499,33],[277,27,499,36,"undefined"],[277,36,499,45],[277,39,499,48,"edgeWidth"],[278,8,499,58],[278,9,499,59],[278,12,500,8],[279,10,500,10,"right"],[279,15,500,15],[279,17,500,17],[279,18,500,18],[280,10,500,20,"width"],[280,15,500,25],[280,17,500,27,"showing"],[280,24,500,34],[280,27,500,37,"undefined"],[280,36,500,46],[280,39,500,49,"edgeWidth"],[281,8,500,59],[281,9,500,60],[282,8,501,4],[283,8,502,4,"_this"],[283,13,502,4],[283,14,502,9,"panGestureHandler"],[283,31,502,26],[283,32,502,27,"current"],[283,39,502,34],[283,41,502,36,"setNativeProps"],[283,55,502,50],[283,56,502,51],[284,10,503,6,"hitSlop"],[284,17,503,13],[285,10,504,6,"activeOffsetX"],[285,23,504,19],[285,25,504,21,"gestureOrientation"],[285,43,504,39],[285,46,504,42,"minSwipeDistance"],[286,8,505,4],[286,9,505,5],[286,10,505,6],[287,6,506,2],[287,7,506,3],[288,6,506,3,"_this"],[288,11,506,3],[288,12,508,10,"animateDrawer"],[288,25,508,23],[288,28,508,26],[288,29,509,4,"fromValue"],[288,38,509,40],[288,40,510,4,"toValue"],[288,47,510,19],[288,49,511,4,"velocity"],[288,57,511,20],[288,59,512,4,"speed"],[288,64,512,18],[288,69,513,7],[289,8,514,4,"_this"],[289,13,514,4],[289,14,514,9,"state"],[289,19,514,14],[289,20,514,15,"dragX"],[289,25,514,20],[289,26,514,21,"setValue"],[289,34,514,29],[289,35,514,30],[289,36,514,31],[289,37,514,32],[290,8,515,4,"_this"],[290,13,515,4],[290,14,515,9,"state"],[290,19,515,14],[290,20,515,15,"touchX"],[290,26,515,21],[290,27,515,22,"setValue"],[290,35,515,30],[290,36,516,6,"_this"],[290,41,516,6],[290,42,516,11,"props"],[290,47,516,16],[290,48,516,17,"drawerPosition"],[290,62,516,31],[290,67,516,36],[290,73,516,42],[290,76,516,45],[290,77,516,46],[290,80,516,49,"_this"],[290,85,516,49],[290,86,516,54,"state"],[290,91,516,59],[290,92,516,60,"containerWidth"],[290,106,517,4],[290,107,517,5],[291,8,519,4],[291,12,519,8,"fromValue"],[291,21,519,17],[291,25,519,21],[291,29,519,25],[291,31,519,27],[292,10,520,6],[292,14,520,10,"nextFramePosition"],[292,31,520,27],[292,34,520,30,"fromValue"],[292,43,520,39],[293,10,521,6],[293,14,521,10,"_this"],[293,19,521,10],[293,20,521,15,"props"],[293,25,521,20],[293,26,521,21,"useNativeAnimations"],[293,45,521,40],[293,47,521,42],[294,12,522,8],[295,12,523,8],[296,12,524,8],[297,12,525,8],[298,12,526,8],[298,16,526,12,"fromValue"],[298,25,526,21],[298,28,526,24,"toValue"],[298,35,526,31],[298,39,526,35,"velocity"],[298,47,526,43],[298,50,526,46],[298,51,526,47],[298,53,526,49],[299,14,527,10,"nextFramePosition"],[299,31,527,27],[299,34,527,30,"Math"],[299,38,527,34],[299,39,527,35,"min"],[299,42,527,38],[299,43,527,39,"fromValue"],[299,52,527,48],[299,55,527,51,"velocity"],[299,63,527,59],[299,66,527,62],[299,70,527,66],[299,72,527,68,"toValue"],[299,79,527,75],[299,80,527,76],[300,12,528,8],[300,13,528,9],[300,19,528,15],[300,23,528,19,"fromValue"],[300,32,528,28],[300,35,528,31,"toValue"],[300,42,528,38],[300,46,528,42,"velocity"],[300,54,528,50],[300,57,528,53],[300,58,528,54],[300,60,528,56],[301,14,529,10,"nextFramePosition"],[301,31,529,27],[301,34,529,30,"Math"],[301,38,529,34],[301,39,529,35,"max"],[301,42,529,38],[301,43,529,39,"fromValue"],[301,52,529,48],[301,55,529,51,"velocity"],[301,63,529,59],[301,66,529,62],[301,70,529,66],[301,72,529,68,"toValue"],[301,79,529,75],[301,80,529,76],[302,12,530,8],[303,10,531,6],[304,10,532,6,"_this"],[304,15,532,6],[304,16,532,11,"state"],[304,21,532,16],[304,22,532,17,"drawerTranslation"],[304,39,532,34],[304,40,532,35,"setValue"],[304,48,532,43],[304,49,532,44,"nextFramePosition"],[304,66,532,61],[304,67,532,62],[305,8,533,4],[306,8,535,4],[306,12,535,10,"willShow"],[306,20,535,18],[306,23,535,21,"toValue"],[306,30,535,28],[306,35,535,33],[306,36,535,34],[307,8,536,4,"_this"],[307,13,536,4],[307,14,536,9,"updateShowing"],[307,27,536,22],[307,28,536,23,"willShow"],[307,36,536,31],[307,37,536,32],[308,8,537,4,"_this"],[308,13,537,4],[308,14,537,9,"emitStateChanged"],[308,30,537,25],[308,31,537,26,"SETTLING"],[308,39,537,34],[308,41,537,36,"willShow"],[308,49,537,44],[308,50,537,45],[309,8,538,4,"_this"],[309,13,538,4],[309,14,538,9,"setState"],[309,22,538,17],[309,23,538,18],[310,10,538,20,"drawerState"],[310,21,538,31],[310,23,538,33,"SETTLING"],[311,8,538,42],[311,9,538,43],[311,10,538,44],[312,8,539,4],[312,12,539,8,"_this"],[312,17,539,8],[312,18,539,13,"props"],[312,23,539,18],[312,24,539,19,"hideStatusBar"],[312,37,539,32],[312,39,539,34],[313,10,540,6,"StatusBar"],[313,22,540,15],[313,23,540,15,"StatusBar"],[313,32,540,15],[313,33,540,16,"setHidden"],[313,42,540,25],[313,43,540,26,"willShow"],[313,51,540,34],[313,53,540,36,"_this"],[313,58,540,36],[313,59,540,41,"props"],[313,64,540,46],[313,65,540,47,"statusBarAnimation"],[313,83,540,65],[313,87,540,69],[313,94,540,76],[313,95,540,77],[314,8,541,4],[315,8,542,4,"Animated"],[315,20,542,12],[315,21,542,12,"Animated"],[315,29,542,12],[315,30,542,13,"spring"],[315,36,542,19],[315,37,542,20,"_this"],[315,42,542,20],[315,43,542,25,"state"],[315,48,542,30],[315,49,542,31,"drawerTranslation"],[315,66,542,48],[315,68,542,50],[316,10,543,6,"velocity"],[316,18,543,14],[317,10,544,6,"bounciness"],[317,20,544,16],[317,22,544,18],[317,23,544,19],[318,10,545,6,"toValue"],[318,17,545,13],[319,10,546,6,"useNativeDriver"],[319,25,546,21],[319,27,546,23,"_this"],[319,32,546,23],[319,33,546,28,"props"],[319,38,546,33],[319,39,546,34,"useNativeAnimations"],[319,58,546,54],[320,10,547,6,"speed"],[320,15,547,11],[320,17,547,13,"speed"],[320,22,547,18],[320,26,547,22,"undefined"],[321,8,548,4],[321,9,548,5],[321,10,548,6],[321,11,548,7,"start"],[321,16,548,12],[321,17,548,13,"_ref5"],[321,22,548,13],[321,26,548,31],[322,10,548,31],[322,14,548,16,"finished"],[322,22,548,24],[322,25,548,24,"_ref5"],[322,30,548,24],[322,31,548,16,"finished"],[322,39,548,24],[323,10,549,6],[323,14,549,10,"finished"],[323,22,549,18],[323,24,549,20],[324,12,550,8,"_this"],[324,17,550,8],[324,18,550,13,"emitStateChanged"],[324,34,550,29],[324,35,550,30,"IDLE"],[324,39,550,34],[324,41,550,36,"willShow"],[324,49,550,44],[324,50,550,45],[325,12,551,8,"_this"],[325,17,551,8],[325,18,551,13,"setState"],[325,26,551,21],[325,27,551,22],[326,14,551,24,"drawerOpened"],[326,26,551,36],[326,28,551,38,"willShow"],[327,12,551,47],[327,13,551,48],[327,14,551,49],[328,12,552,8],[328,16,552,12,"_this"],[328,21,552,12],[328,22,552,17,"state"],[328,27,552,22],[328,28,552,23,"drawerState"],[328,39,552,34],[328,44,552,39,"DRAGGING"],[328,52,552,47],[328,54,552,49],[329,14,553,10],[330,14,554,10],[331,14,555,10,"_this"],[331,19,555,10],[331,20,555,15,"setState"],[331,28,555,23],[331,29,555,24],[332,16,555,26,"drawerState"],[332,27,555,37],[332,29,555,39,"IDLE"],[333,14,555,44],[333,15,555,45],[333,16,555,46],[334,12,556,8],[335,12,557,8],[335,16,557,12,"willShow"],[335,24,557,20],[335,26,557,22],[336,14,558,10,"_this"],[336,19,558,10],[336,20,558,15,"props"],[336,25,558,20],[336,26,558,21,"onDrawerOpen"],[336,38,558,33],[336,41,558,36],[336,42,558,37],[337,12,559,8],[337,13,559,9],[337,19,559,15],[338,14,560,10,"_this"],[338,19,560,10],[338,20,560,15,"props"],[338,25,560,20],[338,26,560,21,"onDrawerClose"],[338,39,560,34],[338,42,560,37],[338,43,560,38],[339,12,561,8],[340,10,562,6],[341,8,563,4],[341,9,563,5],[341,10,563,6],[342,6,564,2],[342,7,564,3],[343,6,566,2],[344,6,566,2,"_this"],[344,11,566,2],[344,12,567,2,"openDrawer"],[344,22,567,12],[344,25,567,15],[344,37,567,55],[345,8,567,55],[345,12,567,16,"options"],[345,19,567,45],[345,22,567,45,"arguments"],[345,31,567,45],[345,32,567,45,"length"],[345,38,567,45],[345,46,567,45,"arguments"],[345,55,567,45],[345,63,567,45,"undefined"],[345,72,567,45],[345,75,567,45,"arguments"],[345,84,567,45],[345,90,567,48],[345,91,567,49],[345,92,567,50],[346,8,568,4,"_this"],[346,13,568,4],[346,14,568,9,"animateDrawer"],[346,27,568,22],[347,8,569,6],[348,8,570,6,"undefined"],[348,17,570,15],[348,19,571,6,"_this"],[348,24,571,6],[348,25,571,11,"props"],[348,30,571,16],[348,31,571,17,"drawerWidth"],[348,42,571,28],[348,44,572,6,"options"],[348,51,572,13],[348,52,572,14,"velocity"],[348,60,572,22],[348,63,572,25,"options"],[348,70,572,32],[348,71,572,33,"velocity"],[348,79,572,41],[348,82,572,44],[348,83,572,45],[348,85,573,6,"options"],[348,92,573,13],[348,93,573,14,"speed"],[348,98,574,4],[348,99,574,5],[350,8,576,4],[351,8,577,4],[352,8,578,4,"_this"],[352,13,578,4],[352,14,578,9,"forceUpdate"],[352,25,578,20],[352,26,578,21],[352,27,578,22],[353,6,579,2],[353,7,579,3],[354,6,579,3,"_this"],[354,11,579,3],[354,12,581,2,"closeDrawer"],[354,23,581,13],[354,26,581,16],[354,38,581,56],[355,8,581,56],[355,12,581,17,"options"],[355,19,581,46],[355,22,581,46,"arguments"],[355,31,581,46],[355,32,581,46,"length"],[355,38,581,46],[355,46,581,46,"arguments"],[355,55,581,46],[355,63,581,46,"undefined"],[355,72,581,46],[355,75,581,46,"arguments"],[355,84,581,46],[355,90,581,49],[355,91,581,50],[355,92,581,51],[356,8,582,4],[357,8,583,4,"_this"],[357,13,583,4],[357,14,583,9,"animateDrawer"],[357,27,583,22],[357,28,584,6,"undefined"],[357,37,584,15],[357,39,585,6],[357,40,585,7],[357,42,586,6,"options"],[357,49,586,13],[357,50,586,14,"velocity"],[357,58,586,22],[357,61,586,25,"options"],[357,68,586,32],[357,69,586,33,"velocity"],[357,77,586,41],[357,80,586,44],[357,81,586,45],[357,83,587,6,"options"],[357,90,587,13],[357,91,587,14,"speed"],[357,96,588,4],[357,97,588,5],[359,8,590,4],[360,8,591,4],[361,8,592,4,"_this"],[361,13,592,4],[361,14,592,9,"forceUpdate"],[361,25,592,20],[361,26,592,21],[361,27,592,22],[362,6,593,2],[362,7,593,3],[363,6,593,3,"_this"],[363,11,593,3],[363,12,595,10,"renderOverlay"],[363,25,595,23],[363,28,595,26],[363,34,595,32],[364,8,596,4],[365,8,597,4],[365,12,597,4,"invariant"],[365,21,597,13],[365,22,597,13,"default"],[365,29,597,13],[365,31,597,14,"_this"],[365,36,597,14],[365,37,597,19,"openValue"],[365,46,597,28],[365,48,597,30],[365,63,597,45],[365,64,597,46],[366,8,598,4],[366,12,598,8,"overlayOpacity"],[366,26,598,22],[367,8,600,4],[367,12,600,8,"_this"],[367,17,600,8],[367,18,600,13,"state"],[367,23,600,18],[367,24,600,19,"drawerState"],[367,35,600,30],[367,40,600,35,"IDLE"],[367,44,600,39],[367,46,600,41],[368,10,601,6,"overlayOpacity"],[368,24,601,20],[368,27,601,23,"_this"],[368,32,601,23],[368,33,601,28,"openValue"],[368,42,601,37],[369,8,602,4],[369,9,602,5],[369,15,602,11],[370,10,603,6,"overlayOpacity"],[370,24,603,20],[370,27,603,23,"_this"],[370,32,603,23],[370,33,603,28,"state"],[370,38,603,33],[370,39,603,34,"drawerOpened"],[370,51,603,46],[370,54,603,49],[370,55,603,50],[370,58,603,53],[370,59,603,54],[371,8,604,4],[372,8,606,4],[372,12,606,10,"dynamicOverlayStyles"],[372,32,606,30],[372,35,606,33],[373,10,607,6,"opacity"],[373,17,607,13],[373,19,607,15,"overlayOpacity"],[373,33,607,29],[374,10,608,6,"backgroundColor"],[374,25,608,21],[374,27,608,23,"_this"],[374,32,608,23],[374,33,608,28,"props"],[374,38,608,33],[374,39,608,34,"overlayColor"],[375,8,609,4],[375,9,609,5],[376,8,611,4],[376,28,612,6],[376,32,612,6,"_reactJsxDevRuntime"],[376,51,612,6],[376,52,612,6,"jsxDEV"],[376,58,612,6],[376,60,612,7,"_handlersTapGestureHandler"],[376,86,612,24],[376,87,612,24,"TapGestureHandler"],[376,104,612,24],[377,10,612,25,"onHandlerStateChange"],[377,30,612,45],[377,32,612,47,"_this"],[377,37,612,47],[377,38,612,52,"onTapHandlerStateChange"],[377,61,612,76],[378,10,612,76,"children"],[378,18,612,76],[378,33,613,8],[378,37,613,8,"_reactJsxDevRuntime"],[378,56,613,8],[378,57,613,8,"jsxDEV"],[378,63,613,8],[378,65,613,9,"_reactNative"],[378,77,613,17],[378,78,613,17,"Animated"],[378,86,613,17],[378,87,613,18,"View"],[378,91,613,22],[379,12,614,10,"pointerEvents"],[379,25,614,23],[379,27,614,25,"_this"],[379,32,614,25],[379,33,614,30,"drawerShown"],[379,44,614,41],[379,47,614,44],[379,53,614,50],[379,56,614,53],[379,62,614,60],[380,12,615,10,"ref"],[380,15,615,13],[380,17,615,15,"_this"],[380,22,615,15],[380,23,615,20,"pointerEventsView"],[380,40,615,38],[381,12,616,10,"style"],[381,17,616,15],[381,19,616,17],[381,20,616,18,"styles"],[381,26,616,24],[381,27,616,25,"overlay"],[381,34,616,32],[381,36,616,34,"dynamicOverlayStyles"],[381,56,616,54],[382,10,616,56],[383,12,616,56,"fileName"],[383,20,616,56],[383,22,616,56,"_jsxFileName"],[383,34,616,56],[384,12,616,56,"lineNumber"],[384,22,616,56],[385,12,616,56,"columnNumber"],[385,24,616,56],[386,10,616,56],[386,13,616,56,"_this"],[386,18,617,9],[387,8,617,10],[388,10,617,10,"fileName"],[388,18,617,10],[388,20,617,10,"_jsxFileName"],[388,32,617,10],[389,10,617,10,"lineNumber"],[389,20,617,10],[390,10,617,10,"columnNumber"],[390,22,617,10],[391,8,617,10],[391,11,617,10,"_this"],[391,16,618,25],[391,17,618,26],[392,6,620,2],[392,7,620,3],[393,6,620,3,"_this"],[393,11,620,3],[393,12,622,10,"renderDrawer"],[393,24,622,22],[393,27,622,25],[393,33,622,31],[394,8,623,4],[394,12,623,4,"_this$props3"],[394,24,623,4],[394,27,630,8,"_this"],[394,32,630,8],[394,33,630,13,"props"],[394,38,630,18],[395,10,624,6,"drawerBackgroundColor"],[395,31,624,27],[395,34,624,27,"_this$props3"],[395,46,624,27],[395,47,624,6,"drawerBackgroundColor"],[395,68,624,27],[396,10,625,6,"drawerWidth"],[396,21,625,17],[396,24,625,17,"_this$props3"],[396,36,625,17],[396,37,625,6,"drawerWidth"],[396,48,625,17],[397,10,626,6,"drawerPosition"],[397,24,626,20],[397,27,626,20,"_this$props3"],[397,39,626,20],[397,40,626,6,"drawerPosition"],[397,54,626,20],[398,10,627,6,"drawerType"],[398,20,627,16],[398,23,627,16,"_this$props3"],[398,35,627,16],[398,36,627,6,"drawerType"],[398,46,627,16],[399,10,628,6,"drawerContainerStyle"],[399,30,628,26],[399,33,628,26,"_this$props3"],[399,45,628,26],[399,46,628,6,"drawerContainerStyle"],[399,66,628,26],[400,10,629,6,"contentContainerStyle"],[400,31,629,27],[400,34,629,27,"_this$props3"],[400,46,629,27],[400,47,629,6,"contentContainerStyle"],[400,68,629,27],[401,8,632,4],[401,12,632,10,"fromLeft"],[401,20,632,18],[401,23,632,21,"drawerPosition"],[401,37,632,35],[401,42,632,40],[401,48,632,46],[402,8,633,4],[402,12,633,10,"drawerSlide"],[402,23,633,21],[402,26,633,24,"drawerType"],[402,36,633,34],[402,41,633,39],[402,47,633,45],[403,8,634,4],[403,12,634,10,"containerSlide"],[403,26,634,24],[403,29,634,27,"drawerType"],[403,39,634,37],[403,44,634,42],[403,51,634,49],[405,8,636,4],[406,8,637,4],[407,8,638,4],[408,8,639,4],[409,8,640,4],[409,12,640,10,"reverseContentDirection"],[409,35,640,33],[409,38,640,36,"I18nManager"],[409,50,640,47],[409,51,640,47,"I18nManager"],[409,62,640,47],[409,63,640,48,"isRTL"],[409,68,640,53],[409,71,640,56,"fromLeft"],[409,79,640,64],[409,82,640,67],[409,83,640,68,"fromLeft"],[409,91,640,76],[410,8,642,4],[410,12,642,10,"dynamicDrawerStyles"],[410,31,642,29],[410,34,642,32],[411,10,643,6,"backgroundColor"],[411,25,643,21],[411,27,643,23,"drawerBackgroundColor"],[411,48,643,44],[412,10,644,6,"width"],[412,15,644,11],[412,17,644,13,"drawerWidth"],[413,8,645,4],[413,9,645,5],[414,8,646,4],[414,12,646,10,"openValue"],[414,21,646,19],[414,24,646,22,"_this"],[414,29,646,22],[414,30,646,27,"openValue"],[414,39,646,36],[415,8,647,4],[415,12,647,4,"invariant"],[415,21,647,13],[415,22,647,13,"default"],[415,29,647,13],[415,31,647,14,"openValue"],[415,40,647,23],[415,42,647,25],[415,57,647,40],[415,58,647,41],[416,8,649,4],[416,12,649,8,"containerStyles"],[416,27,649,23],[417,8,650,4],[417,12,650,8,"containerSlide"],[417,26,650,22],[417,28,650,24],[418,10,651,6],[418,14,651,12,"containerTranslateX"],[418,33,651,31],[418,36,651,34,"openValue"],[418,45,651,43],[418,46,651,44,"interpolate"],[418,57,651,55],[418,58,651,56],[419,12,652,8,"inputRange"],[419,22,652,18],[419,24,652,20],[419,25,652,21],[419,26,652,22],[419,28,652,24],[419,29,652,25],[419,30,652,26],[420,12,653,8,"outputRange"],[420,23,653,19],[420,25,653,21,"fromLeft"],[420,33,653,29],[420,36,653,32],[420,37,653,33],[420,38,653,34],[420,40,653,36,"drawerWidth"],[420,51,653,47],[420,52,653,49],[420,55,653,52],[420,56,653,53],[420,57,653,54],[420,59,653,56],[420,60,653,57,"drawerWidth"],[420,71,653,69],[420,72,653,70],[421,12,654,8,"extrapolate"],[421,23,654,19],[421,25,654,21],[422,10,655,6],[422,11,655,7],[422,12,655,8],[423,10,656,6,"containerStyles"],[423,25,656,21],[423,28,656,24],[424,12,657,8,"transform"],[424,21,657,17],[424,23,657,19],[424,24,657,20],[425,14,657,22,"translateX"],[425,24,657,32],[425,26,657,34,"containerTranslateX"],[426,12,657,54],[426,13,657,55],[427,10,658,6],[427,11,658,7],[428,8,659,4],[429,8,661,4],[429,12,661,8,"drawerTranslateX"],[429,28,661,56],[429,31,661,59],[429,32,661,60],[430,8,662,4],[430,12,662,8,"drawerSlide"],[430,23,662,19],[430,25,662,21],[431,10,663,6],[431,14,663,12,"closedDrawerOffset"],[431,32,663,30],[431,35,663,33,"fromLeft"],[431,43,663,41],[431,46,663,44],[431,47,663,45,"drawerWidth"],[431,58,663,57],[431,61,663,60,"drawerWidth"],[431,72,663,72],[432,10,664,6],[432,14,664,10,"_this"],[432,19,664,10],[432,20,664,15,"state"],[432,25,664,20],[432,26,664,21,"drawerState"],[432,37,664,32],[432,42,664,37,"IDLE"],[432,46,664,41],[432,48,664,43],[433,12,665,8,"drawerTranslateX"],[433,28,665,24],[433,31,665,27,"openValue"],[433,40,665,36],[433,41,665,37,"interpolate"],[433,52,665,48],[433,53,665,49],[434,14,666,10,"inputRange"],[434,24,666,20],[434,26,666,22],[434,27,666,23],[434,28,666,24],[434,30,666,26],[434,31,666,27],[434,32,666,28],[435,14,667,10,"outputRange"],[435,25,667,21],[435,27,667,23],[435,28,667,24,"closedDrawerOffset"],[435,46,667,42],[435,48,667,44],[435,49,667,45],[435,50,667,46],[436,14,668,10,"extrapolate"],[436,25,668,21],[436,27,668,23],[437,12,669,8],[437,13,669,9],[437,14,669,10],[438,10,670,6],[438,11,670,7],[438,17,670,13],[439,12,671,8,"drawerTranslateX"],[439,28,671,24],[439,31,671,27,"_this"],[439,36,671,27],[439,37,671,32,"state"],[439,42,671,37],[439,43,671,38,"drawerOpened"],[439,55,671,50],[439,58,671,53],[439,59,671,54],[439,62,671,57,"closedDrawerOffset"],[439,80,671,75],[440,10,672,6],[441,8,673,4],[442,8,674,4],[442,12,674,10,"drawerStyles"],[442,24,677,5],[442,27,677,8],[443,10,678,6,"transform"],[443,19,678,15],[443,21,678,17],[443,22,678,18],[444,12,678,20,"translateX"],[444,22,678,30],[444,24,678,32,"drawerTranslateX"],[445,10,678,49],[445,11,678,50],[445,12,678,51],[446,10,679,6,"flexDirection"],[446,23,679,19],[446,25,679,21,"reverseContentDirection"],[446,48,679,44],[446,51,679,47],[446,64,679,60],[446,67,679,63],[447,8,680,4],[447,9,680,5],[448,8,682,4],[448,28,683,6],[448,32,683,6,"_reactJsxDevRuntime"],[448,51,683,6],[448,52,683,6,"jsxDEV"],[448,58,683,6],[448,60,683,7,"_reactNative"],[448,72,683,15],[448,73,683,15,"Animated"],[448,81,683,15],[448,82,683,16,"View"],[448,86,683,20],[449,10,683,21,"style"],[449,15,683,26],[449,17,683,28,"styles"],[449,23,683,34],[449,24,683,35,"main"],[449,28,683,40],[450,10,683,41,"onLayout"],[450,18,683,49],[450,20,683,51,"_this"],[450,25,683,51],[450,26,683,56,"handleContainerLayout"],[450,47,683,78],[451,10,683,78,"children"],[451,18,683,78],[451,34,684,8],[451,38,684,8,"_reactJsxDevRuntime"],[451,57,684,8],[451,58,684,8,"jsxDEV"],[451,64,684,8],[451,66,684,9,"_reactNative"],[451,78,684,17],[451,79,684,17,"Animated"],[451,87,684,17],[451,88,684,18,"View"],[451,92,684,22],[452,12,685,10,"style"],[452,17,685,15],[452,19,685,17],[452,20,686,12,"drawerType"],[452,30,686,22],[452,35,686,27],[452,42,686,34],[452,45,687,16,"styles"],[452,51,687,22],[452,52,687,23,"containerOnBack"],[452,67,687,38],[452,70,688,16,"styles"],[452,76,688,22],[452,77,688,23,"containerInFront"],[452,93,688,39],[452,95,689,12,"containerStyles"],[452,110,689,27],[452,112,690,12,"contentContainerStyle"],[452,133,690,33],[452,134,691,12],[453,12,692,10,"importantForAccessibility"],[453,37,692,35],[453,39,693,12,"_this"],[453,44,693,12],[453,45,693,17,"drawerShown"],[453,56,693,28],[453,59,693,31],[453,80,693,52],[453,83,693,55],[453,88,694,11],[454,12,694,11,"children"],[454,20,694,11],[454,23,695,11],[454,30,695,18,"_this"],[454,35,695,18],[454,36,695,23,"props"],[454,41,695,28],[454,42,695,29,"children"],[454,50,695,37],[454,55,695,42],[454,65,695,52],[454,68,696,14,"_this"],[454,73,696,14],[454,74,696,19,"props"],[454,79,696,24],[454,80,696,25,"children"],[454,88,696,33],[454,89,696,34,"_this"],[454,94,696,34],[454,95,696,39,"openValue"],[454,104,696,48],[454,105,696,49],[454,108,697,14,"_this"],[454,113,697,14],[454,114,697,19,"props"],[454,119,697,24],[454,120,697,25,"children"],[454,128,697,33],[454,130,698,11,"_this"],[454,135,698,11],[454,136,698,16,"renderOverlay"],[454,149,698,29],[454,150,698,30],[454,151,698,31],[455,10,698,31],[456,12,698,31,"fileName"],[456,20,698,31],[456,22,698,31,"_jsxFileName"],[456,34,698,31],[457,12,698,31,"lineNumber"],[457,22,698,31],[458,12,698,31,"columnNumber"],[458,24,698,31],[459,10,698,31],[459,13,698,31,"_this"],[459,18,699,23],[459,19,699,24],[459,34,700,8],[459,38,700,8,"_reactJsxDevRuntime"],[459,57,700,8],[459,58,700,8,"jsxDEV"],[459,64,700,8],[459,66,700,9,"_reactNative"],[459,78,700,17],[459,79,700,17,"Animated"],[459,87,700,17],[459,88,700,18,"View"],[459,92,700,22],[460,12,701,10,"pointerEvents"],[460,25,701,23],[460,27,701,24],[460,37,701,34],[461,12,702,10,"ref"],[461,15,702,13],[461,17,702,15,"_this"],[461,22,702,15],[461,23,702,20,"accessibilityIsModalView"],[461,47,702,45],[462,12,703,10,"accessibilityViewIsModal"],[462,36,703,34],[462,38,703,36,"_this"],[462,43,703,36],[462,44,703,41,"drawerShown"],[462,55,703,53],[463,12,704,10,"style"],[463,17,704,15],[463,19,704,17],[463,20,704,18,"styles"],[463,26,704,24],[463,27,704,25,"drawerContainer"],[463,42,704,40],[463,44,704,42,"drawerStyles"],[463,56,704,54],[463,58,704,56,"drawerContainerStyle"],[463,78,704,76],[463,79,704,78],[464,12,704,78,"children"],[464,20,704,78],[464,35,705,10],[464,39,705,10,"_reactJsxDevRuntime"],[464,58,705,10],[464,59,705,10,"jsxDEV"],[464,65,705,10],[464,67,705,11,"_reactNative"],[464,79,705,15],[464,80,705,15,"View"],[464,84,705,15],[465,14,705,16,"style"],[465,19,705,21],[465,21,705,23,"dynamicDrawerStyles"],[465,40,705,43],[466,14,705,43,"children"],[466,22,705,43],[466,24,706,13,"_this"],[466,29,706,13],[466,30,706,18,"props"],[466,35,706,23],[466,36,706,24,"renderNavigationView"],[466,56,706,44],[466,57,706,45,"_this"],[466,62,706,45],[466,63,706,50,"openValue"],[466,72,706,77],[467,12,706,78],[468,14,706,78,"fileName"],[468,22,706,78],[468,24,706,78,"_jsxFileName"],[468,36,706,78],[469,14,706,78,"lineNumber"],[469,24,706,78],[470,14,706,78,"columnNumber"],[470,26,706,78],[471,12,706,78],[471,15,706,78,"_this"],[471,20,707,16],[472,10,707,17],[473,12,707,17,"fileName"],[473,20,707,17],[473,22,707,17,"_jsxFileName"],[473,34,707,17],[474,12,707,17,"lineNumber"],[474,22,707,17],[475,12,707,17,"columnNumber"],[475,24,707,17],[476,10,707,17],[476,13,707,17,"_this"],[476,18,708,23],[476,19,708,24],[477,8,708,24],[478,10,708,24,"fileName"],[478,18,708,24],[478,20,708,24,"_jsxFileName"],[478,32,708,24],[479,10,708,24,"lineNumber"],[479,20,708,24],[480,10,708,24,"columnNumber"],[480,22,708,24],[481,8,708,24],[481,11,708,24,"_this"],[481,16,709,21],[481,17,709,22],[482,6,711,2],[482,7,711,3],[483,6,711,3,"_this"],[483,11,711,3],[483,12,713,10,"setPanGestureRef"],[483,28,713,26],[483,31,713,30,"ref"],[483,34,713,52],[483,38,713,57],[484,8,714,4],[485,8,715,4],[486,8,717,6,"_this"],[486,13,717,6],[486,14,717,11,"panGestureHandler"],[486,31,717,28],[486,32,718,6,"current"],[486,39,718,13],[486,42,718,16,"ref"],[486,45,718,19],[487,8,719,4,"_this"],[487,13,719,4],[487,14,719,9,"props"],[487,19,719,14],[487,20,719,15,"onGestureRef"],[487,32,719,27],[487,35,719,30,"ref"],[487,38,719,33],[487,39,719,34],[488,6,720,2],[488,7,720,3],[489,6,250,4],[489,10,250,10,"dragX"],[489,16,250,15],[489,19,250,18],[489,23,250,22,"Animated"],[489,35,250,30],[489,36,250,30,"Animated"],[489,44,250,30],[489,45,250,31,"Value"],[489,50,250,36],[489,51,250,37],[489,52,250,38],[489,53,250,39],[490,6,251,4],[490,10,251,10,"touchX"],[490,17,251,16],[490,20,251,19],[490,24,251,23,"Animated"],[490,36,251,31],[490,37,251,31,"Animated"],[490,45,251,31],[490,46,251,32,"Value"],[490,51,251,37],[490,52,251,38],[490,53,251,39],[490,54,251,40],[491,6,252,4],[491,10,252,10,"drawerTranslation"],[491,28,252,27],[491,31,252,30],[491,35,252,34,"Animated"],[491,47,252,42],[491,48,252,42,"Animated"],[491,56,252,42],[491,57,252,43,"Value"],[491,62,252,48],[491,63,252,49],[491,64,252,50],[491,65,252,51],[492,6,254,4,"_this"],[492,11,254,4],[492,12,254,9,"state"],[492,17,254,14],[492,20,254,17],[493,8,255,6,"dragX"],[493,13,255,11],[493,15,255,6,"dragX"],[493,21,255,11],[494,8,256,6,"touchX"],[494,14,256,12],[494,16,256,6,"touchX"],[494,23,256,12],[495,8,257,6,"drawerTranslation"],[495,25,257,23],[495,27,257,6,"drawerTranslation"],[495,45,257,23],[496,8,258,6,"containerWidth"],[496,22,258,20],[496,24,258,22],[496,25,258,23],[497,8,259,6,"drawerState"],[497,19,259,17],[497,21,259,19,"IDLE"],[497,25,259,23],[498,8,260,6,"drawerOpened"],[498,20,260,18],[498,22,260,20],[499,6,261,4],[499,7,261,5],[500,6,263,4,"_this"],[500,11,263,4],[500,12,263,9,"updateAnimatedEvent"],[500,31,263,28],[500,32,263,29,"props"],[500,38,263,34],[500,40,263,36,"_this"],[500,45,263,36],[500,46,263,41,"state"],[500,51,263,46],[500,52,263,47],[501,6,263,48],[501,13,263,48,"_this"],[501,18,263,48],[502,4,264,2],[503,4,264,3],[503,8,264,3,"_inherits"],[503,17,264,3],[503,18,264,3,"default"],[503,25,264,3],[503,27,264,3,"DrawerLayout"],[503,39,264,3],[503,41,264,3,"_Component"],[503,51,264,3],[504,4,264,3],[504,15,264,3,"_createClass"],[504,27,264,3],[504,28,264,3,"default"],[504,35,264,3],[504,37,264,3,"DrawerLayout"],[504,49,264,3],[505,6,264,3,"key"],[505,9,264,3],[506,6,264,3,"value"],[506,11,264,3],[506,13,266,2],[506,22,266,2,"shouldComponentUpdate"],[506,43,266,23,"shouldComponentUpdate"],[506,44,266,24,"props"],[506,49,266,48],[506,51,266,50,"state"],[506,56,266,74],[506,58,266,76],[507,8,267,4],[507,12,268,6],[507,16,268,10],[507,17,268,11,"props"],[507,22,268,16],[507,23,268,17,"drawerPosition"],[507,37,268,31],[507,42,268,36,"props"],[507,47,268,41],[507,48,268,42,"drawerPosition"],[507,62,268,56],[507,66,269,6],[507,70,269,10],[507,71,269,11,"props"],[507,76,269,16],[507,77,269,17,"drawerWidth"],[507,88,269,28],[507,93,269,33,"props"],[507,98,269,38],[507,99,269,39,"drawerWidth"],[507,110,269,50],[507,114,270,6],[507,118,270,10],[507,119,270,11,"props"],[507,124,270,16],[507,125,270,17,"drawerType"],[507,135,270,27],[507,140,270,32,"props"],[507,145,270,37],[507,146,270,38,"drawerType"],[507,156,270,48],[507,160,271,6],[507,164,271,10],[507,165,271,11,"state"],[507,170,271,16],[507,171,271,17,"containerWidth"],[507,185,271,31],[507,190,271,36,"state"],[507,195,271,41],[507,196,271,42,"containerWidth"],[507,210,271,56],[507,212,272,6],[508,10,273,6],[508,14,273,10],[508,15,273,11,"updateAnimatedEvent"],[508,34,273,30],[508,35,273,31,"props"],[508,40,273,36],[508,42,273,38,"state"],[508,47,273,43],[508,48,273,44],[509,8,274,4],[510,8,276,4],[510,15,276,11],[510,19,276,15],[511,6,277,2],[512,4,277,3],[513,6,277,3,"key"],[513,9,277,3],[514,6,277,3,"value"],[514,11,277,3],[514,13,722,2],[514,22,722,2,"render"],[514,28,722,8,"render"],[514,29,722,8],[514,31,722,11],[515,8,723,4],[515,12,723,4,"_this$props4"],[515,24,723,4],[515,27,724,6],[515,31,724,10],[515,32,724,11,"props"],[515,37,724,16],[516,10,723,12,"drawerPosition"],[516,24,723,26],[516,27,723,26,"_this$props4"],[516,39,723,26],[516,40,723,12,"drawerPosition"],[516,54,723,26],[517,10,723,28,"drawerLockMode"],[517,24,723,42],[517,27,723,42,"_this$props4"],[517,39,723,42],[517,40,723,28,"drawerLockMode"],[517,54,723,42],[518,10,723,44,"edgeWidth"],[518,19,723,53],[518,22,723,53,"_this$props4"],[518,34,723,53],[518,35,723,44,"edgeWidth"],[518,44,723,53],[519,10,723,55,"minSwipeDistance"],[519,26,723,71],[519,29,723,71,"_this$props4"],[519,41,723,71],[519,42,723,55,"minSwipeDistance"],[519,58,723,71],[520,8,726,4],[520,12,726,10,"fromLeft"],[520,20,726,18],[520,23,726,21,"drawerPosition"],[520,37,726,35],[520,42,726,40],[520,48,726,46],[522,8,728,4],[523,8,729,4],[524,8,730,4],[525,8,731,4],[525,12,731,10,"gestureOrientation"],[525,30,731,28],[525,33,732,6],[525,34,732,7,"fromLeft"],[525,42,732,15],[525,45,732,18],[525,46,732,19],[525,49,732,22],[525,50,732,23],[525,51,732,24],[525,56,732,29],[525,60,732,33],[525,61,732,34,"drawerShown"],[525,72,732,45],[525,75,732,48],[525,76,732,49],[525,77,732,50],[525,80,732,53],[525,81,732,54],[525,82,732,55],[527,8,734,4],[528,8,735,4],[529,8,736,4],[530,8,737,4],[530,12,737,10,"hitSlop"],[530,19,737,17],[530,22,737,20,"fromLeft"],[530,30,737,28],[530,33,738,8],[531,10,738,10,"left"],[531,14,738,14],[531,16,738,16],[531,17,738,17],[532,10,738,19,"width"],[532,15,738,24],[532,17,738,26],[532,21,738,30],[532,22,738,31,"drawerShown"],[532,33,738,42],[532,36,738,45,"undefined"],[532,45,738,54],[532,48,738,57,"edgeWidth"],[533,8,738,67],[533,9,738,68],[533,12,739,8],[534,10,739,10,"right"],[534,15,739,15],[534,17,739,17],[534,18,739,18],[535,10,739,20,"width"],[535,15,739,25],[535,17,739,27],[535,21,739,31],[535,22,739,32,"drawerShown"],[535,33,739,43],[535,36,739,46,"undefined"],[535,45,739,55],[535,48,739,58,"edgeWidth"],[536,8,739,68],[536,9,739,69],[537,8,741,4],[537,28,742,6],[537,32,742,6,"_reactJsxDevRuntime"],[537,51,742,6],[537,52,742,6,"jsxDEV"],[537,58,742,6],[537,60,742,7,"_handlersPanGestureHandler"],[537,86,742,24],[537,87,742,24,"PanGestureHandler"],[537,104,742,24],[537,105,743,8],[538,8,743,8],[539,10,744,8,"userSelect"],[539,20,744,18],[539,22,744,20],[539,26,744,24],[539,27,744,25,"props"],[539,32,744,30],[539,33,744,31,"userSelect"],[539,43,744,42],[540,10,745,8,"activeCursor"],[540,22,745,20],[540,24,745,22],[540,28,745,26],[540,29,745,27,"props"],[540,34,745,32],[540,35,745,33,"activeCursor"],[540,47,745,46],[541,10,746,8,"mouseButton"],[541,21,746,19],[541,23,746,21],[541,27,746,25],[541,28,746,26,"props"],[541,33,746,31],[541,34,746,32,"mouseButton"],[541,45,746,44],[542,10,747,8,"enableContextMenu"],[542,27,747,25],[542,29,747,27],[542,33,747,31],[542,34,747,32,"props"],[542,39,747,37],[542,40,747,38,"enableContextMenu"],[542,57,747,56],[543,10,748,8,"ref"],[543,13,748,11],[543,15,748,13],[543,19,748,17],[543,20,748,18,"setPanGestureRef"],[543,36,748,35],[544,10,749,8,"hitSlop"],[544,17,749,15],[544,19,749,17,"hitSlop"],[544,26,749,25],[545,10,750,8,"activeOffsetX"],[545,23,750,21],[545,25,750,23,"gestureOrientation"],[545,43,750,41],[545,46,750,44,"minSwipeDistance"],[545,62,750,62],[546,10,751,8,"failOffsetY"],[546,21,751,19],[546,23,751,21],[546,24,751,22],[546,25,751,23],[546,27,751,25],[546,29,751,27],[546,31,751,29],[546,32,751,31],[547,10,752,8,"onGestureEvent"],[547,24,752,22],[547,26,752,24],[547,30,752,28],[547,31,752,29,"onGestureEvent"],[547,45,752,44],[548,10,753,8,"onHandlerStateChange"],[548,30,753,28],[548,32,753,30],[548,36,753,34],[548,37,753,35,"openingHandlerStateChange"],[548,62,753,61],[549,10,754,8,"enableTrackpadTwoFingerGesture"],[549,40,754,38],[549,42,755,10],[549,46,755,14],[549,47,755,15,"props"],[549,52,755,20],[549,53,755,21,"enableTrackpadTwoFingerGesture"],[549,83,756,9],[550,10,757,8,"enabled"],[550,17,757,15],[550,19,758,10,"drawerLockMode"],[550,33,758,24],[550,38,758,29],[550,53,758,44],[550,57,758,48,"drawerLockMode"],[550,71,758,62],[550,76,758,67],[550,89,759,9],[551,10,759,9,"children"],[551,18,759,9],[551,20,760,9],[551,24,760,13],[551,25,760,14,"renderDrawer"],[551,37,760,26],[551,38,760,27],[552,8,760,28],[553,10,760,28,"fileName"],[553,18,760,28],[553,20,760,28,"_jsxFileName"],[553,32,760,28],[554,10,760,28,"lineNumber"],[554,20,760,28],[555,10,760,28,"columnNumber"],[555,22,760,28],[556,8,760,28],[556,15,761,25],[556,16,761,26],[557,6,763,2],[558,4,763,3],[559,2,763,3],[559,4,231,42,"Component"],[559,10,231,51],[559,11,231,51,"Component"],[559,20,231,51],[560,2,231,21,"DrawerLayout"],[560,14,231,33],[560,15,235,9,"defaultProps"],[560,27,235,21],[560,30,235,24],[561,4,236,4,"drawerWidth"],[561,15,236,15],[561,17,236,17],[561,20,236,20],[562,4,237,4,"drawerPosition"],[562,18,237,18],[562,20,237,20],[562,26,237,26],[563,4,238,4,"useNativeAnimations"],[563,23,238,23],[563,25,238,25],[563,29,238,29],[564,4,239,4,"drawerType"],[564,14,239,14],[564,16,239,16],[564,23,239,23],[565,4,240,4,"edgeWidth"],[565,13,240,13],[565,15,240,15],[565,17,240,17],[566,4,241,4,"minSwipeDistance"],[566,20,241,20],[566,22,241,22],[566,23,241,23],[567,4,242,4,"overlayColor"],[567,16,242,16],[567,18,242,18],[567,38,242,38],[568,4,243,4,"drawerLockMode"],[568,18,243,18],[568,20,243,20],[568,30,243,30],[569,4,244,4,"enableTrackpadTwoFingerGesture"],[569,34,244,34],[569,36,244,36],[570,2,245,2],[570,3,245,3],[571,2,231,21,"DrawerLayout"],[571,14,231,33],[571,15,290,9,"positions"],[571,24,290,18],[571,27,290,21],[572,4,291,4,"Left"],[572,8,291,8],[572,10,291,10],[572,16,291,16],[573,4,292,4,"Right"],[573,9,292,9],[573,11,292,11],[574,2,293,2],[574,3,293,3],[575,2,766,0],[575,6,766,6,"styles"],[575,12,766,12],[575,15,766,15,"StyleSheet"],[575,27,766,25],[575,28,766,25,"StyleSheet"],[575,38,766,25],[575,39,766,26,"create"],[575,45,766,32],[575,46,766,33],[576,4,767,2,"drawerContainer"],[576,19,767,17],[576,21,767,19],[577,6,768,4],[577,9,768,7,"StyleSheet"],[577,21,768,17],[577,22,768,17,"StyleSheet"],[577,32,768,17],[577,33,768,18,"absoluteFillObject"],[577,51,768,36],[578,6,769,4,"zIndex"],[578,12,769,10],[578,14,769,12],[578,18,769,16],[579,6,770,4,"flexDirection"],[579,19,770,17],[579,21,770,19],[580,4,771,2],[580,5,771,3],[581,4,772,2,"containerInFront"],[581,20,772,18],[581,22,772,20],[582,6,773,4],[582,9,773,7,"StyleSheet"],[582,21,773,17],[582,22,773,17,"StyleSheet"],[582,32,773,17],[582,33,773,18,"absoluteFillObject"],[582,51,773,36],[583,6,774,4,"zIndex"],[583,12,774,10],[583,14,774,12],[584,4,775,2],[584,5,775,3],[585,4,776,2,"containerOnBack"],[585,19,776,17],[585,21,776,19],[586,6,777,4],[586,9,777,7,"StyleSheet"],[586,21,777,17],[586,22,777,17,"StyleSheet"],[586,32,777,17],[586,33,777,18,"absoluteFillObject"],[587,4,778,2],[587,5,778,3],[588,4,779,2,"main"],[588,8,779,6],[588,10,779,8],[589,6,780,4,"flex"],[589,10,780,8],[589,12,780,10],[589,13,780,11],[590,6,781,4,"zIndex"],[590,12,781,10],[590,14,781,12],[590,15,781,13],[591,6,782,4,"overflow"],[591,14,782,12],[591,16,782,14],[592,4,783,2],[592,5,783,3],[593,4,784,2,"overlay"],[593,11,784,9],[593,13,784,11],[594,6,785,4],[594,9,785,7,"StyleSheet"],[594,21,785,17],[594,22,785,17,"StyleSheet"],[594,32,785,17],[594,33,785,18,"absoluteFillObject"],[594,51,785,36],[595,6,786,4,"zIndex"],[595,12,786,10],[595,14,786,12],[596,4,787,2],[597,2,788,0],[597,3,788,1],[597,4,788,2],[598,0,788,3],[598,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCsO;ECgB;GDiB;EEE;GFW;gCGkB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaG;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"},"hasCjsExports":false},"type":"js/module"}]}