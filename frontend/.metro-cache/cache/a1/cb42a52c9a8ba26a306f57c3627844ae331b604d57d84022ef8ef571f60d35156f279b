{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":39,"index":145},"end":{"line":7,"column":64,"index":170}}],"key":"TIRD4n0vm1viGfriWDBtxYTyDXo=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":186},"end":{"line":8,"column":32,"index":205}}],"key":"6QJYsgIYyXDoX6Ak1wmI7AHik6U=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":17,"index":224},"end":{"line":9,"column":39,"index":246}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":53,"index":301},"end":{"line":10,"column":88,"index":336}}],"key":"eJDHGrqD5QkVDEQGLi3BxJN4OyA=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":13,"index":352},"end":{"line":11,"column":31,"index":370}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[0], \"@egjs/hammerjs\"));\n  var _State = require(_dependencyMap[1], \"../State\");\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[3], \"./DiscreteGestureHandler\"));\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  class PressGestureHandler extends _DiscreteGestureHandler.default {\n    initialEvent = null;\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Press;\n    }\n    shouldDelayTouches = true;\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [_hammerjs.default.INPUT_START]: _State.State.BEGAN,\n        [_hammerjs.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [_hammerjs.default.INPUT_END]: _State.State.END,\n        [_hammerjs.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      };\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent({\n        ...ev,\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFirst: true\n      });\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent({\n              ...ev,\n              eventType: _hammerjs.default.INPUT_END,\n              isFinal: true\n            });\n            // @ts-ignore -- this should explicitly support undefined\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent({\n            ...ev,\n            eventType: _hammerjs.default.INPUT_MOVE,\n            isFinal: false\n          });\n        }\n      }\n    }\n    updateGestureConfig({\n      shouldActivateOnStart = false,\n      disallowInterruption = false,\n      shouldCancelWhenOutside = true,\n      minDurationMs = Number.NaN,\n      maxDist = Number.NaN,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n  }\n  var _default = exports.default = PressGestureHandler;\n});","lineCount":158,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,7,0],[8,6,7,4,"_hammerjs"],[8,15,7,13],[8,18,7,16,"_interopRequireDefault"],[8,40,7,38],[8,41,7,39,"require"],[8,48,7,46],[8,49,7,46,"_dependencyMap"],[8,63,7,46],[8,84,7,63],[8,85,7,64],[8,86,7,65],[9,2,8,0],[9,6,8,4,"_State"],[9,12,8,10],[9,15,8,13,"require"],[9,22,8,20],[9,23,8,20,"_dependencyMap"],[9,37,8,20],[9,52,8,31],[9,53,8,32],[10,2,9,0],[10,6,9,4,"_constants"],[10,16,9,14],[10,19,9,17,"require"],[10,26,9,24],[10,27,9,24,"_dependencyMap"],[10,41,9,24],[10,59,9,38],[10,60,9,39],[11,2,10,0],[11,6,10,4,"_DiscreteGestureHandler"],[11,29,10,27],[11,32,10,30,"_interopRequireDefault"],[11,54,10,52],[11,55,10,53,"require"],[11,62,10,60],[11,63,10,60,"_dependencyMap"],[11,77,10,60],[11,108,10,87],[11,109,10,88],[11,110,10,89],[12,2,11,0],[12,6,11,4,"_utils"],[12,12,11,10],[12,15,11,13,"require"],[12,22,11,20],[12,23,11,20,"_dependencyMap"],[12,37,11,20],[12,51,11,30],[12,52,11,31],[13,2,12,0],[13,11,12,9,"_interopRequireDefault"],[13,33,12,31,"_interopRequireDefault"],[13,34,12,32,"e"],[13,35,12,33],[13,37,12,35],[14,4,12,37],[14,11,12,44,"e"],[14,12,12,45],[14,16,12,49,"e"],[14,17,12,50],[14,18,12,51,"__esModule"],[14,28,12,61],[14,31,12,64,"e"],[14,32,12,65],[14,35,12,68],[15,6,12,70,"default"],[15,13,12,77],[15,15,12,79,"e"],[16,4,12,81],[16,5,12,82],[17,2,12,84],[18,2,13,0],[18,8,13,6,"PressGestureHandler"],[18,27,13,25],[18,36,13,34,"_DiscreteGestureHandler"],[18,59,13,57],[18,60,13,58,"default"],[18,67,13,65],[18,68,13,66],[19,4,14,2,"initialEvent"],[19,16,14,14],[19,19,14,17],[19,23,14,21],[20,4,15,2],[20,8,15,6,"name"],[20,12,15,10,"name"],[20,13,15,10],[20,15,15,13],[21,6,16,4],[21,13,16,11],[21,20,16,18],[22,4,17,2],[23,4,18,2],[23,8,18,6,"minDurationMs"],[23,21,18,19,"minDurationMs"],[23,22,18,19],[23,24,18,22],[24,6,19,4],[25,6,20,4],[25,13,20,11],[25,14,20,12],[25,15,20,13],[25,17,20,15,"_utils"],[25,23,20,21],[25,24,20,22,"isnan"],[25,29,20,27],[25,31,20,29],[25,35,20,33],[25,36,20,34,"config"],[25,42,20,40],[25,43,20,41,"minDurationMs"],[25,56,20,54],[25,57,20,55],[25,60,20,58],[25,61,20,59],[25,64,20,62],[25,68,20,66],[25,69,20,67,"config"],[25,75,20,73],[25,76,20,74,"minDurationMs"],[25,89,20,87],[26,4,21,2],[27,4,22,2],[27,8,22,6,"maxDist"],[27,15,22,13,"maxDist"],[27,16,22,13],[27,18,22,16],[28,6,23,4],[28,13,23,11],[28,14,23,12],[28,15,23,13],[28,17,23,15,"_utils"],[28,23,23,21],[28,24,23,22,"isnan"],[28,29,23,27],[28,31,23,29],[28,35,23,33],[28,36,23,34,"config"],[28,42,23,40],[28,43,23,41,"maxDist"],[28,50,23,48],[28,51,23,49],[28,54,23,52],[28,55,23,53],[28,58,23,56],[28,62,23,60],[28,63,23,61,"config"],[28,69,23,67],[28,70,23,68,"maxDist"],[28,77,23,75],[29,4,24,2],[30,4,25,2],[30,8,25,6,"NativeGestureClass"],[30,26,25,24,"NativeGestureClass"],[30,27,25,24],[30,29,25,27],[31,6,26,4],[31,13,26,11,"_hammerjs"],[31,22,26,20],[31,23,26,21,"default"],[31,30,26,28],[31,31,26,29,"Press"],[31,36,26,34],[32,4,27,2],[33,4,28,2,"shouldDelayTouches"],[33,22,28,20],[33,25,28,23],[33,29,28,27],[34,4,29,2,"simulateCancelEvent"],[34,23,29,21,"simulateCancelEvent"],[34,24,29,22,"inputData"],[34,33,29,31],[34,35,29,33],[35,6,30,4],[36,6,31,4],[36,10,31,8],[36,11,31,9,"hasGestureFailed"],[36,27,31,25],[36,30,31,28],[36,34,31,32],[37,6,32,4],[37,10,32,8],[37,11,32,9,"cancelEvent"],[37,22,32,20],[37,23,32,21,"inputData"],[37,32,32,30],[37,33,32,31],[38,4,33,2],[39,4,34,2,"updateHasCustomActivationCriteria"],[39,37,34,35,"updateHasCustomActivationCriteria"],[39,38,34,36],[40,6,35,4,"shouldCancelWhenOutside"],[40,29,35,27],[41,6,36,4,"maxDistSq"],[42,4,37,2],[42,5,37,3],[42,7,37,5],[43,6,38,4],[43,13,38,11,"shouldCancelWhenOutside"],[43,36,38,34],[43,40,38,38],[43,41,38,39],[43,42,38,40],[43,43,38,41],[43,45,38,43,"_utils"],[43,51,38,49],[43,52,38,50,"isValidNumber"],[43,65,38,63],[43,67,38,65,"maxDistSq"],[43,76,38,74],[43,77,38,75],[44,4,39,2],[45,4,40,2,"getState"],[45,12,40,10,"getState"],[45,13,40,11,"type"],[45,17,40,15],[45,19,40,17],[46,6,41,4],[46,13,41,11],[47,8,42,6],[47,9,42,7,"_hammerjs"],[47,18,42,16],[47,19,42,17,"default"],[47,26,42,24],[47,27,42,25,"INPUT_START"],[47,38,42,36],[47,41,42,39,"_State"],[47,47,42,45],[47,48,42,46,"State"],[47,53,42,51],[47,54,42,52,"BEGAN"],[47,59,42,57],[48,8,43,6],[48,9,43,7,"_hammerjs"],[48,18,43,16],[48,19,43,17,"default"],[48,26,43,24],[48,27,43,25,"INPUT_MOVE"],[48,37,43,35],[48,40,43,38,"_State"],[48,46,43,44],[48,47,43,45,"State"],[48,52,43,50],[48,53,43,51,"ACTIVE"],[48,59,43,57],[49,8,44,6],[49,9,44,7,"_hammerjs"],[49,18,44,16],[49,19,44,17,"default"],[49,26,44,24],[49,27,44,25,"INPUT_END"],[49,36,44,34],[49,39,44,37,"_State"],[49,45,44,43],[49,46,44,44,"State"],[49,51,44,49],[49,52,44,50,"END"],[49,55,44,53],[50,8,45,6],[50,9,45,7,"_hammerjs"],[50,18,45,16],[50,19,45,17,"default"],[50,26,45,24],[50,27,45,25,"INPUT_CANCEL"],[50,39,45,37],[50,42,45,40,"_State"],[50,48,45,46],[50,49,45,47,"State"],[50,54,45,52],[50,55,45,53,"CANCELLED"],[51,6,46,4],[51,7,46,5],[51,8,46,6,"type"],[51,12,46,10],[51,13,46,11],[52,4,47,2],[53,4,48,2,"getConfig"],[53,13,48,11,"getConfig"],[53,14,48,11],[53,16,48,14],[54,6,49,4],[54,10,49,8],[54,11,49,9],[54,15,49,13],[54,16,49,14,"hasCustomActivationCriteria"],[54,43,49,41],[54,45,49,43],[55,8,50,6],[56,8,51,6],[57,8,52,6],[57,15,52,13],[58,10,53,8,"shouldCancelWhenOutside"],[58,33,53,31],[58,35,53,33],[58,39,53,37],[59,10,54,8,"maxDistSq"],[59,19,54,17],[59,21,54,19],[60,8,55,6],[60,9,55,7],[61,6,56,4],[62,6,57,4],[62,13,57,11],[62,17,57,15],[62,18,57,16,"config"],[62,24,57,22],[63,4,58,2],[64,4,59,2,"getHammerConfig"],[64,19,59,17,"getHammerConfig"],[64,20,59,17],[64,22,59,20],[65,6,60,4],[65,13,60,11],[66,8,61,6],[66,11,61,9],[66,16,61,14],[66,17,61,15,"getHammerConfig"],[66,32,61,30],[66,33,61,31],[66,34,61,32],[67,8,62,6],[68,8,63,6,"time"],[68,12,63,10],[68,14,63,12],[68,18,63,16],[68,19,63,17,"minDurationMs"],[69,6,64,4],[69,7,64,5],[70,4,65,2],[71,4,66,2,"onGestureActivated"],[71,22,66,20,"onGestureActivated"],[71,23,66,21,"ev"],[71,25,66,23],[71,27,66,25],[72,6,67,4],[72,10,67,8],[72,11,67,9,"onGestureStart"],[72,25,67,23],[72,26,67,24,"ev"],[72,28,67,26],[72,29,67,27],[73,4,68,2],[74,4,69,2,"shouldDelayTouchForEvent"],[74,28,69,26,"shouldDelayTouchForEvent"],[74,29,69,27],[75,6,70,4,"pointerType"],[76,4,71,2],[76,5,71,3],[76,7,71,5],[77,6,72,4],[78,6,73,4],[78,13,73,11],[78,17,73,15],[78,18,73,16,"shouldDelayTouches"],[78,36,73,34],[78,40,73,38,"pointerType"],[78,51,73,49],[78,56,73,54],[78,63,73,61],[79,4,74,2],[80,4,75,2,"onGestureStart"],[80,18,75,16,"onGestureStart"],[80,19,75,17,"ev"],[80,21,75,19],[80,23,75,21],[81,6,76,4],[81,10,76,8],[81,11,76,9,"isGestureRunning"],[81,27,76,25],[81,30,76,28],[81,34,76,32],[82,6,77,4,"clearTimeout"],[82,18,77,16],[82,19,77,17],[82,23,77,21],[82,24,77,22,"visualFeedbackTimer"],[82,43,77,41],[82,44,77,42],[83,6,78,4],[83,10,78,8],[83,11,78,9,"initialEvent"],[83,23,78,21],[83,26,78,24,"ev"],[83,28,78,26],[84,6,79,4],[84,10,79,8],[84,11,79,9,"visualFeedbackTimer"],[84,30,79,28],[84,33,79,31],[84,34,79,32],[84,35,79,33],[84,37,79,35,"_utils"],[84,43,79,41],[84,44,79,42,"fireAfterInterval"],[84,61,79,59],[84,63,79,61],[84,69,79,67],[85,8,80,6],[85,12,80,10],[85,13,80,11,"sendGestureStartedEvent"],[85,36,80,34],[85,37,80,35],[85,41,80,39],[85,42,80,40,"initialEvent"],[85,54,80,52],[85,55,80,53],[86,8,81,6],[86,12,81,10],[86,13,81,11,"initialEvent"],[86,25,81,23],[86,28,81,26],[86,32,81,30],[87,6,82,4],[87,7,82,5],[87,9,82,7],[87,13,82,11],[87,14,82,12,"shouldDelayTouchForEvent"],[87,38,82,36],[87,39,82,37,"ev"],[87,41,82,39],[87,42,82,40],[87,46,82,44,"_constants"],[87,56,82,54],[87,57,82,55,"CONTENT_TOUCHES_DELAY"],[87,78,82,76],[87,79,82,77],[88,4,83,2],[89,4,84,2,"sendGestureStartedEvent"],[89,27,84,25,"sendGestureStartedEvent"],[89,28,84,26,"ev"],[89,30,84,28],[89,32,84,30],[90,6,85,4,"clearTimeout"],[90,18,85,16],[90,19,85,17],[90,23,85,21],[90,24,85,22,"visualFeedbackTimer"],[90,43,85,41],[90,44,85,42],[91,6,86,4],[91,10,86,8],[91,11,86,9,"visualFeedbackTimer"],[91,30,86,28],[91,33,86,31],[91,37,86,35],[92,6,87,4],[92,10,87,8],[92,11,87,9,"sendEvent"],[92,20,87,18],[92,21,87,19],[93,8,88,6],[93,11,88,9,"ev"],[93,13,88,11],[94,8,89,6,"eventType"],[94,17,89,15],[94,19,89,17,"_hammerjs"],[94,28,89,26],[94,29,89,27,"default"],[94,36,89,34],[94,37,89,35,"INPUT_MOVE"],[94,47,89,45],[95,8,90,6,"isFirst"],[95,15,90,13],[95,17,90,15],[96,6,91,4],[96,7,91,5],[96,8,91,6],[97,4,92,2],[98,4,93,2,"forceInvalidate"],[98,19,93,17,"forceInvalidate"],[98,20,93,18,"event"],[98,25,93,23],[98,27,93,25],[99,6,94,4],[99,11,94,9],[99,12,94,10,"forceInvalidate"],[99,27,94,25],[99,28,94,26,"event"],[99,33,94,31],[99,34,94,32],[100,6,95,4,"clearTimeout"],[100,18,95,16],[100,19,95,17],[100,23,95,21],[100,24,95,22,"visualFeedbackTimer"],[100,43,95,41],[100,44,95,42],[101,6,96,4],[101,10,96,8],[101,11,96,9,"visualFeedbackTimer"],[101,30,96,28],[101,33,96,31],[101,37,96,35],[102,6,97,4],[102,10,97,8],[102,11,97,9,"initialEvent"],[102,23,97,21],[102,26,97,24],[102,30,97,28],[103,4,98,2],[104,4,99,2,"onRawEvent"],[104,14,99,12,"onRawEvent"],[104,15,99,13,"ev"],[104,17,99,15],[104,19,99,17],[105,6,100,4],[105,11,100,9],[105,12,100,10,"onRawEvent"],[105,22,100,20],[105,23,100,21,"ev"],[105,25,100,23],[105,26,100,24],[106,6,101,4],[106,10,101,8],[106,14,101,12],[106,15,101,13,"isGestureRunning"],[106,31,101,29],[106,33,101,31],[107,8,102,6],[107,12,102,10,"ev"],[107,14,102,12],[107,15,102,13,"isFinal"],[107,22,102,20],[107,24,102,22],[108,10,103,8],[108,14,103,12,"timeout"],[108,21,103,19],[109,10,104,8],[109,14,104,12],[109,18,104,16],[109,19,104,17,"visualFeedbackTimer"],[109,38,104,36],[109,40,104,38],[110,12,105,10],[111,12,106,10],[112,12,107,10],[113,12,108,10,"timeout"],[113,19,108,17],[113,22,108,20,"_constants"],[113,32,108,30],[113,33,108,31,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[113,68,108,66],[114,12,109,10],[114,16,109,14],[114,17,109,15,"sendGestureStartedEvent"],[114,40,109,38],[114,41,109,39],[114,45,109,43],[114,46,109,44,"initialEvent"],[114,58,109,56],[114,59,109,57],[115,12,110,10],[115,16,110,14],[115,17,110,15,"initialEvent"],[115,29,110,27],[115,32,110,30],[115,36,110,34],[116,10,111,8],[117,10,112,8],[117,11,112,9],[117,12,112,10],[117,14,112,12,"_utils"],[117,20,112,18],[117,21,112,19,"fireAfterInterval"],[117,38,112,36],[117,40,112,38],[117,46,112,44],[118,12,113,10],[118,16,113,14],[118,17,113,15,"sendEvent"],[118,26,113,24],[118,27,113,25],[119,14,114,12],[119,17,114,15,"ev"],[119,19,114,17],[120,14,115,12,"eventType"],[120,23,115,21],[120,25,115,23,"_hammerjs"],[120,34,115,32],[120,35,115,33,"default"],[120,42,115,40],[120,43,115,41,"INPUT_END"],[120,52,115,50],[121,14,116,12,"isFinal"],[121,21,116,19],[121,23,116,21],[122,12,117,10],[122,13,117,11],[122,14,117,12],[123,12,118,10],[124,12,119,10],[124,16,119,14],[124,17,119,15,"onGestureEnded"],[124,31,119,29],[124,32,119,30],[124,33,119,31],[125,10,120,8],[125,11,120,9],[125,13,120,11,"timeout"],[125,20,120,18],[125,21,120,19],[126,8,121,6],[126,9,121,7],[126,15,121,13],[127,10,122,8],[127,14,122,12],[127,15,122,13,"sendEvent"],[127,24,122,22],[127,25,122,23],[128,12,123,10],[128,15,123,13,"ev"],[128,17,123,15],[129,12,124,10,"eventType"],[129,21,124,19],[129,23,124,21,"_hammerjs"],[129,32,124,30],[129,33,124,31,"default"],[129,40,124,38],[129,41,124,39,"INPUT_MOVE"],[129,51,124,49],[130,12,125,10,"isFinal"],[130,19,125,17],[130,21,125,19],[131,10,126,8],[131,11,126,9],[131,12,126,10],[132,8,127,6],[133,6,128,4],[134,4,129,2],[135,4,130,2,"updateGestureConfig"],[135,23,130,21,"updateGestureConfig"],[135,24,130,22],[136,6,131,4,"shouldActivateOnStart"],[136,27,131,25],[136,30,131,28],[136,35,131,33],[137,6,132,4,"disallowInterruption"],[137,26,132,24],[137,29,132,27],[137,34,132,32],[138,6,133,4,"shouldCancelWhenOutside"],[138,29,133,27],[138,32,133,30],[138,36,133,34],[139,6,134,4,"minDurationMs"],[139,19,134,17],[139,22,134,20,"Number"],[139,28,134,26],[139,29,134,27,"NaN"],[139,32,134,30],[140,6,135,4,"maxDist"],[140,13,135,11],[140,16,135,14,"Number"],[140,22,135,20],[140,23,135,21,"NaN"],[140,26,135,24],[141,6,136,4,"minPointers"],[141,17,136,15],[141,20,136,18],[141,21,136,19],[142,6,137,4,"maxPointers"],[142,17,137,15],[142,20,137,18],[142,21,137,19],[143,6,138,4],[143,9,138,7,"props"],[144,4,139,2],[144,5,139,3],[144,7,139,5],[145,6,140,4],[145,13,140,11],[145,18,140,16],[145,19,140,17,"updateGestureConfig"],[145,38,140,36],[145,39,140,37],[146,8,141,6,"shouldActivateOnStart"],[146,29,141,27],[147,8,142,6,"disallowInterruption"],[147,28,142,26],[148,8,143,6,"shouldCancelWhenOutside"],[148,31,143,29],[149,8,144,6,"minDurationMs"],[149,21,144,19],[150,8,145,6,"maxDist"],[150,15,145,13],[151,8,146,6,"minPointers"],[151,19,146,17],[152,8,147,6,"maxPointers"],[152,19,147,17],[153,8,148,6],[153,11,148,9,"props"],[154,6,149,4],[154,7,149,5],[154,8,149,6],[155,4,150,2],[156,2,151,0],[157,2,152,0],[157,6,152,4,"_default"],[157,14,152,12],[157,17,152,15,"exports"],[157,24,152,22],[157,25,152,23,"default"],[157,32,152,30],[157,35,152,33,"PressGestureHandler"],[157,54,152,52],[158,0,152,53],[158,3]],"functionMap":{"names":["<global>","_interopRequireDefault","PressGestureHandler","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","<anonymous>","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA;ACW,qFD;AEC;ECE;GDE;EEC;GFG;EGC;GHE;EIC;GJE;EKE;GLI;EMC;GNK;EOC;GPO;EQC;GRU;ESC;GTM;EUC;GVE;EWC;GXK;EYC;6DCI;KDG;GZC;EcC;GdQ;EeC;GfK;EgBC;sCHa;SGQ;GhBS;EiBC;GjBoB;CFC"},"hasCjsExports":true},"type":"js/module"}]}