{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":50,"index":102}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0=","exportNames":["*"],"imports":1}},{"name":"./updateHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":103},"end":{"line":5,"column":50,"index":153}}],"key":"lArlpaD/5d+RB4jQyU++60NVCc0=","exportNames":["*"],"imports":1}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":154},"end":{"line":6,"column":52,"index":206}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo=","exportNames":["*"],"imports":1}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":207},"end":{"line":7,"column":46,"index":253}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":254},"end":{"line":8,"column":67,"index":321}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":322},"end":{"line":9,"column":53,"index":375}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useDetectorUpdater = useDetectorUpdater;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _attachHandlers = require(_dependencyMap[1], \"./attachHandlers\");\n  var _updateHandlers = require(_dependencyMap[2], \"./updateHandlers\");\n  var _needsToReattach = require(_dependencyMap[3], \"./needsToReattach\");\n  var _dropHandlers = require(_dependencyMap[4], \"./dropHandlers\");\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[6], \"../../../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  // Returns a function that's responsible for updating the attached gestures\n  // If the view has changed, it will reattach the handlers to the new view\n  // If the view remains the same, it will update the handlers with the new config\n  function useDetectorUpdater(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef) {\n    const forceRender = (0, _utils.useForceRender)();\n    const updateAttachedGestures = (0, _react.useCallback)(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    skipConfigUpdate => {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      const viewTag = (0, findNodeHandle.default)(state.viewRef);\n      const didUnderlyingViewChange = viewTag !== state.previousViewTag;\n      if (didUnderlyingViewChange || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach)) {\n        (0, _utils.validateDetectorChildren)(state.viewRef);\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n        (0, _attachHandlers.attachHandlers)({\n          preparedGesture,\n          gestureConfig,\n          gesturesToAttach,\n          webEventHandlersRef,\n          viewTag\n        });\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        (0, _updateHandlers.updateHandlers)(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    }, [forceRender, gestureConfig, gesturesToAttach, preparedGesture, state, webEventHandlersRef]);\n    return updateAttachedGestures;\n  }\n});","lineCount":53,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,14,0,"exports"],[12,9,14,0],[12,10,14,0,"useDetectorUpdater"],[12,28,14,0],[12,31,14,0,"useDetectorUpdater"],[12,49,14,0],[13,2,3,0],[13,6,3,0,"_react"],[13,12,3,0],[13,15,3,0,"require"],[13,22,3,0],[13,23,3,0,"_dependencyMap"],[13,37,3,0],[14,2,4,0],[14,6,4,0,"_attachHandlers"],[14,21,4,0],[14,24,4,0,"require"],[14,31,4,0],[14,32,4,0,"_dependencyMap"],[14,46,4,0],[15,2,5,0],[15,6,5,0,"_updateHandlers"],[15,21,5,0],[15,24,5,0,"require"],[15,31,5,0],[15,32,5,0,"_dependencyMap"],[15,46,5,0],[16,2,6,0],[16,6,6,0,"_needsToReattach"],[16,22,6,0],[16,25,6,0,"require"],[16,32,6,0],[16,33,6,0,"_dependencyMap"],[16,47,6,0],[17,2,7,0],[17,6,7,0,"_dropHandlers"],[17,19,7,0],[17,22,7,0,"require"],[17,29,7,0],[17,30,7,0,"_dependencyMap"],[17,44,7,0],[18,2,8,0],[18,6,8,0,"_utils"],[18,12,8,0],[18,15,8,0,"require"],[18,22,8,0],[18,23,8,0,"_dependencyMap"],[18,37,8,0],[19,2,9,0],[19,6,9,0,"_findNodeHandle"],[19,21,9,0],[19,24,9,0,"require"],[19,31,9,0],[19,32,9,0,"_dependencyMap"],[19,46,9,0],[20,2,9,0],[20,6,9,0,"findNodeHandle"],[20,20,9,0],[20,23,9,0,"_interopDefault"],[20,38,9,0],[20,39,9,0,"_findNodeHandle"],[20,54,9,0],[21,2,11,0],[22,2,12,0],[23,2,13,0],[24,2,14,7],[24,11,14,16,"useDetectorUpdater"],[24,29,14,34,"useDetectorUpdater"],[24,30,14,35,"state"],[24,35,14,40],[24,37,14,42,"preparedGesture"],[24,52,14,57],[24,54,14,59,"gesturesToAttach"],[24,70,14,75],[24,72,14,77,"gestureConfig"],[24,85,14,90],[24,87,14,92,"webEventHandlersRef"],[24,106,14,111],[24,108,14,113],[25,4,15,2],[25,10,15,8,"forceRender"],[25,21,15,19],[25,24,15,22],[25,28,15,22,"useForceRender"],[25,34,15,36],[25,35,15,36,"useForceRender"],[25,49,15,36],[25,51,15,37],[25,52,15,38],[26,4,16,2],[26,10,16,8,"updateAttachedGestures"],[26,32,16,30],[26,35,16,33],[26,39,16,33,"useCallback"],[26,45,16,44],[26,46,16,44,"useCallback"],[26,57,16,44],[27,4,17,2],[28,4,18,2,"skipConfigUpdate"],[28,20,18,18],[28,24,18,22],[29,6,19,4],[30,6,20,4],[30,12,20,10,"viewTag"],[30,19,20,17],[30,22,20,20],[30,26,20,20,"findNodeHandle"],[30,40,20,34],[30,41,20,34,"default"],[30,48,20,34],[30,50,20,35,"state"],[30,55,20,40],[30,56,20,41,"viewRef"],[30,63,20,48],[30,64,20,49],[31,6,21,4],[31,12,21,10,"didUnderlyingViewChange"],[31,35,21,33],[31,38,21,36,"viewTag"],[31,45,21,43],[31,50,21,48,"state"],[31,55,21,53],[31,56,21,54,"previousViewTag"],[31,71,21,69],[32,6,22,4],[32,10,22,8,"didUnderlyingViewChange"],[32,33,22,31],[32,37,22,35],[32,41,22,35,"needsToReattach"],[32,57,22,50],[32,58,22,50,"needsToReattach"],[32,73,22,50],[32,75,22,51,"preparedGesture"],[32,90,22,66],[32,92,22,68,"gesturesToAttach"],[32,108,22,84],[32,109,22,85],[32,111,22,87],[33,8,23,6],[33,12,23,6,"validateDetectorChildren"],[33,18,23,30],[33,19,23,30,"validateDetectorChildren"],[33,43,23,30],[33,45,23,31,"state"],[33,50,23,36],[33,51,23,37,"viewRef"],[33,58,23,44],[33,59,23,45],[34,8,24,6],[34,12,24,6,"dropHandlers"],[34,25,24,18],[34,26,24,18,"dropHandlers"],[34,38,24,18],[34,40,24,19,"preparedGesture"],[34,55,24,34],[34,56,24,35],[35,8,25,6],[35,12,25,6,"attachHandlers"],[35,27,25,20],[35,28,25,20,"attachHandlers"],[35,42,25,20],[35,44,25,21],[36,10,26,8,"preparedGesture"],[36,25,26,23],[37,10,27,8,"gestureConfig"],[37,23,27,21],[38,10,28,8,"gesturesToAttach"],[38,26,28,24],[39,10,29,8,"webEventHandlersRef"],[39,29,29,27],[40,10,30,8,"viewTag"],[41,8,31,6],[41,9,31,7],[41,10,31,8],[42,8,32,6],[42,12,32,10,"didUnderlyingViewChange"],[42,35,32,33],[42,37,32,35],[43,10,33,8,"state"],[43,15,33,13],[43,16,33,14,"previousViewTag"],[43,31,33,29],[43,34,33,32,"viewTag"],[43,41,33,39],[44,10,34,8,"state"],[44,15,34,13],[44,16,34,14,"forceRebuildReanimatedEvent"],[44,43,34,41],[44,46,34,44],[44,50,34,48],[45,10,35,8,"forceRender"],[45,21,35,19],[45,22,35,20],[45,23,35,21],[46,8,36,6],[47,6,37,4],[47,7,37,5],[47,13,37,11],[47,17,37,15],[47,18,37,16,"skipConfigUpdate"],[47,34,37,32],[47,36,37,34],[48,8,38,6],[48,12,38,6,"updateHandlers"],[48,27,38,20],[48,28,38,20,"updateHandlers"],[48,42,38,20],[48,44,38,21,"preparedGesture"],[48,59,38,36],[48,61,38,38,"gestureConfig"],[48,74,38,51],[48,76,38,53,"gesturesToAttach"],[48,92,38,69],[48,93,38,70],[49,6,39,4],[50,4,40,2],[50,5,40,3],[50,7,40,5],[50,8,40,6,"forceRender"],[50,19,40,17],[50,21,40,19,"gestureConfig"],[50,34,40,32],[50,36,40,34,"gesturesToAttach"],[50,52,40,50],[50,54,40,52,"preparedGesture"],[50,69,40,67],[50,71,40,69,"state"],[50,76,40,74],[50,78,40,76,"webEventHandlersRef"],[50,97,40,95],[50,98,40,96],[50,99,40,97],[51,4,41,2],[51,11,41,9,"updateAttachedGestures"],[51,33,41,31],[52,2,42,0],[53,0,42,1],[53,3]],"functionMap":{"names":["<global>","useDetectorUpdater","updateAttachedGestures"],"mappings":"AAA;OCa;ECI;GDsB;CDE"},"hasCjsExports":false},"type":"js/module"}]}