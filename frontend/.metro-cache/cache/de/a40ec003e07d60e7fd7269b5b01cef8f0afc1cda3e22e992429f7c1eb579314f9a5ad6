{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":49,"index":64}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"ComposedGesture\", {\n    enumerable: true,\n    get: function () {\n      return ComposedGesture;\n    }\n  });\n  Object.defineProperty(exports, \"SimultaneousGesture\", {\n    enumerable: true,\n    get: function () {\n      return SimultaneousGesture;\n    }\n  });\n  Object.defineProperty(exports, \"ExclusiveGesture\", {\n    enumerable: true,\n    get: function () {\n      return ExclusiveGesture;\n    }\n  });\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function extendRelation(currentRelation, extendWith) {\n    if (currentRelation === undefined) {\n      return [...extendWith];\n    } else {\n      return [...currentRelation, ...extendWith];\n    }\n  }\n  class ComposedGesture extends _gesture.Gesture {\n    gestures = [];\n    simultaneousGestures = [];\n    requireGesturesToFail = [];\n    constructor(...gestures) {\n      super();\n      this.gestures = gestures;\n    }\n    prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        const newConfig = {\n          ...gesture.config\n        };\n\n        // No need to extend `blocksHandlers` here, because it's not changed in composition.\n        // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n    prepare() {\n      for (const gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n    initialize() {\n      for (const gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n    toGestureArray() {\n      return this.gestures.flatMap(gesture => gesture.toGestureArray());\n    }\n  }\n  class SimultaneousGesture extends ComposedGesture {\n    prepare() {\n      // This piece of magic works something like this:\n      // for every gesture in the array\n      const simultaneousArrays = this.gestures.map(gesture =>\n      // we take the array it's in\n      this.gestures\n      // and make a copy without it\n      .filter(x => x !== gesture)\n      // then we flatmap the result to get list of raw (not composed) gestures\n      // this way we don't make the gestures simultaneous with themselves, which is\n      // important when the gesture is `ExclusiveGesture` - we don't want to make\n      // exclusive gestures simultaneous\n      .flatMap(x => x.toGestureArray()));\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }\n  class ExclusiveGesture extends ComposedGesture {\n    prepare() {\n      // Transforms the array of gestures into array of grouped raw (not composed) gestures\n      // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n      const gestureArrays = this.gestures.map(gesture => gesture.toGestureArray());\n      let requireToFail = [];\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n\n        // Every group gets to wait for all groups before it\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }\n});","lineCount":105,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,11,0,"Object"],[7,8,11,0],[7,9,11,0,"defineProperty"],[7,23,11,0],[7,24,11,0,"exports"],[7,31,11,0],[8,4,11,0,"enumerable"],[8,14,11,0],[9,4,11,0,"get"],[9,7,11,0],[9,18,11,0,"get"],[9,19,11,0],[10,6,11,0],[10,13,11,0,"ComposedGesture"],[10,28,11,0],[11,4,11,0],[12,2,11,0],[13,2,50,0,"Object"],[13,8,50,0],[13,9,50,0,"defineProperty"],[13,23,50,0],[13,24,50,0,"exports"],[13,31,50,0],[14,4,50,0,"enumerable"],[14,14,50,0],[15,4,50,0,"get"],[15,7,50,0],[15,18,50,0,"get"],[15,19,50,0],[16,6,50,0],[16,13,50,0,"SimultaneousGesture"],[16,32,50,0],[17,4,50,0],[18,2,50,0],[19,2,69,0,"Object"],[19,8,69,0],[19,9,69,0,"defineProperty"],[19,23,69,0],[19,24,69,0,"exports"],[19,31,69,0],[20,4,69,0,"enumerable"],[20,14,69,0],[21,4,69,0,"get"],[21,7,69,0],[21,18,69,0,"get"],[21,19,69,0],[22,6,69,0],[22,13,69,0,"ExclusiveGesture"],[22,29,69,0],[23,4,69,0],[24,2,69,0],[25,2,3,0],[25,6,3,0,"_gesture"],[25,14,3,0],[25,17,3,0,"require"],[25,24,3,0],[25,25,3,0,"_dependencyMap"],[25,39,3,0],[26,2,4,0],[26,11,4,9,"extendRelation"],[26,25,4,23,"extendRelation"],[26,26,4,24,"currentRelation"],[26,41,4,39],[26,43,4,41,"extendWith"],[26,53,4,51],[26,55,4,53],[27,4,5,2],[27,8,5,6,"currentRelation"],[27,23,5,21],[27,28,5,26,"undefined"],[27,37,5,35],[27,39,5,37],[28,6,6,4],[28,13,6,11],[28,14,6,12],[28,17,6,15,"extendWith"],[28,27,6,25],[28,28,6,26],[29,4,7,2],[29,5,7,3],[29,11,7,9],[30,6,8,4],[30,13,8,11],[30,14,8,12],[30,17,8,15,"currentRelation"],[30,32,8,30],[30,34,8,32],[30,37,8,35,"extendWith"],[30,47,8,45],[30,48,8,46],[31,4,9,2],[32,2,10,0],[33,2,11,7],[33,8,11,13,"ComposedGesture"],[33,23,11,28],[33,32,11,37,"Gesture"],[33,40,11,44],[33,41,11,44,"Gesture"],[33,48,11,44],[33,49,11,45],[34,4,12,2,"gestures"],[34,12,12,10],[34,15,12,13],[34,17,12,15],[35,4,13,2,"simultaneousGestures"],[35,24,13,22],[35,27,13,25],[35,29,13,27],[36,4,14,2,"requireGesturesToFail"],[36,25,14,23],[36,28,14,26],[36,30,14,28],[37,4,15,2,"constructor"],[37,15,15,13,"constructor"],[37,16,15,14],[37,19,15,17,"gestures"],[37,27,15,25],[37,29,15,27],[38,6,16,4],[38,11,16,9],[38,12,16,10],[38,13,16,11],[39,6,17,4],[39,10,17,8],[39,11,17,9,"gestures"],[39,19,17,17],[39,22,17,20,"gestures"],[39,30,17,28],[40,4,18,2],[41,4,19,2,"prepareSingleGesture"],[41,24,19,22,"prepareSingleGesture"],[41,25,19,23,"gesture"],[41,32,19,30],[41,34,19,32,"simultaneousGestures"],[41,54,19,52],[41,56,19,54,"requireGesturesToFail"],[41,77,19,75],[41,79,19,77],[42,6,20,4],[42,10,20,8,"gesture"],[42,17,20,15],[42,29,20,27,"BaseGesture"],[42,37,20,38],[42,38,20,38,"BaseGesture"],[42,49,20,38],[42,51,20,40],[43,8,21,6],[43,14,21,12,"newConfig"],[43,23,21,21],[43,26,21,24],[44,10,22,8],[44,13,22,11,"gesture"],[44,20,22,18],[44,21,22,19,"config"],[45,8,23,6],[45,9,23,7],[47,8,25,6],[48,8,26,6],[49,8,27,6,"newConfig"],[49,17,27,15],[49,18,27,16,"simultaneousWith"],[49,34,27,32],[49,37,27,35,"extendRelation"],[49,51,27,49],[49,52,27,50,"newConfig"],[49,61,27,59],[49,62,27,60,"simultaneousWith"],[49,78,27,76],[49,80,27,78,"simultaneousGestures"],[49,100,27,98],[49,101,27,99],[50,8,28,6,"newConfig"],[50,17,28,15],[50,18,28,16,"requireToFail"],[50,31,28,29],[50,34,28,32,"extendRelation"],[50,48,28,46],[50,49,28,47,"newConfig"],[50,58,28,56],[50,59,28,57,"requireToFail"],[50,72,28,70],[50,74,28,72,"requireGesturesToFail"],[50,95,28,93],[50,96,28,94],[51,8,29,6,"gesture"],[51,15,29,13],[51,16,29,14,"config"],[51,22,29,20],[51,25,29,23,"newConfig"],[51,34,29,32],[52,6,30,4],[52,7,30,5],[52,13,30,11],[52,17,30,15,"gesture"],[52,24,30,22],[52,36,30,34,"ComposedGesture"],[52,51,30,49],[52,53,30,51],[53,8,31,6,"gesture"],[53,15,31,13],[53,16,31,14,"simultaneousGestures"],[53,36,31,34],[53,39,31,37,"simultaneousGestures"],[53,59,31,57],[54,8,32,6,"gesture"],[54,15,32,13],[54,16,32,14,"requireGesturesToFail"],[54,37,32,35],[54,40,32,38,"requireGesturesToFail"],[54,61,32,59],[55,8,33,6,"gesture"],[55,15,33,13],[55,16,33,14,"prepare"],[55,23,33,21],[55,24,33,22],[55,25,33,23],[56,6,34,4],[57,4,35,2],[58,4,36,2,"prepare"],[58,11,36,9,"prepare"],[58,12,36,9],[58,14,36,12],[59,6,37,4],[59,11,37,9],[59,17,37,15,"gesture"],[59,24,37,22],[59,28,37,26],[59,32,37,30],[59,33,37,31,"gestures"],[59,41,37,39],[59,43,37,41],[60,8,38,6],[60,12,38,10],[60,13,38,11,"prepareSingleGesture"],[60,33,38,31],[60,34,38,32,"gesture"],[60,41,38,39],[60,43,38,41],[60,47,38,45],[60,48,38,46,"simultaneousGestures"],[60,68,38,66],[60,70,38,68],[60,74,38,72],[60,75,38,73,"requireGesturesToFail"],[60,96,38,94],[60,97,38,95],[61,6,39,4],[62,4,40,2],[63,4,41,2,"initialize"],[63,14,41,12,"initialize"],[63,15,41,12],[63,17,41,15],[64,6,42,4],[64,11,42,9],[64,17,42,15,"gesture"],[64,24,42,22],[64,28,42,26],[64,32,42,30],[64,33,42,31,"gestures"],[64,41,42,39],[64,43,42,41],[65,8,43,6,"gesture"],[65,15,43,13],[65,16,43,14,"initialize"],[65,26,43,24],[65,27,43,25],[65,28,43,26],[66,6,44,4],[67,4,45,2],[68,4,46,2,"toGestureArray"],[68,18,46,16,"toGestureArray"],[68,19,46,16],[68,21,46,19],[69,6,47,4],[69,13,47,11],[69,17,47,15],[69,18,47,16,"gestures"],[69,26,47,24],[69,27,47,25,"flatMap"],[69,34,47,32],[69,35,47,33,"gesture"],[69,42,47,40],[69,46,47,44,"gesture"],[69,53,47,51],[69,54,47,52,"toGestureArray"],[69,68,47,66],[69,69,47,67],[69,70,47,68],[69,71,47,69],[70,4,48,2],[71,2,49,0],[72,2,50,7],[72,8,50,13,"SimultaneousGesture"],[72,27,50,32],[72,36,50,41,"ComposedGesture"],[72,51,50,56],[72,52,50,57],[73,4,51,2,"prepare"],[73,11,51,9,"prepare"],[73,12,51,9],[73,14,51,12],[74,6,52,4],[75,6,53,4],[76,6,54,4],[76,12,54,10,"simultaneousArrays"],[76,30,54,28],[76,33,54,31],[76,37,54,35],[76,38,54,36,"gestures"],[76,46,54,44],[76,47,54,45,"map"],[76,50,54,48],[76,51,54,49,"gesture"],[76,58,54,56],[77,6,55,4],[78,6,56,4],[78,10,56,8],[78,11,56,9,"gestures"],[79,6,57,4],[80,6,57,4],[80,7,58,5,"filter"],[80,13,58,11],[80,14,58,12,"x"],[80,15,58,13],[80,19,58,17,"x"],[80,20,58,18],[80,25,58,23,"gesture"],[80,32,58,30],[81,6,59,4],[82,6,60,4],[83,6,61,4],[84,6,62,4],[85,6,62,4],[85,7,63,5,"flatMap"],[85,14,63,12],[85,15,63,13,"x"],[85,16,63,14],[85,20,63,18,"x"],[85,21,63,19],[85,22,63,20,"toGestureArray"],[85,36,63,34],[85,37,63,35],[85,38,63,36],[85,39,63,37],[85,40,63,38],[86,6,64,4],[86,11,64,9],[86,15,64,13,"i"],[86,16,64,14],[86,19,64,17],[86,20,64,18],[86,22,64,20,"i"],[86,23,64,21],[86,26,64,24],[86,30,64,28],[86,31,64,29,"gestures"],[86,39,64,37],[86,40,64,38,"length"],[86,46,64,44],[86,48,64,46,"i"],[86,49,64,47],[86,51,64,49],[86,53,64,51],[87,8,65,6],[87,12,65,10],[87,13,65,11,"prepareSingleGesture"],[87,33,65,31],[87,34,65,32],[87,38,65,36],[87,39,65,37,"gestures"],[87,47,65,45],[87,48,65,46,"i"],[87,49,65,47],[87,50,65,48],[87,52,65,50,"simultaneousArrays"],[87,70,65,68],[87,71,65,69,"i"],[87,72,65,70],[87,73,65,71],[87,75,65,73],[87,79,65,77],[87,80,65,78,"requireGesturesToFail"],[87,101,65,99],[87,102,65,100],[88,6,66,4],[89,4,67,2],[90,2,68,0],[91,2,69,7],[91,8,69,13,"ExclusiveGesture"],[91,24,69,29],[91,33,69,38,"ComposedGesture"],[91,48,69,53],[91,49,69,54],[92,4,70,2,"prepare"],[92,11,70,9,"prepare"],[92,12,70,9],[92,14,70,12],[93,6,71,4],[94,6,72,4],[95,6,73,4],[95,12,73,10,"gestureArrays"],[95,25,73,23],[95,28,73,26],[95,32,73,30],[95,33,73,31,"gestures"],[95,41,73,39],[95,42,73,40,"map"],[95,45,73,43],[95,46,73,44,"gesture"],[95,53,73,51],[95,57,73,55,"gesture"],[95,64,73,62],[95,65,73,63,"toGestureArray"],[95,79,73,77],[95,80,73,78],[95,81,73,79],[95,82,73,80],[96,6,74,4],[96,10,74,8,"requireToFail"],[96,23,74,21],[96,26,74,24],[96,28,74,26],[97,6,75,4],[97,11,75,9],[97,15,75,13,"i"],[97,16,75,14],[97,19,75,17],[97,20,75,18],[97,22,75,20,"i"],[97,23,75,21],[97,26,75,24],[97,30,75,28],[97,31,75,29,"gestures"],[97,39,75,37],[97,40,75,38,"length"],[97,46,75,44],[97,48,75,46,"i"],[97,49,75,47],[97,51,75,49],[97,53,75,51],[98,8,76,6],[98,12,76,10],[98,13,76,11,"prepareSingleGesture"],[98,33,76,31],[98,34,76,32],[98,38,76,36],[98,39,76,37,"gestures"],[98,47,76,45],[98,48,76,46,"i"],[98,49,76,47],[98,50,76,48],[98,52,76,50],[98,56,76,54],[98,57,76,55,"simultaneousGestures"],[98,77,76,75],[98,79,76,77],[98,83,76,81],[98,84,76,82,"requireGesturesToFail"],[98,105,76,103],[98,106,76,104,"concat"],[98,112,76,110],[98,113,76,111,"requireToFail"],[98,126,76,124],[98,127,76,125],[98,128,76,126],[100,8,78,6],[101,8,79,6,"requireToFail"],[101,21,79,19],[101,24,79,22,"requireToFail"],[101,37,79,35],[101,38,79,36,"concat"],[101,44,79,42],[101,45,79,43,"gestureArrays"],[101,58,79,56],[101,59,79,57,"i"],[101,60,79,58],[101,61,79,59],[101,62,79,60],[102,6,80,4],[103,4,81,2],[104,2,82,0],[105,0,82,1],[105,3]],"functionMap":{"names":["<global>","extendRelation","ComposedGesture","ComposedGesture#constructor","ComposedGesture#prepareSingleGesture","ComposedGesture#prepare","ComposedGesture#initialize","ComposedGesture#toGestureArray","gestures.flatMap$argument_0","SimultaneousGesture","SimultaneousGesture#prepare","gestures.map$argument_0","gestures.filter$argument_0","gestures.filter.flatMap$argument_0","ExclusiveGesture","ExclusiveGesture#prepare"],"mappings":"AAA;ACG;CDM;OEC;ECI;GDG;EEC;GFgB;EGC;GHI;EIC;GJI;EKC;iCCC,mCD;GLC;CFC;OSC;ECC;iDCG;YCI,kBD;aEK,uBF,CD;GDI;CTC;OcC;ECC;4CJG,mCI;GDQ;CdC"},"hasCjsExports":false},"type":"js/module"}]}