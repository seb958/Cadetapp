{"dependencies":[{"name":"../getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":57,"index":268}}],"key":"xPiMMdBr7viMwno5RpgPsKrTYT4=","exportNames":["*"],"imports":1}},{"name":"../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":269},"end":{"line":4,"column":55,"index":324}}],"key":"ByXat9lt9duIJLDmSeH0V+tRq1s=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"CALLBACK_TYPE\", {\n    enumerable: true,\n    get: function () {\n      return CALLBACK_TYPE;\n    }\n  });\n  Object.defineProperty(exports, \"Gesture\", {\n    enumerable: true,\n    get: function () {\n      return Gesture;\n    }\n  });\n  Object.defineProperty(exports, \"BaseGesture\", {\n    enumerable: true,\n    get: function () {\n      return BaseGesture;\n    }\n  });\n  Object.defineProperty(exports, \"ContinousBaseGesture\", {\n    enumerable: true,\n    get: function () {\n      return ContinousBaseGesture;\n    }\n  });\n  var _getNextHandlerTag = require(_dependencyMap[0], \"../getNextHandlerTag\");\n  var _utils = require(_dependencyMap[1], \"../../utils\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const CALLBACK_TYPE = {\n    UNDEFINED: 0,\n    BEGAN: 1,\n    START: 2,\n    UPDATE: 3,\n    CHANGE: 4,\n    END: 5,\n    FINALIZE: 6,\n    TOUCHES_DOWN: 7,\n    TOUCHES_MOVE: 8,\n    TOUCHES_UP: 9,\n    TOUCHES_CANCELLED: 10\n  }; // Allow using CALLBACK_TYPE as object and type\n  // eslint-disable-next-line @typescript-eslint/no-redeclare\n\n  class Gesture {}\n  let nextGestureId = 0;\n  class BaseGesture extends Gesture {\n    constructor() {\n      super(); // Used to check whether the gesture config has been updated when wrapping it\n      // with `useMemo`. Since every config will have a unique id, when the dependencies\n      // don't change, the config won't be recreated and the id will stay the same.\n      // If the id is different, it means that the config has changed and the gesture\n      // needs to be updated.\n\n      _defineProperty(this, \"gestureId\", -1);\n      _defineProperty(this, \"handlerTag\", -1);\n      _defineProperty(this, \"handlerName\", '');\n      _defineProperty(this, \"config\", {});\n      _defineProperty(this, \"handlers\", {\n        gestureId: -1,\n        handlerTag: -1,\n        isWorklet: []\n      });\n      this.gestureId = nextGestureId++;\n      this.handlers.gestureId = this.gestureId;\n    }\n    addDependency(key, gesture) {\n      const value = this.config[key];\n      this.config[key] = value ? Array().concat(value, gesture) : [gesture];\n    }\n    /**\n     * Sets a `ref` to the gesture object, allowing for interoperability with the old API.\n     * @param ref\n     */\n\n    withRef(ref) {\n      this.config.ref = ref;\n      return this;\n    } // eslint-disable-next-line @typescript-eslint/ban-types\n\n    isWorklet(callback) {\n      // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n      return callback.__workletHash !== undefined;\n    }\n    /**\n     * Set the callback that is being called when given gesture handler starts receiving touches.\n     * At the moment of this callback the handler is in `BEGAN` state and we don't know yet if it will recognize the gesture at all.\n     * @param callback\n     */\n\n    onBegin(callback) {\n      this.handlers.onBegin = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the callback that is being called when the gesture is recognized by the handler and it transitions to the `ACTIVE` state.\n     * @param callback\n     */\n\n    onStart(callback) {\n      this.handlers.onStart = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the callback that is being called when the gesture that was recognized by the handler finishes and handler reaches `END` state.\n     * It will be called only if the handler was previously in the `ACTIVE` state.\n     * @param callback\n     */\n\n    onEnd(callback) {\n      this.handlers.onEnd = callback; // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n\n      this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the callback that is being called when the handler finalizes handling gesture - the gesture was recognized and has finished or it failed to recognize.\n     * @param callback\n     */\n\n    onFinalize(callback) {\n      this.handlers.onFinalize = callback; // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n\n      this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the `onTouchesDown` callback which is called every time a pointer is placed on the screen.\n     * @param callback\n     */\n\n    onTouchesDown(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesDown = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the `onTouchesMove` callback which is called every time a pointer is moved on the screen.\n     * @param callback\n     */\n\n    onTouchesMove(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesMove = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the `onTouchesUp` callback which is called every time a pointer is lifted from the screen.\n     * @param callback\n     */\n\n    onTouchesUp(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesUp = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the `onTouchesCancelled` callback which is called every time a pointer stops being tracked, for example when the gesture finishes.\n     * @param callback\n     */\n\n    onTouchesCancelled(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesCancelled = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Indicates whether the given handler should be analyzing stream of touch events or not.\n     * @param enabled\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#enabledvalue-boolean\n     */\n\n    enabled(enabled) {\n      this.config.enabled = enabled;\n      return this;\n    }\n    /**\n     * When true the handler will cancel or fail recognition (depending on its current state) whenever the finger leaves the area of the connected view.\n     * @param value\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#shouldcancelwhenoutsidevalue-boolean\n     */\n\n    shouldCancelWhenOutside(value) {\n      this.config.shouldCancelWhenOutside = value;\n      return this;\n    }\n    /**\n     * This parameter enables control over what part of the connected view area can be used to begin recognizing the gesture.\n     * When a negative number is provided the bounds of the view will reduce the area by the given number of points in each of the sides evenly.\n     * @param hitSlop\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#hitslopsettings\n     */\n\n    hitSlop(hitSlop) {\n      this.config.hitSlop = hitSlop;\n      return this;\n    }\n    /**\n     * #### Web only\n     * This parameter allows to specify which `cursor` should be used when gesture activates.\n     * Supports all CSS cursor values (e.g. `\"grab\"`, `\"zoom-in\"`). Default value is set to `\"auto\"`.\n     * @param activeCursor\n     */\n\n    activeCursor(activeCursor) {\n      this.config.activeCursor = activeCursor;\n      return this;\n    }\n    /**\n     * #### Web & Android only\n     * Allows users to choose which mouse button should handler respond to.\n     * Arguments can be combined using `|` operator, e.g. `mouseButton(MouseButton.LEFT | MouseButton.RIGHT)`.\n     * Default value is set to `MouseButton.LEFT`.\n     * @param mouseButton\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#mousebuttonvalue-mousebutton-web--android-only\n     */\n\n    mouseButton(mouseButton) {\n      this.config.mouseButton = mouseButton;\n      return this;\n    }\n    /**\n     * When `react-native-reanimated` is installed, the callbacks passed to the gestures are automatically workletized and run on the UI thread when called.\n     * This option allows for changing this behavior: when `true`, all the callbacks will be run on the JS thread instead of the UI thread, regardless of whether they are worklets or not.\n     * Defaults to `false`.\n     * @param runOnJS\n     */\n\n    runOnJS(runOnJS) {\n      this.config.runOnJS = runOnJS;\n      return this;\n    }\n    /**\n     * Allows gestures across different components to be recognized simultaneously.\n     * @param gestures\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneouswithexternalgesture\n     */\n\n    simultaneousWithExternalGesture(...gestures) {\n      for (const gesture of gestures) {\n        this.addDependency('simultaneousWith', gesture);\n      }\n      return this;\n    }\n    /**\n     * Allows to delay activation of the handler until all handlers passed as arguments to this method fail (or don't begin at all).\n     * @param gestures\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#requireexternalgesturetofail\n     */\n\n    requireExternalGestureToFail(...gestures) {\n      for (const gesture of gestures) {\n        this.addDependency('requireToFail', gesture);\n      }\n      return this;\n    }\n    /**\n     * Works similarily to `requireExternalGestureToFail` but the direction of the relation is reversed - instead of being one-to-many relation, it's many-to-one.\n     * @param gestures\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#blocksexternalgesture\n     */\n\n    blocksExternalGesture(...gestures) {\n      for (const gesture of gestures) {\n        this.addDependency('blocksHandlers', gesture);\n      }\n      return this;\n    }\n    /**\n     * Sets a `testID` property for gesture object, allowing for querying for it in tests.\n     * @param id\n     */\n\n    withTestId(id) {\n      this.config.testId = id;\n      return this;\n    }\n    /**\n     * #### iOS only\n     * When `true`, the handler will cancel touches for native UI components (`UIButton`, `UISwitch`, etc) it's attached to when it becomes `ACTIVE`.\n     * Default value is `true`.\n     * @param value\n     */\n\n    cancelsTouchesInView(value) {\n      this.config.cancelsTouchesInView = value;\n      return this;\n    }\n    initialize() {\n      this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n      this.handlers = {\n        ...this.handlers,\n        handlerTag: this.handlerTag\n      };\n      if (this.config.ref) {\n        this.config.ref.current = this;\n      }\n    }\n    toGestureArray() {\n      return [this];\n    } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    prepare() {}\n    get shouldUseReanimated() {\n      // Use Reanimated when runOnJS isn't set explicitly,\n      // all defined callbacks are worklets\n      // and remote debugging is disabled\n      return this.config.runOnJS !== true && !this.handlers.isWorklet.includes(false) && !(0, _utils.isRemoteDebuggingEnabled)();\n    }\n  }\n  class ContinousBaseGesture extends BaseGesture {\n    /**\n     * Set the callback that is being called every time the gesture receives an update while it's active.\n     * @param callback\n     */\n    onUpdate(callback) {\n      this.handlers.onUpdate = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * Set the callback that is being called every time the gesture receives an update while it's active.\n     * This callback will receive information about change in value in relation to the last received event.\n     * @param callback\n     */\n\n    onChange(callback) {\n      this.handlers.onChange = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n      return this;\n    }\n    /**\n     * When `true` the handler will not activate by itself even if its activation criteria are met.\n     * Instead you can manipulate its state using state manager.\n     * @param manualActivation\n     */\n\n    manualActivation(manualActivation) {\n      this.config.manualActivation = manualActivation;\n      return this;\n    }\n  }\n});","lineCount":365,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"CALLBACK_TYPE"],[10,26,5,0],[11,4,5,0],[12,2,5,0],[13,2,20,0,"Object"],[13,8,20,0],[13,9,20,0,"defineProperty"],[13,23,20,0],[13,24,20,0,"exports"],[13,31,20,0],[14,4,20,0,"enumerable"],[14,14,20,0],[15,4,20,0,"get"],[15,7,20,0],[15,18,20,0,"get"],[15,19,20,0],[16,6,20,0],[16,13,20,0,"Gesture"],[16,20,20,0],[17,4,20,0],[18,2,20,0],[19,2,22,0,"Object"],[19,8,22,0],[19,9,22,0,"defineProperty"],[19,23,22,0],[19,24,22,0,"exports"],[19,31,22,0],[20,4,22,0,"enumerable"],[20,14,22,0],[21,4,22,0,"get"],[21,7,22,0],[21,18,22,0,"get"],[21,19,22,0],[22,6,22,0],[22,13,22,0,"BaseGesture"],[22,24,22,0],[23,4,22,0],[24,2,22,0],[25,2,327,0,"Object"],[25,8,327,0],[25,9,327,0,"defineProperty"],[25,23,327,0],[25,24,327,0,"exports"],[25,31,327,0],[26,4,327,0,"enumerable"],[26,14,327,0],[27,4,327,0,"get"],[27,7,327,0],[27,18,327,0,"get"],[27,19,327,0],[28,6,327,0],[28,13,327,0,"ContinousBaseGesture"],[28,33,327,0],[29,4,327,0],[30,2,327,0],[31,2,3,0],[31,6,3,0,"_getNextHandlerTag"],[31,24,3,0],[31,27,3,0,"require"],[31,34,3,0],[31,35,3,0,"_dependencyMap"],[31,49,3,0],[32,2,4,0],[32,6,4,0,"_utils"],[32,12,4,0],[32,15,4,0,"require"],[32,22,4,0],[32,23,4,0,"_dependencyMap"],[32,37,4,0],[33,2,1,0],[33,11,1,9,"_defineProperty"],[33,26,1,24,"_defineProperty"],[33,27,1,25,"obj"],[33,30,1,28],[33,32,1,30,"key"],[33,35,1,33],[33,37,1,35,"value"],[33,42,1,40],[33,44,1,42],[34,4,1,44],[34,8,1,48,"key"],[34,11,1,51],[34,15,1,55,"obj"],[34,18,1,58],[34,20,1,60],[35,6,1,62,"Object"],[35,12,1,68],[35,13,1,69,"defineProperty"],[35,27,1,83],[35,28,1,84,"obj"],[35,31,1,87],[35,33,1,89,"key"],[35,36,1,92],[35,38,1,94],[36,8,1,96,"value"],[36,13,1,101],[36,15,1,103,"value"],[36,20,1,108],[37,8,1,110,"enumerable"],[37,18,1,120],[37,20,1,122],[37,24,1,126],[38,8,1,128,"configurable"],[38,20,1,140],[38,22,1,142],[38,26,1,146],[39,8,1,148,"writable"],[39,16,1,156],[39,18,1,158],[40,6,1,163],[40,7,1,164],[40,8,1,165],[41,4,1,167],[41,5,1,168],[41,11,1,174],[42,6,1,176,"obj"],[42,9,1,179],[42,10,1,180,"key"],[42,13,1,183],[42,14,1,184],[42,17,1,187,"value"],[42,22,1,192],[43,4,1,194],[44,4,1,196],[44,11,1,203,"obj"],[44,14,1,206],[45,2,1,208],[46,2,5,7],[46,8,5,13,"CALLBACK_TYPE"],[46,21,5,26],[46,24,5,29],[47,4,6,2,"UNDEFINED"],[47,13,6,11],[47,15,6,13],[47,16,6,14],[48,4,7,2,"BEGAN"],[48,9,7,7],[48,11,7,9],[48,12,7,10],[49,4,8,2,"START"],[49,9,8,7],[49,11,8,9],[49,12,8,10],[50,4,9,2,"UPDATE"],[50,10,9,8],[50,12,9,10],[50,13,9,11],[51,4,10,2,"CHANGE"],[51,10,10,8],[51,12,10,10],[51,13,10,11],[52,4,11,2,"END"],[52,7,11,5],[52,9,11,7],[52,10,11,8],[53,4,12,2,"FINALIZE"],[53,12,12,10],[53,14,12,12],[53,15,12,13],[54,4,13,2,"TOUCHES_DOWN"],[54,16,13,14],[54,18,13,16],[54,19,13,17],[55,4,14,2,"TOUCHES_MOVE"],[55,16,14,14],[55,18,14,16],[55,19,14,17],[56,4,15,2,"TOUCHES_UP"],[56,14,15,12],[56,16,15,14],[56,17,15,15],[57,4,16,2,"TOUCHES_CANCELLED"],[57,21,16,19],[57,23,16,21],[58,2,17,0],[58,3,17,1],[58,4,17,2],[58,5,17,3],[59,2,18,0],[61,2,20,7],[61,8,20,13,"Gesture"],[61,15,20,20],[61,16,20,21],[62,2,21,0],[62,6,21,4,"nextGestureId"],[62,19,21,17],[62,22,21,20],[62,23,21,21],[63,2,22,7],[63,8,22,13,"BaseGesture"],[63,19,22,24],[63,28,22,33,"Gesture"],[63,35,22,40],[63,36,22,41],[64,4,23,2,"constructor"],[64,15,23,13,"constructor"],[64,16,23,13],[64,18,23,16],[65,6,24,4],[65,11,24,9],[65,12,24,10],[65,13,24,11],[65,14,24,12],[65,15,24,13],[66,6,25,4],[67,6,26,4],[68,6,27,4],[69,6,28,4],[71,6,30,4,"_defineProperty"],[71,21,30,19],[71,22,30,20],[71,26,30,24],[71,28,30,26],[71,39,30,37],[71,41,30,39],[71,42,30,40],[71,43,30,41],[71,44,30,42],[72,6,32,4,"_defineProperty"],[72,21,32,19],[72,22,32,20],[72,26,32,24],[72,28,32,26],[72,40,32,38],[72,42,32,40],[72,43,32,41],[72,44,32,42],[72,45,32,43],[73,6,34,4,"_defineProperty"],[73,21,34,19],[73,22,34,20],[73,26,34,24],[73,28,34,26],[73,41,34,39],[73,43,34,41],[73,45,34,43],[73,46,34,44],[74,6,36,4,"_defineProperty"],[74,21,36,19],[74,22,36,20],[74,26,36,24],[74,28,36,26],[74,36,36,34],[74,38,36,36],[74,39,36,37],[74,40,36,38],[74,41,36,39],[75,6,38,4,"_defineProperty"],[75,21,38,19],[75,22,38,20],[75,26,38,24],[75,28,38,26],[75,38,38,36],[75,40,38,38],[76,8,39,6,"gestureId"],[76,17,39,15],[76,19,39,17],[76,20,39,18],[76,21,39,19],[77,8,40,6,"handlerTag"],[77,18,40,16],[77,20,40,18],[77,21,40,19],[77,22,40,20],[78,8,41,6,"isWorklet"],[78,17,41,15],[78,19,41,17],[79,6,42,4],[79,7,42,5],[79,8,42,6],[80,6,44,4],[80,10,44,8],[80,11,44,9,"gestureId"],[80,20,44,18],[80,23,44,21,"nextGestureId"],[80,36,44,34],[80,38,44,36],[81,6,45,4],[81,10,45,8],[81,11,45,9,"handlers"],[81,19,45,17],[81,20,45,18,"gestureId"],[81,29,45,27],[81,32,45,30],[81,36,45,34],[81,37,45,35,"gestureId"],[81,46,45,44],[82,4,46,2],[83,4,48,2,"addDependency"],[83,17,48,15,"addDependency"],[83,18,48,16,"key"],[83,21,48,19],[83,23,48,21,"gesture"],[83,30,48,28],[83,32,48,30],[84,6,49,4],[84,12,49,10,"value"],[84,17,49,15],[84,20,49,18],[84,24,49,22],[84,25,49,23,"config"],[84,31,49,29],[84,32,49,30,"key"],[84,35,49,33],[84,36,49,34],[85,6,50,4],[85,10,50,8],[85,11,50,9,"config"],[85,17,50,15],[85,18,50,16,"key"],[85,21,50,19],[85,22,50,20],[85,25,50,23,"value"],[85,30,50,28],[85,33,50,31,"Array"],[85,38,50,36],[85,39,50,37],[85,40,50,38],[85,41,50,39,"concat"],[85,47,50,45],[85,48,50,46,"value"],[85,53,50,51],[85,55,50,53,"gesture"],[85,62,50,60],[85,63,50,61],[85,66,50,64],[85,67,50,65,"gesture"],[85,74,50,72],[85,75,50,73],[86,4,51,2],[87,4,52,2],[88,0,53,0],[89,0,54,0],[90,0,55,0],[92,4,58,2,"withRef"],[92,11,58,9,"withRef"],[92,12,58,10,"ref"],[92,15,58,13],[92,17,58,15],[93,6,59,4],[93,10,59,8],[93,11,59,9,"config"],[93,17,59,15],[93,18,59,16,"ref"],[93,21,59,19],[93,24,59,22,"ref"],[93,27,59,25],[94,6,60,4],[94,13,60,11],[94,17,60,15],[95,4,61,2],[95,5,61,3],[95,6,61,4],[97,4,64,2,"isWorklet"],[97,13,64,11,"isWorklet"],[97,14,64,12,"callback"],[97,22,64,20],[97,24,64,22],[98,6,65,4],[99,6,66,4],[99,13,66,11,"callback"],[99,21,66,19],[99,22,66,20,"__workletHash"],[99,35,66,33],[99,40,66,38,"undefined"],[99,49,66,47],[100,4,67,2],[101,4,68,2],[102,0,69,0],[103,0,70,0],[104,0,71,0],[105,0,72,0],[107,4,75,2,"onBegin"],[107,11,75,9,"onBegin"],[107,12,75,10,"callback"],[107,20,75,18],[107,22,75,20],[108,6,76,4],[108,10,76,8],[108,11,76,9,"handlers"],[108,19,76,17],[108,20,76,18,"onBegin"],[108,27,76,25],[108,30,76,28,"callback"],[108,38,76,36],[109,6,77,4],[109,10,77,8],[109,11,77,9,"handlers"],[109,19,77,17],[109,20,77,18,"isWorklet"],[109,29,77,27],[109,30,77,28,"CALLBACK_TYPE"],[109,43,77,41],[109,44,77,42,"BEGAN"],[109,49,77,47],[109,50,77,48],[109,53,77,51],[109,57,77,55],[109,58,77,56,"isWorklet"],[109,67,77,65],[109,68,77,66,"callback"],[109,76,77,74],[109,77,77,75],[110,6,78,4],[110,13,78,11],[110,17,78,15],[111,4,79,2],[112,4,80,2],[113,0,81,0],[114,0,82,0],[115,0,83,0],[117,4,86,2,"onStart"],[117,11,86,9,"onStart"],[117,12,86,10,"callback"],[117,20,86,18],[117,22,86,20],[118,6,87,4],[118,10,87,8],[118,11,87,9,"handlers"],[118,19,87,17],[118,20,87,18,"onStart"],[118,27,87,25],[118,30,87,28,"callback"],[118,38,87,36],[119,6,88,4],[119,10,88,8],[119,11,88,9,"handlers"],[119,19,88,17],[119,20,88,18,"isWorklet"],[119,29,88,27],[119,30,88,28,"CALLBACK_TYPE"],[119,43,88,41],[119,44,88,42,"START"],[119,49,88,47],[119,50,88,48],[119,53,88,51],[119,57,88,55],[119,58,88,56,"isWorklet"],[119,67,88,65],[119,68,88,66,"callback"],[119,76,88,74],[119,77,88,75],[120,6,89,4],[120,13,89,11],[120,17,89,15],[121,4,90,2],[122,4,91,2],[123,0,92,0],[124,0,93,0],[125,0,94,0],[126,0,95,0],[128,4,98,2,"onEnd"],[128,9,98,7,"onEnd"],[128,10,98,8,"callback"],[128,18,98,16],[128,20,98,18],[129,6,99,4],[129,10,99,8],[129,11,99,9,"handlers"],[129,19,99,17],[129,20,99,18,"onEnd"],[129,25,99,23],[129,28,99,26,"callback"],[129,36,99,34],[129,37,99,35],[129,38,99,36],[131,6,101,4],[131,10,101,8],[131,11,101,9,"handlers"],[131,19,101,17],[131,20,101,18,"isWorklet"],[131,29,101,27],[131,30,101,28,"CALLBACK_TYPE"],[131,43,101,41],[131,44,101,42,"END"],[131,47,101,45],[131,48,101,46],[131,51,101,49],[131,55,101,53],[131,56,101,54,"isWorklet"],[131,65,101,63],[131,66,101,64,"callback"],[131,74,101,72],[131,75,101,73],[132,6,102,4],[132,13,102,11],[132,17,102,15],[133,4,103,2],[134,4,104,2],[135,0,105,0],[136,0,106,0],[137,0,107,0],[139,4,110,2,"onFinalize"],[139,14,110,12,"onFinalize"],[139,15,110,13,"callback"],[139,23,110,21],[139,25,110,23],[140,6,111,4],[140,10,111,8],[140,11,111,9,"handlers"],[140,19,111,17],[140,20,111,18,"onFinalize"],[140,30,111,28],[140,33,111,31,"callback"],[140,41,111,39],[140,42,111,40],[140,43,111,41],[142,6,113,4],[142,10,113,8],[142,11,113,9,"handlers"],[142,19,113,17],[142,20,113,18,"isWorklet"],[142,29,113,27],[142,30,113,28,"CALLBACK_TYPE"],[142,43,113,41],[142,44,113,42,"FINALIZE"],[142,52,113,50],[142,53,113,51],[142,56,113,54],[142,60,113,58],[142,61,113,59,"isWorklet"],[142,70,113,68],[142,71,113,69,"callback"],[142,79,113,77],[142,80,113,78],[143,6,114,4],[143,13,114,11],[143,17,114,15],[144,4,115,2],[145,4,116,2],[146,0,117,0],[147,0,118,0],[148,0,119,0],[150,4,122,2,"onTouchesDown"],[150,17,122,15,"onTouchesDown"],[150,18,122,16,"callback"],[150,26,122,24],[150,28,122,26],[151,6,123,4],[151,10,123,8],[151,11,123,9,"config"],[151,17,123,15],[151,18,123,16,"needsPointerData"],[151,34,123,32],[151,37,123,35],[151,41,123,39],[152,6,124,4],[152,10,124,8],[152,11,124,9,"handlers"],[152,19,124,17],[152,20,124,18,"onTouchesDown"],[152,33,124,31],[152,36,124,34,"callback"],[152,44,124,42],[153,6,125,4],[153,10,125,8],[153,11,125,9,"handlers"],[153,19,125,17],[153,20,125,18,"isWorklet"],[153,29,125,27],[153,30,125,28,"CALLBACK_TYPE"],[153,43,125,41],[153,44,125,42,"TOUCHES_DOWN"],[153,56,125,54],[153,57,125,55],[153,60,125,58],[153,64,125,62],[153,65,125,63,"isWorklet"],[153,74,125,72],[153,75,125,73,"callback"],[153,83,125,81],[153,84,125,82],[154,6,126,4],[154,13,126,11],[154,17,126,15],[155,4,127,2],[156,4,128,2],[157,0,129,0],[158,0,130,0],[159,0,131,0],[161,4,134,2,"onTouchesMove"],[161,17,134,15,"onTouchesMove"],[161,18,134,16,"callback"],[161,26,134,24],[161,28,134,26],[162,6,135,4],[162,10,135,8],[162,11,135,9,"config"],[162,17,135,15],[162,18,135,16,"needsPointerData"],[162,34,135,32],[162,37,135,35],[162,41,135,39],[163,6,136,4],[163,10,136,8],[163,11,136,9,"handlers"],[163,19,136,17],[163,20,136,18,"onTouchesMove"],[163,33,136,31],[163,36,136,34,"callback"],[163,44,136,42],[164,6,137,4],[164,10,137,8],[164,11,137,9,"handlers"],[164,19,137,17],[164,20,137,18,"isWorklet"],[164,29,137,27],[164,30,137,28,"CALLBACK_TYPE"],[164,43,137,41],[164,44,137,42,"TOUCHES_MOVE"],[164,56,137,54],[164,57,137,55],[164,60,137,58],[164,64,137,62],[164,65,137,63,"isWorklet"],[164,74,137,72],[164,75,137,73,"callback"],[164,83,137,81],[164,84,137,82],[165,6,138,4],[165,13,138,11],[165,17,138,15],[166,4,139,2],[167,4,140,2],[168,0,141,0],[169,0,142,0],[170,0,143,0],[172,4,146,2,"onTouchesUp"],[172,15,146,13,"onTouchesUp"],[172,16,146,14,"callback"],[172,24,146,22],[172,26,146,24],[173,6,147,4],[173,10,147,8],[173,11,147,9,"config"],[173,17,147,15],[173,18,147,16,"needsPointerData"],[173,34,147,32],[173,37,147,35],[173,41,147,39],[174,6,148,4],[174,10,148,8],[174,11,148,9,"handlers"],[174,19,148,17],[174,20,148,18,"onTouchesUp"],[174,31,148,29],[174,34,148,32,"callback"],[174,42,148,40],[175,6,149,4],[175,10,149,8],[175,11,149,9,"handlers"],[175,19,149,17],[175,20,149,18,"isWorklet"],[175,29,149,27],[175,30,149,28,"CALLBACK_TYPE"],[175,43,149,41],[175,44,149,42,"TOUCHES_UP"],[175,54,149,52],[175,55,149,53],[175,58,149,56],[175,62,149,60],[175,63,149,61,"isWorklet"],[175,72,149,70],[175,73,149,71,"callback"],[175,81,149,79],[175,82,149,80],[176,6,150,4],[176,13,150,11],[176,17,150,15],[177,4,151,2],[178,4,152,2],[179,0,153,0],[180,0,154,0],[181,0,155,0],[183,4,158,2,"onTouchesCancelled"],[183,22,158,20,"onTouchesCancelled"],[183,23,158,21,"callback"],[183,31,158,29],[183,33,158,31],[184,6,159,4],[184,10,159,8],[184,11,159,9,"config"],[184,17,159,15],[184,18,159,16,"needsPointerData"],[184,34,159,32],[184,37,159,35],[184,41,159,39],[185,6,160,4],[185,10,160,8],[185,11,160,9,"handlers"],[185,19,160,17],[185,20,160,18,"onTouchesCancelled"],[185,38,160,36],[185,41,160,39,"callback"],[185,49,160,47],[186,6,161,4],[186,10,161,8],[186,11,161,9,"handlers"],[186,19,161,17],[186,20,161,18,"isWorklet"],[186,29,161,27],[186,30,161,28,"CALLBACK_TYPE"],[186,43,161,41],[186,44,161,42,"TOUCHES_CANCELLED"],[186,61,161,59],[186,62,161,60],[186,65,161,63],[186,69,161,67],[186,70,161,68,"isWorklet"],[186,79,161,77],[186,80,161,78,"callback"],[186,88,161,86],[186,89,161,87],[187,6,162,4],[187,13,162,11],[187,17,162,15],[188,4,163,2],[189,4,164,2],[190,0,165,0],[191,0,166,0],[192,0,167,0],[193,0,168,0],[195,4,171,2,"enabled"],[195,11,171,9,"enabled"],[195,12,171,10,"enabled"],[195,19,171,17],[195,21,171,19],[196,6,172,4],[196,10,172,8],[196,11,172,9,"config"],[196,17,172,15],[196,18,172,16,"enabled"],[196,25,172,23],[196,28,172,26,"enabled"],[196,35,172,33],[197,6,173,4],[197,13,173,11],[197,17,173,15],[198,4,174,2],[199,4,175,2],[200,0,176,0],[201,0,177,0],[202,0,178,0],[203,0,179,0],[205,4,182,2,"shouldCancelWhenOutside"],[205,27,182,25,"shouldCancelWhenOutside"],[205,28,182,26,"value"],[205,33,182,31],[205,35,182,33],[206,6,183,4],[206,10,183,8],[206,11,183,9,"config"],[206,17,183,15],[206,18,183,16,"shouldCancelWhenOutside"],[206,41,183,39],[206,44,183,42,"value"],[206,49,183,47],[207,6,184,4],[207,13,184,11],[207,17,184,15],[208,4,185,2],[209,4,186,2],[210,0,187,0],[211,0,188,0],[212,0,189,0],[213,0,190,0],[214,0,191,0],[216,4,194,2,"hitSlop"],[216,11,194,9,"hitSlop"],[216,12,194,10,"hitSlop"],[216,19,194,17],[216,21,194,19],[217,6,195,4],[217,10,195,8],[217,11,195,9,"config"],[217,17,195,15],[217,18,195,16,"hitSlop"],[217,25,195,23],[217,28,195,26,"hitSlop"],[217,35,195,33],[218,6,196,4],[218,13,196,11],[218,17,196,15],[219,4,197,2],[220,4,198,2],[221,0,199,0],[222,0,200,0],[223,0,201,0],[224,0,202,0],[225,0,203,0],[227,4,206,2,"activeCursor"],[227,16,206,14,"activeCursor"],[227,17,206,15,"activeCursor"],[227,29,206,27],[227,31,206,29],[228,6,207,4],[228,10,207,8],[228,11,207,9,"config"],[228,17,207,15],[228,18,207,16,"activeCursor"],[228,30,207,28],[228,33,207,31,"activeCursor"],[228,45,207,43],[229,6,208,4],[229,13,208,11],[229,17,208,15],[230,4,209,2],[231,4,210,2],[232,0,211,0],[233,0,212,0],[234,0,213,0],[235,0,214,0],[236,0,215,0],[237,0,216,0],[238,0,217,0],[240,4,220,2,"mouseButton"],[240,15,220,13,"mouseButton"],[240,16,220,14,"mouseButton"],[240,27,220,25],[240,29,220,27],[241,6,221,4],[241,10,221,8],[241,11,221,9,"config"],[241,17,221,15],[241,18,221,16,"mouseButton"],[241,29,221,27],[241,32,221,30,"mouseButton"],[241,43,221,41],[242,6,222,4],[242,13,222,11],[242,17,222,15],[243,4,223,2],[244,4,224,2],[245,0,225,0],[246,0,226,0],[247,0,227,0],[248,0,228,0],[249,0,229,0],[251,4,232,2,"runOnJS"],[251,11,232,9,"runOnJS"],[251,12,232,10,"runOnJS"],[251,19,232,17],[251,21,232,19],[252,6,233,4],[252,10,233,8],[252,11,233,9,"config"],[252,17,233,15],[252,18,233,16,"runOnJS"],[252,25,233,23],[252,28,233,26,"runOnJS"],[252,35,233,33],[253,6,234,4],[253,13,234,11],[253,17,234,15],[254,4,235,2],[255,4,236,2],[256,0,237,0],[257,0,238,0],[258,0,239,0],[259,0,240,0],[261,4,243,2,"simultaneousWithExternalGesture"],[261,35,243,33,"simultaneousWithExternalGesture"],[261,36,243,34],[261,39,243,37,"gestures"],[261,47,243,45],[261,49,243,47],[262,6,244,4],[262,11,244,9],[262,17,244,15,"gesture"],[262,24,244,22],[262,28,244,26,"gestures"],[262,36,244,34],[262,38,244,36],[263,8,245,6],[263,12,245,10],[263,13,245,11,"addDependency"],[263,26,245,24],[263,27,245,25],[263,45,245,43],[263,47,245,45,"gesture"],[263,54,245,52],[263,55,245,53],[264,6,246,4],[265,6,248,4],[265,13,248,11],[265,17,248,15],[266,4,249,2],[267,4,250,2],[268,0,251,0],[269,0,252,0],[270,0,253,0],[271,0,254,0],[273,4,257,2,"requireExternalGestureToFail"],[273,32,257,30,"requireExternalGestureToFail"],[273,33,257,31],[273,36,257,34,"gestures"],[273,44,257,42],[273,46,257,44],[274,6,258,4],[274,11,258,9],[274,17,258,15,"gesture"],[274,24,258,22],[274,28,258,26,"gestures"],[274,36,258,34],[274,38,258,36],[275,8,259,6],[275,12,259,10],[275,13,259,11,"addDependency"],[275,26,259,24],[275,27,259,25],[275,42,259,40],[275,44,259,42,"gesture"],[275,51,259,49],[275,52,259,50],[276,6,260,4],[277,6,262,4],[277,13,262,11],[277,17,262,15],[278,4,263,2],[279,4,264,2],[280,0,265,0],[281,0,266,0],[282,0,267,0],[283,0,268,0],[285,4,271,2,"blocksExternalGesture"],[285,25,271,23,"blocksExternalGesture"],[285,26,271,24],[285,29,271,27,"gestures"],[285,37,271,35],[285,39,271,37],[286,6,272,4],[286,11,272,9],[286,17,272,15,"gesture"],[286,24,272,22],[286,28,272,26,"gestures"],[286,36,272,34],[286,38,272,36],[287,8,273,6],[287,12,273,10],[287,13,273,11,"addDependency"],[287,26,273,24],[287,27,273,25],[287,43,273,41],[287,45,273,43,"gesture"],[287,52,273,50],[287,53,273,51],[288,6,274,4],[289,6,276,4],[289,13,276,11],[289,17,276,15],[290,4,277,2],[291,4,278,2],[292,0,279,0],[293,0,280,0],[294,0,281,0],[296,4,284,2,"withTestId"],[296,14,284,12,"withTestId"],[296,15,284,13,"id"],[296,17,284,15],[296,19,284,17],[297,6,285,4],[297,10,285,8],[297,11,285,9,"config"],[297,17,285,15],[297,18,285,16,"testId"],[297,24,285,22],[297,27,285,25,"id"],[297,29,285,27],[298,6,286,4],[298,13,286,11],[298,17,286,15],[299,4,287,2],[300,4,288,2],[301,0,289,0],[302,0,290,0],[303,0,291,0],[304,0,292,0],[305,0,293,0],[307,4,296,2,"cancelsTouchesInView"],[307,24,296,22,"cancelsTouchesInView"],[307,25,296,23,"value"],[307,30,296,28],[307,32,296,30],[308,6,297,4],[308,10,297,8],[308,11,297,9,"config"],[308,17,297,15],[308,18,297,16,"cancelsTouchesInView"],[308,38,297,36],[308,41,297,39,"value"],[308,46,297,44],[309,6,298,4],[309,13,298,11],[309,17,298,15],[310,4,299,2],[311,4,301,2,"initialize"],[311,14,301,12,"initialize"],[311,15,301,12],[311,17,301,15],[312,6,302,4],[312,10,302,8],[312,11,302,9,"handlerTag"],[312,21,302,19],[312,24,302,22],[312,28,302,22,"getNextHandlerTag"],[312,46,302,39],[312,47,302,39,"getNextHandlerTag"],[312,64,302,39],[312,66,302,40],[312,67,302,41],[313,6,303,4],[313,10,303,8],[313,11,303,9,"handlers"],[313,19,303,17],[313,22,303,20],[314,8,303,22],[314,11,303,25],[314,15,303,29],[314,16,303,30,"handlers"],[314,24,303,38],[315,8,304,6,"handlerTag"],[315,18,304,16],[315,20,304,18],[315,24,304,22],[315,25,304,23,"handlerTag"],[316,6,305,4],[316,7,305,5],[317,6,307,4],[317,10,307,8],[317,14,307,12],[317,15,307,13,"config"],[317,21,307,19],[317,22,307,20,"ref"],[317,25,307,23],[317,27,307,25],[318,8,308,6],[318,12,308,10],[318,13,308,11,"config"],[318,19,308,17],[318,20,308,18,"ref"],[318,23,308,21],[318,24,308,22,"current"],[318,31,308,29],[318,34,308,32],[318,38,308,36],[319,6,309,4],[320,4,310,2],[321,4,312,2,"toGestureArray"],[321,18,312,16,"toGestureArray"],[321,19,312,16],[321,21,312,19],[322,6,313,4],[322,13,313,11],[322,14,313,12],[322,18,313,16],[322,19,313,17],[323,4,314,2],[323,5,314,3],[323,6,314,4],[325,4,317,2,"prepare"],[325,11,317,9,"prepare"],[325,12,317,9],[325,14,317,12],[325,15,317,13],[326,4,319,2],[326,8,319,6,"shouldUseReanimated"],[326,27,319,25,"shouldUseReanimated"],[326,28,319,25],[326,30,319,28],[327,6,320,4],[328,6,321,4],[329,6,322,4],[330,6,323,4],[330,13,323,11],[330,17,323,15],[330,18,323,16,"config"],[330,24,323,22],[330,25,323,23,"runOnJS"],[330,32,323,30],[330,37,323,35],[330,41,323,39],[330,45,323,43],[330,46,323,44],[330,50,323,48],[330,51,323,49,"handlers"],[330,59,323,57],[330,60,323,58,"isWorklet"],[330,69,323,67],[330,70,323,68,"includes"],[330,78,323,76],[330,79,323,77],[330,84,323,82],[330,85,323,83],[330,89,323,87],[330,90,323,88],[330,94,323,88,"isRemoteDebuggingEnabled"],[330,100,323,112],[330,101,323,112,"isRemoteDebuggingEnabled"],[330,125,323,112],[330,127,323,113],[330,128,323,114],[331,4,324,2],[332,2,326,0],[333,2,327,7],[333,8,327,13,"ContinousBaseGesture"],[333,28,327,33],[333,37,327,42,"BaseGesture"],[333,48,327,53],[333,49,327,54],[334,4,328,2],[335,0,329,0],[336,0,330,0],[337,0,331,0],[338,4,332,2,"onUpdate"],[338,12,332,10,"onUpdate"],[338,13,332,11,"callback"],[338,21,332,19],[338,23,332,21],[339,6,333,4],[339,10,333,8],[339,11,333,9,"handlers"],[339,19,333,17],[339,20,333,18,"onUpdate"],[339,28,333,26],[339,31,333,29,"callback"],[339,39,333,37],[340,6,334,4],[340,10,334,8],[340,11,334,9,"handlers"],[340,19,334,17],[340,20,334,18,"isWorklet"],[340,29,334,27],[340,30,334,28,"CALLBACK_TYPE"],[340,43,334,41],[340,44,334,42,"UPDATE"],[340,50,334,48],[340,51,334,49],[340,54,334,52],[340,58,334,56],[340,59,334,57,"isWorklet"],[340,68,334,66],[340,69,334,67,"callback"],[340,77,334,75],[340,78,334,76],[341,6,335,4],[341,13,335,11],[341,17,335,15],[342,4,336,2],[343,4,337,2],[344,0,338,0],[345,0,339,0],[346,0,340,0],[347,0,341,0],[349,4,344,2,"onChange"],[349,12,344,10,"onChange"],[349,13,344,11,"callback"],[349,21,344,19],[349,23,344,21],[350,6,345,4],[350,10,345,8],[350,11,345,9,"handlers"],[350,19,345,17],[350,20,345,18,"onChange"],[350,28,345,26],[350,31,345,29,"callback"],[350,39,345,37],[351,6,346,4],[351,10,346,8],[351,11,346,9,"handlers"],[351,19,346,17],[351,20,346,18,"isWorklet"],[351,29,346,27],[351,30,346,28,"CALLBACK_TYPE"],[351,43,346,41],[351,44,346,42,"CHANGE"],[351,50,346,48],[351,51,346,49],[351,54,346,52],[351,58,346,56],[351,59,346,57,"isWorklet"],[351,68,346,66],[351,69,346,67,"callback"],[351,77,346,75],[351,78,346,76],[352,6,347,4],[352,13,347,11],[352,17,347,15],[353,4,348,2],[354,4,349,2],[355,0,350,0],[356,0,351,0],[357,0,352,0],[358,0,353,0],[360,4,356,2,"manualActivation"],[360,20,356,18,"manualActivation"],[360,21,356,19,"manualActivation"],[360,37,356,35],[360,39,356,37],[361,6,357,4],[361,10,357,8],[361,11,357,9,"config"],[361,17,357,15],[361,18,357,16,"manualActivation"],[361,34,357,32],[361,37,357,35,"manualActivation"],[361,53,357,51],[362,6,358,4],[362,13,358,11],[362,17,358,15],[363,4,359,2],[364,2,361,0],[365,0,361,1],[365,3]],"functionMap":{"names":["_defineProperty","<global>","Gesture","BaseGesture","BaseGesture#constructor","BaseGesture#addDependency","BaseGesture#withRef","BaseGesture#isWorklet","BaseGesture#onBegin","BaseGesture#onStart","BaseGesture#onEnd","BaseGesture#onFinalize","BaseGesture#onTouchesDown","BaseGesture#onTouchesMove","BaseGesture#onTouchesUp","BaseGesture#onTouchesCancelled","BaseGesture#enabled","BaseGesture#shouldCancelWhenOutside","BaseGesture#hitSlop","BaseGesture#activeCursor","BaseGesture#mouseButton","BaseGesture#runOnJS","BaseGesture#simultaneousWithExternalGesture","BaseGesture#requireExternalGestureToFail","BaseGesture#blocksExternalGesture","BaseGesture#withTestId","BaseGesture#cancelsTouchesInView","BaseGesture#initialize","BaseGesture#toGestureArray","BaseGesture#prepare","BaseGesture#get__shouldUseReanimated","ContinousBaseGesture","ContinousBaseGesture#onUpdate","ContinousBaseGesture#onChange","ContinousBaseGesture#manualActivation"],"mappings":"AAA,iNC;OCmB,gBD;OEE;ECC;GDuB;EEE;GFG;EGO;GHG;EIG;GJG;EKQ;GLI;EMO;GNI;EOQ;GPK;EQO;GRK;ESO;GTK;EUO;GVK;EWO;GXK;EYO;GZK;EaQ;GbG;EcQ;GdG;EeS;GfG;EgBS;GhBG;EiBW;GjBG;EkBS;GlBG;EmBQ;GnBM;EoBQ;GpBM;EqBQ;GrBM;EsBO;GtBG;EuBS;GvBG;EwBE;GxBS;EyBE;GzBE;E0BG,Y1B;E2BE;G3BK;CFE;O8BC;ECK;GDI;EEQ;GFI;EGQ;GHG;C9BE"},"hasCjsExports":false},"type":"js/module"}]}