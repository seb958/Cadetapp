{"dependencies":[{"name":"./GestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":80},"end":{"line":4,"column":46,"index":126}}],"key":"0oKNSZn0AMFFw0m17+cJMO/YqLM=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":127},"end":{"line":5,"column":46,"index":173}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _GestureHandler = require(_dependencyMap[0], \"./GestureHandler\");\n  var GestureHandler = _interopDefault(_GestureHandler);\n  var _utils = require(_dependencyMap[1], \"./utils\");\n  /* eslint-disable eslint-comments/no-unlimited-disable */\n\n  /* eslint-disable */\n\n  class DiscreteGestureHandler extends GestureHandler.default {\n    get isDiscrete() {\n      return true;\n    }\n    get shouldEnableGestureOnSetup() {\n      return true;\n    }\n    shouldFailUnderCustomCriteria({\n      x,\n      y,\n      deltaX,\n      deltaY\n    }, {\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside\n    }) {\n      if (shouldCancelWhenOutside) {\n        if (!this.isPointInView({\n          x,\n          y\n        })) {\n          return true;\n        }\n      }\n      return (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaX), maxDeltaX) || (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaY), maxDeltaY) || (0, _utils.TEST_MAX_IF_NOT_NAN)(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq);\n    }\n    transformNativeEvent({\n      center: {\n        x,\n        y\n      }\n    }) {\n      // @ts-ignore FIXME(TS)\n      const rect = this.view.getBoundingClientRect();\n      return {\n        absoluteX: x,\n        absoluteY: y,\n        x: x - rect.left,\n        y: y - rect.top\n      };\n    }\n    isGestureEnabledForEvent({\n      minPointers,\n      maxPointers,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside\n    }, _recognizer, {\n      maxPointers: pointerLength,\n      center,\n      deltaX,\n      deltaY\n    }) {\n      const validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n      if (this.shouldFailUnderCustomCriteria(Object.assign({}, center, {\n        deltaX,\n        deltaY\n      }), {\n        maxDeltaX,\n        maxDeltaY,\n        maxDistSq,\n        shouldCancelWhenOutside\n      }) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      !validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }\n  var _default = DiscreteGestureHandler;\n});","lineCount":104,"map":[[12,2,93,0,"Object"],[12,8,93,0],[12,9,93,0,"defineProperty"],[12,23,93,0],[12,24,93,0,"exports"],[12,31,93,0],[13,4,93,0,"enumerable"],[13,14,93,0],[14,4,93,0,"get"],[14,7,93,0],[14,18,93,0,"get"],[14,19,93,0],[15,6,93,0],[15,13,93,0,"_default"],[15,21,93,0],[16,4,93,0],[17,2,93,0],[18,2,4,0],[18,6,4,0,"_GestureHandler"],[18,21,4,0],[18,24,4,0,"require"],[18,31,4,0],[18,32,4,0,"_dependencyMap"],[18,46,4,0],[19,2,4,0],[19,6,4,0,"GestureHandler"],[19,20,4,0],[19,23,4,0,"_interopDefault"],[19,38,4,0],[19,39,4,0,"_GestureHandler"],[19,54,4,0],[20,2,5,0],[20,6,5,0,"_utils"],[20,12,5,0],[20,15,5,0,"require"],[20,22,5,0],[20,23,5,0,"_dependencyMap"],[20,37,5,0],[21,2,1,0],[23,2,3,0],[25,2,7,0],[25,8,7,6,"DiscreteGestureHandler"],[25,30,7,28],[25,39,7,37,"GestureHandler"],[25,53,7,51],[25,54,7,51,"default"],[25,61,7,51],[25,62,7,52],[26,4,8,2],[26,8,8,6,"isDiscrete"],[26,18,8,16,"isDiscrete"],[26,19,8,16],[26,21,8,19],[27,6,9,4],[27,13,9,11],[27,17,9,15],[28,4,10,2],[29,4,12,2],[29,8,12,6,"shouldEnableGestureOnSetup"],[29,34,12,32,"shouldEnableGestureOnSetup"],[29,35,12,32],[29,37,12,35],[30,6,13,4],[30,13,13,11],[30,17,13,15],[31,4,14,2],[32,4,16,2,"shouldFailUnderCustomCriteria"],[32,33,16,31,"shouldFailUnderCustomCriteria"],[32,34,16,32],[33,6,17,4,"x"],[33,7,17,5],[34,6,18,4,"y"],[34,7,18,5],[35,6,19,4,"deltaX"],[35,12,19,10],[36,6,20,4,"deltaY"],[37,4,21,2],[37,5,21,3],[37,7,21,5],[38,6,22,4,"maxDeltaX"],[38,15,22,13],[39,6,23,4,"maxDeltaY"],[39,15,23,13],[40,6,24,4,"maxDistSq"],[40,15,24,13],[41,6,25,4,"shouldCancelWhenOutside"],[42,4,26,2],[42,5,26,3],[42,7,26,5],[43,6,27,4],[43,10,27,8,"shouldCancelWhenOutside"],[43,33,27,31],[43,35,27,33],[44,8,28,6],[44,12,28,10],[44,13,28,11],[44,17,28,15],[44,18,28,16,"isPointInView"],[44,31,28,29],[44,32,28,30],[45,10,29,8,"x"],[45,11,29,9],[46,10,30,8,"y"],[47,8,31,6],[47,9,31,7],[47,10,31,8],[47,12,31,10],[48,10,32,8],[48,17,32,15],[48,21,32,19],[49,8,33,6],[50,6,34,4],[51,6,36,4],[51,13,36,11],[51,17,36,11,"TEST_MAX_IF_NOT_NAN"],[51,23,36,30],[51,24,36,30,"TEST_MAX_IF_NOT_NAN"],[51,43,36,30],[51,45,36,31,"Math"],[51,49,36,35],[51,50,36,36,"abs"],[51,53,36,39],[51,54,36,40,"deltaX"],[51,60,36,46],[51,61,36,47],[51,63,36,49,"maxDeltaX"],[51,72,36,58],[51,73,36,59],[51,77,36,63],[51,81,36,63,"TEST_MAX_IF_NOT_NAN"],[51,87,36,82],[51,88,36,82,"TEST_MAX_IF_NOT_NAN"],[51,107,36,82],[51,109,36,83,"Math"],[51,113,36,87],[51,114,36,88,"abs"],[51,117,36,91],[51,118,36,92,"deltaY"],[51,124,36,98],[51,125,36,99],[51,127,36,101,"maxDeltaY"],[51,136,36,110],[51,137,36,111],[51,141,36,115],[51,145,36,115,"TEST_MAX_IF_NOT_NAN"],[51,151,36,134],[51,152,36,134,"TEST_MAX_IF_NOT_NAN"],[51,171,36,134],[51,173,36,135,"Math"],[51,177,36,139],[51,178,36,140,"abs"],[51,181,36,143],[51,182,36,144,"deltaY"],[51,188,36,150],[51,191,36,153,"deltaY"],[51,197,36,159],[51,200,36,162,"deltaX"],[51,206,36,168],[51,209,36,171,"deltaX"],[51,215,36,177],[51,216,36,178],[51,218,36,180,"maxDistSq"],[51,227,36,189],[51,228,36,190],[52,4,37,2],[53,4,39,2,"transformNativeEvent"],[53,24,39,22,"transformNativeEvent"],[53,25,39,23],[54,6,40,4,"center"],[54,12,40,10],[54,14,40,12],[55,8,41,6,"x"],[55,9,41,7],[56,8,42,6,"y"],[57,6,43,4],[58,4,44,2],[58,5,44,3],[58,7,44,5],[59,6,45,4],[60,6,46,4],[60,12,46,10,"rect"],[60,16,46,14],[60,19,46,17],[60,23,46,21],[60,24,46,22,"view"],[60,28,46,26],[60,29,46,27,"getBoundingClientRect"],[60,50,46,48],[60,51,46,49],[60,52,46,50],[61,6,47,4],[61,13,47,11],[62,8,48,6,"absoluteX"],[62,17,48,15],[62,19,48,17,"x"],[62,20,48,18],[63,8,49,6,"absoluteY"],[63,17,49,15],[63,19,49,17,"y"],[63,20,49,18],[64,8,50,6,"x"],[64,9,50,7],[64,11,50,9,"x"],[64,12,50,10],[64,15,50,13,"rect"],[64,19,50,17],[64,20,50,18,"left"],[64,24,50,22],[65,8,51,6,"y"],[65,9,51,7],[65,11,51,9,"y"],[65,12,51,10],[65,15,51,13,"rect"],[65,19,51,17],[65,20,51,18,"top"],[66,6,52,4],[66,7,52,5],[67,4,53,2],[68,4,55,2,"isGestureEnabledForEvent"],[68,28,55,26,"isGestureEnabledForEvent"],[68,29,55,27],[69,6,56,4,"minPointers"],[69,17,56,15],[70,6,57,4,"maxPointers"],[70,17,57,15],[71,6,58,4,"maxDeltaX"],[71,15,58,13],[72,6,59,4,"maxDeltaY"],[72,15,59,13],[73,6,60,4,"maxDistSq"],[73,15,60,13],[74,6,61,4,"shouldCancelWhenOutside"],[75,4,62,2],[75,5,62,3],[75,7,62,5,"_recognizer"],[75,18,62,16],[75,20,62,18],[76,6,63,4,"maxPointers"],[76,17,63,15],[76,19,63,17,"pointerLength"],[76,32,63,30],[77,6,64,4,"center"],[77,12,64,10],[78,6,65,4,"deltaX"],[78,12,65,10],[79,6,66,4,"deltaY"],[80,4,67,2],[80,5,67,3],[80,7,67,5],[81,6,68,4],[81,12,68,10,"validPointerCount"],[81,29,68,27],[81,32,68,30,"pointerLength"],[81,45,68,43],[81,49,68,47,"minPointers"],[81,60,68,58],[81,64,68,62,"pointerLength"],[81,77,68,75],[81,81,68,79,"maxPointers"],[81,92,68,90],[82,6,70,4],[82,10,70,8],[82,14,70,12],[82,15,70,13,"shouldFailUnderCustomCriteria"],[82,44,70,42],[82,45,70,42,"Object"],[82,51,70,42],[82,52,70,42,"assign"],[82,58,70,42],[82,63,70,48,"center"],[82,69,70,54],[83,8,71,6,"deltaX"],[83,14,71,12],[84,8,72,6,"deltaY"],[85,6,72,12],[85,10,73,7],[86,8,74,6,"maxDeltaX"],[86,17,74,15],[87,8,75,6,"maxDeltaY"],[87,17,75,15],[88,8,76,6,"maxDistSq"],[88,17,76,15],[89,8,77,6,"shouldCancelWhenOutside"],[90,6,78,4],[90,7,78,5],[90,8,78,6],[91,6,78,10],[92,6,79,4],[93,6,80,4],[93,7,80,5,"validPointerCount"],[93,24,80,22],[93,28,80,26],[93,32,80,30],[93,33,80,31,"isGestureRunning"],[93,49,80,47],[93,51,80,49],[94,8,81,6],[94,15,81,13],[95,10,82,8,"failed"],[95,16,82,14],[95,18,82,16],[96,8,83,6],[96,9,83,7],[97,6,84,4],[98,6,86,4],[98,13,86,11],[99,8,87,6,"success"],[99,15,87,13],[99,17,87,15,"validPointerCount"],[100,6,88,4],[100,7,88,5],[101,4,89,2],[102,2,91,0],[103,2,93,0],[103,6,93,0,"_default"],[103,14,93,0],[103,17,93,15,"DiscreteGestureHandler"],[103,39,93,37],[104,0,93,38],[104,3]],"functionMap":{"names":["<global>","DiscreteGestureHandler","get__isDiscrete","get__shouldEnableGestureOnSetup","shouldFailUnderCustomCriteria","transformNativeEvent","isGestureEnabledForEvent"],"mappings":"AAA;ACM;ECC;GDE;EEE;GFE;EGE;GHqB;EIE;GJc;EKE;GLkC;CDE"},"hasCjsExports":false},"type":"js/module"}]}