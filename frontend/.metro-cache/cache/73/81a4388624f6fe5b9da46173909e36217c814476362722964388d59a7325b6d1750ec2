{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":60},"end":{"line":5,"column":44,"index":104}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../services/offlineService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":105},"end":{"line":16,"column":36,"index":332}}],"key":"yXb3FTGrqBdyUFR0jGGYB9WZcrQ=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":333},"end":{"line":17,"column":69,"index":402}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":403},"end":{"line":18,"column":39,"index":442}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useOfflineMode\", {\n    enumerable: true,\n    get: function () {\n      return useOfflineMode;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _servicesOfflineService = require(_dependencyMap[1], \"../services/offlineService\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  /**\n   * Hook personnalisé pour gérer le mode hors ligne\n   */\n\n  const useOfflineMode = () => {\n    const [isOnline, setIsOnline] = (0, _react.useState)(true);\n    const [isSyncing, setIsSyncing] = (0, _react.useState)(false);\n    const [syncQueueCount, setSyncQueueCount] = (0, _react.useState)(0);\n    const [lastSyncTime, setLastSyncTime] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      // Initialiser le listener de connexion\n      (0, _servicesOfflineService.initNetworkListener)();\n\n      // Vérifier l'état initial\n      setIsOnline((0, _servicesOfflineService.getConnectionStatus)());\n\n      // Ajouter un listener pour les changements\n      const listener = online => {\n        setIsOnline(online);\n        if (online) {\n          // Synchroniser automatiquement quand connexion restaurée\n          handleAutoSync();\n        }\n      };\n      (0, _servicesOfflineService.addConnectionListener)(listener);\n\n      // Charger le nombre d'éléments en attente\n      loadSyncQueueCount();\n\n      // Vérifier périodiquement la queue\n      const interval = setInterval(loadSyncQueueCount, 5000);\n      return () => {\n        (0, _servicesOfflineService.removeConnectionListener)(listener);\n        clearInterval(interval);\n      };\n    }, []);\n    const loadSyncQueueCount = async () => {\n      try {\n        const queue = await (0, _servicesOfflineService.getSyncQueue)();\n        setSyncQueueCount(queue.length);\n      } catch (error) {\n        console.error('Erreur chargement queue:', error);\n      }\n    };\n    const handleAutoSync = async () => {\n      try {\n        const token = await AsyncStorage.default.getItem('access_token');\n        const backendUrl = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || '';\n        if (token && backendUrl) {\n          await handleManualSync();\n        }\n      } catch (error) {\n        console.error('Erreur auto-sync:', error);\n      }\n    };\n    const handleManualSync = async () => {\n      if (isSyncing) {\n        return {\n          success: false,\n          message: 'Synchronisation déjà en cours'\n        };\n      }\n      if (!isOnline) {\n        return {\n          success: false,\n          message: 'Pas de connexion internet'\n        };\n      }\n      try {\n        setIsSyncing(true);\n        const token = await AsyncStorage.default.getItem('access_token');\n        const backendUrl = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || '';\n        if (!token) {\n          return {\n            success: false,\n            message: 'Non authentifié'\n          };\n        }\n        const result = await (0, _servicesOfflineService.syncQueue)(backendUrl, token);\n        if (result.success) {\n          await loadSyncQueueCount();\n          setLastSyncTime(new Date().toISOString());\n          if (result.synced === 0 && result.errors === 0) {\n            return {\n              success: true,\n              message: 'Aucune donnée à synchroniser'\n            };\n          }\n\n          // Si des erreurs, construire un message détaillé\n          if (result.errors > 0 && result.errorDetails) {\n            const errorMessages = result.errorDetails.map(err => `• ${err.error || 'Erreur inconnue'}`).join('\\n');\n            return {\n              success: result.synced > 0,\n              // Succès partiel si au moins 1 synchronisé\n              message: `${result.synced} élément(s) synchronisé(s)\\n${result.errors} erreur(s):\\n\\n${errorMessages}`\n            };\n          }\n          return {\n            success: true,\n            message: `${result.synced} élément(s) synchronisé(s)`\n          };\n        }\n        return {\n          success: false,\n          message: 'Échec de la synchronisation'\n        };\n      } catch (error) {\n        console.error('Erreur sync manuelle:', error);\n        return {\n          success: false,\n          message: error.message || 'Erreur de synchronisation'\n        };\n      } finally {\n        setIsSyncing(false);\n      }\n    };\n    const refreshCache = async () => {\n      try {\n        const token = await AsyncStorage.default.getItem('access_token');\n        const backendUrl = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || process.env.EXPO_PUBLIC_BACKEND_URL || '';\n        if (!token || !backendUrl) {\n          return false;\n        }\n        return await (0, _servicesOfflineService.downloadCacheData)(backendUrl, token);\n      } catch (error) {\n        console.error('Erreur refresh cache:', error);\n        return false;\n      }\n    };\n    return {\n      isOnline,\n      isSyncing,\n      syncQueueCount,\n      lastSyncTime,\n      handleManualSync,\n      refreshCache,\n      loadSyncQueueCount\n    };\n  };\n});","lineCount":164,"map":[[12,2,20,0,"Object"],[12,8,20,0],[12,9,20,0,"defineProperty"],[12,23,20,0],[12,24,20,0,"exports"],[12,31,20,0],[13,4,20,0,"enumerable"],[13,14,20,0],[14,4,20,0,"get"],[14,7,20,0],[14,18,20,0,"get"],[14,19,20,0],[15,6,20,0],[15,13,20,0,"useOfflineMode"],[15,27,20,0],[16,4,20,0],[17,2,20,0],[18,2,5,0],[18,6,5,0,"_react"],[18,12,5,0],[18,15,5,0,"require"],[18,22,5,0],[18,23,5,0,"_dependencyMap"],[18,37,5,0],[19,2,6,0],[19,6,6,0,"_servicesOfflineService"],[19,29,6,0],[19,32,6,0,"require"],[19,39,6,0],[19,40,6,0,"_dependencyMap"],[19,54,6,0],[20,2,17,0],[20,6,17,0,"_reactNativeAsyncStorageAsyncStorage"],[20,42,17,0],[20,45,17,0,"require"],[20,52,17,0],[20,53,17,0,"_dependencyMap"],[20,67,17,0],[21,2,17,0],[21,6,17,0,"AsyncStorage"],[21,18,17,0],[21,21,17,0,"_interopDefault"],[21,36,17,0],[21,37,17,0,"_reactNativeAsyncStorageAsyncStorage"],[21,73,17,0],[22,2,18,0],[22,6,18,0,"_expoConstants"],[22,20,18,0],[22,23,18,0,"require"],[22,30,18,0],[22,31,18,0,"_dependencyMap"],[22,45,18,0],[23,2,18,0],[23,6,18,0,"Constants"],[23,15,18,0],[23,18,18,0,"_interopDefault"],[23,33,18,0],[23,34,18,0,"_expoConstants"],[23,48,18,0],[24,2,1,0],[25,0,2,0],[26,0,3,0],[28,2,20,7],[28,8,20,13,"useOfflineMode"],[28,22,20,27],[28,25,20,30,"useOfflineMode"],[28,26,20,30],[28,31,20,36],[29,4,21,2],[29,10,21,8],[29,11,21,9,"isOnline"],[29,19,21,17],[29,21,21,19,"setIsOnline"],[29,32,21,30],[29,33,21,31],[29,36,21,34],[29,40,21,34,"useState"],[29,46,21,42],[29,47,21,42,"useState"],[29,55,21,42],[29,57,21,43],[29,61,21,47],[29,62,21,48],[30,4,22,2],[30,10,22,8],[30,11,22,9,"isSyncing"],[30,20,22,18],[30,22,22,20,"setIsSyncing"],[30,34,22,32],[30,35,22,33],[30,38,22,36],[30,42,22,36,"useState"],[30,48,22,44],[30,49,22,44,"useState"],[30,57,22,44],[30,59,22,45],[30,64,22,50],[30,65,22,51],[31,4,23,2],[31,10,23,8],[31,11,23,9,"syncQueueCount"],[31,25,23,23],[31,27,23,25,"setSyncQueueCount"],[31,44,23,42],[31,45,23,43],[31,48,23,46],[31,52,23,46,"useState"],[31,58,23,54],[31,59,23,54,"useState"],[31,67,23,54],[31,69,23,55],[31,70,23,56],[31,71,23,57],[32,4,24,2],[32,10,24,8],[32,11,24,9,"lastSyncTime"],[32,23,24,21],[32,25,24,23,"setLastSyncTime"],[32,40,24,38],[32,41,24,39],[32,44,24,42],[32,48,24,42,"useState"],[32,54,24,50],[32,55,24,50,"useState"],[32,63,24,50],[32,65,24,66],[32,69,24,70],[32,70,24,71],[33,4,26,2],[33,8,26,2,"useEffect"],[33,14,26,11],[33,15,26,11,"useEffect"],[33,24,26,11],[33,26,26,12],[33,32,26,18],[34,6,27,4],[35,6,28,4],[35,10,28,4,"initNetworkListener"],[35,33,28,23],[35,34,28,23,"initNetworkListener"],[35,53,28,23],[35,55,28,24],[35,56,28,25],[37,6,30,4],[38,6,31,4,"setIsOnline"],[38,17,31,15],[38,18,31,16],[38,22,31,16,"getConnectionStatus"],[38,45,31,35],[38,46,31,35,"getConnectionStatus"],[38,65,31,35],[38,67,31,36],[38,68,31,37],[38,69,31,38],[40,6,33,4],[41,6,34,4],[41,12,34,10,"listener"],[41,20,34,18],[41,23,34,22,"online"],[41,29,34,37],[41,33,34,42],[42,8,35,6,"setIsOnline"],[42,19,35,17],[42,20,35,18,"online"],[42,26,35,24],[42,27,35,25],[43,8,36,6],[43,12,36,10,"online"],[43,18,36,16],[43,20,36,18],[44,10,37,8],[45,10,38,8,"handleAutoSync"],[45,24,38,22],[45,25,38,23],[45,26,38,24],[46,8,39,6],[47,6,40,4],[47,7,40,5],[48,6,42,4],[48,10,42,4,"addConnectionListener"],[48,33,42,25],[48,34,42,25,"addConnectionListener"],[48,55,42,25],[48,57,42,26,"listener"],[48,65,42,34],[48,66,42,35],[50,6,44,4],[51,6,45,4,"loadSyncQueueCount"],[51,24,45,22],[51,25,45,23],[51,26,45,24],[53,6,47,4],[54,6,48,4],[54,12,48,10,"interval"],[54,20,48,18],[54,23,48,21,"setInterval"],[54,34,48,32],[54,35,48,33,"loadSyncQueueCount"],[54,53,48,51],[54,55,48,53],[54,59,48,57],[54,60,48,58],[55,6,50,4],[55,13,50,11],[55,19,50,17],[56,8,51,6],[56,12,51,6,"removeConnectionListener"],[56,35,51,30],[56,36,51,30,"removeConnectionListener"],[56,60,51,30],[56,62,51,31,"listener"],[56,70,51,39],[56,71,51,40],[57,8,52,6,"clearInterval"],[57,21,52,19],[57,22,52,20,"interval"],[57,30,52,28],[57,31,52,29],[58,6,53,4],[58,7,53,5],[59,4,54,2],[59,5,54,3],[59,7,54,5],[59,9,54,7],[59,10,54,8],[60,4,56,2],[60,10,56,8,"loadSyncQueueCount"],[60,28,56,26],[60,31,56,29],[60,37,56,29,"loadSyncQueueCount"],[60,38,56,29],[60,43,56,41],[61,6,57,4],[61,10,57,8],[62,8,58,6],[62,14,58,12,"queue"],[62,19,58,17],[62,22,58,20],[62,28,58,26],[62,32,58,26,"getSyncQueue"],[62,55,58,38],[62,56,58,38,"getSyncQueue"],[62,68,58,38],[62,70,58,39],[62,71,58,40],[63,8,59,6,"setSyncQueueCount"],[63,25,59,23],[63,26,59,24,"queue"],[63,31,59,29],[63,32,59,30,"length"],[63,38,59,36],[63,39,59,37],[64,6,60,4],[64,7,60,5],[64,8,60,6],[64,15,60,13,"error"],[64,20,60,18],[64,22,60,20],[65,8,61,6,"console"],[65,15,61,13],[65,16,61,14,"error"],[65,21,61,19],[65,22,61,20],[65,48,61,46],[65,50,61,48,"error"],[65,55,61,53],[65,56,61,54],[66,6,62,4],[67,4,63,2],[67,5,63,3],[68,4,65,2],[68,10,65,8,"handleAutoSync"],[68,24,65,22],[68,27,65,25],[68,33,65,25,"handleAutoSync"],[68,34,65,25],[68,39,65,37],[69,6,66,4],[69,10,66,8],[70,8,67,6],[70,14,67,12,"token"],[70,19,67,17],[70,22,67,20],[70,28,67,26,"AsyncStorage"],[70,40,67,38],[70,41,67,38,"default"],[70,48,67,38],[70,49,67,39,"getItem"],[70,56,67,46],[70,57,67,47],[70,71,67,61],[70,72,67,62],[71,8,68,6],[71,14,68,12,"backendUrl"],[71,24,68,22],[71,27,68,25,"Constants"],[71,36,68,34],[71,37,68,34,"default"],[71,44,68,34],[71,45,68,35,"expoConfig"],[71,55,68,45],[71,57,68,47,"extra"],[71,62,68,52],[71,64,68,54,"EXPO_PUBLIC_BACKEND_URL"],[71,87,68,77],[71,91,68,81,"process"],[71,98,68,88],[71,99,68,89,"env"],[71,102,68,92],[71,103,68,93,"EXPO_PUBLIC_BACKEND_URL"],[71,126,68,116],[71,130,68,120],[71,132,68,122],[72,8,70,6],[72,12,70,10,"token"],[72,17,70,15],[72,21,70,19,"backendUrl"],[72,31,70,29],[72,33,70,31],[73,10,71,8],[73,16,71,14,"handleManualSync"],[73,32,71,30],[73,33,71,31],[73,34,71,32],[74,8,72,6],[75,6,73,4],[75,7,73,5],[75,8,73,6],[75,15,73,13,"error"],[75,20,73,18],[75,22,73,20],[76,8,74,6,"console"],[76,15,74,13],[76,16,74,14,"error"],[76,21,74,19],[76,22,74,20],[76,41,74,39],[76,43,74,41,"error"],[76,48,74,46],[76,49,74,47],[77,6,75,4],[78,4,76,2],[78,5,76,3],[79,4,78,2],[79,10,78,8,"handleManualSync"],[79,26,78,24],[79,29,78,27],[79,35,78,27,"handleManualSync"],[79,36,78,27],[79,41,78,87],[80,6,79,4],[80,10,79,8,"isSyncing"],[80,19,79,17],[80,21,79,19],[81,8,80,6],[81,15,80,13],[82,10,80,15,"success"],[82,17,80,22],[82,19,80,24],[82,24,80,29],[83,10,80,31,"message"],[83,17,80,38],[83,19,80,40],[84,8,80,72],[84,9,80,73],[85,6,81,4],[86,6,83,4],[86,10,83,8],[86,11,83,9,"isOnline"],[86,19,83,17],[86,21,83,19],[87,8,84,6],[87,15,84,13],[88,10,84,15,"success"],[88,17,84,22],[88,19,84,24],[88,24,84,29],[89,10,84,31,"message"],[89,17,84,38],[89,19,84,40],[90,8,84,68],[90,9,84,69],[91,6,85,4],[92,6,87,4],[92,10,87,8],[93,8,88,6,"setIsSyncing"],[93,20,88,18],[93,21,88,19],[93,25,88,23],[93,26,88,24],[94,8,90,6],[94,14,90,12,"token"],[94,19,90,17],[94,22,90,20],[94,28,90,26,"AsyncStorage"],[94,40,90,38],[94,41,90,38,"default"],[94,48,90,38],[94,49,90,39,"getItem"],[94,56,90,46],[94,57,90,47],[94,71,90,61],[94,72,90,62],[95,8,91,6],[95,14,91,12,"backendUrl"],[95,24,91,22],[95,27,91,25,"Constants"],[95,36,91,34],[95,37,91,34,"default"],[95,44,91,34],[95,45,91,35,"expoConfig"],[95,55,91,45],[95,57,91,47,"extra"],[95,62,91,52],[95,64,91,54,"EXPO_PUBLIC_BACKEND_URL"],[95,87,91,77],[95,91,91,81,"process"],[95,98,91,88],[95,99,91,89,"env"],[95,102,91,92],[95,103,91,93,"EXPO_PUBLIC_BACKEND_URL"],[95,126,91,116],[95,130,91,120],[95,132,91,122],[96,8,93,6],[96,12,93,10],[96,13,93,11,"token"],[96,18,93,16],[96,20,93,18],[97,10,94,8],[97,17,94,15],[98,12,94,17,"success"],[98,19,94,24],[98,21,94,26],[98,26,94,31],[99,12,94,33,"message"],[99,19,94,40],[99,21,94,42],[100,10,94,60],[100,11,94,61],[101,8,95,6],[102,8,97,6],[102,14,97,12,"result"],[102,20,97,18],[102,23,97,21],[102,29,97,27],[102,33,97,27,"syncQueue"],[102,56,97,36],[102,57,97,36,"syncQueue"],[102,66,97,36],[102,68,97,37,"backendUrl"],[102,78,97,47],[102,80,97,49,"token"],[102,85,97,54],[102,86,97,55],[103,8,99,6],[103,12,99,10,"result"],[103,18,99,16],[103,19,99,17,"success"],[103,26,99,24],[103,28,99,26],[104,10,100,8],[104,16,100,14,"loadSyncQueueCount"],[104,34,100,32],[104,35,100,33],[104,36,100,34],[105,10,101,8,"setLastSyncTime"],[105,25,101,23],[105,26,101,24],[105,30,101,28,"Date"],[105,34,101,32],[105,35,101,33],[105,36,101,34],[105,37,101,35,"toISOString"],[105,48,101,46],[105,49,101,47],[105,50,101,48],[105,51,101,49],[106,10,103,8],[106,14,103,12,"result"],[106,20,103,18],[106,21,103,19,"synced"],[106,27,103,25],[106,32,103,30],[106,33,103,31],[106,37,103,35,"result"],[106,43,103,41],[106,44,103,42,"errors"],[106,50,103,48],[106,55,103,53],[106,56,103,54],[106,58,103,56],[107,12,104,10],[107,19,104,17],[108,14,104,19,"success"],[108,21,104,26],[108,23,104,28],[108,27,104,32],[109,14,104,34,"message"],[109,21,104,41],[109,23,104,43],[110,12,104,74],[110,13,104,75],[111,10,105,8],[113,10,107,8],[114,10,108,8],[114,14,108,12,"result"],[114,20,108,18],[114,21,108,19,"errors"],[114,27,108,25],[114,30,108,28],[114,31,108,29],[114,35,108,33,"result"],[114,41,108,39],[114,42,108,40,"errorDetails"],[114,54,108,52],[114,56,108,54],[115,12,109,10],[115,18,109,16,"errorMessages"],[115,31,109,29],[115,34,109,32,"result"],[115,40,109,38],[115,41,109,39,"errorDetails"],[115,53,109,51],[115,54,109,52,"map"],[115,57,109,55],[115,58,109,57,"err"],[115,61,109,65],[115,65,110,12],[115,70,110,17,"err"],[115,73,110,20],[115,74,110,21,"error"],[115,79,110,26],[115,83,110,30],[115,100,110,47],[115,102,111,10],[115,103,111,11],[115,104,111,12,"join"],[115,108,111,16],[115,109,111,17],[115,113,111,21],[115,114,111,22],[116,12,113,10],[116,19,113,17],[117,14,114,12,"success"],[117,21,114,19],[117,23,114,21,"result"],[117,29,114,27],[117,30,114,28,"synced"],[117,36,114,34],[117,39,114,37],[117,40,114,38],[118,14,114,40],[119,14,115,12,"message"],[119,21,115,19],[119,23,115,21],[119,26,115,24,"result"],[119,32,115,30],[119,33,115,31,"synced"],[119,39,115,37],[119,70,115,68,"result"],[119,76,115,74],[119,77,115,75,"errors"],[119,83,115,81],[119,101,115,99,"errorMessages"],[119,114,115,112],[120,12,116,10],[120,13,116,11],[121,10,117,8],[122,10,119,8],[122,17,119,15],[123,12,120,10,"success"],[123,19,120,17],[123,21,120,19],[123,25,120,23],[124,12,121,10,"message"],[124,19,121,17],[124,21,121,19],[124,24,121,22,"result"],[124,30,121,28],[124,31,121,29,"synced"],[124,37,121,35],[125,10,122,8],[125,11,122,9],[126,8,123,6],[127,8,125,6],[127,15,125,13],[128,10,125,15,"success"],[128,17,125,22],[128,19,125,24],[128,24,125,29],[129,10,125,31,"message"],[129,17,125,38],[129,19,125,40],[130,8,125,70],[130,9,125,71],[131,6,126,4],[131,7,126,5],[131,8,126,6],[131,15,126,13,"error"],[131,20,126,23],[131,22,126,25],[132,8,127,6,"console"],[132,15,127,13],[132,16,127,14,"error"],[132,21,127,19],[132,22,127,20],[132,45,127,43],[132,47,127,45,"error"],[132,52,127,50],[132,53,127,51],[133,8,128,6],[133,15,128,13],[134,10,128,15,"success"],[134,17,128,22],[134,19,128,24],[134,24,128,29],[135,10,128,31,"message"],[135,17,128,38],[135,19,128,40,"error"],[135,24,128,45],[135,25,128,46,"message"],[135,32,128,53],[135,36,128,57],[136,8,128,85],[136,9,128,86],[137,6,129,4],[137,7,129,5],[137,16,129,14],[138,8,130,6,"setIsSyncing"],[138,20,130,18],[138,21,130,19],[138,26,130,24],[138,27,130,25],[139,6,131,4],[140,4,132,2],[140,5,132,3],[141,4,134,2],[141,10,134,8,"refreshCache"],[141,22,134,20],[141,25,134,23],[141,31,134,23,"refreshCache"],[141,32,134,23],[141,37,134,53],[142,6,135,4],[142,10,135,8],[143,8,136,6],[143,14,136,12,"token"],[143,19,136,17],[143,22,136,20],[143,28,136,26,"AsyncStorage"],[143,40,136,38],[143,41,136,38,"default"],[143,48,136,38],[143,49,136,39,"getItem"],[143,56,136,46],[143,57,136,47],[143,71,136,61],[143,72,136,62],[144,8,137,6],[144,14,137,12,"backendUrl"],[144,24,137,22],[144,27,137,25,"Constants"],[144,36,137,34],[144,37,137,34,"default"],[144,44,137,34],[144,45,137,35,"expoConfig"],[144,55,137,45],[144,57,137,47,"extra"],[144,62,137,52],[144,64,137,54,"EXPO_PUBLIC_BACKEND_URL"],[144,87,137,77],[144,91,137,81,"process"],[144,98,137,88],[144,99,137,89,"env"],[144,102,137,92],[144,103,137,93,"EXPO_PUBLIC_BACKEND_URL"],[144,126,137,116],[144,130,137,120],[144,132,137,122],[145,8,139,6],[145,12,139,10],[145,13,139,11,"token"],[145,18,139,16],[145,22,139,20],[145,23,139,21,"backendUrl"],[145,33,139,31],[145,35,139,33],[146,10,140,8],[146,17,140,15],[146,22,140,20],[147,8,141,6],[148,8,143,6],[148,15,143,13],[148,21,143,19],[148,25,143,19,"downloadCacheData"],[148,48,143,36],[148,49,143,36,"downloadCacheData"],[148,66,143,36],[148,68,143,37,"backendUrl"],[148,78,143,47],[148,80,143,49,"token"],[148,85,143,54],[148,86,143,55],[149,6,144,4],[149,7,144,5],[149,8,144,6],[149,15,144,13,"error"],[149,20,144,18],[149,22,144,20],[150,8,145,6,"console"],[150,15,145,13],[150,16,145,14,"error"],[150,21,145,19],[150,22,145,20],[150,45,145,43],[150,47,145,45,"error"],[150,52,145,50],[150,53,145,51],[151,8,146,6],[151,15,146,13],[151,20,146,18],[152,6,147,4],[153,4,148,2],[153,5,148,3],[154,4,150,2],[154,11,150,9],[155,6,151,4,"isOnline"],[155,14,151,12],[156,6,152,4,"isSyncing"],[156,15,152,13],[157,6,153,4,"syncQueueCount"],[157,20,153,18],[158,6,154,4,"lastSyncTime"],[158,18,154,16],[159,6,155,4,"handleManualSync"],[159,22,155,20],[160,6,156,4,"refreshCache"],[160,18,156,16],[161,6,157,4,"loadSyncQueueCount"],[162,4,158,2],[162,5,158,3],[163,2,159,0],[163,3,159,1],[164,0,159,2],[164,3]],"functionMap":{"names":["<global>","useOfflineMode","useEffect$argument_0","listener","<anonymous>","loadSyncQueueCount","handleAutoSync","handleManualSync","result.errorDetails.map$argument_0","refreshCache"],"mappings":"AAA;8BCmB;YCM;qBCQ;KDM;WEU;KFG;GDC;6BIE;GJO;yBKE;GLW;2BME;wDC+B;iDDC;GNsB;uBQE;GRc;CDW"},"hasCjsExports":false},"type":"js/module"}]}