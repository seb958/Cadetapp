{"dependencies":[{"name":"../gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"tAi+3DTq2/XlM2rT1I9X7ektuV0=","exportNames":["*"],"imports":1}},{"name":"../reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":50,"index":112}}],"key":"55E8XkeO+dzLnJh3bfoVrgRwD58=","exportNames":["*"],"imports":1}},{"name":"../gestureStateManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":229},"end":{"line":11,"column":32,"index":320}}],"key":"6LCevhjgWrTPA6v411SOrqBFOt8=","exportNames":["*"],"imports":1}},{"name":"../../../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":321},"end":{"line":12,"column":39,"index":360}}],"key":"IejmxDhiCXPiMeZAbmULeVBR7VE=","exportNames":["*"],"imports":1}},{"name":"../../../TouchEventType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":361},"end":{"line":13,"column":57,"index":418}}],"key":"PyG3b4ZwjXzi6z4zhvmBkUTmp1M=","exportNames":["*"],"imports":1}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":419},"end":{"line":14,"column":44,"index":463}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useAnimatedGesture = useAnimatedGesture;\n  var _gesture = require(_dependencyMap[0], \"../gesture\");\n  var _reanimatedWrapper = require(_dependencyMap[1], \"../reanimatedWrapper\");\n  var _gestureStateManager = require(_dependencyMap[2], \"../gestureStateManager\");\n  var _State = require(_dependencyMap[3], \"../../../State\");\n  var _TouchEventType = require(_dependencyMap[4], \"../../../TouchEventType\");\n  var _utils = require(_dependencyMap[5], \"../../../utils\");\n  var _worklet_2054655450554_init_data = {\n    code: \"function getHandler_reactNativeGestureHandler_useAnimatedGestureTs1(type,gesture){const{CALLBACK_TYPE}=this.__closure;switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getHandler_reactNativeGestureHandler_useAnimatedGestureTs1\\\",\\\"type\\\",\\\"gesture\\\",\\\"CALLBACK_TYPE\\\",\\\"__closure\\\",\\\"BEGAN\\\",\\\"onBegin\\\",\\\"START\\\",\\\"onStart\\\",\\\"UPDATE\\\",\\\"onUpdate\\\",\\\"CHANGE\\\",\\\"onChange\\\",\\\"END\\\",\\\"onEnd\\\",\\\"FINALIZE\\\",\\\"onFinalize\\\",\\\"TOUCHES_DOWN\\\",\\\"onTouchesDown\\\",\\\"TOUCHES_MOVE\\\",\\\"onTouchesMove\\\",\\\"TOUCHES_UP\\\",\\\"onTouchesUp\\\",\\\"TOUCHES_CANCELLED\\\",\\\"onTouchesCancelled\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AAgBA,SAAAA,0DAGEA,CAAAC,IAAA,CAAAC,OAAA,QAAAC,aAAA,OAAAC,SAAA,CAEA,OAAQH,IAAI,EACV,IAAK,CAAAE,aAAa,CAACE,KAAK,CACtB,MAAO,CAAAH,OAAO,CAACI,OAAO,CACxB,IAAK,CAAAH,aAAa,CAACI,KAAK,CACtB,MAAO,CAAAL,OAAO,CAACM,OAAO,CACxB,IAAK,CAAAL,aAAa,CAACM,MAAM,CACvB,MAAO,CAAAP,OAAO,CAACQ,QAAQ,CACzB,IAAK,CAAAP,aAAa,CAACQ,MAAM,CACvB,MAAO,CAAAT,OAAO,CAACU,QAAQ,CACzB,IAAK,CAAAT,aAAa,CAACU,GAAG,CACpB,MAAO,CAAAX,OAAO,CAACY,KAAK,CACtB,IAAK,CAAAX,aAAa,CAACY,QAAQ,CACzB,MAAO,CAAAb,OAAO,CAACc,UAAU,CAC3B,IAAK,CAAAb,aAAa,CAACc,YAAY,CAC7B,MAAO,CAAAf,OAAO,CAACgB,aAAa,CAC9B,IAAK,CAAAf,aAAa,CAACgB,YAAY,CAC7B,MAAO,CAAAjB,OAAO,CAACkB,aAAa,CAC9B,IAAK,CAAAjB,aAAa,CAACkB,UAAU,CAC3B,MAAO,CAAAnB,OAAO,CAACoB,WAAW,CAC5B,IAAK,CAAAnB,aAAa,CAACoB,iBAAiB,CAClC,MAAO,CAAArB,OAAO,CAACsB,kBAAkB,CACrC,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var getHandler = function () {\n    var _e = [new global.Error(), -2, -27];\n    var getHandler = function (type, gesture) {\n      switch (type) {\n        case _gesture.CALLBACK_TYPE.BEGAN:\n          return gesture.onBegin;\n        case _gesture.CALLBACK_TYPE.START:\n          return gesture.onStart;\n        case _gesture.CALLBACK_TYPE.UPDATE:\n          return gesture.onUpdate;\n        case _gesture.CALLBACK_TYPE.CHANGE:\n          return gesture.onChange;\n        case _gesture.CALLBACK_TYPE.END:\n          return gesture.onEnd;\n        case _gesture.CALLBACK_TYPE.FINALIZE:\n          return gesture.onFinalize;\n        case _gesture.CALLBACK_TYPE.TOUCHES_DOWN:\n          return gesture.onTouchesDown;\n        case _gesture.CALLBACK_TYPE.TOUCHES_MOVE:\n          return gesture.onTouchesMove;\n        case _gesture.CALLBACK_TYPE.TOUCHES_UP:\n          return gesture.onTouchesUp;\n        case _gesture.CALLBACK_TYPE.TOUCHES_CANCELLED:\n          return gesture.onTouchesCancelled;\n      }\n    };\n    getHandler.__closure = {\n      CALLBACK_TYPE: _gesture.CALLBACK_TYPE\n    };\n    getHandler.__workletHash = 2054655450554;\n    getHandler.__initData = _worklet_2054655450554_init_data;\n    getHandler.__stackDetails = _e;\n    return getHandler;\n  }();\n  var _worklet_14903447069497_init_data = {\n    code: \"function touchEventTypeToCallbackType_reactNativeGestureHandler_useAnimatedGestureTs2(eventType){const{TouchEventType,CALLBACK_TYPE}=this.__closure;switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"touchEventTypeToCallbackType_reactNativeGestureHandler_useAnimatedGestureTs2\\\",\\\"eventType\\\",\\\"TouchEventType\\\",\\\"CALLBACK_TYPE\\\",\\\"__closure\\\",\\\"TOUCHES_DOWN\\\",\\\"TOUCHES_MOVE\\\",\\\"TOUCHES_UP\\\",\\\"TOUCHES_CANCELLED\\\",\\\"UNDEFINED\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AA6CA,SAAAA,4EAEiBA,CAAAC,SAAA,QAAAC,cAAA,CAAAC,aAAA,OAAAC,SAAA,CAEf,OAAQH,SAAS,EACf,IAAK,CAAAC,cAAc,CAACG,YAAY,CAC9B,MAAO,CAAAF,aAAa,CAACE,YAAY,CACnC,IAAK,CAAAH,cAAc,CAACI,YAAY,CAC9B,MAAO,CAAAH,aAAa,CAACG,YAAY,CACnC,IAAK,CAAAJ,cAAc,CAACK,UAAU,CAC5B,MAAO,CAAAJ,aAAa,CAACI,UAAU,CACjC,IAAK,CAAAL,cAAc,CAACM,iBAAiB,CACnC,MAAO,CAAAL,aAAa,CAACK,iBAAiB,CAC1C,CACA,MAAO,CAAAL,aAAa,CAACM,SAAS,CAChC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var touchEventTypeToCallbackType = function () {\n    var _e = [new global.Error(), -3, -27];\n    var touchEventTypeToCallbackType = function (eventType) {\n      switch (eventType) {\n        case _TouchEventType.TouchEventType.TOUCHES_DOWN:\n          return _gesture.CALLBACK_TYPE.TOUCHES_DOWN;\n        case _TouchEventType.TouchEventType.TOUCHES_MOVE:\n          return _gesture.CALLBACK_TYPE.TOUCHES_MOVE;\n        case _TouchEventType.TouchEventType.TOUCHES_UP:\n          return _gesture.CALLBACK_TYPE.TOUCHES_UP;\n        case _TouchEventType.TouchEventType.TOUCHES_CANCELLED:\n          return _gesture.CALLBACK_TYPE.TOUCHES_CANCELLED;\n      }\n      return _gesture.CALLBACK_TYPE.UNDEFINED;\n    };\n    touchEventTypeToCallbackType.__closure = {\n      TouchEventType: _TouchEventType.TouchEventType,\n      CALLBACK_TYPE: _gesture.CALLBACK_TYPE\n    };\n    touchEventTypeToCallbackType.__workletHash = 14903447069497;\n    touchEventTypeToCallbackType.__initData = _worklet_14903447069497_init_data;\n    touchEventTypeToCallbackType.__stackDetails = _e;\n    return touchEventTypeToCallbackType;\n  }();\n  var _worklet_10526057831000_init_data = {\n    code: \"function runWorklet_reactNativeGestureHandler_useAnimatedGestureTs3(type,gesture,event){const{getHandler,tagMessage}=this.__closure;const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){for(var _len=arguments.length,args=new Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){args[_key-3]=arguments[_key];}handler===null||handler===void 0||handler(event,...args);}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runWorklet_reactNativeGestureHandler_useAnimatedGestureTs3\\\",\\\"type\\\",\\\"gesture\\\",\\\"event\\\",\\\"getHandler\\\",\\\"tagMessage\\\",\\\"__closure\\\",\\\"handler\\\",\\\"isWorklet\\\",\\\"_len\\\",\\\"arguments\\\",\\\"length\\\",\\\"args\\\",\\\"Array\\\",\\\"_key\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AA8DA,SAAAA,0DAKEA,CAAAC,IAAA,CAAAC,OAAA,CAAAC,KAAA,QAAAC,UAAA,CAAAC,UAAA,OAAAC,SAAA,CAEA,KAAM,CAAAC,OAAO,CAAGH,UAAU,CAACH,IAAI,CAAEC,OAAO,CAAC,CACzC,GAAIA,OAAO,CAACM,SAAS,CAACP,IAAI,CAAC,CAAE,SAAAQ,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAJ1BC,IAAI,KAAAC,KAAA,CAAAJ,IAAA,GAAAA,IAAA,MAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA,GAOLP,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAGJ,KAAK,CAAE,GAAGS,IAAI,CAAC,CAC3B,CAAC,IAAM,IAAIL,OAAO,CAAE,CAClBQ,OAAO,CAACC,IAAI,CAACX,UAAU,CAAC,6CAA6C,CAAC,CAAC,CACzE,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var runWorklet = function () {\n    var _e = [new global.Error(), -3, -27];\n    var runWorklet = function (type, gesture, event) {\n      var handler = getHandler(type, gesture);\n      if (gesture.isWorklet[type]) {\n        for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n          args[_key - 3] = arguments[_key];\n        }\n        // @ts-ignore Logic below makes sure the correct event is send to the\n        // correct handler.\n        handler?.(event, ...args);\n      } else if (handler) {\n        console.warn((0, _utils.tagMessage)('Animated gesture callback must be a worklet'));\n      }\n    };\n    runWorklet.__closure = {\n      getHandler,\n      tagMessage: _utils.tagMessage\n    };\n    runWorklet.__workletHash = 10526057831000;\n    runWorklet.__initData = _worklet_10526057831000_init_data;\n    runWorklet.__stackDetails = _e;\n    return runWorklet;\n  }();\n  var _worklet_1443917263962_init_data = {\n    code: \"function isStateChangeEvent_reactNativeGestureHandler_useAnimatedGestureTs4(event){return event.oldState!=null;}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isStateChangeEvent_reactNativeGestureHandler_useAnimatedGestureTs4\\\",\\\"event\\\",\\\"oldState\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AA+EA,SAAAA,kEAEoCA,CAAAC,KAAA,EAGlC,MAAO,CAAAA,KAAK,CAACC,QAAQ,EAAI,IAAI,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var isStateChangeEvent = function () {\n    var _e = [new global.Error(), 1, -27];\n    var isStateChangeEvent = function (event) {\n      // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n      return event.oldState != null;\n    };\n    isStateChangeEvent.__closure = {};\n    isStateChangeEvent.__workletHash = 1443917263962;\n    isStateChangeEvent.__initData = _worklet_1443917263962_init_data;\n    isStateChangeEvent.__stackDetails = _e;\n    return isStateChangeEvent;\n  }();\n  var _worklet_15574765637067_init_data = {\n    code: \"function isTouchEvent_reactNativeGestureHandler_useAnimatedGestureTs5(event){return event.eventType!=null;}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isTouchEvent_reactNativeGestureHandler_useAnimatedGestureTs5\\\",\\\"event\\\",\\\"eventType\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AAuFA,SAAAA,4DAE8BA,CAAAC,KAAA,EAE5B,MAAO,CAAAA,KAAK,CAACC,SAAS,EAAI,IAAI,CAChC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  var isTouchEvent = function () {\n    var _e = [new global.Error(), 1, -27];\n    var isTouchEvent = function (event) {\n      return event.eventType != null;\n    };\n    isTouchEvent.__closure = {};\n    isTouchEvent.__workletHash = 15574765637067;\n    isTouchEvent.__initData = _worklet_15574765637067_init_data;\n    isTouchEvent.__stackDetails = _e;\n    return isTouchEvent;\n  }();\n  var _worklet_10458000393606_init_data = {\n    code: \"function reactNativeGestureHandler_useAnimatedGestureTs6(event){const{sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,TouchEventType,touchEventTypeToCallbackType}=this.__closure;const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag!==gesture.handlerTag){continue;}if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeGestureHandler_useAnimatedGestureTs6\\\",\\\"event\\\",\\\"sharedHandlersCallbacks\\\",\\\"isStateChangeEvent\\\",\\\"State\\\",\\\"runWorklet\\\",\\\"CALLBACK_TYPE\\\",\\\"lastUpdateEvent\\\",\\\"isTouchEvent\\\",\\\"stateControllers\\\",\\\"GestureStateManager\\\",\\\"TouchEventType\\\",\\\"touchEventTypeToCallbackType\\\",\\\"__closure\\\",\\\"currentCallback\\\",\\\"value\\\",\\\"i\\\",\\\"length\\\",\\\"gesture\\\",\\\"handlerTag\\\",\\\"oldState\\\",\\\"UNDETERMINED\\\",\\\"state\\\",\\\"BEGAN\\\",\\\"ACTIVE\\\",\\\"START\\\",\\\"undefined\\\",\\\"END\\\",\\\"FINALIZE\\\",\\\"FAILED\\\",\\\"CANCELLED\\\",\\\"create\\\",\\\"eventType\\\",\\\"UPDATE\\\",\\\"onChange\\\",\\\"changeEventCalculator\\\",\\\"_gesture$changeEventC\\\",\\\"CHANGE\\\",\\\"call\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AAqHmB,QACf,CAAAA,+CACGA,CAAAC,KAAA,QAAAC,uBAAA,CAAAC,kBAAA,CAAAC,KAAA,CAAAC,UAAA,CAAAC,aAAA,CAAAC,eAAA,CAAAC,YAAA,CAAAC,gBAAA,CAAAC,mBAAA,CAAAC,cAAA,CAAAC,4BAAA,OAAAC,SAAA,CAGH,KAAM,CAAAC,eAAe,CAAGZ,uBAAuB,CAACa,KAAK,CACrD,GAAI,CAACD,eAAe,CAAE,CACpB,OACF,CAEA,IAAK,GAAI,CAAAE,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,eAAe,CAACG,MAAM,CAAED,CAAC,EAAE,CAAE,CAC/C,KAAM,CAAAE,OAAO,CAAGJ,eAAe,CAACE,CAAC,CAAC,CAElC,GAAIf,KAAK,CAACkB,UAAU,GAAKD,OAAO,CAACC,UAAU,CAAE,CAC3C,SACF,CAEA,GAAIhB,kBAAkB,CAACF,KAAK,CAAC,CAAE,CAC7B,GACEA,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACiB,YAAY,EACrCpB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACmB,KAAK,CAC3B,CACAlB,UAAU,CAACC,aAAa,CAACiB,KAAK,CAAEL,OAAO,CAAEjB,KAAK,CAAC,CACjD,CAAC,IAAM,IACL,CAACA,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACmB,KAAK,EAC7BtB,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACiB,YAAY,GACvCpB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACoB,MAAM,CAC5B,CACAnB,UAAU,CAACC,aAAa,CAACmB,KAAK,CAAEP,OAAO,CAAEjB,KAAK,CAAC,CAC/CM,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,CAAGO,SAAS,CACvD,CAAC,IAAM,IACLzB,KAAK,CAACmB,QAAQ,GAAKnB,KAAK,CAACqB,KAAK,EAC9BrB,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACuB,GAAG,CACzB,CACA,GAAI1B,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACoB,MAAM,CAAE,CACnCnB,UAAU,CAACC,aAAa,CAACqB,GAAG,CAAET,OAAO,CAAEjB,KAAK,CAAE,IAAI,CAAC,CACrD,CACAI,UAAU,CAACC,aAAa,CAACsB,QAAQ,CAAEV,OAAO,CAAEjB,KAAK,CAAE,IAAI,CAAC,CAC1D,CAAC,IAAM,IACL,CAACA,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAACyB,MAAM,EAAI5B,KAAK,CAACqB,KAAK,GAAKlB,KAAK,CAAC0B,SAAS,GAChE7B,KAAK,CAACqB,KAAK,GAAKrB,KAAK,CAACmB,QAAQ,CAC9B,CACA,GAAInB,KAAK,CAACmB,QAAQ,GAAKhB,KAAK,CAACoB,MAAM,CAAE,CACnCnB,UAAU,CAACC,aAAa,CAACqB,GAAG,CAAET,OAAO,CAAEjB,KAAK,CAAE,KAAK,CAAC,CACtD,CACAI,UAAU,CAACC,aAAa,CAACsB,QAAQ,CAAEV,OAAO,CAAEjB,KAAK,CAAE,KAAK,CAAC,CAC3D,CACF,CAAC,IAAM,IAAIO,YAAY,CAACP,KAAK,CAAC,CAAE,CAC9B,GAAI,CAACQ,gBAAgB,CAACO,CAAC,CAAC,CAAE,CACxBP,gBAAgB,CAACO,CAAC,CAAC,CAAGN,mBAAmB,CAACqB,MAAM,CAAC9B,KAAK,CAACkB,UAAU,CAAC,CACpE,CAEA,GAAIlB,KAAK,CAAC+B,SAAS,GAAKrB,cAAc,CAACU,YAAY,CAAE,CACnDhB,UAAU,CACRO,4BAA4B,CAACX,KAAK,CAAC+B,SAAS,CAAC,CAC7Cd,OAAO,CACPjB,KAAK,CACLQ,gBAAgB,CAACO,CAAC,CACpB,CAAC,CACH,CACF,CAAC,IAAM,CACLX,UAAU,CAACC,aAAa,CAAC2B,MAAM,CAAEf,OAAO,CAAEjB,KAAK,CAAC,CAEhD,GAAIiB,OAAO,CAACgB,QAAQ,EAAIhB,OAAO,CAACiB,qBAAqB,CAAE,KAAAC,qBAAA,CACrD/B,UAAU,CACRC,aAAa,CAAC+B,MAAM,CACpBnB,OAAO,EAAAkB,qBAAA,CACPlB,OAAO,CAACiB,qBAAqB,UAAAC,qBAAA,iBAA7BA,qBAAA,CAAAE,IAAA,CAAApB,OAAO,CACLjB,KAAK,CACLM,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAC1C,CACF,CAAC,CAEDZ,eAAe,CAACQ,KAAK,CAACG,OAAO,CAACC,UAAU,CAAC,CAAGlB,KAAK,CACnD,CACF,CACF,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  function useAnimatedGesture(preparedGesture, needsRebuild) {\n    if (!_reanimatedWrapper.Reanimated) {\n      return;\n    }\n\n    // Hooks are called conditionally, but the condition is whether the\n    // react-native-reanimated is installed, which shouldn't change while running\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var sharedHandlersCallbacks = _reanimatedWrapper.Reanimated.useSharedValue(null);\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var lastUpdateEvent = _reanimatedWrapper.Reanimated.useSharedValue([]);\n\n    // not every gesture needs a state controller, init them lazily\n    var stateControllers = [];\n    var callback = function () {\n      var _e = [new global.Error(), -12, -27];\n      var reactNativeGestureHandler_useAnimatedGestureTs6 = function (event) {\n        var currentCallback = sharedHandlersCallbacks.value;\n        if (!currentCallback) {\n          return;\n        }\n        for (var i = 0; i < currentCallback.length; i++) {\n          var gesture = currentCallback[i];\n          if (event.handlerTag !== gesture.handlerTag) {\n            continue;\n          }\n          if (isStateChangeEvent(event)) {\n            if (event.oldState === _State.State.UNDETERMINED && event.state === _State.State.BEGAN) {\n              runWorklet(_gesture.CALLBACK_TYPE.BEGAN, gesture, event);\n            } else if ((event.oldState === _State.State.BEGAN || event.oldState === _State.State.UNDETERMINED) && event.state === _State.State.ACTIVE) {\n              runWorklet(_gesture.CALLBACK_TYPE.START, gesture, event);\n              lastUpdateEvent.value[gesture.handlerTag] = undefined;\n            } else if (event.oldState !== event.state && event.state === _State.State.END) {\n              if (event.oldState === _State.State.ACTIVE) {\n                runWorklet(_gesture.CALLBACK_TYPE.END, gesture, event, true);\n              }\n              runWorklet(_gesture.CALLBACK_TYPE.FINALIZE, gesture, event, true);\n            } else if ((event.state === _State.State.FAILED || event.state === _State.State.CANCELLED) && event.state !== event.oldState) {\n              if (event.oldState === _State.State.ACTIVE) {\n                runWorklet(_gesture.CALLBACK_TYPE.END, gesture, event, false);\n              }\n              runWorklet(_gesture.CALLBACK_TYPE.FINALIZE, gesture, event, false);\n            }\n          } else if (isTouchEvent(event)) {\n            if (!stateControllers[i]) {\n              stateControllers[i] = _gestureStateManager.GestureStateManager.create(event.handlerTag);\n            }\n            if (event.eventType !== _TouchEventType.TouchEventType.UNDETERMINED) {\n              runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\n            }\n          } else {\n            runWorklet(_gesture.CALLBACK_TYPE.UPDATE, gesture, event);\n            if (gesture.onChange && gesture.changeEventCalculator) {\n              runWorklet(_gesture.CALLBACK_TYPE.CHANGE, gesture, gesture.changeEventCalculator?.(event, lastUpdateEvent.value[gesture.handlerTag]));\n              lastUpdateEvent.value[gesture.handlerTag] = event;\n            }\n          }\n        }\n      };\n      reactNativeGestureHandler_useAnimatedGestureTs6.__closure = {\n        sharedHandlersCallbacks,\n        isStateChangeEvent,\n        State: _State.State,\n        runWorklet,\n        CALLBACK_TYPE: _gesture.CALLBACK_TYPE,\n        lastUpdateEvent,\n        isTouchEvent,\n        stateControllers,\n        GestureStateManager: _gestureStateManager.GestureStateManager,\n        TouchEventType: _TouchEventType.TouchEventType,\n        touchEventTypeToCallbackType\n      };\n      reactNativeGestureHandler_useAnimatedGestureTs6.__workletHash = 10458000393606;\n      reactNativeGestureHandler_useAnimatedGestureTs6.__initData = _worklet_10458000393606_init_data;\n      reactNativeGestureHandler_useAnimatedGestureTs6.__stackDetails = _e;\n      return reactNativeGestureHandler_useAnimatedGestureTs6;\n    }();\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var event = _reanimatedWrapper.Reanimated.useEvent(callback, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], needsRebuild);\n    preparedGesture.animatedEventHandler = event;\n    preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n  }\n});","lineCount":239,"map":[[7,2,95,0,"exports"],[7,9,95,0],[7,10,95,0,"useAnimatedGesture"],[7,28,95,0],[7,31,95,0,"useAnimatedGesture"],[7,49,95,0],[8,2,1,0],[8,6,1,0,"_gesture"],[8,14,1,0],[8,17,1,0,"require"],[8,24,1,0],[8,25,1,0,"_dependencyMap"],[8,39,1,0],[9,2,2,0],[9,6,2,0,"_reanimatedWrapper"],[9,24,2,0],[9,27,2,0,"require"],[9,34,2,0],[9,35,2,0,"_dependencyMap"],[9,49,2,0],[10,2,8,0],[10,6,8,0,"_gestureStateManager"],[10,26,8,0],[10,29,8,0,"require"],[10,36,8,0],[10,37,8,0,"_dependencyMap"],[10,51,8,0],[11,2,12,0],[11,6,12,0,"_State"],[11,12,12,0],[11,15,12,0,"require"],[11,22,12,0],[11,23,12,0,"_dependencyMap"],[11,37,12,0],[12,2,13,0],[12,6,13,0,"_TouchEventType"],[12,21,13,0],[12,24,13,0,"require"],[12,31,13,0],[12,32,13,0,"_dependencyMap"],[12,46,13,0],[13,2,14,0],[13,6,14,0,"_utils"],[13,12,14,0],[13,15,14,0,"require"],[13,22,14,0],[13,23,14,0,"_dependencyMap"],[13,37,14,0],[14,2,14,44],[14,6,14,44,"_worklet_2054655450554_init_data"],[14,38,14,44],[15,4,14,44,"code"],[15,8,14,44],[16,4,14,44,"location"],[16,12,14,44],[17,4,14,44,"sourceMap"],[17,13,14,44],[18,4,14,44,"version"],[18,11,14,44],[19,2,14,44],[20,2,14,44],[20,6,14,44,"getHandler"],[20,16,14,44],[20,19,17,0],[21,4,17,0],[21,8,17,0,"_e"],[21,10,17,0],[21,18,17,0,"global"],[21,24,17,0],[21,25,17,0,"Error"],[21,30,17,0],[22,4,17,0],[22,8,17,0,"getHandler"],[22,18,17,0],[22,30,17,0,"getHandler"],[22,31,18,2,"type"],[22,35,18,21],[22,37,19,2,"gesture"],[22,44,19,52],[22,46,20,2],[23,6,22,2],[23,14,22,10,"type"],[23,18,22,14],[24,8,23,4],[24,13,23,9,"CALLBACK_TYPE"],[24,21,23,22],[24,22,23,22,"CALLBACK_TYPE"],[24,35,23,22],[24,36,23,23,"BEGAN"],[24,41,23,28],[25,10,24,6],[25,17,24,13,"gesture"],[25,24,24,20],[25,25,24,21,"onBegin"],[25,32,24,28],[26,8,25,4],[26,13,25,9,"CALLBACK_TYPE"],[26,21,25,22],[26,22,25,22,"CALLBACK_TYPE"],[26,35,25,22],[26,36,25,23,"START"],[26,41,25,28],[27,10,26,6],[27,17,26,13,"gesture"],[27,24,26,20],[27,25,26,21,"onStart"],[27,32,26,28],[28,8,27,4],[28,13,27,9,"CALLBACK_TYPE"],[28,21,27,22],[28,22,27,22,"CALLBACK_TYPE"],[28,35,27,22],[28,36,27,23,"UPDATE"],[28,42,27,29],[29,10,28,6],[29,17,28,13,"gesture"],[29,24,28,20],[29,25,28,21,"onUpdate"],[29,33,28,29],[30,8,29,4],[30,13,29,9,"CALLBACK_TYPE"],[30,21,29,22],[30,22,29,22,"CALLBACK_TYPE"],[30,35,29,22],[30,36,29,23,"CHANGE"],[30,42,29,29],[31,10,30,6],[31,17,30,13,"gesture"],[31,24,30,20],[31,25,30,21,"onChange"],[31,33,30,29],[32,8,31,4],[32,13,31,9,"CALLBACK_TYPE"],[32,21,31,22],[32,22,31,22,"CALLBACK_TYPE"],[32,35,31,22],[32,36,31,23,"END"],[32,39,31,26],[33,10,32,6],[33,17,32,13,"gesture"],[33,24,32,20],[33,25,32,21,"onEnd"],[33,30,32,26],[34,8,33,4],[34,13,33,9,"CALLBACK_TYPE"],[34,21,33,22],[34,22,33,22,"CALLBACK_TYPE"],[34,35,33,22],[34,36,33,23,"FINALIZE"],[34,44,33,31],[35,10,34,6],[35,17,34,13,"gesture"],[35,24,34,20],[35,25,34,21,"onFinalize"],[35,35,34,31],[36,8,35,4],[36,13,35,9,"CALLBACK_TYPE"],[36,21,35,22],[36,22,35,22,"CALLBACK_TYPE"],[36,35,35,22],[36,36,35,23,"TOUCHES_DOWN"],[36,48,35,35],[37,10,36,6],[37,17,36,13,"gesture"],[37,24,36,20],[37,25,36,21,"onTouchesDown"],[37,38,36,34],[38,8,37,4],[38,13,37,9,"CALLBACK_TYPE"],[38,21,37,22],[38,22,37,22,"CALLBACK_TYPE"],[38,35,37,22],[38,36,37,23,"TOUCHES_MOVE"],[38,48,37,35],[39,10,38,6],[39,17,38,13,"gesture"],[39,24,38,20],[39,25,38,21,"onTouchesMove"],[39,38,38,34],[40,8,39,4],[40,13,39,9,"CALLBACK_TYPE"],[40,21,39,22],[40,22,39,22,"CALLBACK_TYPE"],[40,35,39,22],[40,36,39,23,"TOUCHES_UP"],[40,46,39,33],[41,10,40,6],[41,17,40,13,"gesture"],[41,24,40,20],[41,25,40,21,"onTouchesUp"],[41,36,40,32],[42,8,41,4],[42,13,41,9,"CALLBACK_TYPE"],[42,21,41,22],[42,22,41,22,"CALLBACK_TYPE"],[42,35,41,22],[42,36,41,23,"TOUCHES_CANCELLED"],[42,53,41,40],[43,10,42,6],[43,17,42,13,"gesture"],[43,24,42,20],[43,25,42,21,"onTouchesCancelled"],[43,43,42,39],[44,6,43,2],[45,4,44,0],[45,5,44,1],[46,4,44,1,"getHandler"],[46,14,44,1],[46,15,44,1,"__closure"],[46,24,44,1],[47,6,44,1,"CALLBACK_TYPE"],[47,19,44,1],[47,21,18,8,"CALLBACK_TYPE"],[47,29,18,21],[47,30,18,21,"CALLBACK_TYPE"],[48,4,18,21],[49,4,18,21,"getHandler"],[49,14,18,21],[49,15,18,21,"__workletHash"],[49,28,18,21],[50,4,18,21,"getHandler"],[50,14,18,21],[50,15,18,21,"__initData"],[50,25,18,21],[50,28,18,21,"_worklet_2054655450554_init_data"],[50,60,18,21],[51,4,18,21,"getHandler"],[51,14,18,21],[51,15,18,21,"__stackDetails"],[51,29,18,21],[51,32,18,21,"_e"],[51,34,18,21],[52,4,18,21],[52,11,18,21,"getHandler"],[52,21,18,21],[53,2,18,21],[53,3,17,0],[54,2,17,0],[54,6,17,0,"_worklet_14903447069497_init_data"],[54,39,17,0],[55,4,17,0,"code"],[55,8,17,0],[56,4,17,0,"location"],[56,12,17,0],[57,4,17,0,"sourceMap"],[57,13,17,0],[58,4,17,0,"version"],[58,11,17,0],[59,2,17,0],[60,2,17,0],[60,6,17,0,"touchEventTypeToCallbackType"],[60,34,17,0],[60,37,46,0],[61,4,46,0],[61,8,46,0,"_e"],[61,10,46,0],[61,18,46,0,"global"],[61,24,46,0],[61,25,46,0,"Error"],[61,30,46,0],[62,4,46,0],[62,8,46,0,"touchEventTypeToCallbackType"],[62,36,46,0],[62,48,46,0,"touchEventTypeToCallbackType"],[62,49,47,2,"eventType"],[62,58,47,27],[62,60,48,17],[63,6,50,2],[63,14,50,10,"eventType"],[63,23,50,19],[64,8,51,4],[64,13,51,9,"TouchEventType"],[64,28,51,23],[64,29,51,23,"TouchEventType"],[64,43,51,23],[64,44,51,24,"TOUCHES_DOWN"],[64,56,51,36],[65,10,52,6],[65,17,52,13,"CALLBACK_TYPE"],[65,25,52,26],[65,26,52,26,"CALLBACK_TYPE"],[65,39,52,26],[65,40,52,27,"TOUCHES_DOWN"],[65,52,52,39],[66,8,53,4],[66,13,53,9,"TouchEventType"],[66,28,53,23],[66,29,53,23,"TouchEventType"],[66,43,53,23],[66,44,53,24,"TOUCHES_MOVE"],[66,56,53,36],[67,10,54,6],[67,17,54,13,"CALLBACK_TYPE"],[67,25,54,26],[67,26,54,26,"CALLBACK_TYPE"],[67,39,54,26],[67,40,54,27,"TOUCHES_MOVE"],[67,52,54,39],[68,8,55,4],[68,13,55,9,"TouchEventType"],[68,28,55,23],[68,29,55,23,"TouchEventType"],[68,43,55,23],[68,44,55,24,"TOUCHES_UP"],[68,54,55,34],[69,10,56,6],[69,17,56,13,"CALLBACK_TYPE"],[69,25,56,26],[69,26,56,26,"CALLBACK_TYPE"],[69,39,56,26],[69,40,56,27,"TOUCHES_UP"],[69,50,56,37],[70,8,57,4],[70,13,57,9,"TouchEventType"],[70,28,57,23],[70,29,57,23,"TouchEventType"],[70,43,57,23],[70,44,57,24,"TOUCHES_CANCELLED"],[70,61,57,41],[71,10,58,6],[71,17,58,13,"CALLBACK_TYPE"],[71,25,58,26],[71,26,58,26,"CALLBACK_TYPE"],[71,39,58,26],[71,40,58,27,"TOUCHES_CANCELLED"],[71,57,58,44],[72,6,59,2],[73,6,60,2],[73,13,60,9,"CALLBACK_TYPE"],[73,21,60,22],[73,22,60,22,"CALLBACK_TYPE"],[73,35,60,22],[73,36,60,23,"UNDEFINED"],[73,45,60,32],[74,4,61,0],[74,5,61,1],[75,4,61,1,"touchEventTypeToCallbackType"],[75,32,61,1],[75,33,61,1,"__closure"],[75,42,61,1],[76,6,61,1,"TouchEventType"],[76,20,61,1],[76,22,47,13,"TouchEventType"],[76,37,47,27],[76,38,47,27,"TouchEventType"],[76,52,47,27],[77,6,47,27,"CALLBACK_TYPE"],[77,19,47,27],[77,21,48,3,"CALLBACK_TYPE"],[77,29,48,16],[77,30,48,16,"CALLBACK_TYPE"],[78,4,48,16],[79,4,48,16,"touchEventTypeToCallbackType"],[79,32,48,16],[79,33,48,16,"__workletHash"],[79,46,48,16],[80,4,48,16,"touchEventTypeToCallbackType"],[80,32,48,16],[80,33,48,16,"__initData"],[80,43,48,16],[80,46,48,16,"_worklet_14903447069497_init_data"],[80,79,48,16],[81,4,48,16,"touchEventTypeToCallbackType"],[81,32,48,16],[81,33,48,16,"__stackDetails"],[81,47,48,16],[81,50,48,16,"_e"],[81,52,48,16],[82,4,48,16],[82,11,48,16,"touchEventTypeToCallbackType"],[82,39,48,16],[83,2,48,16],[83,3,46,0],[84,2,46,0],[84,6,46,0,"_worklet_10526057831000_init_data"],[84,39,46,0],[85,4,46,0,"code"],[85,8,46,0],[86,4,46,0,"location"],[86,12,46,0],[87,4,46,0,"sourceMap"],[87,13,46,0],[88,4,46,0,"version"],[88,11,46,0],[89,2,46,0],[90,2,46,0],[90,6,46,0,"runWorklet"],[90,16,46,0],[90,19,63,0],[91,4,63,0],[91,8,63,0,"_e"],[91,10,63,0],[91,18,63,0,"global"],[91,24,63,0],[91,25,63,0,"Error"],[91,30,63,0],[92,4,63,0],[92,8,63,0,"runWorklet"],[92,18,63,0],[92,30,63,0,"runWorklet"],[92,31,64,2,"type"],[92,35,64,21],[92,37,65,2,"gesture"],[92,44,65,52],[92,46,66,2,"event"],[92,51,66,73],[92,53,68,2],[93,6,70,2],[93,10,70,8,"handler"],[93,17,70,15],[93,20,70,18,"getHandler"],[93,30,70,28],[93,31,70,29,"type"],[93,35,70,33],[93,37,70,35,"gesture"],[93,44,70,42],[93,45,70,43],[94,6,71,2],[94,10,71,6,"gesture"],[94,17,71,13],[94,18,71,14,"isWorklet"],[94,27,71,23],[94,28,71,24,"type"],[94,32,71,28],[94,33,71,29],[94,35,71,31],[95,8,71,31],[95,17,71,31,"_len"],[95,21,71,31],[95,24,71,31,"arguments"],[95,33,71,31],[95,34,71,31,"length"],[95,40,71,31],[95,42,67,5,"args"],[95,46,67,9],[95,53,67,9,"Array"],[95,58,67,9],[95,59,67,9,"_len"],[95,63,67,9],[95,70,67,9,"_len"],[95,74,67,9],[95,85,67,9,"_key"],[95,89,67,9],[95,95,67,9,"_key"],[95,99,67,9],[95,102,67,9,"_len"],[95,106,67,9],[95,108,67,9,"_key"],[95,112,67,9],[96,10,67,5,"args"],[96,14,67,9],[96,15,67,9,"_key"],[96,19,67,9],[96,27,67,9,"arguments"],[96,36,67,9],[96,37,67,9,"_key"],[96,41,67,9],[97,8,67,9],[98,8,72,4],[99,8,73,4],[100,8,74,4,"handler"],[100,15,74,11],[100,18,74,14,"event"],[100,23,74,19],[100,25,74,21],[100,28,74,24,"args"],[100,32,74,28],[100,33,74,29],[101,6,75,2],[101,7,75,3],[101,13,75,9],[101,17,75,13,"handler"],[101,24,75,20],[101,26,75,22],[102,8,76,4,"console"],[102,15,76,11],[102,16,76,12,"warn"],[102,20,76,16],[102,21,76,17],[102,25,76,17,"tagMessage"],[102,31,76,27],[102,32,76,27,"tagMessage"],[102,42,76,27],[102,44,76,28],[102,89,76,73],[102,90,76,74],[102,91,76,75],[103,6,77,2],[104,4,78,0],[104,5,78,1],[105,4,78,1,"runWorklet"],[105,14,78,1],[105,15,78,1,"__closure"],[105,24,78,1],[106,6,78,1,"getHandler"],[106,16,78,1],[107,6,78,1,"tagMessage"],[107,16,78,1],[107,18,76,17,"tagMessage"],[107,24,76,27],[107,25,76,27,"tagMessage"],[108,4,76,27],[109,4,76,27,"runWorklet"],[109,14,76,27],[109,15,76,27,"__workletHash"],[109,28,76,27],[110,4,76,27,"runWorklet"],[110,14,76,27],[110,15,76,27,"__initData"],[110,25,76,27],[110,28,76,27,"_worklet_10526057831000_init_data"],[110,61,76,27],[111,4,76,27,"runWorklet"],[111,14,76,27],[111,15,76,27,"__stackDetails"],[111,29,76,27],[111,32,76,27,"_e"],[111,34,76,27],[112,4,76,27],[112,11,76,27,"runWorklet"],[112,21,76,27],[113,2,76,27],[113,3,63,0],[114,2,63,0],[114,6,63,0,"_worklet_1443917263962_init_data"],[114,38,63,0],[115,4,63,0,"code"],[115,8,63,0],[116,4,63,0,"location"],[116,12,63,0],[117,4,63,0,"sourceMap"],[117,13,63,0],[118,4,63,0,"version"],[118,11,63,0],[119,2,63,0],[120,2,63,0],[120,6,63,0,"isStateChangeEvent"],[120,24,63,0],[120,27,80,0],[121,4,80,0],[121,8,80,0,"_e"],[121,10,80,0],[121,18,80,0,"global"],[121,24,80,0],[121,25,80,0,"Error"],[121,30,80,0],[122,4,80,0],[122,8,80,0,"isStateChangeEvent"],[122,26,80,0],[122,38,80,0,"isStateChangeEvent"],[122,39,81,2,"event"],[122,44,81,73],[122,46,82,36],[123,6,84,2],[124,6,85,2],[124,13,85,9,"event"],[124,18,85,14],[124,19,85,15,"oldState"],[124,27,85,23],[124,31,85,27],[124,35,85,31],[125,4,86,0],[125,5,86,1],[126,4,86,1,"isStateChangeEvent"],[126,22,86,1],[126,23,86,1,"__closure"],[126,32,86,1],[127,4,86,1,"isStateChangeEvent"],[127,22,86,1],[127,23,86,1,"__workletHash"],[127,36,86,1],[128,4,86,1,"isStateChangeEvent"],[128,22,86,1],[128,23,86,1,"__initData"],[128,33,86,1],[128,36,86,1,"_worklet_1443917263962_init_data"],[128,68,86,1],[129,4,86,1,"isStateChangeEvent"],[129,22,86,1],[129,23,86,1,"__stackDetails"],[129,37,86,1],[129,40,86,1,"_e"],[129,42,86,1],[130,4,86,1],[130,11,86,1,"isStateChangeEvent"],[130,29,86,1],[131,2,86,1],[131,3,80,0],[132,2,80,0],[132,6,80,0,"_worklet_15574765637067_init_data"],[132,39,80,0],[133,4,80,0,"code"],[133,8,80,0],[134,4,80,0,"location"],[134,12,80,0],[135,4,80,0,"sourceMap"],[135,13,80,0],[136,4,80,0,"version"],[136,11,80,0],[137,2,80,0],[138,2,80,0],[138,6,80,0,"isTouchEvent"],[138,18,80,0],[138,21,88,0],[139,4,88,0],[139,8,88,0,"_e"],[139,10,88,0],[139,18,88,0,"global"],[139,24,88,0],[139,25,88,0,"Error"],[139,30,88,0],[140,4,88,0],[140,8,88,0,"isTouchEvent"],[140,20,88,0],[140,32,88,0,"isTouchEvent"],[140,33,89,2,"event"],[140,38,89,73],[140,40,90,30],[141,6,92,2],[141,13,92,9,"event"],[141,18,92,14],[141,19,92,15,"eventType"],[141,28,92,24],[141,32,92,28],[141,36,92,32],[142,4,93,0],[142,5,93,1],[143,4,93,1,"isTouchEvent"],[143,16,93,1],[143,17,93,1,"__closure"],[143,26,93,1],[144,4,93,1,"isTouchEvent"],[144,16,93,1],[144,17,93,1,"__workletHash"],[144,30,93,1],[145,4,93,1,"isTouchEvent"],[145,16,93,1],[145,17,93,1,"__initData"],[145,27,93,1],[145,30,93,1,"_worklet_15574765637067_init_data"],[145,63,93,1],[146,4,93,1,"isTouchEvent"],[146,16,93,1],[146,17,93,1,"__stackDetails"],[146,31,93,1],[146,34,93,1,"_e"],[146,36,93,1],[147,4,93,1],[147,11,93,1,"isTouchEvent"],[147,23,93,1],[148,2,93,1],[148,3,88,0],[149,2,88,0],[149,6,88,0,"_worklet_10458000393606_init_data"],[149,39,88,0],[150,4,88,0,"code"],[150,8,88,0],[151,4,88,0,"location"],[151,12,88,0],[152,4,88,0,"sourceMap"],[152,13,88,0],[153,4,88,0,"version"],[153,11,88,0],[154,2,88,0],[155,2,95,7],[155,11,95,16,"useAnimatedGesture"],[155,29,95,34,"useAnimatedGesture"],[155,30,96,2,"preparedGesture"],[155,45,96,39],[155,47,97,2,"needsRebuild"],[155,59,97,23],[155,61,98,2],[156,4,99,2],[156,8,99,6],[156,9,99,7,"Reanimated"],[156,27,99,17],[156,28,99,17,"Reanimated"],[156,38,99,17],[156,40,99,19],[157,6,100,4],[158,4,101,2],[160,4,103,2],[161,4,104,2],[162,4,105,2],[163,4,106,2],[163,8,106,8,"sharedHandlersCallbacks"],[163,31,106,31],[163,34,106,34,"Reanimated"],[163,52,106,44],[163,53,106,44,"Reanimated"],[163,63,106,44],[163,64,106,45,"useSharedValue"],[163,78,106,59],[163,79,108,4],[163,83,108,8],[163,84,108,9],[165,4,110,2],[166,4,111,2],[166,8,111,8,"lastUpdateEvent"],[166,23,111,23],[166,26,111,26,"Reanimated"],[166,44,111,36],[166,45,111,36,"Reanimated"],[166,55,111,36],[166,56,111,37,"useSharedValue"],[166,70,111,51],[166,71,113,4],[166,73,113,6],[166,74,113,7],[168,4,115,2],[169,4,116,2],[169,8,116,8,"stateControllers"],[169,24,116,51],[169,27,116,54],[169,29,116,56],[170,4,118,2],[170,8,118,8,"callback"],[170,16,118,16],[170,19,118,19],[171,6,118,19],[171,10,118,19,"_e"],[171,12,118,19],[171,20,118,19,"global"],[171,26,118,19],[171,27,118,19,"Error"],[171,32,118,19],[172,6,118,19],[172,10,118,19,"reactNativeGestureHandler_useAnimatedGestureTs6"],[172,57,118,19],[172,69,118,19,"reactNativeGestureHandler_useAnimatedGestureTs6"],[172,70,119,4,"event"],[172,75,119,75],[172,77,120,7],[173,8,123,4],[173,12,123,10,"currentCallback"],[173,27,123,25],[173,30,123,28,"sharedHandlersCallbacks"],[173,53,123,51],[173,54,123,52,"value"],[173,59,123,57],[174,8,124,4],[174,12,124,8],[174,13,124,9,"currentCallback"],[174,28,124,24],[174,30,124,26],[175,10,125,6],[176,8,126,4],[177,8,128,4],[177,13,128,9],[177,17,128,13,"i"],[177,18,128,14],[177,21,128,17],[177,22,128,18],[177,24,128,20,"i"],[177,25,128,21],[177,28,128,24,"currentCallback"],[177,43,128,39],[177,44,128,40,"length"],[177,50,128,46],[177,52,128,48,"i"],[177,53,128,49],[177,55,128,51],[177,57,128,53],[178,10,129,6],[178,14,129,12,"gesture"],[178,21,129,19],[178,24,129,22,"currentCallback"],[178,39,129,37],[178,40,129,38,"i"],[178,41,129,39],[178,42,129,40],[179,10,131,6],[179,14,131,10,"event"],[179,19,131,15],[179,20,131,16,"handlerTag"],[179,30,131,26],[179,35,131,31,"gesture"],[179,42,131,38],[179,43,131,39,"handlerTag"],[179,53,131,49],[179,55,131,51],[180,12,132,8],[181,10,133,6],[182,10,135,6],[182,14,135,10,"isStateChangeEvent"],[182,32,135,28],[182,33,135,29,"event"],[182,38,135,34],[182,39,135,35],[182,41,135,37],[183,12,136,8],[183,16,137,10,"event"],[183,21,137,15],[183,22,137,16,"oldState"],[183,30,137,24],[183,35,137,29,"State"],[183,41,137,34],[183,42,137,34,"State"],[183,47,137,34],[183,48,137,35,"UNDETERMINED"],[183,60,137,47],[183,64,138,10,"event"],[183,69,138,15],[183,70,138,16,"state"],[183,75,138,21],[183,80,138,26,"State"],[183,86,138,31],[183,87,138,31,"State"],[183,92,138,31],[183,93,138,32,"BEGAN"],[183,98,138,37],[183,100,139,10],[184,14,140,10,"runWorklet"],[184,24,140,20],[184,25,140,21,"CALLBACK_TYPE"],[184,33,140,34],[184,34,140,34,"CALLBACK_TYPE"],[184,47,140,34],[184,48,140,35,"BEGAN"],[184,53,140,40],[184,55,140,42,"gesture"],[184,62,140,49],[184,64,140,51,"event"],[184,69,140,56],[184,70,140,57],[185,12,141,8],[185,13,141,9],[185,19,141,15],[185,23,142,10],[185,24,142,11,"event"],[185,29,142,16],[185,30,142,17,"oldState"],[185,38,142,25],[185,43,142,30,"State"],[185,49,142,35],[185,50,142,35,"State"],[185,55,142,35],[185,56,142,36,"BEGAN"],[185,61,142,41],[185,65,143,12,"event"],[185,70,143,17],[185,71,143,18,"oldState"],[185,79,143,26],[185,84,143,31,"State"],[185,90,143,36],[185,91,143,36,"State"],[185,96,143,36],[185,97,143,37,"UNDETERMINED"],[185,109,143,49],[185,114,144,10,"event"],[185,119,144,15],[185,120,144,16,"state"],[185,125,144,21],[185,130,144,26,"State"],[185,136,144,31],[185,137,144,31,"State"],[185,142,144,31],[185,143,144,32,"ACTIVE"],[185,149,144,38],[185,151,145,10],[186,14,146,10,"runWorklet"],[186,24,146,20],[186,25,146,21,"CALLBACK_TYPE"],[186,33,146,34],[186,34,146,34,"CALLBACK_TYPE"],[186,47,146,34],[186,48,146,35,"START"],[186,53,146,40],[186,55,146,42,"gesture"],[186,62,146,49],[186,64,146,51,"event"],[186,69,146,56],[186,70,146,57],[187,14,147,10,"lastUpdateEvent"],[187,29,147,25],[187,30,147,26,"value"],[187,35,147,31],[187,36,147,32,"gesture"],[187,43,147,39],[187,44,147,40,"handlerTag"],[187,54,147,50],[187,55,147,51],[187,58,147,54,"undefined"],[187,67,147,63],[188,12,148,8],[188,13,148,9],[188,19,148,15],[188,23,149,10,"event"],[188,28,149,15],[188,29,149,16,"oldState"],[188,37,149,24],[188,42,149,29,"event"],[188,47,149,34],[188,48,149,35,"state"],[188,53,149,40],[188,57,150,10,"event"],[188,62,150,15],[188,63,150,16,"state"],[188,68,150,21],[188,73,150,26,"State"],[188,79,150,31],[188,80,150,31,"State"],[188,85,150,31],[188,86,150,32,"END"],[188,89,150,35],[188,91,151,10],[189,14,152,10],[189,18,152,14,"event"],[189,23,152,19],[189,24,152,20,"oldState"],[189,32,152,28],[189,37,152,33,"State"],[189,43,152,38],[189,44,152,38,"State"],[189,49,152,38],[189,50,152,39,"ACTIVE"],[189,56,152,45],[189,58,152,47],[190,16,153,12,"runWorklet"],[190,26,153,22],[190,27,153,23,"CALLBACK_TYPE"],[190,35,153,36],[190,36,153,36,"CALLBACK_TYPE"],[190,49,153,36],[190,50,153,37,"END"],[190,53,153,40],[190,55,153,42,"gesture"],[190,62,153,49],[190,64,153,51,"event"],[190,69,153,56],[190,71,153,58],[190,75,153,62],[190,76,153,63],[191,14,154,10],[192,14,155,10,"runWorklet"],[192,24,155,20],[192,25,155,21,"CALLBACK_TYPE"],[192,33,155,34],[192,34,155,34,"CALLBACK_TYPE"],[192,47,155,34],[192,48,155,35,"FINALIZE"],[192,56,155,43],[192,58,155,45,"gesture"],[192,65,155,52],[192,67,155,54,"event"],[192,72,155,59],[192,74,155,61],[192,78,155,65],[192,79,155,66],[193,12,156,8],[193,13,156,9],[193,19,156,15],[193,23,157,10],[193,24,157,11,"event"],[193,29,157,16],[193,30,157,17,"state"],[193,35,157,22],[193,40,157,27,"State"],[193,46,157,32],[193,47,157,32,"State"],[193,52,157,32],[193,53,157,33,"FAILED"],[193,59,157,39],[193,63,157,43,"event"],[193,68,157,48],[193,69,157,49,"state"],[193,74,157,54],[193,79,157,59,"State"],[193,85,157,64],[193,86,157,64,"State"],[193,91,157,64],[193,92,157,65,"CANCELLED"],[193,101,157,74],[193,106,158,10,"event"],[193,111,158,15],[193,112,158,16,"state"],[193,117,158,21],[193,122,158,26,"event"],[193,127,158,31],[193,128,158,32,"oldState"],[193,136,158,40],[193,138,159,10],[194,14,160,10],[194,18,160,14,"event"],[194,23,160,19],[194,24,160,20,"oldState"],[194,32,160,28],[194,37,160,33,"State"],[194,43,160,38],[194,44,160,38,"State"],[194,49,160,38],[194,50,160,39,"ACTIVE"],[194,56,160,45],[194,58,160,47],[195,16,161,12,"runWorklet"],[195,26,161,22],[195,27,161,23,"CALLBACK_TYPE"],[195,35,161,36],[195,36,161,36,"CALLBACK_TYPE"],[195,49,161,36],[195,50,161,37,"END"],[195,53,161,40],[195,55,161,42,"gesture"],[195,62,161,49],[195,64,161,51,"event"],[195,69,161,56],[195,71,161,58],[195,76,161,63],[195,77,161,64],[196,14,162,10],[197,14,163,10,"runWorklet"],[197,24,163,20],[197,25,163,21,"CALLBACK_TYPE"],[197,33,163,34],[197,34,163,34,"CALLBACK_TYPE"],[197,47,163,34],[197,48,163,35,"FINALIZE"],[197,56,163,43],[197,58,163,45,"gesture"],[197,65,163,52],[197,67,163,54,"event"],[197,72,163,59],[197,74,163,61],[197,79,163,66],[197,80,163,67],[198,12,164,8],[199,10,165,6],[199,11,165,7],[199,17,165,13],[199,21,165,17,"isTouchEvent"],[199,33,165,29],[199,34,165,30,"event"],[199,39,165,35],[199,40,165,36],[199,42,165,38],[200,12,166,8],[200,16,166,12],[200,17,166,13,"stateControllers"],[200,33,166,29],[200,34,166,30,"i"],[200,35,166,31],[200,36,166,32],[200,38,166,34],[201,14,167,10,"stateControllers"],[201,30,167,26],[201,31,167,27,"i"],[201,32,167,28],[201,33,167,29],[201,36,167,32,"GestureStateManager"],[201,56,167,51],[201,57,167,51,"GestureStateManager"],[201,76,167,51],[201,77,167,52,"create"],[201,83,167,58],[201,84,167,59,"event"],[201,89,167,64],[201,90,167,65,"handlerTag"],[201,100,167,75],[201,101,167,76],[202,12,168,8],[203,12,170,8],[203,16,170,12,"event"],[203,21,170,17],[203,22,170,18,"eventType"],[203,31,170,27],[203,36,170,32,"TouchEventType"],[203,51,170,46],[203,52,170,46,"TouchEventType"],[203,66,170,46],[203,67,170,47,"UNDETERMINED"],[203,79,170,59],[203,81,170,61],[204,14,171,10,"runWorklet"],[204,24,171,20],[204,25,172,12,"touchEventTypeToCallbackType"],[204,53,172,40],[204,54,172,41,"event"],[204,59,172,46],[204,60,172,47,"eventType"],[204,69,172,56],[204,70,172,57],[204,72,173,12,"gesture"],[204,79,173,19],[204,81,174,12,"event"],[204,86,174,17],[204,88,175,12,"stateControllers"],[204,104,175,28],[204,105,175,29,"i"],[204,106,175,30],[204,107,176,10],[204,108,176,11],[205,12,177,8],[206,10,178,6],[206,11,178,7],[206,17,178,13],[207,12,179,8,"runWorklet"],[207,22,179,18],[207,23,179,19,"CALLBACK_TYPE"],[207,31,179,32],[207,32,179,32,"CALLBACK_TYPE"],[207,45,179,32],[207,46,179,33,"UPDATE"],[207,52,179,39],[207,54,179,41,"gesture"],[207,61,179,48],[207,63,179,50,"event"],[207,68,179,55],[207,69,179,56],[208,12,181,8],[208,16,181,12,"gesture"],[208,23,181,19],[208,24,181,20,"onChange"],[208,32,181,28],[208,36,181,32,"gesture"],[208,43,181,39],[208,44,181,40,"changeEventCalculator"],[208,65,181,61],[208,67,181,63],[209,14,182,10,"runWorklet"],[209,24,182,20],[209,25,183,12,"CALLBACK_TYPE"],[209,33,183,25],[209,34,183,25,"CALLBACK_TYPE"],[209,47,183,25],[209,48,183,26,"CHANGE"],[209,54,183,32],[209,56,184,12,"gesture"],[209,63,184,19],[209,65,185,12,"gesture"],[209,72,185,19],[209,73,185,20,"changeEventCalculator"],[209,94,185,41],[209,97,186,14,"event"],[209,102,186,19],[209,104,187,14,"lastUpdateEvent"],[209,119,187,29],[209,120,187,30,"value"],[209,125,187,35],[209,126,187,36,"gesture"],[209,133,187,43],[209,134,187,44,"handlerTag"],[209,144,187,54],[209,145,188,12],[209,146,189,10],[209,147,189,11],[210,14,191,10,"lastUpdateEvent"],[210,29,191,25],[210,30,191,26,"value"],[210,35,191,31],[210,36,191,32,"gesture"],[210,43,191,39],[210,44,191,40,"handlerTag"],[210,54,191,50],[210,55,191,51],[210,58,191,54,"event"],[210,63,191,59],[211,12,192,8],[212,10,193,6],[213,8,194,4],[214,6,195,2],[214,7,195,3],[215,6,195,3,"reactNativeGestureHandler_useAnimatedGestureTs6"],[215,53,195,3],[215,54,195,3,"__closure"],[215,63,195,3],[216,8,195,3,"sharedHandlersCallbacks"],[216,31,195,3],[217,8,195,3,"isStateChangeEvent"],[217,26,195,3],[218,8,195,3,"State"],[218,13,195,3],[218,15,137,29,"State"],[218,21,137,34],[218,22,137,34,"State"],[218,27,137,34],[219,8,137,34,"runWorklet"],[219,18,137,34],[220,8,137,34,"CALLBACK_TYPE"],[220,21,137,34],[220,23,140,21,"CALLBACK_TYPE"],[220,31,140,34],[220,32,140,34,"CALLBACK_TYPE"],[220,45,140,34],[221,8,140,34,"lastUpdateEvent"],[221,23,140,34],[222,8,140,34,"isTouchEvent"],[222,20,140,34],[223,8,140,34,"stateControllers"],[223,24,140,34],[224,8,140,34,"GestureStateManager"],[224,27,140,34],[224,29,167,32,"GestureStateManager"],[224,49,167,51],[224,50,167,51,"GestureStateManager"],[224,69,167,51],[225,8,167,51,"TouchEventType"],[225,22,167,51],[225,24,170,32,"TouchEventType"],[225,39,170,46],[225,40,170,46,"TouchEventType"],[225,54,170,46],[226,8,170,46,"touchEventTypeToCallbackType"],[227,6,170,46],[228,6,170,46,"reactNativeGestureHandler_useAnimatedGestureTs6"],[228,53,170,46],[228,54,170,46,"__workletHash"],[228,67,170,46],[229,6,170,46,"reactNativeGestureHandler_useAnimatedGestureTs6"],[229,53,170,46],[229,54,170,46,"__initData"],[229,64,170,46],[229,67,170,46,"_worklet_10458000393606_init_data"],[229,100,170,46],[230,6,170,46,"reactNativeGestureHandler_useAnimatedGestureTs6"],[230,53,170,46],[230,54,170,46,"__stackDetails"],[230,68,170,46],[230,71,170,46,"_e"],[230,73,170,46],[231,6,170,46],[231,13,170,46,"reactNativeGestureHandler_useAnimatedGestureTs6"],[231,60,170,46],[232,4,170,46],[232,5,118,19],[232,7,195,3],[234,4,197,2],[235,4,198,2],[235,8,198,8,"event"],[235,13,198,13],[235,16,198,16,"Reanimated"],[235,34,198,26],[235,35,198,26,"Reanimated"],[235,45,198,26],[235,46,198,27,"useEvent"],[235,54,198,35],[235,55,199,4,"callback"],[235,63,199,12],[235,65,200,4],[235,66,200,5],[235,95,200,34],[235,97,200,36],[235,120,200,59],[235,121,200,60],[235,123,201,4,"needsRebuild"],[235,135,202,2],[235,136,202,3],[236,4,204,2,"preparedGesture"],[236,19,204,17],[236,20,204,18,"animatedEventHandler"],[236,40,204,38],[236,43,204,41,"event"],[236,48,204,46],[237,4,205,2,"preparedGesture"],[237,19,205,17],[237,20,205,18,"animatedHandlers"],[237,36,205,34],[237,39,205,37,"sharedHandlersCallbacks"],[237,62,205,60],[238,2,206,0],[239,0,206,1],[239,3]],"functionMap":{"names":["<global>","getHandler","touchEventTypeToCallbackType","runWorklet","isStateChangeEvent","isTouchEvent","useAnimatedGesture","callback"],"mappings":"AAA;ACgB;CD2B;AEE;CFe;AGE;CHe;AIE;CJM;AKE;CLK;OME;mBCuB;GD6E;CNW"},"hasCjsExports":false},"type":"js/module"}]}