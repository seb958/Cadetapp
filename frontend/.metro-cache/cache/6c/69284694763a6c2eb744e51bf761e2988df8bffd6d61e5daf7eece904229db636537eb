{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":63},"end":{"line":4,"column":87,"index":150}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":192},"end":{"line":6,"column":53,"index":245}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ=","exportNames":["*"],"imports":1}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":246},"end":{"line":7,"column":43,"index":289}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE=","exportNames":["*"],"imports":1}},{"name":"../../../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":290},"end":{"line":8,"column":83,"index":373}}],"key":"v6b9cfauRqYeWu9wWOEUTyMIHSA=","exportNames":["*"],"imports":1}},{"name":"./useAnimatedGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":374},"end":{"line":9,"column":58,"index":432}}],"key":"2qsvw/0Wn5ZQ0k+d9VbJV8PW2us=","exportNames":["*"],"imports":1}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":433},"end":{"line":10,"column":50,"index":483}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0=","exportNames":["*"],"imports":1}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":484},"end":{"line":11,"column":52,"index":536}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo=","exportNames":["*"],"imports":1}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":537},"end":{"line":12,"column":46,"index":583}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":584},"end":{"line":13,"column":46,"index":630}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"./Wrap","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":631},"end":{"line":14,"column":44,"index":675}}],"key":"3O9fTt6BDgaEKEy9t1chSR0HFNQ=","exportNames":["*"],"imports":1}},{"name":"./useDetectorUpdater","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":676},"end":{"line":15,"column":58,"index":734}}],"key":"707zRwYZ3uzpHSm+Rwc2R1MvfJw=","exportNames":["*"],"imports":1}},{"name":"./useViewRefHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":735},"end":{"line":16,"column":56,"index":791}}],"key":"tm4O9dzaDCUn7KS1TB05c8nzNaA=","exportNames":["*"],"imports":1}},{"name":"./useMountReactions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":792},"end":{"line":17,"column":56,"index":848}}],"key":"PrdD1p6YXRuOP5neQrVF/37n7P4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":849},"end":{"line":18,"column":48,"index":897}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* eslint-disable react/no-unused-prop-types */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"GestureDetector\", {\n    enumerable: true,\n    get: function () {\n      return GestureDetector;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _findNodeHandle = require(_dependencyMap[2], \"../../../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils = require(_dependencyMap[3], \"../../../utils\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[4], \"../../../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _useAnimatedGesture = require(_dependencyMap[5], \"./useAnimatedGesture\");\n  var _attachHandlers = require(_dependencyMap[6], \"./attachHandlers\");\n  var _needsToReattach = require(_dependencyMap[7], \"./needsToReattach\");\n  var _dropHandlers = require(_dependencyMap[8], \"./dropHandlers\");\n  var _utils2 = require(_dependencyMap[9], \"./utils\");\n  var _Wrap = require(_dependencyMap[10], \"./Wrap\");\n  var _useDetectorUpdater = require(_dependencyMap[11], \"./useDetectorUpdater\");\n  var _useViewRefHandler = require(_dependencyMap[12], \"./useViewRefHandler\");\n  var _useMountReactions = require(_dependencyMap[13], \"./useMountReactions\");\n  var _reactJsxRuntime = require(_dependencyMap[14], \"react/jsx-runtime\");\n  function propagateDetectorConfig(props, gesture) {\n    const keysToPropagate = ['userSelect', 'enableContextMenu', 'touchAction'];\n    for (const key of keysToPropagate) {\n      const value = props[key];\n      if (value === undefined) {\n        continue;\n      }\n      for (const g of gesture.toGestureArray()) {\n        const config = g.config;\n        config[key] = value;\n      }\n    }\n  }\n  /**\n   * `GestureDetector` is responsible for creating and updating native gesture handlers based on the config of provided gesture.\n   *\n   * ### Props\n   * - `gesture`\n   * - `userSelect` (**Web only**)\n   * - `enableContextMenu` (**Web only**)\n   * - `touchAction` (**Web only**)\n   *\n   * ### Remarks\n   * - Gesture Detector will use first native view in its subtree to recognize gestures, however if this view is used only to group its children it may get automatically collapsed.\n   * - Using the same instance of a gesture across multiple Gesture Detectors is not possible.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture-detector\n   */\n  const GestureDetector = props => {\n    const rootViewContext = (0, _react.useContext)(GestureHandlerRootViewContext.default);\n    if (__DEV__ && !rootViewContext && !(0, _utils.isTestEnv)() && Platform.default.OS !== 'web') {\n      throw new Error('GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n    }\n\n    // Gesture config should be wrapped with useMemo to prevent unnecessary re-renders\n    const gestureConfig = props.gesture;\n    propagateDetectorConfig(props, gestureConfig);\n    const gesturesToAttach = (0, _react.useMemo)(() => gestureConfig.toGestureArray(), [gestureConfig]);\n    const shouldUseReanimated = gesturesToAttach.some(g => g.shouldUseReanimated);\n    const webEventHandlersRef = (0, _utils2.useWebEventHandlers)();\n    // Store state in ref to prevent unnecessary renders\n    const state = (0, _react.useRef)({\n      firstRender: true,\n      viewRef: null,\n      previousViewTag: -1,\n      forceRebuildReanimatedEvent: false\n    }).current;\n    const preparedGesture = React.default.useRef({\n      attachedGestures: [],\n      animatedEventHandler: null,\n      animatedHandlers: null,\n      shouldUseReanimated: shouldUseReanimated,\n      isMounted: false\n    }).current;\n    const updateAttachedGestures = (0, _useDetectorUpdater.useDetectorUpdater)(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef);\n    const refHandler = (0, _useViewRefHandler.useViewRefHandler)(state, updateAttachedGestures);\n\n    // Reanimated event should be rebuilt only when gestures are reattached, otherwise\n    // config update will be enough as all necessary items are stored in shared values anyway\n    const needsToRebuildReanimatedEvent = state.firstRender || state.forceRebuildReanimatedEvent || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach);\n    state.forceRebuildReanimatedEvent = false;\n    (0, _useAnimatedGesture.useAnimatedGesture)(preparedGesture, needsToRebuildReanimatedEvent);\n    (0, _react.useLayoutEffect)(() => {\n      const viewTag = (0, findNodeHandle.default)(state.viewRef);\n      preparedGesture.isMounted = true;\n      (0, _attachHandlers.attachHandlers)({\n        preparedGesture,\n        gestureConfig,\n        gesturesToAttach,\n        webEventHandlersRef,\n        viewTag\n      });\n      return () => {\n        preparedGesture.isMounted = false;\n        (0, _dropHandlers.dropHandlers)(preparedGesture);\n      };\n    }, []);\n    (0, _react.useEffect)(() => {\n      if (state.firstRender) {\n        state.firstRender = false;\n      } else {\n        updateAttachedGestures();\n      }\n    }, [props]);\n    (0, _useMountReactions.useMountReactions)(updateAttachedGestures, preparedGesture);\n    if (shouldUseReanimated) {\n      return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_Wrap.AnimatedWrap, {\n        ref: refHandler,\n        onGestureHandlerEvent: preparedGesture.animatedEventHandler,\n        children: props.children\n      });\n    } else {\n      return /*#__PURE__*/(0, _reactJsxRuntime.jsx)(_Wrap.Wrap, {\n        ref: refHandler,\n        children: props.children\n      });\n    }\n  };\n});","lineCount":136,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,3,0],[8,11,3,0,"_interopDefault"],[8,27,3,0,"e"],[8,28,3,0],[9,4,3,0],[9,11,3,0,"e"],[9,12,3,0],[9,16,3,0,"e"],[9,17,3,0],[9,18,3,0,"__esModule"],[9,28,3,0],[9,31,3,0,"e"],[9,32,3,0],[10,6,3,0,"default"],[10,13,3,0],[10,15,3,0,"e"],[11,4,3,0],[12,2,3,0],[13,2,47,0,"Object"],[13,8,47,0],[13,9,47,0,"defineProperty"],[13,23,47,0],[13,24,47,0,"exports"],[13,31,47,0],[14,4,47,0,"enumerable"],[14,14,47,0],[15,4,47,0,"get"],[15,7,47,0],[15,18,47,0,"get"],[15,19,47,0],[16,6,47,0],[16,13,47,0,"GestureDetector"],[16,28,47,0],[17,4,47,0],[18,2,47,0],[19,2,4,0],[19,6,4,0,"_react"],[19,12,4,0],[19,15,4,0,"require"],[19,22,4,0],[19,23,4,0,"_dependencyMap"],[19,37,4,0],[20,2,4,0],[20,6,4,0,"React"],[20,11,4,0],[20,14,4,0,"_interopDefault"],[20,29,4,0],[20,30,4,0,"_react"],[20,36,4,0],[21,2,4,87],[21,6,4,87,"_reactNativeWebDistExportsPlatform"],[21,40,4,87],[21,43,4,87,"require"],[21,50,4,87],[21,51,4,87,"_dependencyMap"],[21,65,4,87],[22,2,4,87],[22,6,4,87,"Platform"],[22,14,4,87],[22,17,4,87,"_interopDefault"],[22,32,4,87],[22,33,4,87,"_reactNativeWebDistExportsPlatform"],[22,67,4,87],[23,2,6,0],[23,6,6,0,"_findNodeHandle"],[23,21,6,0],[23,24,6,0,"require"],[23,31,6,0],[23,32,6,0,"_dependencyMap"],[23,46,6,0],[24,2,6,0],[24,6,6,0,"findNodeHandle"],[24,20,6,0],[24,23,6,0,"_interopDefault"],[24,38,6,0],[24,39,6,0,"_findNodeHandle"],[24,54,6,0],[25,2,7,0],[25,6,7,0,"_utils"],[25,12,7,0],[25,15,7,0,"require"],[25,22,7,0],[25,23,7,0,"_dependencyMap"],[25,37,7,0],[26,2,8,0],[26,6,8,0,"_GestureHandlerRootViewContext"],[26,36,8,0],[26,39,8,0,"require"],[26,46,8,0],[26,47,8,0,"_dependencyMap"],[26,61,8,0],[27,2,8,0],[27,6,8,0,"GestureHandlerRootViewContext"],[27,35,8,0],[27,38,8,0,"_interopDefault"],[27,53,8,0],[27,54,8,0,"_GestureHandlerRootViewContext"],[27,84,8,0],[28,2,9,0],[28,6,9,0,"_useAnimatedGesture"],[28,25,9,0],[28,28,9,0,"require"],[28,35,9,0],[28,36,9,0,"_dependencyMap"],[28,50,9,0],[29,2,10,0],[29,6,10,0,"_attachHandlers"],[29,21,10,0],[29,24,10,0,"require"],[29,31,10,0],[29,32,10,0,"_dependencyMap"],[29,46,10,0],[30,2,11,0],[30,6,11,0,"_needsToReattach"],[30,22,11,0],[30,25,11,0,"require"],[30,32,11,0],[30,33,11,0,"_dependencyMap"],[30,47,11,0],[31,2,12,0],[31,6,12,0,"_dropHandlers"],[31,19,12,0],[31,22,12,0,"require"],[31,29,12,0],[31,30,12,0,"_dependencyMap"],[31,44,12,0],[32,2,13,0],[32,6,13,0,"_utils2"],[32,13,13,0],[32,16,13,0,"require"],[32,23,13,0],[32,24,13,0,"_dependencyMap"],[32,38,13,0],[33,2,14,0],[33,6,14,0,"_Wrap"],[33,11,14,0],[33,14,14,0,"require"],[33,21,14,0],[33,22,14,0,"_dependencyMap"],[33,36,14,0],[34,2,15,0],[34,6,15,0,"_useDetectorUpdater"],[34,25,15,0],[34,28,15,0,"require"],[34,35,15,0],[34,36,15,0,"_dependencyMap"],[34,50,15,0],[35,2,16,0],[35,6,16,0,"_useViewRefHandler"],[35,24,16,0],[35,27,16,0,"require"],[35,34,16,0],[35,35,16,0,"_dependencyMap"],[35,49,16,0],[36,2,17,0],[36,6,17,0,"_useMountReactions"],[36,24,17,0],[36,27,17,0,"require"],[36,34,17,0],[36,35,17,0,"_dependencyMap"],[36,49,17,0],[37,2,18,0],[37,6,18,0,"_reactJsxRuntime"],[37,22,18,0],[37,25,18,0,"require"],[37,32,18,0],[37,33,18,0,"_dependencyMap"],[37,47,18,0],[38,2,19,0],[38,11,19,9,"propagateDetectorConfig"],[38,34,19,32,"propagateDetectorConfig"],[38,35,19,33,"props"],[38,40,19,38],[38,42,19,40,"gesture"],[38,49,19,47],[38,51,19,49],[39,4,20,2],[39,10,20,8,"keysToPropagate"],[39,25,20,23],[39,28,20,26],[39,29,20,27],[39,41,20,39],[39,43,20,41],[39,62,20,60],[39,64,20,62],[39,77,20,75],[39,78,20,76],[40,4,21,2],[40,9,21,7],[40,15,21,13,"key"],[40,18,21,16],[40,22,21,20,"keysToPropagate"],[40,37,21,35],[40,39,21,37],[41,6,22,4],[41,12,22,10,"value"],[41,17,22,15],[41,20,22,18,"props"],[41,25,22,23],[41,26,22,24,"key"],[41,29,22,27],[41,30,22,28],[42,6,23,4],[42,10,23,8,"value"],[42,15,23,13],[42,20,23,18,"undefined"],[42,29,23,27],[42,31,23,29],[43,8,24,6],[44,6,25,4],[45,6,26,4],[45,11,26,9],[45,17,26,15,"g"],[45,18,26,16],[45,22,26,20,"gesture"],[45,29,26,27],[45,30,26,28,"toGestureArray"],[45,44,26,42],[45,45,26,43],[45,46,26,44],[45,48,26,46],[46,8,27,6],[46,14,27,12,"config"],[46,20,27,18],[46,23,27,21,"g"],[46,24,27,22],[46,25,27,23,"config"],[46,31,27,29],[47,8,28,6,"config"],[47,14,28,12],[47,15,28,13,"key"],[47,18,28,16],[47,19,28,17],[47,22,28,20,"value"],[47,27,28,25],[48,6,29,4],[49,4,30,2],[50,2,31,0],[51,2,32,0],[52,0,33,0],[53,0,34,0],[54,0,35,0],[55,0,36,0],[56,0,37,0],[57,0,38,0],[58,0,39,0],[59,0,40,0],[60,0,41,0],[61,0,42,0],[62,0,43,0],[63,0,44,0],[64,0,45,0],[65,0,46,0],[66,2,47,7],[66,8,47,13,"GestureDetector"],[66,23,47,28],[66,26,47,31,"props"],[66,31,47,36],[66,35,47,40],[67,4,48,2],[67,10,48,8,"rootViewContext"],[67,25,48,23],[67,28,48,26],[67,32,48,26,"useContext"],[67,38,48,36],[67,39,48,36,"useContext"],[67,49,48,36],[67,51,48,37,"GestureHandlerRootViewContext"],[67,80,48,66],[67,81,48,66,"default"],[67,88,48,66],[67,89,48,67],[68,4,49,2],[68,8,49,6,"__DEV__"],[68,15,49,13],[68,19,49,17],[68,20,49,18,"rootViewContext"],[68,35,49,33],[68,39,49,37],[68,40,49,38],[68,44,49,38,"isTestEnv"],[68,50,49,47],[68,51,49,47,"isTestEnv"],[68,60,49,47],[68,62,49,48],[68,63,49,49],[68,67,49,53,"Platform"],[68,75,49,61],[68,76,49,61,"default"],[68,83,49,61],[68,84,49,62,"OS"],[68,86,49,64],[68,91,49,69],[68,96,49,74],[68,98,49,76],[69,6,50,4],[69,12,50,10],[69,16,50,14,"Error"],[69,21,50,19],[69,22,50,20],[69,251,50,249],[69,252,50,250],[70,4,51,2],[72,4,53,2],[73,4,54,2],[73,10,54,8,"gestureConfig"],[73,23,54,21],[73,26,54,24,"props"],[73,31,54,29],[73,32,54,30,"gesture"],[73,39,54,37],[74,4,55,2,"propagateDetectorConfig"],[74,27,55,25],[74,28,55,26,"props"],[74,33,55,31],[74,35,55,33,"gestureConfig"],[74,48,55,46],[74,49,55,47],[75,4,56,2],[75,10,56,8,"gesturesToAttach"],[75,26,56,24],[75,29,56,27],[75,33,56,27,"useMemo"],[75,39,56,34],[75,40,56,34,"useMemo"],[75,47,56,34],[75,49,56,35],[75,55,56,41,"gestureConfig"],[75,68,56,54],[75,69,56,55,"toGestureArray"],[75,83,56,69],[75,84,56,70],[75,85,56,71],[75,87,56,73],[75,88,56,74,"gestureConfig"],[75,101,56,87],[75,102,56,88],[75,103,56,89],[76,4,57,2],[76,10,57,8,"shouldUseReanimated"],[76,29,57,27],[76,32,57,30,"gesturesToAttach"],[76,48,57,46],[76,49,57,47,"some"],[76,53,57,51],[76,54,57,52,"g"],[76,55,57,53],[76,59,57,57,"g"],[76,60,57,58],[76,61,57,59,"shouldUseReanimated"],[76,80,57,78],[76,81,57,79],[77,4,58,2],[77,10,58,8,"webEventHandlersRef"],[77,29,58,27],[77,32,58,30],[77,36,58,30,"useWebEventHandlers"],[77,43,58,49],[77,44,58,49,"useWebEventHandlers"],[77,63,58,49],[77,65,58,50],[77,66,58,51],[78,4,59,2],[79,4,60,2],[79,10,60,8,"state"],[79,15,60,13],[79,18,60,16],[79,22,60,16,"useRef"],[79,28,60,22],[79,29,60,22,"useRef"],[79,35,60,22],[79,37,60,23],[80,6,61,4,"firstRender"],[80,17,61,15],[80,19,61,17],[80,23,61,21],[81,6,62,4,"viewRef"],[81,13,62,11],[81,15,62,13],[81,19,62,17],[82,6,63,4,"previousViewTag"],[82,21,63,19],[82,23,63,21],[82,24,63,22],[82,25,63,23],[83,6,64,4,"forceRebuildReanimatedEvent"],[83,33,64,31],[83,35,64,33],[84,4,65,2],[84,5,65,3],[84,6,65,4],[84,7,65,5,"current"],[84,14,65,12],[85,4,66,2],[85,10,66,8,"preparedGesture"],[85,25,66,23],[85,28,66,26,"React"],[85,33,66,31],[85,34,66,31,"default"],[85,41,66,31],[85,42,66,32,"useRef"],[85,48,66,38],[85,49,66,39],[86,6,67,4,"attachedGestures"],[86,22,67,20],[86,24,67,22],[86,26,67,24],[87,6,68,4,"animatedEventHandler"],[87,26,68,24],[87,28,68,26],[87,32,68,30],[88,6,69,4,"animatedHandlers"],[88,22,69,20],[88,24,69,22],[88,28,69,26],[89,6,70,4,"shouldUseReanimated"],[89,25,70,23],[89,27,70,25,"shouldUseReanimated"],[89,46,70,44],[90,6,71,4,"isMounted"],[90,15,71,13],[90,17,71,15],[91,4,72,2],[91,5,72,3],[91,6,72,4],[91,7,72,5,"current"],[91,14,72,12],[92,4,73,2],[92,10,73,8,"updateAttachedGestures"],[92,32,73,30],[92,35,73,33],[92,39,73,33,"useDetectorUpdater"],[92,58,73,51],[92,59,73,51,"useDetectorUpdater"],[92,77,73,51],[92,79,73,52,"state"],[92,84,73,57],[92,86,73,59,"preparedGesture"],[92,101,73,74],[92,103,73,76,"gesturesToAttach"],[92,119,73,92],[92,121,73,94,"gestureConfig"],[92,134,73,107],[92,136,73,109,"webEventHandlersRef"],[92,155,73,128],[92,156,73,129],[93,4,74,2],[93,10,74,8,"refHandler"],[93,20,74,18],[93,23,74,21],[93,27,74,21,"useViewRefHandler"],[93,45,74,38],[93,46,74,38,"useViewRefHandler"],[93,63,74,38],[93,65,74,39,"state"],[93,70,74,44],[93,72,74,46,"updateAttachedGestures"],[93,94,74,68],[93,95,74,69],[95,4,76,2],[96,4,77,2],[97,4,78,2],[97,10,78,8,"needsToRebuildReanimatedEvent"],[97,39,78,37],[97,42,78,40,"state"],[97,47,78,45],[97,48,78,46,"firstRender"],[97,59,78,57],[97,63,78,61,"state"],[97,68,78,66],[97,69,78,67,"forceRebuildReanimatedEvent"],[97,96,78,94],[97,100,78,98],[97,104,78,98,"needsToReattach"],[97,120,78,113],[97,121,78,113,"needsToReattach"],[97,136,78,113],[97,138,78,114,"preparedGesture"],[97,153,78,129],[97,155,78,131,"gesturesToAttach"],[97,171,78,147],[97,172,78,148],[98,4,79,2,"state"],[98,9,79,7],[98,10,79,8,"forceRebuildReanimatedEvent"],[98,37,79,35],[98,40,79,38],[98,45,79,43],[99,4,80,2],[99,8,80,2,"useAnimatedGesture"],[99,27,80,20],[99,28,80,20,"useAnimatedGesture"],[99,46,80,20],[99,48,80,21,"preparedGesture"],[99,63,80,36],[99,65,80,38,"needsToRebuildReanimatedEvent"],[99,94,80,67],[99,95,80,68],[100,4,81,2],[100,8,81,2,"useLayoutEffect"],[100,14,81,17],[100,15,81,17,"useLayoutEffect"],[100,30,81,17],[100,32,81,18],[100,38,81,24],[101,6,82,4],[101,12,82,10,"viewTag"],[101,19,82,17],[101,22,82,20],[101,26,82,20,"findNodeHandle"],[101,40,82,34],[101,41,82,34,"default"],[101,48,82,34],[101,50,82,35,"state"],[101,55,82,40],[101,56,82,41,"viewRef"],[101,63,82,48],[101,64,82,49],[102,6,83,4,"preparedGesture"],[102,21,83,19],[102,22,83,20,"isMounted"],[102,31,83,29],[102,34,83,32],[102,38,83,36],[103,6,84,4],[103,10,84,4,"attachHandlers"],[103,25,84,18],[103,26,84,18,"attachHandlers"],[103,40,84,18],[103,42,84,19],[104,8,85,6,"preparedGesture"],[104,23,85,21],[105,8,86,6,"gestureConfig"],[105,21,86,19],[106,8,87,6,"gesturesToAttach"],[106,24,87,22],[107,8,88,6,"webEventHandlersRef"],[107,27,88,25],[108,8,89,6,"viewTag"],[109,6,90,4],[109,7,90,5],[109,8,90,6],[110,6,91,4],[110,13,91,11],[110,19,91,17],[111,8,92,6,"preparedGesture"],[111,23,92,21],[111,24,92,22,"isMounted"],[111,33,92,31],[111,36,92,34],[111,41,92,39],[112,8,93,6],[112,12,93,6,"dropHandlers"],[112,25,93,18],[112,26,93,18,"dropHandlers"],[112,38,93,18],[112,40,93,19,"preparedGesture"],[112,55,93,34],[112,56,93,35],[113,6,94,4],[113,7,94,5],[114,4,95,2],[114,5,95,3],[114,7,95,5],[114,9,95,7],[114,10,95,8],[115,4,96,2],[115,8,96,2,"useEffect"],[115,14,96,11],[115,15,96,11,"useEffect"],[115,24,96,11],[115,26,96,12],[115,32,96,18],[116,6,97,4],[116,10,97,8,"state"],[116,15,97,13],[116,16,97,14,"firstRender"],[116,27,97,25],[116,29,97,27],[117,8,98,6,"state"],[117,13,98,11],[117,14,98,12,"firstRender"],[117,25,98,23],[117,28,98,26],[117,33,98,31],[118,6,99,4],[118,7,99,5],[118,13,99,11],[119,8,100,6,"updateAttachedGestures"],[119,30,100,28],[119,31,100,29],[119,32,100,30],[120,6,101,4],[121,4,102,2],[121,5,102,3],[121,7,102,5],[121,8,102,6,"props"],[121,13,102,11],[121,14,102,12],[121,15,102,13],[122,4,103,2],[122,8,103,2,"useMountReactions"],[122,26,103,19],[122,27,103,19,"useMountReactions"],[122,44,103,19],[122,46,103,20,"updateAttachedGestures"],[122,68,103,42],[122,70,103,44,"preparedGesture"],[122,85,103,59],[122,86,103,60],[123,4,104,2],[123,8,104,6,"shouldUseReanimated"],[123,27,104,25],[123,29,104,27],[124,6,105,4],[124,13,105,11],[124,26,105,24],[124,30,105,24,"_jsx"],[124,46,105,28],[124,47,105,28,"jsx"],[124,50,105,28],[124,52,105,29,"AnimatedWrap"],[124,57,105,41],[124,58,105,41,"AnimatedWrap"],[124,70,105,41],[124,72,105,43],[125,8,106,6,"ref"],[125,11,106,9],[125,13,106,11,"refHandler"],[125,23,106,21],[126,8,107,6,"onGestureHandlerEvent"],[126,29,107,27],[126,31,107,29,"preparedGesture"],[126,46,107,44],[126,47,107,45,"animatedEventHandler"],[126,67,107,65],[127,8,108,6,"children"],[127,16,108,14],[127,18,108,16,"props"],[127,23,108,21],[127,24,108,22,"children"],[128,6,109,4],[128,7,109,5],[128,8,109,6],[129,4,110,2],[129,5,110,3],[129,11,110,9],[130,6,111,4],[130,13,111,11],[130,26,111,24],[130,30,111,24,"_jsx"],[130,46,111,28],[130,47,111,28,"jsx"],[130,50,111,28],[130,52,111,29,"Wrap"],[130,57,111,33],[130,58,111,33,"Wrap"],[130,62,111,33],[130,64,111,35],[131,8,112,6,"ref"],[131,11,112,9],[131,13,112,11,"refHandler"],[131,23,112,21],[132,8,113,6,"children"],[132,16,113,14],[132,18,113,16,"props"],[132,23,113,21],[132,24,113,22,"children"],[133,6,114,4],[133,7,114,5],[133,8,114,6],[134,4,115,2],[135,2,116,0],[135,3,116,1],[136,0,116,2],[136,3]],"functionMap":{"names":["<global>","propagateDetectorConfig","GestureDetector","useMemo$argument_0","gesturesToAttach.some$argument_0","useLayoutEffect$argument_0","<anonymous>","useEffect$argument_0"],"mappings":"AAA;ACkB;CDY;+BEgB;mCCS,oCD;oDEC,0BF;kBGwB;WCU;KDG;GHC;YKC;GLM;CFc"},"hasCjsExports":false},"type":"js/module"}]}