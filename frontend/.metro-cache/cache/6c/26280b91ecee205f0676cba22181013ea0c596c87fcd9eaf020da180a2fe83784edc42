{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":36,"index":247}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":248},"end":{"line":4,"column":62,"index":310}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":311},"end":{"line":5,"column":32,"index":343}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"shouldCancelWhenOutside\", \"maxDeltaX\", \"maxDeltaY\", \"numberOfTaps\", \"minDurationMs\", \"maxDelayMs\", \"maxDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _egjsHammerjs = require(_dependencyMap[1], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _DiscreteGestureHandler = require(_dependencyMap[2], \"./DiscreteGestureHandler\");\n  var DiscreteGestureHandler = _interopDefault(_DiscreteGestureHandler);\n  var _utils = require(_dependencyMap[3], \"./utils\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class TapGestureHandler extends DiscreteGestureHandler.default {\n    constructor(...args) {\n      super(...args);\n      _defineProperty(this, \"_shouldFireEndEvent\", null);\n      _defineProperty(this, \"_timer\", void 0);\n      _defineProperty(this, \"_multiTapTimer\", void 0);\n      _defineProperty(this, \"onSuccessfulTap\", ev => {\n        if (this._getPendingGestures().length) {\n          this._shouldFireEndEvent = ev;\n          return;\n        }\n        if (ev.eventType === Hammer.default.INPUT_END) {\n          this.sendEvent(Object.assign({}, ev, {\n            eventType: Hammer.default.INPUT_MOVE\n          }));\n        } // When handler gets activated it will turn into State.END immediately.\n\n        this.sendEvent(Object.assign({}, ev, {\n          isFinal: true\n        }));\n        this.onGestureEnded(ev);\n      });\n    }\n\n    // TODO unused?\n    get name() {\n      return 'tap';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Tap;\n    }\n    get maxDelayMs() {\n      // @ts-ignore TODO(TS) trace down config\n      return (0, _utils.isnan)(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n    }\n    simulateCancelEvent(inputData) {\n      if (this.isGestureRunning) {\n        this.cancelEvent(inputData);\n      }\n    }\n    onGestureActivated(ev) {\n      if (this.isGestureRunning) {\n        this.onSuccessfulTap(ev);\n      }\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev); // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n\n      if (!this.hasGestureFailed && !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name); // @ts-ignore TODO(TS) trace down config\n\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n      if (ev.isFinal && ev.maxPointers > 1) {\n        setTimeout(() => {\n          // Handle case where one finger presses slightly\n          // after the first finger on a multi-tap event\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n      if (this.hasGestureFailed) {\n        return;\n      } // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n\n      if (ev.isFinal) {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (ev.maxPointers > 1) {\n          setTimeout(() => {\n            if (this.isGestureRunning) {\n              this.cancelEvent(ev);\n            }\n          });\n        } // Clear last timer\n\n        clearTimeout(this._timer); // Create time out for multi-taps.\n\n        this._timer = setTimeout(() => {\n          this.hasGestureFailed = true;\n          this.cancelEvent(ev);\n        }, this.maxDelayMs);\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name); // @ts-ignore TODO(TS) trace down config\n\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        event: this.name,\n        // @ts-ignore TODO(TS) trace down config\n        taps: (0, _utils.isnan)(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n        interval: this.maxDelayMs,\n        time:\n        // @ts-ignore TODO(TS) trace down config\n        (0, _utils.isnan)(this.config.maxDurationMs) || this.config.maxDurationMs == null ? 250 :\n        // @ts-ignore TODO(TS) trace down config\n        this.config.maxDurationMs\n      });\n    }\n    updateGestureConfig(_ref) {\n      let {\n          shouldCancelWhenOutside = true,\n          maxDeltaX = Number.NaN,\n          maxDeltaY = Number.NaN,\n          numberOfTaps = 1,\n          minDurationMs = 525,\n          maxDelayMs = Number.NaN,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n          maxDurationMs = Number.NaN,\n          maxDist = 2,\n          minPointers = 1,\n          maxPointers = 1\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      return super.updateGestureConfig(Object.assign({\n        shouldCancelWhenOutside,\n        numberOfTaps,\n        maxDeltaX,\n        maxDeltaY,\n        minDurationMs,\n        maxDelayMs,\n        maxDist,\n        minPointers,\n        maxPointers\n      }, props));\n    }\n    onGestureEnded(...props) {\n      clearTimeout(this._timer); // @ts-ignore TODO(TS) check how onGestureEnded works\n\n      super.onGestureEnded(...props);\n    }\n    onWaitingEnded(_gesture) {\n      if (this._shouldFireEndEvent) {\n        this.onSuccessfulTap(this._shouldFireEndEvent);\n        this._shouldFireEndEvent = null;\n      }\n    }\n  }\n  var _default = TapGestureHandler;\n});","lineCount":194,"map":[[13,2,179,0,"Object"],[13,8,179,0],[13,9,179,0,"defineProperty"],[13,23,179,0],[13,24,179,0,"exports"],[13,31,179,0],[14,4,179,0,"enumerable"],[14,14,179,0],[15,4,179,0,"get"],[15,7,179,0],[15,18,179,0,"get"],[15,19,179,0],[16,6,179,0],[16,13,179,0,"_default"],[16,21,179,0],[17,4,179,0],[18,2,179,0],[19,2,179,33],[19,6,179,33,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[19,54,179,33],[19,57,179,33,"require"],[19,64,179,33],[19,65,179,33,"_dependencyMap"],[19,79,179,33],[20,2,179,33],[20,6,179,33,"_objectWithoutPropertiesLoose"],[20,35,179,33],[20,38,179,33,"_interopDefault"],[20,53,179,33],[20,54,179,33,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[20,102,179,33],[21,2,3,0],[21,6,3,0,"_egjsHammerjs"],[21,19,3,0],[21,22,3,0,"require"],[21,29,3,0],[21,30,3,0,"_dependencyMap"],[21,44,3,0],[22,2,3,0],[22,6,3,0,"Hammer"],[22,12,3,0],[22,15,3,0,"_interopDefault"],[22,30,3,0],[22,31,3,0,"_egjsHammerjs"],[22,44,3,0],[23,2,4,0],[23,6,4,0,"_DiscreteGestureHandler"],[23,29,4,0],[23,32,4,0,"require"],[23,39,4,0],[23,40,4,0,"_dependencyMap"],[23,54,4,0],[24,2,4,0],[24,6,4,0,"DiscreteGestureHandler"],[24,28,4,0],[24,31,4,0,"_interopDefault"],[24,46,4,0],[24,47,4,0,"_DiscreteGestureHandler"],[24,70,4,0],[25,2,5,0],[25,6,5,0,"_utils"],[25,12,5,0],[25,15,5,0,"require"],[25,22,5,0],[25,23,5,0,"_dependencyMap"],[25,37,5,0],[26,2,1,0],[26,11,1,9,"_defineProperty"],[26,26,1,24,"_defineProperty"],[26,27,1,25,"obj"],[26,30,1,28],[26,32,1,30,"key"],[26,35,1,33],[26,37,1,35,"value"],[26,42,1,40],[26,44,1,42],[27,4,1,44],[27,8,1,48,"key"],[27,11,1,51],[27,15,1,55,"obj"],[27,18,1,58],[27,20,1,60],[28,6,1,62,"Object"],[28,12,1,68],[28,13,1,69,"defineProperty"],[28,27,1,83],[28,28,1,84,"obj"],[28,31,1,87],[28,33,1,89,"key"],[28,36,1,92],[28,38,1,94],[29,8,1,96,"value"],[29,13,1,101],[29,15,1,103,"value"],[29,20,1,108],[30,8,1,110,"enumerable"],[30,18,1,120],[30,20,1,122],[30,24,1,126],[31,8,1,128,"configurable"],[31,20,1,140],[31,22,1,142],[31,26,1,146],[32,8,1,148,"writable"],[32,16,1,156],[32,18,1,158],[33,6,1,163],[33,7,1,164],[33,8,1,165],[34,4,1,167],[34,5,1,168],[34,11,1,174],[35,6,1,176,"obj"],[35,9,1,179],[35,10,1,180,"key"],[35,13,1,183],[35,14,1,184],[35,17,1,187,"value"],[35,22,1,192],[36,4,1,194],[37,4,1,196],[37,11,1,203,"obj"],[37,14,1,206],[38,2,1,208],[39,2,7,0],[39,8,7,6,"TapGestureHandler"],[39,25,7,23],[39,34,7,32,"DiscreteGestureHandler"],[39,56,7,54],[39,57,7,54,"default"],[39,64,7,54],[39,65,7,55],[40,4,8,2,"constructor"],[40,15,8,13,"constructor"],[40,16,8,14],[40,19,8,17,"args"],[40,23,8,21],[40,25,8,23],[41,6,9,4],[41,11,9,9],[41,12,9,10],[41,15,9,13,"args"],[41,19,9,17],[41,20,9,18],[42,6,11,4,"_defineProperty"],[42,21,11,19],[42,22,11,20],[42,26,11,24],[42,28,11,26],[42,49,11,47],[42,51,11,49],[42,55,11,53],[42,56,11,54],[43,6,13,4,"_defineProperty"],[43,21,13,19],[43,22,13,20],[43,26,13,24],[43,28,13,26],[43,36,13,34],[43,38,13,36],[43,43,13,41],[43,44,13,42],[43,45,13,43],[44,6,15,4,"_defineProperty"],[44,21,15,19],[44,22,15,20],[44,26,15,24],[44,28,15,26],[44,44,15,42],[44,46,15,44],[44,51,15,49],[44,52,15,50],[44,53,15,51],[45,6,17,4,"_defineProperty"],[45,21,17,19],[45,22,17,20],[45,26,17,24],[45,28,17,26],[45,45,17,43],[45,47,17,45,"ev"],[45,49,17,47],[45,53,17,51],[46,8,18,6],[46,12,18,10],[46,16,18,14],[46,17,18,15,"_getPendingGestures"],[46,36,18,34],[46,37,18,35],[46,38,18,36],[46,39,18,37,"length"],[46,45,18,43],[46,47,18,45],[47,10,19,8],[47,14,19,12],[47,15,19,13,"_shouldFireEndEvent"],[47,34,19,32],[47,37,19,35,"ev"],[47,39,19,37],[48,10,20,8],[49,8,21,6],[50,8,23,6],[50,12,23,10,"ev"],[50,14,23,12],[50,15,23,13,"eventType"],[50,24,23,22],[50,29,23,27,"Hammer"],[50,35,23,33],[50,36,23,33,"default"],[50,43,23,33],[50,44,23,34,"INPUT_END"],[50,53,23,43],[50,55,23,45],[51,10,24,8],[51,14,24,12],[51,15,24,13,"sendEvent"],[51,24,24,22],[51,25,24,22,"Object"],[51,31,24,22],[51,32,24,22,"assign"],[51,38,24,22],[51,43,24,28,"ev"],[51,45,24,30],[52,12,25,10,"eventType"],[52,21,25,19],[52,23,25,21,"Hammer"],[52,29,25,27],[52,30,25,27,"default"],[52,37,25,27],[52,38,25,28,"INPUT_MOVE"],[53,10,25,38],[53,12,26,9],[53,13,26,10],[54,8,27,6],[54,9,27,7],[54,10,27,8],[56,8,30,6],[56,12,30,10],[56,13,30,11,"sendEvent"],[56,22,30,20],[56,23,30,20,"Object"],[56,29,30,20],[56,30,30,20,"assign"],[56,36,30,20],[56,41,30,26,"ev"],[56,43,30,28],[57,10,31,8,"isFinal"],[57,17,31,15],[57,19,31,17],[58,8,31,21],[58,10,32,7],[58,11,32,8],[59,8,33,6],[59,12,33,10],[59,13,33,11,"onGestureEnded"],[59,27,33,25],[59,28,33,26,"ev"],[59,30,33,28],[59,31,33,29],[60,6,34,4],[60,7,34,5],[60,8,34,6],[61,4,35,2],[63,4,37,2],[64,4,38,2],[64,8,38,6,"name"],[64,12,38,10,"name"],[64,13,38,10],[64,15,38,13],[65,6,39,4],[65,13,39,11],[65,18,39,16],[66,4,40,2],[67,4,42,2],[67,8,42,6,"NativeGestureClass"],[67,26,42,24,"NativeGestureClass"],[67,27,42,24],[67,29,42,27],[68,6,43,4],[68,13,43,11,"Hammer"],[68,19,43,17],[68,20,43,17,"default"],[68,27,43,17],[68,28,43,18,"Tap"],[68,31,43,21],[69,4,44,2],[70,4,46,2],[70,8,46,6,"maxDelayMs"],[70,18,46,16,"maxDelayMs"],[70,19,46,16],[70,21,46,19],[71,6,47,4],[72,6,48,4],[72,13,48,11],[72,17,48,11,"isnan"],[72,23,48,16],[72,24,48,16,"isnan"],[72,29,48,16],[72,31,48,17],[72,35,48,21],[72,36,48,22,"config"],[72,42,48,28],[72,43,48,29,"maxDelayMs"],[72,53,48,39],[72,54,48,40],[72,57,48,43],[72,60,48,46],[72,63,48,49],[72,67,48,53],[72,68,48,54,"config"],[72,74,48,60],[72,75,48,61,"maxDelayMs"],[72,85,48,71],[73,4,49,2],[74,4,51,2,"simulateCancelEvent"],[74,23,51,21,"simulateCancelEvent"],[74,24,51,22,"inputData"],[74,33,51,31],[74,35,51,33],[75,6,52,4],[75,10,52,8],[75,14,52,12],[75,15,52,13,"isGestureRunning"],[75,31,52,29],[75,33,52,31],[76,8,53,6],[76,12,53,10],[76,13,53,11,"cancelEvent"],[76,24,53,22],[76,25,53,23,"inputData"],[76,34,53,32],[76,35,53,33],[77,6,54,4],[78,4,55,2],[79,4,57,2,"onGestureActivated"],[79,22,57,20,"onGestureActivated"],[79,23,57,21,"ev"],[79,25,57,23],[79,27,57,25],[80,6,58,4],[80,10,58,8],[80,14,58,12],[80,15,58,13,"isGestureRunning"],[80,31,58,29],[80,33,58,31],[81,8,59,6],[81,12,59,10],[81,13,59,11,"onSuccessfulTap"],[81,28,59,26],[81,29,59,27,"ev"],[81,31,59,29],[81,32,59,30],[82,6,60,4],[83,4,61,2],[84,4,63,2,"onRawEvent"],[84,14,63,12,"onRawEvent"],[84,15,63,13,"ev"],[84,17,63,15],[84,19,63,17],[85,6,64,4],[85,11,64,9],[85,12,64,10,"onRawEvent"],[85,22,64,20],[85,23,64,21,"ev"],[85,25,64,23],[85,26,64,24],[85,27,64,25],[85,28,64,26],[87,6,66,4],[87,10,66,8],[87,11,66,9],[87,15,66,13],[87,16,66,14,"hasGestureFailed"],[87,32,66,30],[87,36,66,34],[87,37,66,35],[87,41,66,39],[87,42,66,40,"isGestureRunning"],[87,58,66,56],[88,6,66,60],[89,6,67,4],[89,7,67,5,"ev"],[89,9,67,7],[89,10,67,8,"isFinal"],[89,17,67,15],[89,19,67,17],[90,8,68,6],[91,8,69,6],[91,14,69,12,"gesture"],[91,21,69,19],[91,24,69,22],[91,28,69,26],[91,29,69,27,"hammer"],[91,35,69,33],[91,36,69,34,"get"],[91,39,69,37],[91,40,69,38],[91,44,69,42],[91,45,69,43,"name"],[91,49,69,47],[91,50,69,48],[91,51,69,49],[91,52,69,50],[93,8,71,6],[93,12,71,10,"gesture"],[93,19,71,17],[93,20,71,18,"options"],[93,27,71,25],[93,28,71,26,"enable"],[93,34,71,32],[93,35,71,33,"gesture"],[93,42,71,40],[93,44,71,42,"ev"],[93,46,71,44],[93,47,71,45],[93,49,71,47],[94,10,72,8,"clearTimeout"],[94,22,72,20],[94,23,72,21],[94,27,72,25],[94,28,72,26,"_multiTapTimer"],[94,42,72,40],[94,43,72,41],[95,10,73,8],[95,14,73,12],[95,15,73,13,"onStart"],[95,22,73,20],[95,23,73,21,"ev"],[95,25,73,23],[95,26,73,24],[96,10,74,8],[96,14,74,12],[96,15,74,13,"sendEvent"],[96,24,74,22],[96,25,74,23,"ev"],[96,27,74,25],[96,28,74,26],[97,8,75,6],[98,6,76,4],[99,6,78,4],[99,10,78,8,"ev"],[99,12,78,10],[99,13,78,11,"isFinal"],[99,20,78,18],[99,24,78,22,"ev"],[99,26,78,24],[99,27,78,25,"maxPointers"],[99,38,78,36],[99,41,78,39],[99,42,78,40],[99,44,78,42],[100,8,79,6,"setTimeout"],[100,18,79,16],[100,19,79,17],[100,25,79,23],[101,10,80,8],[102,10,81,8],[103,10,82,8],[103,14,82,12],[103,18,82,16],[103,19,82,17,"isGestureRunning"],[103,35,82,33],[103,37,82,35],[104,12,83,10],[104,16,83,14],[104,17,83,15,"cancelEvent"],[104,28,83,26],[104,29,83,27,"ev"],[104,31,83,29],[104,32,83,30],[105,10,84,8],[106,8,85,6],[106,9,85,7],[106,10,85,8],[107,6,86,4],[108,6,88,4],[108,10,88,8],[108,14,88,12],[108,15,88,13,"hasGestureFailed"],[108,31,88,29],[108,33,88,31],[109,8,89,6],[110,6,90,4],[110,7,90,5],[110,8,90,6],[111,6,91,4],[113,6,94,4],[113,10,94,8,"ev"],[113,12,94,10],[113,13,94,11,"isFinal"],[113,20,94,18],[113,22,94,20],[114,8,95,6],[115,8,96,6],[116,8,97,6],[116,12,97,10,"ev"],[116,14,97,12],[116,15,97,13,"maxPointers"],[116,26,97,24],[116,29,97,27],[116,30,97,28],[116,32,97,30],[117,10,98,8,"setTimeout"],[117,20,98,18],[117,21,98,19],[117,27,98,25],[118,12,99,10],[118,16,99,14],[118,20,99,18],[118,21,99,19,"isGestureRunning"],[118,37,99,35],[118,39,99,37],[119,14,100,12],[119,18,100,16],[119,19,100,17,"cancelEvent"],[119,30,100,28],[119,31,100,29,"ev"],[119,33,100,31],[119,34,100,32],[120,12,101,10],[121,10,102,8],[121,11,102,9],[121,12,102,10],[122,8,103,6],[122,9,103,7],[122,10,103,8],[124,8,106,6,"clearTimeout"],[124,20,106,18],[124,21,106,19],[124,25,106,23],[124,26,106,24,"_timer"],[124,32,106,30],[124,33,106,31],[124,34,106,32],[124,35,106,33],[126,8,108,6],[126,12,108,10],[126,13,108,11,"_timer"],[126,19,108,17],[126,22,108,20,"setTimeout"],[126,32,108,30],[126,33,108,31],[126,39,108,37],[127,10,109,8],[127,14,109,12],[127,15,109,13,"hasGestureFailed"],[127,31,109,29],[127,34,109,32],[127,38,109,36],[128,10,110,8],[128,14,110,12],[128,15,110,13,"cancelEvent"],[128,26,110,24],[128,27,110,25,"ev"],[128,29,110,27],[128,30,110,28],[129,8,111,6],[129,9,111,7],[129,11,111,9],[129,15,111,13],[129,16,111,14,"maxDelayMs"],[129,26,111,24],[129,27,111,25],[130,6,112,4],[130,7,112,5],[130,13,112,11],[130,17,112,15],[130,18,112,16],[130,22,112,20],[130,23,112,21,"hasGestureFailed"],[130,39,112,37],[130,43,112,41],[130,44,112,42],[130,48,112,46],[130,49,112,47,"isGestureRunning"],[130,65,112,63],[130,67,112,65],[131,8,113,6],[132,8,114,6],[132,14,114,12,"gesture"],[132,21,114,19],[132,24,114,22],[132,28,114,26],[132,29,114,27,"hammer"],[132,35,114,33],[132,36,114,34,"get"],[132,39,114,37],[132,40,114,38],[132,44,114,42],[132,45,114,43,"name"],[132,49,114,47],[132,50,114,48],[132,51,114,49],[132,52,114,50],[134,8,116,6],[134,12,116,10,"gesture"],[134,19,116,17],[134,20,116,18,"options"],[134,27,116,25],[134,28,116,26,"enable"],[134,34,116,32],[134,35,116,33,"gesture"],[134,42,116,40],[134,44,116,42,"ev"],[134,46,116,44],[134,47,116,45],[134,49,116,47],[135,10,117,8,"clearTimeout"],[135,22,117,20],[135,23,117,21],[135,27,117,25],[135,28,117,26,"_multiTapTimer"],[135,42,117,40],[135,43,117,41],[136,10,118,8],[136,14,118,12],[136,15,118,13,"onStart"],[136,22,118,20],[136,23,118,21,"ev"],[136,25,118,23],[136,26,118,24],[137,10,119,8],[137,14,119,12],[137,15,119,13,"sendEvent"],[137,24,119,22],[137,25,119,23,"ev"],[137,27,119,25],[137,28,119,26],[138,8,120,6],[139,6,121,4],[140,4,122,2],[141,4,124,2,"getHammerConfig"],[141,19,124,17,"getHammerConfig"],[141,20,124,17],[141,22,124,20],[142,6,125,4],[142,13,125,4,"Object"],[142,19,125,4],[142,20,125,4,"assign"],[142,26,125,4],[142,31,125,16],[142,36,125,21],[142,37,125,22,"getHammerConfig"],[142,52,125,37],[142,53,125,38],[142,54,125,39],[143,8,126,6,"event"],[143,13,126,11],[143,15,126,13],[143,19,126,17],[143,20,126,18,"name"],[143,24,126,22],[144,8,127,6],[145,8,128,6,"taps"],[145,12,128,10],[145,14,128,12],[145,18,128,12,"isnan"],[145,24,128,17],[145,25,128,17,"isnan"],[145,30,128,17],[145,32,128,18],[145,36,128,22],[145,37,128,23,"config"],[145,43,128,29],[145,44,128,30,"numberOfTaps"],[145,56,128,42],[145,57,128,43],[145,60,128,46],[145,61,128,47],[145,64,128,50],[145,68,128,54],[145,69,128,55,"config"],[145,75,128,61],[145,76,128,62,"numberOfTaps"],[145,88,128,74],[146,8,129,6,"interval"],[146,16,129,14],[146,18,129,16],[146,22,129,20],[146,23,129,21,"maxDelayMs"],[146,33,129,31],[147,8,130,6,"time"],[147,12,130,10],[148,8,130,12],[149,8,131,6],[149,12,131,6,"isnan"],[149,18,131,11],[149,19,131,11,"isnan"],[149,24,131,11],[149,26,131,12],[149,30,131,16],[149,31,131,17,"config"],[149,37,131,23],[149,38,131,24,"maxDurationMs"],[149,51,131,37],[149,52,131,38],[149,56,131,42],[149,60,131,46],[149,61,131,47,"config"],[149,67,131,53],[149,68,131,54,"maxDurationMs"],[149,81,131,67],[149,85,131,71],[149,89,131,75],[149,92,131,78],[149,95,131,81],[150,8,131,84],[151,8,132,6],[151,12,132,10],[151,13,132,11,"config"],[151,19,132,17],[151,20,132,18,"maxDurationMs"],[152,6,132,31],[153,4,134,2],[154,4,136,2,"updateGestureConfig"],[154,23,136,21,"updateGestureConfig"],[154,24,136,21,"_ref"],[154,28,136,21],[154,30,149,5],[155,6,149,5],[155,10,136,22],[156,10,137,4,"shouldCancelWhenOutside"],[156,33,137,27],[156,36,137,30],[156,40,137,34],[157,10,138,4,"maxDeltaX"],[157,19,138,13],[157,22,138,16,"Number"],[157,28,138,22],[157,29,138,23,"NaN"],[157,32,138,26],[158,10,139,4,"maxDeltaY"],[158,19,139,13],[158,22,139,16,"Number"],[158,28,139,22],[158,29,139,23,"NaN"],[158,32,139,26],[159,10,140,4,"numberOfTaps"],[159,22,140,16],[159,25,140,19],[159,26,140,20],[160,10,141,4,"minDurationMs"],[160,23,141,17],[160,26,141,20],[160,29,141,23],[161,10,142,4,"maxDelayMs"],[161,20,142,14],[161,23,142,17,"Number"],[161,29,142,23],[161,30,142,24,"NaN"],[161,33,142,27],[162,10,143,4],[163,10,144,4,"maxDurationMs"],[163,23,144,17],[163,26,144,20,"Number"],[163,32,144,26],[163,33,144,27,"NaN"],[163,36,144,30],[164,10,145,4,"maxDist"],[164,17,145,11],[164,20,145,14],[164,21,145,15],[165,10,146,4,"minPointers"],[165,21,146,15],[165,24,146,18],[165,25,146,19],[166,10,147,4,"maxPointers"],[166,21,147,15],[166,24,147,18],[167,8,149,2],[167,9,149,3],[167,12,149,3,"_ref"],[167,16,149,3],[168,8,148,7,"props"],[168,13,148,12],[168,20,148,12,"_objectWithoutPropertiesLoose"],[168,49,148,12],[168,50,148,12,"default"],[168,57,148,12],[168,59,148,12,"_ref"],[168,63,148,12],[168,65,148,12,"_excluded"],[168,74,148,12],[169,6,150,4],[169,13,150,11],[169,18,150,16],[169,19,150,17,"updateGestureConfig"],[169,38,150,36],[169,39,150,36,"Object"],[169,45,150,36],[169,46,150,36,"assign"],[169,52,150,36],[170,8,151,6,"shouldCancelWhenOutside"],[170,31,151,29],[171,8,152,6,"numberOfTaps"],[171,20,152,18],[172,8,153,6,"maxDeltaX"],[172,17,153,15],[173,8,154,6,"maxDeltaY"],[173,17,154,15],[174,8,155,6,"minDurationMs"],[174,21,155,19],[175,8,156,6,"maxDelayMs"],[175,18,156,16],[176,8,157,6,"maxDist"],[176,15,157,13],[177,8,158,6,"minPointers"],[177,19,158,17],[178,8,159,6,"maxPointers"],[179,6,159,17],[179,9,160,9,"props"],[179,14,160,14],[179,15,161,5],[179,16,161,6],[180,4,162,2],[181,4,164,2,"onGestureEnded"],[181,18,164,16,"onGestureEnded"],[181,19,164,17],[181,22,164,20,"props"],[181,27,164,25],[181,29,164,27],[182,6,165,4,"clearTimeout"],[182,18,165,16],[182,19,165,17],[182,23,165,21],[182,24,165,22,"_timer"],[182,30,165,28],[182,31,165,29],[182,32,165,30],[182,33,165,31],[184,6,167,4],[184,11,167,9],[184,12,167,10,"onGestureEnded"],[184,26,167,24],[184,27,167,25],[184,30,167,28,"props"],[184,35,167,33],[184,36,167,34],[185,4,168,2],[186,4,170,2,"onWaitingEnded"],[186,18,170,16,"onWaitingEnded"],[186,19,170,17,"_gesture"],[186,27,170,25],[186,29,170,27],[187,6,171,4],[187,10,171,8],[187,14,171,12],[187,15,171,13,"_shouldFireEndEvent"],[187,34,171,32],[187,36,171,34],[188,8,172,6],[188,12,172,10],[188,13,172,11,"onSuccessfulTap"],[188,28,172,26],[188,29,172,27],[188,33,172,31],[188,34,172,32,"_shouldFireEndEvent"],[188,53,172,51],[188,54,172,52],[189,8,173,6],[189,12,173,10],[189,13,173,11,"_shouldFireEndEvent"],[189,32,173,30],[189,35,173,33],[189,39,173,37],[190,6,174,4],[191,4,175,2],[192,2,177,0],[193,2,179,0],[193,6,179,0,"_default"],[193,14,179,0],[193,17,179,15,"TapGestureHandler"],[193,34,179,32],[194,0,179,33],[194,3]],"functionMap":{"names":["_defineProperty","<global>","TapGestureHandler","constructor","_defineProperty$argument_2","get__name","get__NativeGestureClass","get__maxDelayMs","simulateCancelEvent","onGestureActivated","onRawEvent","setTimeout$argument_0","getHammerConfig","updateGestureConfig","onGestureEnded","onWaitingEnded"],"mappings":"AAA,iNC;ACM;ECC;6CCS;KDiB;GDC;EGG;GHE;EIE;GJE;EKE;GLG;EME;GNI;EOE;GPI;EQE;iBCgB;ODM;mBCa;SDI;+BCM;ODG;GRW;EUE;GVU;EWE;GX0B;EYE;GZI;EaE;GbK;CDE"},"hasCjsExports":false},"type":"js/module"}]}