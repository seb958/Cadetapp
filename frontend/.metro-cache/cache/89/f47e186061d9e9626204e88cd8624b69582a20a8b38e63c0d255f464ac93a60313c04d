{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":112},"end":{"line":5,"column":36,"index":148}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":149},"end":{"line":6,"column":40,"index":189}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./Errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":190},"end":{"line":7,"column":44,"index":234}}],"key":"Hc24lHtszv0n4sfQahKq/F+wSE4=","exportNames":["*"],"imports":1}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":235},"end":{"line":8,"column":62,"index":297}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":298},"end":{"line":9,"column":32,"index":330}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* eslint-disable @eslint-community/eslint-comments/no-unlimited-disable */\n  /* eslint-disable */\n  const _excluded = [\"numberOfPointers\", \"direction\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _egjsHammerjs = require(_dependencyMap[1], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _Errors = require(_dependencyMap[3], \"./Errors\");\n  var _DraggingGestureHandler = require(_dependencyMap[4], \"./DraggingGestureHandler\");\n  var DraggingGestureHandler = _interopDefault(_DraggingGestureHandler);\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  class FlingGestureHandler extends DraggingGestureHandler.default {\n    get name() {\n      return 'swipe';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Swipe;\n    }\n    onGestureActivated(event) {\n      this.sendEvent(Object.assign({}, event, {\n        eventType: Hammer.default.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      }));\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent(Object.assign({}, event, {\n        eventType: Hammer.default.INPUT_END,\n        isFinal: true\n      }));\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.hasGestureFailed) {\n        return;\n      }\n      // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n      if (ev.isFinal) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore FIXME(TS)\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        // @ts-ignore FIXME(TS)\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n    getTargetDirections(direction) {\n      const directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(Hammer.default.DIRECTION_RIGHT);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(Hammer.default.DIRECTION_LEFT);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(Hammer.default.DIRECTION_UP);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(Hammer.default.DIRECTION_DOWN);\n      }\n      // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n      return directions;\n    }\n    getDirection() {\n      // @ts-ignore FIXME(TS)\n      const {\n        direction\n      } = this.getConfig();\n      let directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(Hammer.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(Hammer.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(Hammer.default.DIRECTION_VERTICAL);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(Hammer.default.DIRECTION_VERTICAL);\n      }\n      directions = [...new Set(directions)];\n      if (directions.length === 0) return Hammer.default.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return Hammer.default.DIRECTION_ALL;\n    }\n    isGestureEnabledForEvent({\n      numberOfPointers\n    }, _recognizer, {\n      maxPointers: pointerLength\n    }) {\n      const validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n    updateGestureConfig(_ref) {\n      let {\n          numberOfPointers = 1,\n          direction\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      if ((0, _utils.isnan)(direction) || typeof direction !== 'number') {\n        throw new _Errors.GesturePropError('direction', direction, 'number');\n      }\n      return super.updateGestureConfig(Object.assign({\n        numberOfPointers,\n        direction\n      }, props));\n    }\n  }\n  var _default = FlingGestureHandler;\n});","lineCount":151,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,4,0],[6,2,4,0],[6,8,4,0,"_excluded"],[6,17,4,0],[7,2,4,0,"Object"],[7,8,4,0],[7,9,4,0,"defineProperty"],[7,23,4,0],[7,24,4,0,"exports"],[7,31,4,0],[8,4,4,0,"value"],[8,9,4,0],[9,2,4,0],[10,2,4,0],[10,11,4,0,"_interopDefault"],[10,27,4,0,"e"],[10,28,4,0],[11,4,4,0],[11,11,4,0,"e"],[11,12,4,0],[11,16,4,0,"e"],[11,17,4,0],[11,18,4,0,"__esModule"],[11,28,4,0],[11,31,4,0,"e"],[11,32,4,0],[12,6,4,0,"default"],[12,13,4,0],[12,15,4,0,"e"],[13,4,4,0],[14,2,4,0],[15,2,132,0,"Object"],[15,8,132,0],[15,9,132,0,"defineProperty"],[15,23,132,0],[15,24,132,0,"exports"],[15,31,132,0],[16,4,132,0,"enumerable"],[16,14,132,0],[17,4,132,0,"get"],[17,7,132,0],[17,18,132,0,"get"],[17,19,132,0],[18,6,132,0],[18,13,132,0,"_default"],[18,21,132,0],[19,4,132,0],[20,2,132,0],[21,2,132,35],[21,6,132,35,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[21,54,132,35],[21,57,132,35,"require"],[21,64,132,35],[21,65,132,35,"_dependencyMap"],[21,79,132,35],[22,2,132,35],[22,6,132,35,"_objectWithoutPropertiesLoose"],[22,35,132,35],[22,38,132,35,"_interopDefault"],[22,53,132,35],[22,54,132,35,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[22,102,132,35],[23,2,5,0],[23,6,5,0,"_egjsHammerjs"],[23,19,5,0],[23,22,5,0,"require"],[23,29,5,0],[23,30,5,0,"_dependencyMap"],[23,44,5,0],[24,2,5,0],[24,6,5,0,"Hammer"],[24,12,5,0],[24,15,5,0,"_interopDefault"],[24,30,5,0],[24,31,5,0,"_egjsHammerjs"],[24,44,5,0],[25,2,6,0],[25,6,6,0,"_constants"],[25,16,6,0],[25,19,6,0,"require"],[25,26,6,0],[25,27,6,0,"_dependencyMap"],[25,41,6,0],[26,2,7,0],[26,6,7,0,"_Errors"],[26,13,7,0],[26,16,7,0,"require"],[26,23,7,0],[26,24,7,0,"_dependencyMap"],[26,38,7,0],[27,2,8,0],[27,6,8,0,"_DraggingGestureHandler"],[27,29,8,0],[27,32,8,0,"require"],[27,39,8,0],[27,40,8,0,"_dependencyMap"],[27,54,8,0],[28,2,8,0],[28,6,8,0,"DraggingGestureHandler"],[28,28,8,0],[28,31,8,0,"_interopDefault"],[28,46,8,0],[28,47,8,0,"_DraggingGestureHandler"],[28,70,8,0],[29,2,9,0],[29,6,9,0,"_utils"],[29,12,9,0],[29,15,9,0,"require"],[29,22,9,0],[29,23,9,0,"_dependencyMap"],[29,37,9,0],[30,2,10,0],[30,8,10,6,"FlingGestureHandler"],[30,27,10,25],[30,36,10,34,"DraggingGestureHandler"],[30,58,10,56],[30,59,10,56,"default"],[30,66,10,56],[30,67,10,57],[31,4,11,2],[31,8,11,6,"name"],[31,12,11,10,"name"],[31,13,11,10],[31,15,11,13],[32,6,12,4],[32,13,12,11],[32,20,12,18],[33,4,13,2],[34,4,14,2],[34,8,14,6,"NativeGestureClass"],[34,26,14,24,"NativeGestureClass"],[34,27,14,24],[34,29,14,27],[35,6,15,4],[35,13,15,11,"Hammer"],[35,19,15,17],[35,20,15,17,"default"],[35,27,15,17],[35,28,15,18,"Swipe"],[35,33,15,23],[36,4,16,2],[37,4,17,2,"onGestureActivated"],[37,22,17,20,"onGestureActivated"],[37,23,17,21,"event"],[37,28,17,26],[37,30,17,28],[38,6,18,4],[38,10,18,8],[38,11,18,9,"sendEvent"],[38,20,18,18],[38,21,18,18,"Object"],[38,27,18,18],[38,28,18,18,"assign"],[38,34,18,18],[38,39,19,9,"event"],[38,44,19,14],[39,8,20,6,"eventType"],[39,17,20,15],[39,19,20,17,"Hammer"],[39,25,20,23],[39,26,20,23,"default"],[39,33,20,23],[39,34,20,24,"INPUT_MOVE"],[39,44,20,34],[40,8,21,6,"isFinal"],[40,15,21,13],[40,17,21,15],[40,22,21,20],[41,8,22,6,"isFirst"],[41,15,22,13],[41,17,22,15],[42,6,22,19],[42,8,23,5],[42,9,23,6],[43,6,24,4],[43,10,24,8],[43,11,24,9,"isGestureRunning"],[43,27,24,25],[43,30,24,28],[43,35,24,33],[44,6,25,4],[44,10,25,8],[44,11,25,9,"hasGestureFailed"],[44,27,25,25],[44,30,25,28],[44,35,25,33],[45,6,26,4],[45,10,26,8],[45,11,26,9,"sendEvent"],[45,20,26,18],[45,21,26,18,"Object"],[45,27,26,18],[45,28,26,18,"assign"],[45,34,26,18],[45,39,27,9,"event"],[45,44,27,14],[46,8,28,6,"eventType"],[46,17,28,15],[46,19,28,17,"Hammer"],[46,25,28,23],[46,26,28,23,"default"],[46,33,28,23],[46,34,28,24,"INPUT_END"],[46,43,28,33],[47,8,29,6,"isFinal"],[47,15,29,13],[47,17,29,15],[48,6,29,19],[48,8,30,5],[48,9,30,6],[49,4,31,2],[50,4,32,2,"onRawEvent"],[50,14,32,12,"onRawEvent"],[50,15,32,13,"ev"],[50,17,32,15],[50,19,32,17],[51,6,33,4],[51,11,33,9],[51,12,33,10,"onRawEvent"],[51,22,33,20],[51,23,33,21,"ev"],[51,25,33,23],[51,26,33,24],[52,6,34,4],[52,10,34,8],[52,14,34,12],[52,15,34,13,"hasGestureFailed"],[52,31,34,29],[52,33,34,31],[53,8,35,6],[54,6,36,4],[55,6,37,4],[56,6,38,4],[57,6,39,4],[57,10,39,8,"ev"],[57,12,39,10],[57,13,39,11,"isFinal"],[57,20,39,18],[57,22,39,20],[58,8,40,6,"setTimeout"],[58,18,40,16],[58,19,40,17],[58,25,40,23],[59,10,41,8],[59,14,41,12],[59,18,41,16],[59,19,41,17,"isGestureRunning"],[59,35,41,33],[59,37,41,35],[60,12,42,10],[60,16,42,14],[60,17,42,15,"cancelEvent"],[60,28,42,26],[60,29,42,27,"ev"],[60,31,42,29],[60,32,42,30],[61,10,43,8],[62,8,44,6],[62,9,44,7],[62,10,44,8],[63,6,45,4],[63,7,45,5],[63,13,45,11],[63,17,45,15],[63,18,45,16],[63,22,45,20],[63,23,45,21,"hasGestureFailed"],[63,39,45,37],[63,43,45,41],[63,44,45,42],[63,48,45,46],[63,49,45,47,"isGestureRunning"],[63,65,45,63],[63,67,45,65],[64,8,46,6],[65,8,47,6],[65,14,47,12,"gesture"],[65,21,47,19],[65,24,47,22],[65,28,47,26],[65,29,47,27,"hammer"],[65,35,47,33],[65,36,47,34,"get"],[65,39,47,37],[65,40,47,38],[65,44,47,42],[65,45,47,43,"name"],[65,49,47,47],[65,50,47,48],[66,8,48,6],[67,8,49,6],[67,12,49,10,"gesture"],[67,19,49,17],[67,20,49,18,"options"],[67,27,49,25],[67,28,49,26,"enable"],[67,34,49,32],[67,35,49,33,"gesture"],[67,42,49,40],[67,44,49,42,"ev"],[67,46,49,44],[67,47,49,45],[67,49,49,47],[68,10,50,8],[68,14,50,12],[68,15,50,13,"onStart"],[68,22,50,20],[68,23,50,21,"ev"],[68,25,50,23],[68,26,50,24],[69,10,51,8],[69,14,51,12],[69,15,51,13,"sendEvent"],[69,24,51,22],[69,25,51,23,"ev"],[69,27,51,25],[69,28,51,26],[70,8,52,6],[71,6,53,4],[72,4,54,2],[73,4,55,2,"getHammerConfig"],[73,19,55,17,"getHammerConfig"],[73,20,55,17],[73,22,55,20],[74,6,56,4],[74,13,56,11],[75,8,57,6],[76,8,58,6,"pointers"],[76,16,58,14],[76,18,58,16],[76,22,58,20],[76,23,58,21,"config"],[76,29,58,27],[76,30,58,28,"numberOfPointers"],[76,46,58,44],[77,8,59,6,"direction"],[77,17,59,15],[77,19,59,17],[77,23,59,21],[77,24,59,22,"getDirection"],[77,36,59,34],[77,37,59,35],[78,6,60,4],[78,7,60,5],[79,4,61,2],[80,4,62,2,"getTargetDirections"],[80,23,62,21,"getTargetDirections"],[80,24,62,22,"direction"],[80,33,62,31],[80,35,62,33],[81,6,63,4],[81,12,63,10,"directions"],[81,22,63,20],[81,25,63,23],[81,27,63,25],[82,6,64,4],[82,10,64,8,"direction"],[82,19,64,17],[82,22,64,20,"Direction"],[82,32,64,29],[82,33,64,29,"Direction"],[82,42,64,29],[82,43,64,30,"RIGHT"],[82,48,64,35],[82,50,64,37],[83,8,65,6,"directions"],[83,18,65,16],[83,19,65,17,"push"],[83,23,65,21],[83,24,65,22,"Hammer"],[83,30,65,28],[83,31,65,28,"default"],[83,38,65,28],[83,39,65,29,"DIRECTION_RIGHT"],[83,54,65,44],[83,55,65,45],[84,6,66,4],[85,6,67,4],[85,10,67,8,"direction"],[85,19,67,17],[85,22,67,20,"Direction"],[85,32,67,29],[85,33,67,29,"Direction"],[85,42,67,29],[85,43,67,30,"LEFT"],[85,47,67,34],[85,49,67,36],[86,8,68,6,"directions"],[86,18,68,16],[86,19,68,17,"push"],[86,23,68,21],[86,24,68,22,"Hammer"],[86,30,68,28],[86,31,68,28,"default"],[86,38,68,28],[86,39,68,29,"DIRECTION_LEFT"],[86,53,68,43],[86,54,68,44],[87,6,69,4],[88,6,70,4],[88,10,70,8,"direction"],[88,19,70,17],[88,22,70,20,"Direction"],[88,32,70,29],[88,33,70,29,"Direction"],[88,42,70,29],[88,43,70,30,"UP"],[88,45,70,32],[88,47,70,34],[89,8,71,6,"directions"],[89,18,71,16],[89,19,71,17,"push"],[89,23,71,21],[89,24,71,22,"Hammer"],[89,30,71,28],[89,31,71,28,"default"],[89,38,71,28],[89,39,71,29,"DIRECTION_UP"],[89,51,71,41],[89,52,71,42],[90,6,72,4],[91,6,73,4],[91,10,73,8,"direction"],[91,19,73,17],[91,22,73,20,"Direction"],[91,32,73,29],[91,33,73,29,"Direction"],[91,42,73,29],[91,43,73,30,"DOWN"],[91,47,73,34],[91,49,73,36],[92,8,74,6,"directions"],[92,18,74,16],[92,19,74,17,"push"],[92,23,74,21],[92,24,74,22,"Hammer"],[92,30,74,28],[92,31,74,28,"default"],[92,38,74,28],[92,39,74,29,"DIRECTION_DOWN"],[92,53,74,43],[92,54,74,44],[93,6,75,4],[94,6,76,4],[95,6,77,4],[95,13,77,11,"directions"],[95,23,77,21],[96,4,78,2],[97,4,79,2,"getDirection"],[97,16,79,14,"getDirection"],[97,17,79,14],[97,19,79,17],[98,6,80,4],[99,6,81,4],[99,12,81,10],[100,8,82,6,"direction"],[101,6,83,4],[101,7,83,5],[101,10,83,8],[101,14,83,12],[101,15,83,13,"getConfig"],[101,24,83,22],[101,25,83,23],[101,26,83,24],[102,6,84,4],[102,10,84,8,"directions"],[102,20,84,18],[102,23,84,21],[102,25,84,23],[103,6,85,4],[103,10,85,8,"direction"],[103,19,85,17],[103,22,85,20,"Direction"],[103,32,85,29],[103,33,85,29,"Direction"],[103,42,85,29],[103,43,85,30,"RIGHT"],[103,48,85,35],[103,50,85,37],[104,8,86,6,"directions"],[104,18,86,16],[104,19,86,17,"push"],[104,23,86,21],[104,24,86,22,"Hammer"],[104,30,86,28],[104,31,86,28,"default"],[104,38,86,28],[104,39,86,29,"DIRECTION_HORIZONTAL"],[104,59,86,49],[104,60,86,50],[105,6,87,4],[106,6,88,4],[106,10,88,8,"direction"],[106,19,88,17],[106,22,88,20,"Direction"],[106,32,88,29],[106,33,88,29,"Direction"],[106,42,88,29],[106,43,88,30,"LEFT"],[106,47,88,34],[106,49,88,36],[107,8,89,6,"directions"],[107,18,89,16],[107,19,89,17,"push"],[107,23,89,21],[107,24,89,22,"Hammer"],[107,30,89,28],[107,31,89,28,"default"],[107,38,89,28],[107,39,89,29,"DIRECTION_HORIZONTAL"],[107,59,89,49],[107,60,89,50],[108,6,90,4],[109,6,91,4],[109,10,91,8,"direction"],[109,19,91,17],[109,22,91,20,"Direction"],[109,32,91,29],[109,33,91,29,"Direction"],[109,42,91,29],[109,43,91,30,"UP"],[109,45,91,32],[109,47,91,34],[110,8,92,6,"directions"],[110,18,92,16],[110,19,92,17,"push"],[110,23,92,21],[110,24,92,22,"Hammer"],[110,30,92,28],[110,31,92,28,"default"],[110,38,92,28],[110,39,92,29,"DIRECTION_VERTICAL"],[110,57,92,47],[110,58,92,48],[111,6,93,4],[112,6,94,4],[112,10,94,8,"direction"],[112,19,94,17],[112,22,94,20,"Direction"],[112,32,94,29],[112,33,94,29,"Direction"],[112,42,94,29],[112,43,94,30,"DOWN"],[112,47,94,34],[112,49,94,36],[113,8,95,6,"directions"],[113,18,95,16],[113,19,95,17,"push"],[113,23,95,21],[113,24,95,22,"Hammer"],[113,30,95,28],[113,31,95,28,"default"],[113,38,95,28],[113,39,95,29,"DIRECTION_VERTICAL"],[113,57,95,47],[113,58,95,48],[114,6,96,4],[115,6,97,4,"directions"],[115,16,97,14],[115,19,97,17],[115,20,97,18],[115,23,97,21],[115,27,97,25,"Set"],[115,30,97,28],[115,31,97,29,"directions"],[115,41,97,39],[115,42,97,40],[115,43,97,41],[116,6,98,4],[116,10,98,8,"directions"],[116,20,98,18],[116,21,98,19,"length"],[116,27,98,25],[116,32,98,30],[116,33,98,31],[116,35,98,33],[116,42,98,40,"Hammer"],[116,48,98,46],[116,49,98,46,"default"],[116,56,98,46],[116,57,98,47,"DIRECTION_NONE"],[116,71,98,61],[117,6,99,4],[117,10,99,8,"directions"],[117,20,99,18],[117,21,99,19,"length"],[117,27,99,25],[117,32,99,30],[117,33,99,31],[117,35,99,33],[117,42,99,40,"directions"],[117,52,99,50],[117,53,99,51],[117,54,99,52],[117,55,99,53],[118,6,100,4],[118,13,100,11,"Hammer"],[118,19,100,17],[118,20,100,17,"default"],[118,27,100,17],[118,28,100,18,"DIRECTION_ALL"],[118,41,100,31],[119,4,101,2],[120,4,102,2,"isGestureEnabledForEvent"],[120,28,102,26,"isGestureEnabledForEvent"],[120,29,102,27],[121,6,103,4,"numberOfPointers"],[122,4,104,2],[122,5,104,3],[122,7,104,5,"_recognizer"],[122,18,104,16],[122,20,104,18],[123,6,105,4,"maxPointers"],[123,17,105,15],[123,19,105,17,"pointerLength"],[124,4,106,2],[124,5,106,3],[124,7,106,5],[125,6,107,4],[125,12,107,10,"validPointerCount"],[125,29,107,27],[125,32,107,30,"pointerLength"],[125,45,107,43],[125,50,107,48,"numberOfPointers"],[125,66,107,64],[126,6,108,4],[126,10,108,8],[126,11,108,9,"validPointerCount"],[126,28,108,26],[126,32,108,30],[126,36,108,34],[126,37,108,35,"isGestureRunning"],[126,53,108,51],[126,55,108,53],[127,8,109,6],[127,15,109,13],[128,10,110,8,"failed"],[128,16,110,14],[128,18,110,16],[129,8,111,6],[129,9,111,7],[130,6,112,4],[131,6,113,4],[131,13,113,11],[132,8,114,6,"success"],[132,15,114,13],[132,17,114,15,"validPointerCount"],[133,6,115,4],[133,7,115,5],[134,4,116,2],[135,4,117,2,"updateGestureConfig"],[135,23,117,21,"updateGestureConfig"],[135,24,117,21,"_ref"],[135,28,117,21],[135,30,121,5],[136,6,121,5],[136,10,117,22],[137,10,118,4,"numberOfPointers"],[137,26,118,20],[137,29,118,23],[137,30,118,24],[138,10,119,4,"direction"],[139,8,121,2],[139,9,121,3],[139,12,121,3,"_ref"],[139,16,121,3],[140,8,120,7,"props"],[140,13,120,12],[140,20,120,12,"_objectWithoutPropertiesLoose"],[140,49,120,12],[140,50,120,12,"default"],[140,57,120,12],[140,59,120,12,"_ref"],[140,63,120,12],[140,65,120,12,"_excluded"],[140,74,120,12],[141,6,122,4],[141,10,122,8],[141,14,122,8,"isnan"],[141,20,122,13],[141,21,122,13,"isnan"],[141,26,122,13],[141,28,122,14,"direction"],[141,37,122,23],[141,38,122,24],[141,42,122,28],[141,49,122,35,"direction"],[141,58,122,44],[141,63,122,49],[141,71,122,57],[141,73,122,59],[142,8,123,6],[142,14,123,12],[142,18,123,16,"GesturePropError"],[142,25,123,32],[142,26,123,32,"GesturePropError"],[142,42,123,32],[142,43,123,33],[142,54,123,44],[142,56,123,46,"direction"],[142,65,123,55],[142,67,123,57],[142,75,123,65],[142,76,123,66],[143,6,124,4],[144,6,125,4],[144,13,125,11],[144,18,125,16],[144,19,125,17,"updateGestureConfig"],[144,38,125,36],[144,39,125,36,"Object"],[144,45,125,36],[144,46,125,36,"assign"],[144,52,125,36],[145,8,126,6,"numberOfPointers"],[145,24,126,22],[146,8,127,6,"direction"],[147,6,127,15],[147,9,128,9,"props"],[147,14,128,14],[147,15,129,5],[147,16,129,6],[148,4,130,2],[149,2,131,0],[150,2,132,0],[150,6,132,0,"_default"],[150,14,132,0],[150,17,132,15,"FlingGestureHandler"],[150,36,132,34],[151,0,132,35],[151,3]],"functionMap":{"names":["<global>","FlingGestureHandler","get__name","get__NativeGestureClass","onGestureActivated","onRawEvent","setTimeout$argument_0","getHammerConfig","getTargetDirections","getDirection","isGestureEnabledForEvent","updateGestureConfig"],"mappings":"AAA;ACS;ECC;GDE;EEC;GFE;EGC;GHc;EIC;iBCQ;ODI;GJU;EMC;GNM;EOC;GPgB;EQC;GRsB;ESC;GTc;EUC;GVa;CDC"},"hasCjsExports":false},"type":"js/module"}]}