{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":39,"index":146},"end":{"line":8,"column":64,"index":171}}],"key":"TIRD4n0vm1viGfriWDBtxYTyDXo=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":13,"index":188},"end":{"line":10,"column":32,"index":207}}],"key":"6QJYsgIYyXDoX6Ak1wmI7AHik6U=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":17,"index":227},"end":{"line":12,"column":39,"index":249}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":53,"index":305},"end":{"line":14,"column":88,"index":340}}],"key":"eJDHGrqD5QkVDEQGLi3BxJN4OyA=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":13,"index":357},"end":{"line":16,"column":31,"index":375}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[0], \"@egjs/hammerjs\"));\n  var _State = require(_dependencyMap[1], \"../State\");\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[3], \"./DiscreteGestureHandler\"));\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class PressGestureHandler extends _DiscreteGestureHandler.default {\n    constructor(...args) {\n      super(...args);\n      _defineProperty(this, \"visualFeedbackTimer\", void 0);\n      _defineProperty(this, \"initialEvent\", null);\n      _defineProperty(this, \"shouldDelayTouches\", true);\n    }\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Press;\n    }\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [_hammerjs.default.INPUT_START]: _State.State.BEGAN,\n        [_hammerjs.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [_hammerjs.default.INPUT_END]: _State.State.END,\n        [_hammerjs.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      };\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent({\n        ...ev,\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFirst: true\n      });\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent({\n              ...ev,\n              eventType: _hammerjs.default.INPUT_END,\n              isFinal: true\n            }); // @ts-ignore -- this should explicitly support undefined\n\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent({\n            ...ev,\n            eventType: _hammerjs.default.INPUT_MOVE,\n            isFinal: false\n          });\n        }\n      }\n    }\n    updateGestureConfig({\n      shouldActivateOnStart = false,\n      disallowInterruption = false,\n      shouldCancelWhenOutside = true,\n      minDurationMs = Number.NaN,\n      maxDist = Number.NaN,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n  }\n  var _default = PressGestureHandler;\n  exports.default = _default;\n});","lineCount":176,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,8,0],[8,6,8,4,"_hammerjs"],[8,15,8,13],[8,18,8,16,"_interopRequireDefault"],[8,40,8,38],[8,41,8,39,"require"],[8,48,8,46],[8,49,8,46,"_dependencyMap"],[8,63,8,46],[8,84,8,63],[8,85,8,64],[8,86,8,65],[9,2,10,0],[9,6,10,4,"_State"],[9,12,10,10],[9,15,10,13,"require"],[9,22,10,20],[9,23,10,20,"_dependencyMap"],[9,37,10,20],[9,52,10,31],[9,53,10,32],[10,2,12,0],[10,6,12,4,"_constants"],[10,16,12,14],[10,19,12,17,"require"],[10,26,12,24],[10,27,12,24,"_dependencyMap"],[10,41,12,24],[10,59,12,38],[10,60,12,39],[11,2,14,0],[11,6,14,4,"_DiscreteGestureHandler"],[11,29,14,27],[11,32,14,30,"_interopRequireDefault"],[11,54,14,52],[11,55,14,53,"require"],[11,62,14,60],[11,63,14,60,"_dependencyMap"],[11,77,14,60],[11,108,14,87],[11,109,14,88],[11,110,14,89],[12,2,16,0],[12,6,16,4,"_utils"],[12,12,16,10],[12,15,16,13,"require"],[12,22,16,20],[12,23,16,20,"_dependencyMap"],[12,37,16,20],[12,51,16,30],[12,52,16,31],[13,2,18,0],[13,11,18,9,"_interopRequireDefault"],[13,33,18,31,"_interopRequireDefault"],[13,34,18,32,"obj"],[13,37,18,35],[13,39,18,37],[14,4,18,39],[14,11,18,46,"obj"],[14,14,18,49],[14,18,18,53,"obj"],[14,21,18,56],[14,22,18,57,"__esModule"],[14,32,18,67],[14,35,18,70,"obj"],[14,38,18,73],[14,41,18,76],[15,6,18,78,"default"],[15,13,18,85],[15,15,18,87,"obj"],[16,4,18,91],[16,5,18,92],[17,2,18,94],[18,2,20,0],[18,11,20,9,"_defineProperty"],[18,26,20,24,"_defineProperty"],[18,27,20,25,"obj"],[18,30,20,28],[18,32,20,30,"key"],[18,35,20,33],[18,37,20,35,"value"],[18,42,20,40],[18,44,20,42],[19,4,20,44],[19,8,20,48,"key"],[19,11,20,51],[19,15,20,55,"obj"],[19,18,20,58],[19,20,20,60],[20,6,20,62,"Object"],[20,12,20,68],[20,13,20,69,"defineProperty"],[20,27,20,83],[20,28,20,84,"obj"],[20,31,20,87],[20,33,20,89,"key"],[20,36,20,92],[20,38,20,94],[21,8,20,96,"value"],[21,13,20,101],[21,15,20,103,"value"],[21,20,20,108],[22,8,20,110,"enumerable"],[22,18,20,120],[22,20,20,122],[22,24,20,126],[23,8,20,128,"configurable"],[23,20,20,140],[23,22,20,142],[23,26,20,146],[24,8,20,148,"writable"],[24,16,20,156],[24,18,20,158],[25,6,20,163],[25,7,20,164],[25,8,20,165],[26,4,20,167],[26,5,20,168],[26,11,20,174],[27,6,20,176,"obj"],[27,9,20,179],[27,10,20,180,"key"],[27,13,20,183],[27,14,20,184],[27,17,20,187,"value"],[27,22,20,192],[28,4,20,194],[29,4,20,196],[29,11,20,203,"obj"],[29,14,20,206],[30,2,20,208],[31,2,22,0],[31,8,22,6,"PressGestureHandler"],[31,27,22,25],[31,36,22,34,"_DiscreteGestureHandler"],[31,59,22,57],[31,60,22,58,"default"],[31,67,22,65],[31,68,22,66],[32,4,23,2,"constructor"],[32,15,23,13,"constructor"],[32,16,23,14],[32,19,23,17,"args"],[32,23,23,21],[32,25,23,23],[33,6,24,4],[33,11,24,9],[33,12,24,10],[33,15,24,13,"args"],[33,19,24,17],[33,20,24,18],[34,6,26,4,"_defineProperty"],[34,21,26,19],[34,22,26,20],[34,26,26,24],[34,28,26,26],[34,49,26,47],[34,51,26,49],[34,56,26,54],[34,57,26,55],[34,58,26,56],[35,6,28,4,"_defineProperty"],[35,21,28,19],[35,22,28,20],[35,26,28,24],[35,28,28,26],[35,42,28,40],[35,44,28,42],[35,48,28,46],[35,49,28,47],[36,6,30,4,"_defineProperty"],[36,21,30,19],[36,22,30,20],[36,26,30,24],[36,28,30,26],[36,48,30,46],[36,50,30,48],[36,54,30,52],[36,55,30,53],[37,4,31,2],[38,4,33,2],[38,8,33,6,"name"],[38,12,33,10,"name"],[38,13,33,10],[38,15,33,13],[39,6,34,4],[39,13,34,11],[39,20,34,18],[40,4,35,2],[41,4,37,2],[41,8,37,6,"minDurationMs"],[41,21,37,19,"minDurationMs"],[41,22,37,19],[41,24,37,22],[42,6,38,4],[43,6,39,4],[43,13,39,11],[43,14,39,12],[43,15,39,13],[43,17,39,15,"_utils"],[43,23,39,21],[43,24,39,22,"isnan"],[43,29,39,27],[43,31,39,29],[43,35,39,33],[43,36,39,34,"config"],[43,42,39,40],[43,43,39,41,"minDurationMs"],[43,56,39,54],[43,57,39,55],[43,60,39,58],[43,61,39,59],[43,64,39,62],[43,68,39,66],[43,69,39,67,"config"],[43,75,39,73],[43,76,39,74,"minDurationMs"],[43,89,39,87],[44,4,40,2],[45,4,42,2],[45,8,42,6,"maxDist"],[45,15,42,13,"maxDist"],[45,16,42,13],[45,18,42,16],[46,6,43,4],[46,13,43,11],[46,14,43,12],[46,15,43,13],[46,17,43,15,"_utils"],[46,23,43,21],[46,24,43,22,"isnan"],[46,29,43,27],[46,31,43,29],[46,35,43,33],[46,36,43,34,"config"],[46,42,43,40],[46,43,43,41,"maxDist"],[46,50,43,48],[46,51,43,49],[46,54,43,52],[46,55,43,53],[46,58,43,56],[46,62,43,60],[46,63,43,61,"config"],[46,69,43,67],[46,70,43,68,"maxDist"],[46,77,43,75],[47,4,44,2],[48,4,46,2],[48,8,46,6,"NativeGestureClass"],[48,26,46,24,"NativeGestureClass"],[48,27,46,24],[48,29,46,27],[49,6,47,4],[49,13,47,11,"_hammerjs"],[49,22,47,20],[49,23,47,21,"default"],[49,30,47,28],[49,31,47,29,"Press"],[49,36,47,34],[50,4,48,2],[51,4,50,2,"simulateCancelEvent"],[51,23,50,21,"simulateCancelEvent"],[51,24,50,22,"inputData"],[51,33,50,31],[51,35,50,33],[52,6,51,4],[53,6,52,4],[53,10,52,8],[53,11,52,9,"hasGestureFailed"],[53,27,52,25],[53,30,52,28],[53,34,52,32],[54,6,53,4],[54,10,53,8],[54,11,53,9,"cancelEvent"],[54,22,53,20],[54,23,53,21,"inputData"],[54,32,53,30],[54,33,53,31],[55,4,54,2],[56,4,56,2,"updateHasCustomActivationCriteria"],[56,37,56,35,"updateHasCustomActivationCriteria"],[56,38,56,36],[57,6,57,4,"shouldCancelWhenOutside"],[57,29,57,27],[58,6,58,4,"maxDistSq"],[59,4,59,2],[59,5,59,3],[59,7,59,5],[60,6,60,4],[60,13,60,11,"shouldCancelWhenOutside"],[60,36,60,34],[60,40,60,38],[60,41,60,39],[60,42,60,40],[60,43,60,41],[60,45,60,43,"_utils"],[60,51,60,49],[60,52,60,50,"isValidNumber"],[60,65,60,63],[60,67,60,65,"maxDistSq"],[60,76,60,74],[60,77,60,75],[61,4,61,2],[62,4,63,2,"getState"],[62,12,63,10,"getState"],[62,13,63,11,"type"],[62,17,63,15],[62,19,63,17],[63,6,64,4],[63,13,64,11],[64,8,65,6],[64,9,65,7,"_hammerjs"],[64,18,65,16],[64,19,65,17,"default"],[64,26,65,24],[64,27,65,25,"INPUT_START"],[64,38,65,36],[64,41,65,39,"_State"],[64,47,65,45],[64,48,65,46,"State"],[64,53,65,51],[64,54,65,52,"BEGAN"],[64,59,65,57],[65,8,66,6],[65,9,66,7,"_hammerjs"],[65,18,66,16],[65,19,66,17,"default"],[65,26,66,24],[65,27,66,25,"INPUT_MOVE"],[65,37,66,35],[65,40,66,38,"_State"],[65,46,66,44],[65,47,66,45,"State"],[65,52,66,50],[65,53,66,51,"ACTIVE"],[65,59,66,57],[66,8,67,6],[66,9,67,7,"_hammerjs"],[66,18,67,16],[66,19,67,17,"default"],[66,26,67,24],[66,27,67,25,"INPUT_END"],[66,36,67,34],[66,39,67,37,"_State"],[66,45,67,43],[66,46,67,44,"State"],[66,51,67,49],[66,52,67,50,"END"],[66,55,67,53],[67,8,68,6],[67,9,68,7,"_hammerjs"],[67,18,68,16],[67,19,68,17,"default"],[67,26,68,24],[67,27,68,25,"INPUT_CANCEL"],[67,39,68,37],[67,42,68,40,"_State"],[67,48,68,46],[67,49,68,47,"State"],[67,54,68,52],[67,55,68,53,"CANCELLED"],[68,6,69,4],[68,7,69,5],[68,8,69,6,"type"],[68,12,69,10],[68,13,69,11],[69,4,70,2],[70,4,72,2,"getConfig"],[70,13,72,11,"getConfig"],[70,14,72,11],[70,16,72,14],[71,6,73,4],[71,10,73,8],[71,11,73,9],[71,15,73,13],[71,16,73,14,"hasCustomActivationCriteria"],[71,43,73,41],[71,45,73,43],[72,8,74,6],[73,8,75,6],[74,8,76,6],[74,15,76,13],[75,10,77,8,"shouldCancelWhenOutside"],[75,33,77,31],[75,35,77,33],[75,39,77,37],[76,10,78,8,"maxDistSq"],[76,19,78,17],[76,21,78,19],[77,8,79,6],[77,9,79,7],[78,6,80,4],[79,6,82,4],[79,13,82,11],[79,17,82,15],[79,18,82,16,"config"],[79,24,82,22],[80,4,83,2],[81,4,85,2,"getHammerConfig"],[81,19,85,17,"getHammerConfig"],[81,20,85,17],[81,22,85,20],[82,6,86,4],[82,13,86,11],[83,8,86,13],[83,11,86,16],[83,16,86,21],[83,17,86,22,"getHammerConfig"],[83,32,86,37],[83,33,86,38],[83,34,86,39],[84,8,87,6],[85,8,88,6,"time"],[85,12,88,10],[85,14,88,12],[85,18,88,16],[85,19,88,17,"minDurationMs"],[86,6,89,4],[86,7,89,5],[87,4,90,2],[88,4,92,2,"onGestureActivated"],[88,22,92,20,"onGestureActivated"],[88,23,92,21,"ev"],[88,25,92,23],[88,27,92,25],[89,6,93,4],[89,10,93,8],[89,11,93,9,"onGestureStart"],[89,25,93,23],[89,26,93,24,"ev"],[89,28,93,26],[89,29,93,27],[90,4,94,2],[91,4,96,2,"shouldDelayTouchForEvent"],[91,28,96,26,"shouldDelayTouchForEvent"],[91,29,96,27],[92,6,97,4,"pointerType"],[93,4,98,2],[93,5,98,3],[93,7,98,5],[94,6,99,4],[95,6,100,4],[95,13,100,11],[95,17,100,15],[95,18,100,16,"shouldDelayTouches"],[95,36,100,34],[95,40,100,38,"pointerType"],[95,51,100,49],[95,56,100,54],[95,63,100,61],[96,4,101,2],[97,4,103,2,"onGestureStart"],[97,18,103,16,"onGestureStart"],[97,19,103,17,"ev"],[97,21,103,19],[97,23,103,21],[98,6,104,4],[98,10,104,8],[98,11,104,9,"isGestureRunning"],[98,27,104,25],[98,30,104,28],[98,34,104,32],[99,6,105,4,"clearTimeout"],[99,18,105,16],[99,19,105,17],[99,23,105,21],[99,24,105,22,"visualFeedbackTimer"],[99,43,105,41],[99,44,105,42],[100,6,106,4],[100,10,106,8],[100,11,106,9,"initialEvent"],[100,23,106,21],[100,26,106,24,"ev"],[100,28,106,26],[101,6,107,4],[101,10,107,8],[101,11,107,9,"visualFeedbackTimer"],[101,30,107,28],[101,33,107,31],[101,34,107,32],[101,35,107,33],[101,37,107,35,"_utils"],[101,43,107,41],[101,44,107,42,"fireAfterInterval"],[101,61,107,59],[101,63,107,61],[101,69,107,67],[102,8,108,6],[102,12,108,10],[102,13,108,11,"sendGestureStartedEvent"],[102,36,108,34],[102,37,108,35],[102,41,108,39],[102,42,108,40,"initialEvent"],[102,54,108,52],[102,55,108,53],[103,8,109,6],[103,12,109,10],[103,13,109,11,"initialEvent"],[103,25,109,23],[103,28,109,26],[103,32,109,30],[104,6,110,4],[104,7,110,5],[104,9,110,7],[104,13,110,11],[104,14,110,12,"shouldDelayTouchForEvent"],[104,38,110,36],[104,39,110,37,"ev"],[104,41,110,39],[104,42,110,40],[104,46,110,44,"_constants"],[104,56,110,54],[104,57,110,55,"CONTENT_TOUCHES_DELAY"],[104,78,110,76],[104,79,110,77],[105,4,111,2],[106,4,113,2,"sendGestureStartedEvent"],[106,27,113,25,"sendGestureStartedEvent"],[106,28,113,26,"ev"],[106,30,113,28],[106,32,113,30],[107,6,114,4,"clearTimeout"],[107,18,114,16],[107,19,114,17],[107,23,114,21],[107,24,114,22,"visualFeedbackTimer"],[107,43,114,41],[107,44,114,42],[108,6,115,4],[108,10,115,8],[108,11,115,9,"visualFeedbackTimer"],[108,30,115,28],[108,33,115,31],[108,37,115,35],[109,6,116,4],[109,10,116,8],[109,11,116,9,"sendEvent"],[109,20,116,18],[109,21,116,19],[110,8,116,21],[110,11,116,24,"ev"],[110,13,116,26],[111,8,117,6,"eventType"],[111,17,117,15],[111,19,117,17,"_hammerjs"],[111,28,117,26],[111,29,117,27,"default"],[111,36,117,34],[111,37,117,35,"INPUT_MOVE"],[111,47,117,45],[112,8,118,6,"isFirst"],[112,15,118,13],[112,17,118,15],[113,6,119,4],[113,7,119,5],[113,8,119,6],[114,4,120,2],[115,4,122,2,"forceInvalidate"],[115,19,122,17,"forceInvalidate"],[115,20,122,18,"event"],[115,25,122,23],[115,27,122,25],[116,6,123,4],[116,11,123,9],[116,12,123,10,"forceInvalidate"],[116,27,123,25],[116,28,123,26,"event"],[116,33,123,31],[116,34,123,32],[117,6,124,4,"clearTimeout"],[117,18,124,16],[117,19,124,17],[117,23,124,21],[117,24,124,22,"visualFeedbackTimer"],[117,43,124,41],[117,44,124,42],[118,6,125,4],[118,10,125,8],[118,11,125,9,"visualFeedbackTimer"],[118,30,125,28],[118,33,125,31],[118,37,125,35],[119,6,126,4],[119,10,126,8],[119,11,126,9,"initialEvent"],[119,23,126,21],[119,26,126,24],[119,30,126,28],[120,4,127,2],[121,4,129,2,"onRawEvent"],[121,14,129,12,"onRawEvent"],[121,15,129,13,"ev"],[121,17,129,15],[121,19,129,17],[122,6,130,4],[122,11,130,9],[122,12,130,10,"onRawEvent"],[122,22,130,20],[122,23,130,21,"ev"],[122,25,130,23],[122,26,130,24],[123,6,132,4],[123,10,132,8],[123,14,132,12],[123,15,132,13,"isGestureRunning"],[123,31,132,29],[123,33,132,31],[124,8,133,6],[124,12,133,10,"ev"],[124,14,133,12],[124,15,133,13,"isFinal"],[124,22,133,20],[124,24,133,22],[125,10,134,8],[125,14,134,12,"timeout"],[125,21,134,19],[126,10,136,8],[126,14,136,12],[126,18,136,16],[126,19,136,17,"visualFeedbackTimer"],[126,38,136,36],[126,40,136,38],[127,12,137,10],[128,12,138,10],[129,12,139,10],[130,12,140,10,"timeout"],[130,19,140,17],[130,22,140,20,"_constants"],[130,32,140,30],[130,33,140,31,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[130,68,140,66],[131,12,141,10],[131,16,141,14],[131,17,141,15,"sendGestureStartedEvent"],[131,40,141,38],[131,41,141,39],[131,45,141,43],[131,46,141,44,"initialEvent"],[131,58,141,56],[131,59,141,57],[132,12,142,10],[132,16,142,14],[132,17,142,15,"initialEvent"],[132,29,142,27],[132,32,142,30],[132,36,142,34],[133,10,143,8],[134,10,145,8],[134,11,145,9],[134,12,145,10],[134,14,145,12,"_utils"],[134,20,145,18],[134,21,145,19,"fireAfterInterval"],[134,38,145,36],[134,40,145,38],[134,46,145,44],[135,12,146,10],[135,16,146,14],[135,17,146,15,"sendEvent"],[135,26,146,24],[135,27,146,25],[136,14,146,27],[136,17,146,30,"ev"],[136,19,146,32],[137,14,147,12,"eventType"],[137,23,147,21],[137,25,147,23,"_hammerjs"],[137,34,147,32],[137,35,147,33,"default"],[137,42,147,40],[137,43,147,41,"INPUT_END"],[137,52,147,50],[138,14,148,12,"isFinal"],[138,21,148,19],[138,23,148,21],[139,12,149,10],[139,13,149,11],[139,14,149,12],[139,15,149,13],[139,16,149,14],[141,12,151,10],[141,16,151,14],[141,17,151,15,"onGestureEnded"],[141,31,151,29],[141,32,151,30],[141,33,151,31],[142,10,152,8],[142,11,152,9],[142,13,152,11,"timeout"],[142,20,152,18],[142,21,152,19],[143,8,153,6],[143,9,153,7],[143,15,153,13],[144,10,154,8],[144,14,154,12],[144,15,154,13,"sendEvent"],[144,24,154,22],[144,25,154,23],[145,12,154,25],[145,15,154,28,"ev"],[145,17,154,30],[146,12,155,10,"eventType"],[146,21,155,19],[146,23,155,21,"_hammerjs"],[146,32,155,30],[146,33,155,31,"default"],[146,40,155,38],[146,41,155,39,"INPUT_MOVE"],[146,51,155,49],[147,12,156,10,"isFinal"],[147,19,156,17],[147,21,156,19],[148,10,157,8],[148,11,157,9],[148,12,157,10],[149,8,158,6],[150,6,159,4],[151,4,160,2],[152,4,162,2,"updateGestureConfig"],[152,23,162,21,"updateGestureConfig"],[152,24,162,22],[153,6,163,4,"shouldActivateOnStart"],[153,27,163,25],[153,30,163,28],[153,35,163,33],[154,6,164,4,"disallowInterruption"],[154,26,164,24],[154,29,164,27],[154,34,164,32],[155,6,165,4,"shouldCancelWhenOutside"],[155,29,165,27],[155,32,165,30],[155,36,165,34],[156,6,166,4,"minDurationMs"],[156,19,166,17],[156,22,166,20,"Number"],[156,28,166,26],[156,29,166,27,"NaN"],[156,32,166,30],[157,6,167,4,"maxDist"],[157,13,167,11],[157,16,167,14,"Number"],[157,22,167,20],[157,23,167,21,"NaN"],[157,26,167,24],[158,6,168,4,"minPointers"],[158,17,168,15],[158,20,168,18],[158,21,168,19],[159,6,169,4,"maxPointers"],[159,17,169,15],[159,20,169,18],[159,21,169,19],[160,6,170,4],[160,9,170,7,"props"],[161,4,171,2],[161,5,171,3],[161,7,171,5],[162,6,172,4],[162,13,172,11],[162,18,172,16],[162,19,172,17,"updateGestureConfig"],[162,38,172,36],[162,39,172,37],[163,8,173,6,"shouldActivateOnStart"],[163,29,173,27],[164,8,174,6,"disallowInterruption"],[164,28,174,26],[165,8,175,6,"shouldCancelWhenOutside"],[165,31,175,29],[166,8,176,6,"minDurationMs"],[166,21,176,19],[167,8,177,6,"maxDist"],[167,15,177,13],[168,8,178,6,"minPointers"],[168,19,178,17],[169,8,179,6,"maxPointers"],[169,19,179,17],[170,8,180,6],[170,11,180,9,"props"],[171,6,181,4],[171,7,181,5],[171,8,181,6],[172,4,182,2],[173,2,184,0],[174,2,186,0],[174,6,186,4,"_default"],[174,14,186,12],[174,17,186,15,"PressGestureHandler"],[174,36,186,34],[175,2,187,0,"exports"],[175,9,187,7],[175,10,187,8,"default"],[175,17,187,15],[175,20,187,18,"_default"],[175,28,187,26],[176,0,187,27],[176,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_defineProperty","PressGestureHandler","constructor","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","<anonymous>","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA;ACiB,+FD;AEE,iNF;AGE;ECC;GDQ;EEE;GFE;EGE;GHG;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPK;EQE;GRO;ESE;GTW;EUE;GVK;EWE;GXE;EYE;GZK;EaE;6DCI;KDG;GbC;EeE;GfO;EgBE;GhBK;EiBE;sCHgB;SGO;GjBQ;EkBE;GlBoB;CHE"},"hasCjsExports":true},"type":"js/module"}]}