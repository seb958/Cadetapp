{"dependencies":[{"name":"./EventManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":42,"index":253}}],"key":"+tTRfUGWY5rcrw6ZVLEgvlFTMQc=","exportNames":["*"],"imports":1}},{"name":"../../handlers/gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":254},"end":{"line":4,"column":66,"index":320}}],"key":"xaaqCODkGxAwJpzGKT+4pXLUAXk=","exportNames":["*"],"imports":1}},{"name":"../interfaces","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":321},"end":{"line":5,"column":43,"index":364}}],"key":"GMKh3a5g5xNaAog15vl07v6pG2U=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":365},"end":{"line":6,"column":107,"index":472}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../../PointerType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":473},"end":{"line":7,"column":48,"index":521}}],"key":"PNpP2j+zRZwLQ3w6ZmXPMJNakiU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return PointerEventManager;\n    }\n  });\n  var _EventManager = require(_dependencyMap[0], \"./EventManager\");\n  var EventManager = _interopDefault(_EventManager);\n  var _handlersGestureHandlerCommon = require(_dependencyMap[1], \"../../handlers/gestureHandlerCommon\");\n  var _interfaces = require(_dependencyMap[2], \"../interfaces\");\n  var _utils = require(_dependencyMap[3], \"../utils\");\n  var _PointerType = require(_dependencyMap[4], \"../../PointerType\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const POINTER_CAPTURE_EXCLUDE_LIST = new Set(['SELECT', 'INPUT']);\n  class PointerEventManager extends EventManager.default {\n    constructor(view) {\n      super(view);\n      _defineProperty(this, \"trackedPointers\", new Set());\n      _defineProperty(this, \"mouseButtonsMapper\", new Map());\n      _defineProperty(this, \"lastPosition\", void 0);\n      _defineProperty(this, \"pointerDownCallback\", event => {\n        if (!(0, _utils.isPointerInBounds)(this.view, {\n          x: event.clientX,\n          y: event.clientY\n        })) {\n          return;\n        }\n        const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.DOWN);\n        const target = event.target;\n        if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n          target.setPointerCapture(adaptedEvent.pointerId);\n        }\n        this.markAsInBounds(adaptedEvent.pointerId);\n        this.trackedPointers.add(adaptedEvent.pointerId);\n        if (++this.activePointersCounter > 1) {\n          adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_DOWN;\n          this.onPointerAdd(adaptedEvent);\n        } else {\n          this.onPointerDown(adaptedEvent);\n        }\n      });\n      _defineProperty(this, \"pointerUpCallback\", event => {\n        // When we call reset on gesture handlers, it also resets their event managers\n        // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n        // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n        // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n        if (this.activePointersCounter === 0) {\n          return;\n        }\n        const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.UP);\n        const target = event.target;\n        if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n          target.releasePointerCapture(adaptedEvent.pointerId);\n        }\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n        this.trackedPointers.delete(adaptedEvent.pointerId);\n        if (--this.activePointersCounter > 0) {\n          adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_UP;\n          this.onPointerRemove(adaptedEvent);\n        } else {\n          this.onPointerUp(adaptedEvent);\n        }\n      });\n      _defineProperty(this, \"pointerMoveCallback\", event => {\n        const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.MOVE);\n        const target = event.target; // You may be wondering why are we setting pointer capture here, when we\n        // already set it in `pointerdown` handler. Well, that's a great question,\n        // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n        // says that the requirement for `setPointerCapture` to work is that pointer\n        // must be in 'active buttons state`, otherwise it will fail silently, which\n        // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n        // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n        // will succeed, for some reason. Since it fails silently, we don't actually know\n        // if it worked or not (there's `gotpointercapture` event, but the complexity of\n        // incorporating it here seems stupid), so we just call it again here, every time\n        // pointer moves until it succeeds.\n        // God, I do love web development.\n\n        if (!target.hasPointerCapture(event.pointerId) && !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n          target.setPointerCapture(event.pointerId);\n        }\n        const inBounds = (0, _utils.isPointerInBounds)(this.view, {\n          x: adaptedEvent.x,\n          y: adaptedEvent.y\n        });\n        const pointerIndex = this.pointersInBounds.indexOf(adaptedEvent.pointerId);\n        if (inBounds) {\n          if (pointerIndex < 0) {\n            adaptedEvent.eventType = _interfaces.EventTypes.ENTER;\n            this.onPointerEnter(adaptedEvent);\n            this.markAsInBounds(adaptedEvent.pointerId);\n          } else {\n            this.onPointerMove(adaptedEvent);\n          }\n        } else {\n          if (pointerIndex >= 0) {\n            adaptedEvent.eventType = _interfaces.EventTypes.LEAVE;\n            this.onPointerLeave(adaptedEvent);\n            this.markAsOutOfBounds(adaptedEvent.pointerId);\n          } else {\n            this.onPointerOutOfBounds(adaptedEvent);\n          }\n        }\n        this.lastPosition.x = event.x;\n        this.lastPosition.y = event.y;\n      });\n      _defineProperty(this, \"pointerCancelCallback\", event => {\n        const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.CANCEL);\n        this.onPointerCancel(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n        this.activePointersCounter = 0;\n        this.trackedPointers.clear();\n      });\n      _defineProperty(this, \"pointerEnterCallback\", event => {\n        const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.ENTER);\n        this.onPointerMoveOver(adaptedEvent);\n      });\n      _defineProperty(this, \"pointerLeaveCallback\", event => {\n        const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.LEAVE);\n        this.onPointerMoveOut(adaptedEvent);\n      });\n      _defineProperty(this, \"lostPointerCaptureCallback\", event => {\n        const adaptedEvent = this.mapEvent(event, _interfaces.EventTypes.CANCEL);\n        if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n          // In some cases the `pointerup` event is not fired, but `lostpointercapture` is.\n          // Here we simulate the `pointercancel` event to make sure the gesture handler stops tracking it.\n          this.onPointerCancel(adaptedEvent);\n          this.activePointersCounter = 0;\n          this.trackedPointers.clear();\n        }\n      });\n      this.mouseButtonsMapper.set(0, _handlersGestureHandlerCommon.MouseButton.LEFT);\n      this.mouseButtonsMapper.set(1, _handlersGestureHandlerCommon.MouseButton.MIDDLE);\n      this.mouseButtonsMapper.set(2, _handlersGestureHandlerCommon.MouseButton.RIGHT);\n      this.mouseButtonsMapper.set(3, _handlersGestureHandlerCommon.MouseButton.BUTTON_4);\n      this.mouseButtonsMapper.set(4, _handlersGestureHandlerCommon.MouseButton.BUTTON_5);\n      this.lastPosition = {\n        x: -Infinity,\n        y: -Infinity\n      };\n    }\n    registerListeners() {\n      this.view.addEventListener('pointerdown', this.pointerDownCallback);\n      this.view.addEventListener('pointerup', this.pointerUpCallback);\n      this.view.addEventListener('pointermove', this.pointerMoveCallback);\n      this.view.addEventListener('pointercancel', this.pointerCancelCallback); // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n      // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n      // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n      // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n\n      this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n      this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n      this.view.addEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n    }\n    unregisterListeners() {\n      this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n      this.view.removeEventListener('pointerup', this.pointerUpCallback);\n      this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n      this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n      this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n      this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n      this.view.removeEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n    }\n    mapEvent(event, eventType) {\n      var _PointerTypeMapping$g;\n      const rect = this.view.getBoundingClientRect();\n      const {\n        scaleX,\n        scaleY\n      } = (0, _utils.calculateViewScale)(this.view);\n      return {\n        x: event.clientX,\n        y: event.clientY,\n        offsetX: (event.clientX - rect.left) / scaleX,\n        offsetY: (event.clientY - rect.top) / scaleY,\n        pointerId: event.pointerId,\n        eventType: eventType,\n        pointerType: (_PointerTypeMapping$g = _utils.PointerTypeMapping.get(event.pointerType)) !== null && _PointerTypeMapping$g !== void 0 ? _PointerTypeMapping$g : _PointerType.PointerType.OTHER,\n        button: this.mouseButtonsMapper.get(event.button),\n        time: event.timeStamp,\n        stylusData: (0, _utils.tryExtractStylusData)(event)\n      };\n    }\n    resetManager() {\n      super.resetManager();\n      this.trackedPointers.clear();\n    }\n  }\n});","lineCount":212,"map":[[12,2,9,15,"Object"],[12,8,9,15],[12,9,9,15,"defineProperty"],[12,23,9,15],[12,24,9,15,"exports"],[12,31,9,15],[13,4,9,15,"enumerable"],[13,14,9,15],[14,4,9,15,"get"],[14,7,9,15],[14,18,9,15,"get"],[14,19,9,15],[15,6,9,15],[15,13,9,15,"PointerEventManager"],[15,32,9,15],[16,4,9,15],[17,2,9,15],[18,2,3,0],[18,6,3,0,"_EventManager"],[18,19,3,0],[18,22,3,0,"require"],[18,29,3,0],[18,30,3,0,"_dependencyMap"],[18,44,3,0],[19,2,3,0],[19,6,3,0,"EventManager"],[19,18,3,0],[19,21,3,0,"_interopDefault"],[19,36,3,0],[19,37,3,0,"_EventManager"],[19,50,3,0],[20,2,4,0],[20,6,4,0,"_handlersGestureHandlerCommon"],[20,35,4,0],[20,38,4,0,"require"],[20,45,4,0],[20,46,4,0,"_dependencyMap"],[20,60,4,0],[21,2,5,0],[21,6,5,0,"_interfaces"],[21,17,5,0],[21,20,5,0,"require"],[21,27,5,0],[21,28,5,0,"_dependencyMap"],[21,42,5,0],[22,2,6,0],[22,6,6,0,"_utils"],[22,12,6,0],[22,15,6,0,"require"],[22,22,6,0],[22,23,6,0,"_dependencyMap"],[22,37,6,0],[23,2,7,0],[23,6,7,0,"_PointerType"],[23,18,7,0],[23,21,7,0,"require"],[23,28,7,0],[23,29,7,0,"_dependencyMap"],[23,43,7,0],[24,2,1,0],[24,11,1,9,"_defineProperty"],[24,26,1,24,"_defineProperty"],[24,27,1,25,"obj"],[24,30,1,28],[24,32,1,30,"key"],[24,35,1,33],[24,37,1,35,"value"],[24,42,1,40],[24,44,1,42],[25,4,1,44],[25,8,1,48,"key"],[25,11,1,51],[25,15,1,55,"obj"],[25,18,1,58],[25,20,1,60],[26,6,1,62,"Object"],[26,12,1,68],[26,13,1,69,"defineProperty"],[26,27,1,83],[26,28,1,84,"obj"],[26,31,1,87],[26,33,1,89,"key"],[26,36,1,92],[26,38,1,94],[27,8,1,96,"value"],[27,13,1,101],[27,15,1,103,"value"],[27,20,1,108],[28,8,1,110,"enumerable"],[28,18,1,120],[28,20,1,122],[28,24,1,126],[29,8,1,128,"configurable"],[29,20,1,140],[29,22,1,142],[29,26,1,146],[30,8,1,148,"writable"],[30,16,1,156],[30,18,1,158],[31,6,1,163],[31,7,1,164],[31,8,1,165],[32,4,1,167],[32,5,1,168],[32,11,1,174],[33,6,1,176,"obj"],[33,9,1,179],[33,10,1,180,"key"],[33,13,1,183],[33,14,1,184],[33,17,1,187,"value"],[33,22,1,192],[34,4,1,194],[35,4,1,196],[35,11,1,203,"obj"],[35,14,1,206],[36,2,1,208],[37,2,8,0],[37,8,8,6,"POINTER_CAPTURE_EXCLUDE_LIST"],[37,36,8,34],[37,39,8,37],[37,43,8,41,"Set"],[37,46,8,44],[37,47,8,45],[37,48,8,46],[37,56,8,54],[37,58,8,56],[37,65,8,63],[37,66,8,64],[37,67,8,65],[38,2,9,15],[38,8,9,21,"PointerEventManager"],[38,27,9,40],[38,36,9,49,"EventManager"],[38,48,9,61],[38,49,9,61,"default"],[38,56,9,61],[38,57,9,62],[39,4,10,2,"constructor"],[39,15,10,13,"constructor"],[39,16,10,14,"view"],[39,20,10,18],[39,22,10,20],[40,6,11,4],[40,11,11,9],[40,12,11,10,"view"],[40,16,11,14],[40,17,11,15],[41,6,13,4,"_defineProperty"],[41,21,13,19],[41,22,13,20],[41,26,13,24],[41,28,13,26],[41,45,13,43],[41,47,13,45],[41,51,13,49,"Set"],[41,54,13,52],[41,55,13,53],[41,56,13,54],[41,57,13,55],[42,6,15,4,"_defineProperty"],[42,21,15,19],[42,22,15,20],[42,26,15,24],[42,28,15,26],[42,48,15,46],[42,50,15,48],[42,54,15,52,"Map"],[42,57,15,55],[42,58,15,56],[42,59,15,57],[42,60,15,58],[43,6,17,4,"_defineProperty"],[43,21,17,19],[43,22,17,20],[43,26,17,24],[43,28,17,26],[43,42,17,40],[43,44,17,42],[43,49,17,47],[43,50,17,48],[43,51,17,49],[44,6,19,4,"_defineProperty"],[44,21,19,19],[44,22,19,20],[44,26,19,24],[44,28,19,26],[44,49,19,47],[44,51,19,49,"event"],[44,56,19,54],[44,60,19,58],[45,8,20,6],[45,12,20,10],[45,13,20,11],[45,17,20,11,"isPointerInBounds"],[45,23,20,28],[45,24,20,28,"isPointerInBounds"],[45,41,20,28],[45,43,20,29],[45,47,20,33],[45,48,20,34,"view"],[45,52,20,38],[45,54,20,40],[46,10,21,8,"x"],[46,11,21,9],[46,13,21,11,"event"],[46,18,21,16],[46,19,21,17,"clientX"],[46,26,21,24],[47,10,22,8,"y"],[47,11,22,9],[47,13,22,11,"event"],[47,18,22,16],[47,19,22,17,"clientY"],[48,8,23,6],[48,9,23,7],[48,10,23,8],[48,12,23,10],[49,10,24,8],[50,8,25,6],[51,8,27,6],[51,14,27,12,"adaptedEvent"],[51,26,27,24],[51,29,27,27],[51,33,27,31],[51,34,27,32,"mapEvent"],[51,42,27,40],[51,43,27,41,"event"],[51,48,27,46],[51,50,27,48,"EventTypes"],[51,61,27,58],[51,62,27,58,"EventTypes"],[51,72,27,58],[51,73,27,59,"DOWN"],[51,77,27,63],[51,78,27,64],[52,8,28,6],[52,14,28,12,"target"],[52,20,28,18],[52,23,28,21,"event"],[52,28,28,26],[52,29,28,27,"target"],[52,35,28,33],[53,8,30,6],[53,12,30,10],[53,13,30,11,"POINTER_CAPTURE_EXCLUDE_LIST"],[53,41,30,39],[53,42,30,40,"has"],[53,45,30,43],[53,46,30,44,"target"],[53,52,30,50],[53,53,30,51,"tagName"],[53,60,30,58],[53,61,30,59],[53,63,30,61],[54,10,31,8,"target"],[54,16,31,14],[54,17,31,15,"setPointerCapture"],[54,34,31,32],[54,35,31,33,"adaptedEvent"],[54,47,31,45],[54,48,31,46,"pointerId"],[54,57,31,55],[54,58,31,56],[55,8,32,6],[56,8,34,6],[56,12,34,10],[56,13,34,11,"markAsInBounds"],[56,27,34,25],[56,28,34,26,"adaptedEvent"],[56,40,34,38],[56,41,34,39,"pointerId"],[56,50,34,48],[56,51,34,49],[57,8,35,6],[57,12,35,10],[57,13,35,11,"trackedPointers"],[57,28,35,26],[57,29,35,27,"add"],[57,32,35,30],[57,33,35,31,"adaptedEvent"],[57,45,35,43],[57,46,35,44,"pointerId"],[57,55,35,53],[57,56,35,54],[58,8,37,6],[58,12,37,10],[58,14,37,12],[58,18,37,16],[58,19,37,17,"activePointersCounter"],[58,40,37,38],[58,43,37,41],[58,44,37,42],[58,46,37,44],[59,10,38,8,"adaptedEvent"],[59,22,38,20],[59,23,38,21,"eventType"],[59,32,38,30],[59,35,38,33,"EventTypes"],[59,46,38,43],[59,47,38,43,"EventTypes"],[59,57,38,43],[59,58,38,44,"ADDITIONAL_POINTER_DOWN"],[59,81,38,67],[60,10,39,8],[60,14,39,12],[60,15,39,13,"onPointerAdd"],[60,27,39,25],[60,28,39,26,"adaptedEvent"],[60,40,39,38],[60,41,39,39],[61,8,40,6],[61,9,40,7],[61,15,40,13],[62,10,41,8],[62,14,41,12],[62,15,41,13,"onPointerDown"],[62,28,41,26],[62,29,41,27,"adaptedEvent"],[62,41,41,39],[62,42,41,40],[63,8,42,6],[64,6,43,4],[64,7,43,5],[64,8,43,6],[65,6,45,4,"_defineProperty"],[65,21,45,19],[65,22,45,20],[65,26,45,24],[65,28,45,26],[65,47,45,45],[65,49,45,47,"event"],[65,54,45,52],[65,58,45,56],[66,8,46,6],[67,8,47,6],[68,8,48,6],[69,8,49,6],[70,8,50,6],[70,12,50,10],[70,16,50,14],[70,17,50,15,"activePointersCounter"],[70,38,50,36],[70,43,50,41],[70,44,50,42],[70,46,50,44],[71,10,51,8],[72,8,52,6],[73,8,54,6],[73,14,54,12,"adaptedEvent"],[73,26,54,24],[73,29,54,27],[73,33,54,31],[73,34,54,32,"mapEvent"],[73,42,54,40],[73,43,54,41,"event"],[73,48,54,46],[73,50,54,48,"EventTypes"],[73,61,54,58],[73,62,54,58,"EventTypes"],[73,72,54,58],[73,73,54,59,"UP"],[73,75,54,61],[73,76,54,62],[74,8,55,6],[74,14,55,12,"target"],[74,20,55,18],[74,23,55,21,"event"],[74,28,55,26],[74,29,55,27,"target"],[74,35,55,33],[75,8,57,6],[75,12,57,10],[75,13,57,11,"POINTER_CAPTURE_EXCLUDE_LIST"],[75,41,57,39],[75,42,57,40,"has"],[75,45,57,43],[75,46,57,44,"target"],[75,52,57,50],[75,53,57,51,"tagName"],[75,60,57,58],[75,61,57,59],[75,63,57,61],[76,10,58,8,"target"],[76,16,58,14],[76,17,58,15,"releasePointerCapture"],[76,38,58,36],[76,39,58,37,"adaptedEvent"],[76,51,58,49],[76,52,58,50,"pointerId"],[76,61,58,59],[76,62,58,60],[77,8,59,6],[78,8,61,6],[78,12,61,10],[78,13,61,11,"markAsOutOfBounds"],[78,30,61,28],[78,31,61,29,"adaptedEvent"],[78,43,61,41],[78,44,61,42,"pointerId"],[78,53,61,51],[78,54,61,52],[79,8,62,6],[79,12,62,10],[79,13,62,11,"trackedPointers"],[79,28,62,26],[79,29,62,27,"delete"],[79,35,62,33],[79,36,62,34,"adaptedEvent"],[79,48,62,46],[79,49,62,47,"pointerId"],[79,58,62,56],[79,59,62,57],[80,8,64,6],[80,12,64,10],[80,14,64,12],[80,18,64,16],[80,19,64,17,"activePointersCounter"],[80,40,64,38],[80,43,64,41],[80,44,64,42],[80,46,64,44],[81,10,65,8,"adaptedEvent"],[81,22,65,20],[81,23,65,21,"eventType"],[81,32,65,30],[81,35,65,33,"EventTypes"],[81,46,65,43],[81,47,65,43,"EventTypes"],[81,57,65,43],[81,58,65,44,"ADDITIONAL_POINTER_UP"],[81,79,65,65],[82,10,66,8],[82,14,66,12],[82,15,66,13,"onPointerRemove"],[82,30,66,28],[82,31,66,29,"adaptedEvent"],[82,43,66,41],[82,44,66,42],[83,8,67,6],[83,9,67,7],[83,15,67,13],[84,10,68,8],[84,14,68,12],[84,15,68,13,"onPointerUp"],[84,26,68,24],[84,27,68,25,"adaptedEvent"],[84,39,68,37],[84,40,68,38],[85,8,69,6],[86,6,70,4],[86,7,70,5],[86,8,70,6],[87,6,72,4,"_defineProperty"],[87,21,72,19],[87,22,72,20],[87,26,72,24],[87,28,72,26],[87,49,72,47],[87,51,72,49,"event"],[87,56,72,54],[87,60,72,58],[88,8,73,6],[88,14,73,12,"adaptedEvent"],[88,26,73,24],[88,29,73,27],[88,33,73,31],[88,34,73,32,"mapEvent"],[88,42,73,40],[88,43,73,41,"event"],[88,48,73,46],[88,50,73,48,"EventTypes"],[88,61,73,58],[88,62,73,58,"EventTypes"],[88,72,73,58],[88,73,73,59,"MOVE"],[88,77,73,63],[88,78,73,64],[89,8,74,6],[89,14,74,12,"target"],[89,20,74,18],[89,23,74,21,"event"],[89,28,74,26],[89,29,74,27,"target"],[89,35,74,33],[89,36,74,34],[89,37,74,35],[90,8,75,6],[91,8,76,6],[92,8,77,6],[93,8,78,6],[94,8,79,6],[95,8,80,6],[96,8,81,6],[97,8,82,6],[98,8,83,6],[99,8,84,6],[100,8,85,6],[102,8,87,6],[102,12,87,10],[102,13,87,11,"target"],[102,19,87,17],[102,20,87,18,"hasPointerCapture"],[102,37,87,35],[102,38,87,36,"event"],[102,43,87,41],[102,44,87,42,"pointerId"],[102,53,87,51],[102,54,87,52],[102,58,87,56],[102,59,87,57,"POINTER_CAPTURE_EXCLUDE_LIST"],[102,87,87,85],[102,88,87,86,"has"],[102,91,87,89],[102,92,87,90,"target"],[102,98,87,96],[102,99,87,97,"tagName"],[102,106,87,104],[102,107,87,105],[102,109,87,107],[103,10,88,8,"target"],[103,16,88,14],[103,17,88,15,"setPointerCapture"],[103,34,88,32],[103,35,88,33,"event"],[103,40,88,38],[103,41,88,39,"pointerId"],[103,50,88,48],[103,51,88,49],[104,8,89,6],[105,8,91,6],[105,14,91,12,"inBounds"],[105,22,91,20],[105,25,91,23],[105,29,91,23,"isPointerInBounds"],[105,35,91,40],[105,36,91,40,"isPointerInBounds"],[105,53,91,40],[105,55,91,41],[105,59,91,45],[105,60,91,46,"view"],[105,64,91,50],[105,66,91,52],[106,10,92,8,"x"],[106,11,92,9],[106,13,92,11,"adaptedEvent"],[106,25,92,23],[106,26,92,24,"x"],[106,27,92,25],[107,10,93,8,"y"],[107,11,93,9],[107,13,93,11,"adaptedEvent"],[107,25,93,23],[107,26,93,24,"y"],[108,8,94,6],[108,9,94,7],[108,10,94,8],[109,8,95,6],[109,14,95,12,"pointerIndex"],[109,26,95,24],[109,29,95,27],[109,33,95,31],[109,34,95,32,"pointersInBounds"],[109,50,95,48],[109,51,95,49,"indexOf"],[109,58,95,56],[109,59,95,57,"adaptedEvent"],[109,71,95,69],[109,72,95,70,"pointerId"],[109,81,95,79],[109,82,95,80],[110,8,97,6],[110,12,97,10,"inBounds"],[110,20,97,18],[110,22,97,20],[111,10,98,8],[111,14,98,12,"pointerIndex"],[111,26,98,24],[111,29,98,27],[111,30,98,28],[111,32,98,30],[112,12,99,10,"adaptedEvent"],[112,24,99,22],[112,25,99,23,"eventType"],[112,34,99,32],[112,37,99,35,"EventTypes"],[112,48,99,45],[112,49,99,45,"EventTypes"],[112,59,99,45],[112,60,99,46,"ENTER"],[112,65,99,51],[113,12,100,10],[113,16,100,14],[113,17,100,15,"onPointerEnter"],[113,31,100,29],[113,32,100,30,"adaptedEvent"],[113,44,100,42],[113,45,100,43],[114,12,101,10],[114,16,101,14],[114,17,101,15,"markAsInBounds"],[114,31,101,29],[114,32,101,30,"adaptedEvent"],[114,44,101,42],[114,45,101,43,"pointerId"],[114,54,101,52],[114,55,101,53],[115,10,102,8],[115,11,102,9],[115,17,102,15],[116,12,103,10],[116,16,103,14],[116,17,103,15,"onPointerMove"],[116,30,103,28],[116,31,103,29,"adaptedEvent"],[116,43,103,41],[116,44,103,42],[117,10,104,8],[118,8,105,6],[118,9,105,7],[118,15,105,13],[119,10,106,8],[119,14,106,12,"pointerIndex"],[119,26,106,24],[119,30,106,28],[119,31,106,29],[119,33,106,31],[120,12,107,10,"adaptedEvent"],[120,24,107,22],[120,25,107,23,"eventType"],[120,34,107,32],[120,37,107,35,"EventTypes"],[120,48,107,45],[120,49,107,45,"EventTypes"],[120,59,107,45],[120,60,107,46,"LEAVE"],[120,65,107,51],[121,12,108,10],[121,16,108,14],[121,17,108,15,"onPointerLeave"],[121,31,108,29],[121,32,108,30,"adaptedEvent"],[121,44,108,42],[121,45,108,43],[122,12,109,10],[122,16,109,14],[122,17,109,15,"markAsOutOfBounds"],[122,34,109,32],[122,35,109,33,"adaptedEvent"],[122,47,109,45],[122,48,109,46,"pointerId"],[122,57,109,55],[122,58,109,56],[123,10,110,8],[123,11,110,9],[123,17,110,15],[124,12,111,10],[124,16,111,14],[124,17,111,15,"onPointerOutOfBounds"],[124,37,111,35],[124,38,111,36,"adaptedEvent"],[124,50,111,48],[124,51,111,49],[125,10,112,8],[126,8,113,6],[127,8,115,6],[127,12,115,10],[127,13,115,11,"lastPosition"],[127,25,115,23],[127,26,115,24,"x"],[127,27,115,25],[127,30,115,28,"event"],[127,35,115,33],[127,36,115,34,"x"],[127,37,115,35],[128,8,116,6],[128,12,116,10],[128,13,116,11,"lastPosition"],[128,25,116,23],[128,26,116,24,"y"],[128,27,116,25],[128,30,116,28,"event"],[128,35,116,33],[128,36,116,34,"y"],[128,37,116,35],[129,6,117,4],[129,7,117,5],[129,8,117,6],[130,6,119,4,"_defineProperty"],[130,21,119,19],[130,22,119,20],[130,26,119,24],[130,28,119,26],[130,51,119,49],[130,53,119,51,"event"],[130,58,119,56],[130,62,119,60],[131,8,120,6],[131,14,120,12,"adaptedEvent"],[131,26,120,24],[131,29,120,27],[131,33,120,31],[131,34,120,32,"mapEvent"],[131,42,120,40],[131,43,120,41,"event"],[131,48,120,46],[131,50,120,48,"EventTypes"],[131,61,120,58],[131,62,120,58,"EventTypes"],[131,72,120,58],[131,73,120,59,"CANCEL"],[131,79,120,65],[131,80,120,66],[132,8,121,6],[132,12,121,10],[132,13,121,11,"onPointerCancel"],[132,28,121,26],[132,29,121,27,"adaptedEvent"],[132,41,121,39],[132,42,121,40],[133,8,122,6],[133,12,122,10],[133,13,122,11,"markAsOutOfBounds"],[133,30,122,28],[133,31,122,29,"adaptedEvent"],[133,43,122,41],[133,44,122,42,"pointerId"],[133,53,122,51],[133,54,122,52],[134,8,123,6],[134,12,123,10],[134,13,123,11,"activePointersCounter"],[134,34,123,32],[134,37,123,35],[134,38,123,36],[135,8,124,6],[135,12,124,10],[135,13,124,11,"trackedPointers"],[135,28,124,26],[135,29,124,27,"clear"],[135,34,124,32],[135,35,124,33],[135,36,124,34],[136,6,125,4],[136,7,125,5],[136,8,125,6],[137,6,127,4,"_defineProperty"],[137,21,127,19],[137,22,127,20],[137,26,127,24],[137,28,127,26],[137,50,127,48],[137,52,127,50,"event"],[137,57,127,55],[137,61,127,59],[138,8,128,6],[138,14,128,12,"adaptedEvent"],[138,26,128,24],[138,29,128,27],[138,33,128,31],[138,34,128,32,"mapEvent"],[138,42,128,40],[138,43,128,41,"event"],[138,48,128,46],[138,50,128,48,"EventTypes"],[138,61,128,58],[138,62,128,58,"EventTypes"],[138,72,128,58],[138,73,128,59,"ENTER"],[138,78,128,64],[138,79,128,65],[139,8,129,6],[139,12,129,10],[139,13,129,11,"onPointerMoveOver"],[139,30,129,28],[139,31,129,29,"adaptedEvent"],[139,43,129,41],[139,44,129,42],[140,6,130,4],[140,7,130,5],[140,8,130,6],[141,6,132,4,"_defineProperty"],[141,21,132,19],[141,22,132,20],[141,26,132,24],[141,28,132,26],[141,50,132,48],[141,52,132,50,"event"],[141,57,132,55],[141,61,132,59],[142,8,133,6],[142,14,133,12,"adaptedEvent"],[142,26,133,24],[142,29,133,27],[142,33,133,31],[142,34,133,32,"mapEvent"],[142,42,133,40],[142,43,133,41,"event"],[142,48,133,46],[142,50,133,48,"EventTypes"],[142,61,133,58],[142,62,133,58,"EventTypes"],[142,72,133,58],[142,73,133,59,"LEAVE"],[142,78,133,64],[142,79,133,65],[143,8,134,6],[143,12,134,10],[143,13,134,11,"onPointerMoveOut"],[143,29,134,27],[143,30,134,28,"adaptedEvent"],[143,42,134,40],[143,43,134,41],[144,6,135,4],[144,7,135,5],[144,8,135,6],[145,6,137,4,"_defineProperty"],[145,21,137,19],[145,22,137,20],[145,26,137,24],[145,28,137,26],[145,56,137,54],[145,58,137,56,"event"],[145,63,137,61],[145,67,137,65],[146,8,138,6],[146,14,138,12,"adaptedEvent"],[146,26,138,24],[146,29,138,27],[146,33,138,31],[146,34,138,32,"mapEvent"],[146,42,138,40],[146,43,138,41,"event"],[146,48,138,46],[146,50,138,48,"EventTypes"],[146,61,138,58],[146,62,138,58,"EventTypes"],[146,72,138,58],[146,73,138,59,"CANCEL"],[146,79,138,65],[146,80,138,66],[147,8,140,6],[147,12,140,10],[147,16,140,14],[147,17,140,15,"trackedPointers"],[147,32,140,30],[147,33,140,31,"has"],[147,36,140,34],[147,37,140,35,"adaptedEvent"],[147,49,140,47],[147,50,140,48,"pointerId"],[147,59,140,57],[147,60,140,58],[147,62,140,60],[148,10,141,8],[149,10,142,8],[150,10,143,8],[150,14,143,12],[150,15,143,13,"onPointerCancel"],[150,30,143,28],[150,31,143,29,"adaptedEvent"],[150,43,143,41],[150,44,143,42],[151,10,144,8],[151,14,144,12],[151,15,144,13,"activePointersCounter"],[151,36,144,34],[151,39,144,37],[151,40,144,38],[152,10,145,8],[152,14,145,12],[152,15,145,13,"trackedPointers"],[152,30,145,28],[152,31,145,29,"clear"],[152,36,145,34],[152,37,145,35],[152,38,145,36],[153,8,146,6],[154,6,147,4],[154,7,147,5],[154,8,147,6],[155,6,149,4],[155,10,149,8],[155,11,149,9,"mouseButtonsMapper"],[155,29,149,27],[155,30,149,28,"set"],[155,33,149,31],[155,34,149,32],[155,35,149,33],[155,37,149,35,"MouseButton"],[155,66,149,46],[155,67,149,46,"MouseButton"],[155,78,149,46],[155,79,149,47,"LEFT"],[155,83,149,51],[155,84,149,52],[156,6,150,4],[156,10,150,8],[156,11,150,9,"mouseButtonsMapper"],[156,29,150,27],[156,30,150,28,"set"],[156,33,150,31],[156,34,150,32],[156,35,150,33],[156,37,150,35,"MouseButton"],[156,66,150,46],[156,67,150,46,"MouseButton"],[156,78,150,46],[156,79,150,47,"MIDDLE"],[156,85,150,53],[156,86,150,54],[157,6,151,4],[157,10,151,8],[157,11,151,9,"mouseButtonsMapper"],[157,29,151,27],[157,30,151,28,"set"],[157,33,151,31],[157,34,151,32],[157,35,151,33],[157,37,151,35,"MouseButton"],[157,66,151,46],[157,67,151,46,"MouseButton"],[157,78,151,46],[157,79,151,47,"RIGHT"],[157,84,151,52],[157,85,151,53],[158,6,152,4],[158,10,152,8],[158,11,152,9,"mouseButtonsMapper"],[158,29,152,27],[158,30,152,28,"set"],[158,33,152,31],[158,34,152,32],[158,35,152,33],[158,37,152,35,"MouseButton"],[158,66,152,46],[158,67,152,46,"MouseButton"],[158,78,152,46],[158,79,152,47,"BUTTON_4"],[158,87,152,55],[158,88,152,56],[159,6,153,4],[159,10,153,8],[159,11,153,9,"mouseButtonsMapper"],[159,29,153,27],[159,30,153,28,"set"],[159,33,153,31],[159,34,153,32],[159,35,153,33],[159,37,153,35,"MouseButton"],[159,66,153,46],[159,67,153,46,"MouseButton"],[159,78,153,46],[159,79,153,47,"BUTTON_5"],[159,87,153,55],[159,88,153,56],[160,6,154,4],[160,10,154,8],[160,11,154,9,"lastPosition"],[160,23,154,21],[160,26,154,24],[161,8,155,6,"x"],[161,9,155,7],[161,11,155,9],[161,12,155,10,"Infinity"],[161,20,155,18],[162,8,156,6,"y"],[162,9,156,7],[162,11,156,9],[162,12,156,10,"Infinity"],[163,6,157,4],[163,7,157,5],[164,4,158,2],[165,4,160,2,"registerListeners"],[165,21,160,19,"registerListeners"],[165,22,160,19],[165,24,160,22],[166,6,161,4],[166,10,161,8],[166,11,161,9,"view"],[166,15,161,13],[166,16,161,14,"addEventListener"],[166,32,161,30],[166,33,161,31],[166,46,161,44],[166,48,161,46],[166,52,161,50],[166,53,161,51,"pointerDownCallback"],[166,72,161,70],[166,73,161,71],[167,6,162,4],[167,10,162,8],[167,11,162,9,"view"],[167,15,162,13],[167,16,162,14,"addEventListener"],[167,32,162,30],[167,33,162,31],[167,44,162,42],[167,46,162,44],[167,50,162,48],[167,51,162,49,"pointerUpCallback"],[167,68,162,66],[167,69,162,67],[168,6,163,4],[168,10,163,8],[168,11,163,9,"view"],[168,15,163,13],[168,16,163,14,"addEventListener"],[168,32,163,30],[168,33,163,31],[168,46,163,44],[168,48,163,46],[168,52,163,50],[168,53,163,51,"pointerMoveCallback"],[168,72,163,70],[168,73,163,71],[169,6,164,4],[169,10,164,8],[169,11,164,9,"view"],[169,15,164,13],[169,16,164,14,"addEventListener"],[169,32,164,30],[169,33,164,31],[169,48,164,46],[169,50,164,48],[169,54,164,52],[169,55,164,53,"pointerCancelCallback"],[169,76,164,74],[169,77,164,75],[169,78,164,76],[169,79,164,77],[170,6,165,4],[171,6,166,4],[172,6,167,4],[174,6,169,4],[174,10,169,8],[174,11,169,9,"view"],[174,15,169,13],[174,16,169,14,"addEventListener"],[174,32,169,30],[174,33,169,31],[174,47,169,45],[174,49,169,47],[174,53,169,51],[174,54,169,52,"pointerEnterCallback"],[174,74,169,72],[174,75,169,73],[175,6,170,4],[175,10,170,8],[175,11,170,9,"view"],[175,15,170,13],[175,16,170,14,"addEventListener"],[175,32,170,30],[175,33,170,31],[175,47,170,45],[175,49,170,47],[175,53,170,51],[175,54,170,52,"pointerLeaveCallback"],[175,74,170,72],[175,75,170,73],[176,6,171,4],[176,10,171,8],[176,11,171,9,"view"],[176,15,171,13],[176,16,171,14,"addEventListener"],[176,32,171,30],[176,33,171,31],[176,53,171,51],[176,55,171,53],[176,59,171,57],[176,60,171,58,"lostPointerCaptureCallback"],[176,86,171,84],[176,87,171,85],[177,4,172,2],[178,4,174,2,"unregisterListeners"],[178,23,174,21,"unregisterListeners"],[178,24,174,21],[178,26,174,24],[179,6,175,4],[179,10,175,8],[179,11,175,9,"view"],[179,15,175,13],[179,16,175,14,"removeEventListener"],[179,35,175,33],[179,36,175,34],[179,49,175,47],[179,51,175,49],[179,55,175,53],[179,56,175,54,"pointerDownCallback"],[179,75,175,73],[179,76,175,74],[180,6,176,4],[180,10,176,8],[180,11,176,9,"view"],[180,15,176,13],[180,16,176,14,"removeEventListener"],[180,35,176,33],[180,36,176,34],[180,47,176,45],[180,49,176,47],[180,53,176,51],[180,54,176,52,"pointerUpCallback"],[180,71,176,69],[180,72,176,70],[181,6,177,4],[181,10,177,8],[181,11,177,9,"view"],[181,15,177,13],[181,16,177,14,"removeEventListener"],[181,35,177,33],[181,36,177,34],[181,49,177,47],[181,51,177,49],[181,55,177,53],[181,56,177,54,"pointerMoveCallback"],[181,75,177,73],[181,76,177,74],[182,6,178,4],[182,10,178,8],[182,11,178,9,"view"],[182,15,178,13],[182,16,178,14,"removeEventListener"],[182,35,178,33],[182,36,178,34],[182,51,178,49],[182,53,178,51],[182,57,178,55],[182,58,178,56,"pointerCancelCallback"],[182,79,178,77],[182,80,178,78],[183,6,179,4],[183,10,179,8],[183,11,179,9,"view"],[183,15,179,13],[183,16,179,14,"removeEventListener"],[183,35,179,33],[183,36,179,34],[183,50,179,48],[183,52,179,50],[183,56,179,54],[183,57,179,55,"pointerEnterCallback"],[183,77,179,75],[183,78,179,76],[184,6,180,4],[184,10,180,8],[184,11,180,9,"view"],[184,15,180,13],[184,16,180,14,"removeEventListener"],[184,35,180,33],[184,36,180,34],[184,50,180,48],[184,52,180,50],[184,56,180,54],[184,57,180,55,"pointerLeaveCallback"],[184,77,180,75],[184,78,180,76],[185,6,181,4],[185,10,181,8],[185,11,181,9,"view"],[185,15,181,13],[185,16,181,14,"removeEventListener"],[185,35,181,33],[185,36,181,34],[185,56,181,54],[185,58,181,56],[185,62,181,60],[185,63,181,61,"lostPointerCaptureCallback"],[185,89,181,87],[185,90,181,88],[186,4,182,2],[187,4,184,2,"mapEvent"],[187,12,184,10,"mapEvent"],[187,13,184,11,"event"],[187,18,184,16],[187,20,184,18,"eventType"],[187,29,184,27],[187,31,184,29],[188,6,185,4],[188,10,185,8,"_PointerTypeMapping$g"],[188,31,185,29],[189,6,187,4],[189,12,187,10,"rect"],[189,16,187,14],[189,19,187,17],[189,23,187,21],[189,24,187,22,"view"],[189,28,187,26],[189,29,187,27,"getBoundingClientRect"],[189,50,187,48],[189,51,187,49],[189,52,187,50],[190,6,188,4],[190,12,188,10],[191,8,189,6,"scaleX"],[191,14,189,12],[192,8,190,6,"scaleY"],[193,6,191,4],[193,7,191,5],[193,10,191,8],[193,14,191,8,"calculateViewScale"],[193,20,191,26],[193,21,191,26,"calculateViewScale"],[193,39,191,26],[193,41,191,27],[193,45,191,31],[193,46,191,32,"view"],[193,50,191,36],[193,51,191,37],[194,6,192,4],[194,13,192,11],[195,8,193,6,"x"],[195,9,193,7],[195,11,193,9,"event"],[195,16,193,14],[195,17,193,15,"clientX"],[195,24,193,22],[196,8,194,6,"y"],[196,9,194,7],[196,11,194,9,"event"],[196,16,194,14],[196,17,194,15,"clientY"],[196,24,194,22],[197,8,195,6,"offsetX"],[197,15,195,13],[197,17,195,15],[197,18,195,16,"event"],[197,23,195,21],[197,24,195,22,"clientX"],[197,31,195,29],[197,34,195,32,"rect"],[197,38,195,36],[197,39,195,37,"left"],[197,43,195,41],[197,47,195,45,"scaleX"],[197,53,195,51],[198,8,196,6,"offsetY"],[198,15,196,13],[198,17,196,15],[198,18,196,16,"event"],[198,23,196,21],[198,24,196,22,"clientY"],[198,31,196,29],[198,34,196,32,"rect"],[198,38,196,36],[198,39,196,37,"top"],[198,42,196,40],[198,46,196,44,"scaleY"],[198,52,196,50],[199,8,197,6,"pointerId"],[199,17,197,15],[199,19,197,17,"event"],[199,24,197,22],[199,25,197,23,"pointerId"],[199,34,197,32],[200,8,198,6,"eventType"],[200,17,198,15],[200,19,198,17,"eventType"],[200,28,198,26],[201,8,199,6,"pointerType"],[201,19,199,17],[201,21,199,19],[201,22,199,20,"_PointerTypeMapping$g"],[201,43,199,41],[201,46,199,44,"PointerTypeMapping"],[201,52,199,62],[201,53,199,62,"PointerTypeMapping"],[201,71,199,62],[201,72,199,63,"get"],[201,75,199,66],[201,76,199,67,"event"],[201,81,199,72],[201,82,199,73,"pointerType"],[201,93,199,84],[201,94,199,85],[201,100,199,91],[201,104,199,95],[201,108,199,99,"_PointerTypeMapping$g"],[201,129,199,120],[201,134,199,125],[201,139,199,130],[201,140,199,131],[201,143,199,134,"_PointerTypeMapping$g"],[201,164,199,155],[201,167,199,158,"PointerType"],[201,179,199,169],[201,180,199,169,"PointerType"],[201,191,199,169],[201,192,199,170,"OTHER"],[201,197,199,175],[202,8,200,6,"button"],[202,14,200,12],[202,16,200,14],[202,20,200,18],[202,21,200,19,"mouseButtonsMapper"],[202,39,200,37],[202,40,200,38,"get"],[202,43,200,41],[202,44,200,42,"event"],[202,49,200,47],[202,50,200,48,"button"],[202,56,200,54],[202,57,200,55],[203,8,201,6,"time"],[203,12,201,10],[203,14,201,12,"event"],[203,19,201,17],[203,20,201,18,"timeStamp"],[203,29,201,27],[204,8,202,6,"stylusData"],[204,18,202,16],[204,20,202,18],[204,24,202,18,"tryExtractStylusData"],[204,30,202,38],[204,31,202,38,"tryExtractStylusData"],[204,51,202,38],[204,53,202,39,"event"],[204,58,202,44],[205,6,203,4],[205,7,203,5],[206,4,204,2],[207,4,206,2,"resetManager"],[207,16,206,14,"resetManager"],[207,17,206,14],[207,19,206,17],[208,6,207,4],[208,11,207,9],[208,12,207,10,"resetManager"],[208,24,207,22],[208,25,207,23],[208,26,207,24],[209,6,208,4],[209,10,208,8],[209,11,208,9,"trackedPointers"],[209,26,208,24],[209,27,208,25,"clear"],[209,32,208,30],[209,33,208,31],[209,34,208,32],[210,4,209,2],[211,2,211,0],[212,0,211,1],[212,3]],"functionMap":{"names":["_defineProperty","<global>","PointerEventManager","constructor","_defineProperty$argument_2","registerListeners","unregisterListeners","mapEvent","resetManager"],"mappings":"AAA,iNC;eCQ;ECC;iDCS;KDwB;+CCE;KDyB;iDCE;KD6C;mDCE;KDM;kDCE;KDG;kDCE;KDG;wDCE;KDU;GDW;EGE;GHY;EIE;GJQ;EKE;GLoB;EME;GNG;CDE"},"hasCjsExports":false},"type":"js/module"}]}