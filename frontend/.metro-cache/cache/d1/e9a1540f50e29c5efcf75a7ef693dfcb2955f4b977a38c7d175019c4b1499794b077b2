{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":36,"index":471},"end":{"line":16,"column":52,"index":487}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.INT32_MAX = void 0;\n  exports.deepEqual = deepEqual;\n  exports.hasProperty = hasProperty;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  var _react = _interopRequireDefault(require(_dependencyMap[0], \"react\"));\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    const previousArr = [null];\n    const currentArr = [...array];\n    const transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const previous = previousArr[i];\n      const transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  }\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  }\n\n  // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n  function isFabric() {\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!global?.nativeFabricUIManager;\n  }\n  function isReact19() {\n    return _react.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    const localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const INT32_MAX = exports.INT32_MAX = 2 ** 31 - 1;\n});","lineCount":100,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"INT32_MAX"],[7,19,6,17],[7,22,6,20],[7,27,6,25],[7,28,6,26],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"deepEqual"],[8,19,7,17],[8,22,7,20,"deepEqual"],[8,31,7,29],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"hasProperty"],[9,21,8,19],[9,24,8,22,"hasProperty"],[9,35,8,33],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"isFabric"],[10,18,9,16],[10,21,9,19,"isFabric"],[10,29,9,27],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"isReact19"],[11,19,10,17],[11,22,10,20,"isReact19"],[11,31,10,29],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"isRemoteDebuggingEnabled"],[12,34,11,32],[12,37,11,35,"isRemoteDebuggingEnabled"],[12,61,11,59],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"isTestEnv"],[13,19,12,17],[13,22,12,20,"isTestEnv"],[13,31,12,29],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"tagMessage"],[14,20,13,18],[14,23,13,21,"tagMessage"],[14,33,13,31],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"toArray"],[15,17,14,15],[15,20,14,18,"toArray"],[15,27,14,25],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"withPrevAndCurrent"],[16,28,15,26],[16,31,15,29,"withPrevAndCurrent"],[16,49,15,47],[17,2,16,0],[17,6,16,4,"_react"],[17,12,16,10],[17,15,16,13,"_interopRequireDefault"],[17,37,16,35],[17,38,16,36,"require"],[17,45,16,43],[17,46,16,43,"_dependencyMap"],[17,60,16,43],[17,72,16,51],[17,73,16,52],[17,74,16,53],[18,2,17,0],[18,11,17,9,"_interopRequireDefault"],[18,33,17,31,"_interopRequireDefault"],[18,34,17,32,"e"],[18,35,17,33],[18,37,17,35],[19,4,17,37],[19,11,17,44,"e"],[19,12,17,45],[19,16,17,49,"e"],[19,17,17,50],[19,18,17,51,"__esModule"],[19,28,17,61],[19,31,17,64,"e"],[19,32,17,65],[19,35,17,68],[20,6,17,70,"default"],[20,13,17,77],[20,15,17,79,"e"],[21,4,17,81],[21,5,17,82],[22,2,17,84],[23,2,18,0],[23,11,18,9,"toArray"],[23,18,18,16,"toArray"],[23,19,18,17,"object"],[23,25,18,23],[23,27,18,25],[24,4,19,2],[24,8,19,6],[24,9,19,7,"Array"],[24,14,19,12],[24,15,19,13,"isArray"],[24,22,19,20],[24,23,19,21,"object"],[24,29,19,27],[24,30,19,28],[24,32,19,30],[25,6,20,4],[25,13,20,11],[25,14,20,12,"object"],[25,20,20,18],[25,21,20,19],[26,4,21,2],[27,4,22,2],[27,11,22,9,"object"],[27,17,22,15],[28,2,23,0],[29,2,24,0],[29,11,24,9,"withPrevAndCurrent"],[29,29,24,27,"withPrevAndCurrent"],[29,30,24,28,"array"],[29,35,24,33],[29,37,24,35,"mapFn"],[29,42,24,40],[29,44,24,42],[30,4,25,2],[30,10,25,8,"previousArr"],[30,21,25,19],[30,24,25,22],[30,25,25,23],[30,29,25,27],[30,30,25,28],[31,4,26,2],[31,10,26,8,"currentArr"],[31,20,26,18],[31,23,26,21],[31,24,26,22],[31,27,26,25,"array"],[31,32,26,30],[31,33,26,31],[32,4,27,2],[32,10,27,8,"transformedArr"],[32,24,27,22],[32,27,27,25],[32,29,27,27],[33,4,28,2,"currentArr"],[33,14,28,12],[33,15,28,13,"forEach"],[33,22,28,20],[33,23,28,21],[33,24,28,22,"current"],[33,31,28,29],[33,33,28,31,"i"],[33,34,28,32],[33,39,28,37],[34,6,29,4],[35,6,30,4],[36,6,31,4],[37,6,32,4],[37,12,32,10,"previous"],[37,20,32,18],[37,23,32,21,"previousArr"],[37,34,32,32],[37,35,32,33,"i"],[37,36,32,34],[37,37,32,35],[38,6,33,4],[38,12,33,10,"transformed"],[38,23,33,21],[38,26,33,24,"mapFn"],[38,31,33,29],[38,32,33,30,"previous"],[38,40,33,38],[38,42,33,40,"current"],[38,49,33,47],[38,50,33,48],[39,6,34,4,"previousArr"],[39,17,34,15],[39,18,34,16,"push"],[39,22,34,20],[39,23,34,21,"transformed"],[39,34,34,32],[39,35,34,33],[40,6,35,4,"transformedArr"],[40,20,35,18],[40,21,35,19,"push"],[40,25,35,23],[40,26,35,24,"transformed"],[40,37,35,35],[40,38,35,36],[41,4,36,2],[41,5,36,3],[41,6,36,4],[42,4,37,2],[42,11,37,9,"transformedArr"],[42,25,37,23],[43,2,38,0],[44,2,39,0],[44,11,39,9,"hasProperty"],[44,22,39,20,"hasProperty"],[44,23,39,21,"object"],[44,29,39,27],[44,31,39,29,"key"],[44,34,39,32],[44,36,39,34],[45,4,40,2],[45,11,40,9,"Object"],[45,17,40,15],[45,18,40,16,"prototype"],[45,27,40,25],[45,28,40,26,"hasOwnProperty"],[45,42,40,40],[45,43,40,41,"call"],[45,47,40,45],[45,48,40,46,"object"],[45,54,40,52],[45,56,40,54,"key"],[45,59,40,57],[45,60,40,58],[46,2,41,0],[47,2,42,0],[47,11,42,9,"isTestEnv"],[47,20,42,18,"isTestEnv"],[47,21,42,18],[47,23,42,21],[48,4,43,2],[49,4,44,2],[49,11,44,9,"hasProperty"],[49,22,44,20],[49,23,44,21,"global"],[49,29,44,27],[49,31,44,29],[49,40,44,38],[49,41,44,39],[49,45,44,43,"process"],[49,52,44,50],[49,53,44,51,"env"],[49,56,44,54],[49,57,44,55,"NODE_ENV"],[49,65,44,63],[49,70,44,68],[49,76,44,74],[50,2,45,0],[51,2,46,0],[51,11,46,9,"tagMessage"],[51,21,46,19,"tagMessage"],[51,22,46,20,"msg"],[51,25,46,23],[51,27,46,25],[52,4,47,2],[52,11,47,9],[52,45,47,43,"msg"],[52,48,47,46],[52,50,47,48],[53,2,48,0],[55,2,50,0],[56,2,51,0],[57,2,52,0],[57,11,52,9,"isFabric"],[57,19,52,17,"isFabric"],[57,20,52,17],[57,22,52,20],[58,4,53,2],[59,4,54,2],[59,11,54,9],[59,12,54,10],[59,13,54,11,"global"],[59,19,54,17],[59,21,54,19,"nativeFabricUIManager"],[59,42,54,40],[60,2,55,0],[61,2,56,0],[61,11,56,9,"isReact19"],[61,20,56,18,"isReact19"],[61,21,56,18],[61,23,56,21],[62,4,57,2],[62,11,57,9,"_react"],[62,17,57,15],[62,18,57,16,"default"],[62,25,57,23],[62,26,57,24,"version"],[62,33,57,31],[62,34,57,32,"startsWith"],[62,44,57,42],[62,45,57,43],[62,50,57,48],[62,51,57,49],[63,2,58,0],[64,2,59,0],[64,11,59,9,"isRemoteDebuggingEnabled"],[64,35,59,33,"isRemoteDebuggingEnabled"],[64,36,59,33],[64,38,59,36],[65,4,60,2],[66,4,61,2],[67,4,62,2],[67,10,62,8,"localGlobal"],[67,21,62,19],[67,24,62,22,"global"],[67,30,62,28],[68,4,63,2],[68,11,63,9],[68,12,63,10],[68,13,63,11,"localGlobal"],[68,24,63,22],[68,25,63,23,"nativeCallSyncHook"],[68,43,63,41],[68,47,63,45],[68,48,63,46],[68,49,63,47,"localGlobal"],[68,60,63,58],[68,61,63,59,"__REMOTEDEV__"],[68,74,63,72],[68,79,63,77],[68,80,63,78,"localGlobal"],[68,91,63,89],[68,92,63,90,"RN$Bridgeless"],[68,105,63,103],[69,2,64,0],[71,2,66,0],[72,0,67,0],[73,0,68,0],[74,0,69,0],[75,0,70,0],[76,0,71,0],[77,0,72,0],[78,0,73,0],[79,0,74,0],[80,2,75,0],[80,11,75,9,"deepEqual"],[80,20,75,18,"deepEqual"],[80,21,75,19,"obj1"],[80,25,75,23],[80,27,75,25,"obj2"],[80,31,75,29],[80,33,75,31],[81,4,76,2],[81,8,76,6,"obj1"],[81,12,76,10],[81,17,76,15,"obj2"],[81,21,76,19],[81,23,76,21],[82,6,77,4],[82,13,77,11],[82,17,77,15],[83,4,78,2],[84,4,79,2],[84,8,79,6],[84,15,79,13,"obj1"],[84,19,79,17],[84,24,79,22],[84,32,79,30],[84,36,79,34],[84,43,79,41,"obj2"],[84,47,79,45],[84,52,79,50],[84,60,79,58],[84,64,79,62,"obj1"],[84,68,79,66],[84,73,79,71],[84,77,79,75],[84,81,79,79,"obj2"],[84,85,79,83],[84,90,79,88],[84,94,79,92],[84,96,79,94],[85,6,80,4],[85,13,80,11],[85,18,80,16],[86,4,81,2],[87,4,82,2],[87,10,82,8,"keys1"],[87,15,82,13],[87,18,82,16,"Object"],[87,24,82,22],[87,25,82,23,"keys"],[87,29,82,27],[87,30,82,28,"obj1"],[87,34,82,32],[87,35,82,33],[88,4,83,2],[88,10,83,8,"keys2"],[88,15,83,13],[88,18,83,16,"Object"],[88,24,83,22],[88,25,83,23,"keys"],[88,29,83,27],[88,30,83,28,"obj2"],[88,34,83,32],[88,35,83,33],[89,4,84,2],[89,8,84,6,"keys1"],[89,13,84,11],[89,14,84,12,"length"],[89,20,84,18],[89,25,84,23,"keys2"],[89,30,84,28],[89,31,84,29,"length"],[89,37,84,35],[89,39,84,37],[90,6,85,4],[90,13,85,11],[90,18,85,16],[91,4,86,2],[92,4,87,2],[92,9,87,7],[92,15,87,13,"key"],[92,18,87,16],[92,22,87,20,"keys1"],[92,27,87,25],[92,29,87,27],[93,6,88,4],[93,10,88,8],[93,11,88,9,"keys2"],[93,16,88,14],[93,17,88,15,"includes"],[93,25,88,23],[93,26,88,24,"key"],[93,29,88,27],[93,30,88,28],[93,34,88,32],[93,35,88,33,"deepEqual"],[93,44,88,42],[93,45,88,43,"obj1"],[93,49,88,47],[93,50,88,48,"key"],[93,53,88,51],[93,54,88,52],[93,56,88,54,"obj2"],[93,60,88,58],[93,61,88,59,"key"],[93,64,88,62],[93,65,88,63],[93,66,88,64],[93,68,88,66],[94,8,89,6],[94,15,89,13],[94,20,89,18],[95,6,90,4],[96,4,91,2],[97,4,92,2],[97,11,92,9],[97,15,92,13],[98,2,93,0],[99,2,94,0],[99,8,94,6,"INT32_MAX"],[99,17,94,15],[99,20,94,18,"exports"],[99,27,94,25],[99,28,94,26,"INT32_MAX"],[99,37,94,35],[99,40,94,38],[99,41,94,39],[99,45,94,43],[99,47,94,45],[99,50,94,48],[99,51,94,49],[100,0,94,50],[100,3]],"functionMap":{"names":["<global>","_interopRequireDefault","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;ACgB,qFD;AEC;CFK;AGC;qBCI;GDQ;CHE;AKC;CLE;AMC;CNG;AOC;CPE;AQI;CRG;ASC;CTE;AUC;CVK;AWW;CXkB"},"hasCjsExports":true},"type":"js/module"}]}