{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":13,"index":476},"end":{"line":22,"column":29,"index":492}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"./internal/defaultConfiguration","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":51,"index":591},"end":{"line":26,"column":93,"index":633}}],"key":"AxYD2klMQ98Qxd3PTIlDK04c84M=","exportNames":["*"],"imports":1}},{"name":"./internal/nativeInterface","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":46,"index":683},"end":{"line":28,"column":83,"index":720}}],"key":"HSDRZYI0Bb/KBwiWRhhmYWcVlyo=","exportNames":["*"],"imports":1}},{"name":"./internal/state","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":30,"column":37,"index":761},"end":{"line":30,"column":64,"index":788}}],"key":"bJVE/vLeXfq9b3S1XLzZsLsN56c=","exportNames":["*"],"imports":1}},{"name":"./internal/types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":32,"column":36,"index":828},"end":{"line":32,"column":63,"index":855}}],"key":"BVO7WrligbaGaKnpLlEW3RzYu5o=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    configure: true,\n    fetch: true,\n    refresh: true,\n    addEventListener: true,\n    useNetInfo: true,\n    useNetInfoInstance: true\n  };\n  exports.configure = configure;\n  exports.fetch = fetch;\n  exports.refresh = refresh;\n  exports.addEventListener = addEventListener;\n  exports.useNetInfo = useNetInfo;\n  exports.useNetInfoInstance = useNetInfoInstance;\n  exports.default = void 0;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNative = require(_dependencyMap[1], \"react-native-web/dist/index\");\n  var _defaultConfiguration = _interopRequireDefault(require(_dependencyMap[2], \"./internal/defaultConfiguration\"));\n  var _nativeInterface = _interopRequireDefault(require(_dependencyMap[3], \"./internal/nativeInterface\"));\n  var _state2 = _interopRequireDefault(require(_dependencyMap[4], \"./internal/state\"));\n  var Types = _interopRequireWildcard(require(_dependencyMap[5], \"./internal/types\"));\n  Object.keys(Types).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === Types[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return Types[key];\n      }\n    });\n  });\n  function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function (nodeInterop) {\n      return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n  }\n  function _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n  // Stores the currently used configuration\n  let _configuration = _defaultConfiguration.default; // Stores the singleton reference to the state manager\n\n  let _state = null;\n  const createState = () => {\n    return new _state2.default(_configuration);\n  }; // Track ongoing requests\n\n  let isRequestInProgress = false;\n  let requestQueue = [];\n  /**\n   * Configures the library with the given configuration. Note that calling this will stop all\n   * previously added listeners from being called again. It is best to call this right when your\n   * application is started to avoid issues. The configuration sets up a global singleton instance.\n   *\n   * @param configuration The new configuration to set.\n   */\n\n  function configure(configuration) {\n    _configuration = {\n      ..._defaultConfiguration.default,\n      ...configuration\n    };\n    if (_state) {\n      _state.tearDown();\n      _state = createState();\n    }\n    if (_reactNative.Platform.OS === 'ios') {\n      _nativeInterface.default.configure(configuration);\n    }\n  }\n  /**\n   * Returns a `Promise` that resolves to a `NetInfoState` object.\n   * This function operates on the global singleton instance configured using `configure()`\n   *\n   * @param [requestedInterface] interface from which to obtain the information\n   *\n   * @returns A Promise which contains the current connection state.\n   */\n\n  function fetch(requestedInterface) {\n    if (!_state) {\n      _state = createState();\n    }\n    return _state.latest(requestedInterface);\n  }\n  /**\n   * Force-refreshes the internal state of the global singleton managed by this library.\n   *\n   * @returns A Promise which contains the updated connection state.\n   */\n\n  function refresh() {\n    if (!_state) {\n      _state = createState();\n    } // If a request is already in progress, return a promise that will resolve when the current request finishes\n\n    if (isRequestInProgress) {\n      return new Promise(resolve => {\n        requestQueue.push(resolve);\n      });\n    }\n    isRequestInProgress = true;\n    return _state._fetchCurrentState().then(result => {\n      requestQueue.forEach(resolve => resolve(result));\n      requestQueue = [];\n      return result;\n    }).finally(() => {\n      isRequestInProgress = false;\n    });\n  }\n  /**\n   * Subscribe to the global singleton's connection information. The callback is called with a parameter of type\n   * [`NetInfoState`](README.md#netinfostate) whenever the connection state changes. Your listener\n   * will be called with the latest information soon after you subscribe and then with any\n   * subsequent changes afterwards. You should not assume that the listener is called in the same\n   * way across devices or platforms.\n   *\n   * @param listener The listener which is called when the network state changes.\n   *\n   * @returns A function which can be called to unsubscribe.\n   */\n\n  function addEventListener(listener) {\n    if (!_state) {\n      _state = createState();\n    }\n    _state.add(listener);\n    return () => {\n      _state && _state.remove(listener);\n    };\n  }\n  /**\n   * A React Hook into this library's singleton which updates when the connection state changes.\n   *\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns The connection state.\n   */\n\n  function useNetInfo(configuration) {\n    if (configuration) {\n      configure(configuration);\n    }\n    const [netInfo, setNetInfo] = (0, _react.useState)({\n      type: Types.NetInfoStateType.unknown,\n      isConnected: null,\n      isInternetReachable: null,\n      details: null\n    });\n    (0, _react.useEffect)(() => {\n      const unsubscribe = addEventListener(setNetInfo);\n      return () => unsubscribe();\n    }, []);\n    return netInfo;\n  }\n  /**\n   * A React Hook which manages an isolated instance of the network info manager.\n   * This is not a hook into a singleton shared state. NetInfo.configure, NetInfo.addEventListener,\n   * NetInfo.fetch, NetInfo.refresh are performed on a global singleton and have no affect on this hook.\n   * @param {boolean} isPaused - Pause the internal network checks.\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns the netInfo state and a refresh function\n   */\n\n  function useNetInfoInstance(isPaused = false, configuration) {\n    const [networkInfoManager, setNetworkInfoManager] = (0, _react.useState)();\n    const [netInfo, setNetInfo] = (0, _react.useState)({\n      type: Types.NetInfoStateType.unknown,\n      isConnected: null,\n      isInternetReachable: null,\n      details: null\n    });\n    (0, _react.useEffect)(() => {\n      if (isPaused) {\n        return;\n      }\n      const config = {\n        ..._defaultConfiguration.default,\n        ...configuration\n      };\n      const state = new _state2.default(config);\n      setNetworkInfoManager(state);\n      state.add(setNetInfo);\n      return state.tearDown;\n    }, [isPaused, configuration]);\n    const refresh = (0, _react.useCallback)(() => {\n      if (networkInfoManager && !isRequestInProgress) {\n        isRequestInProgress = true;\n        networkInfoManager._fetchCurrentState().finally(() => {\n          isRequestInProgress = false;\n        });\n      }\n    }, [networkInfoManager]);\n    return {\n      netInfo,\n      refresh\n    };\n  }\n  var _default = {\n    configure,\n    fetch,\n    refresh,\n    addEventListener,\n    useNetInfo,\n    useNetInfoInstance\n  };\n  exports.default = _default;\n});","lineCount":261,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0],[7,6,6,4,"_exportNames"],[7,18,6,16],[7,21,6,19],[8,4,7,2,"configure"],[8,13,7,11],[8,15,7,13],[8,19,7,17],[9,4,8,2,"fetch"],[9,9,8,7],[9,11,8,9],[9,15,8,13],[10,4,9,2,"refresh"],[10,11,9,9],[10,13,9,11],[10,17,9,15],[11,4,10,2,"addEventListener"],[11,20,10,18],[11,22,10,20],[11,26,10,24],[12,4,11,2,"useNetInfo"],[12,14,11,12],[12,16,11,14],[12,20,11,18],[13,4,12,2,"useNetInfoInstance"],[13,22,12,20],[13,24,12,22],[14,2,13,0],[14,3,13,1],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"configure"],[15,19,14,17],[15,22,14,20,"configure"],[15,31,14,29],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"fetch"],[16,15,15,13],[16,18,15,16,"fetch"],[16,23,15,21],[17,2,16,0,"exports"],[17,9,16,7],[17,10,16,8,"refresh"],[17,17,16,15],[17,20,16,18,"refresh"],[17,27,16,25],[18,2,17,0,"exports"],[18,9,17,7],[18,10,17,8,"addEventListener"],[18,26,17,24],[18,29,17,27,"addEventListener"],[18,45,17,43],[19,2,18,0,"exports"],[19,9,18,7],[19,10,18,8,"useNetInfo"],[19,20,18,18],[19,23,18,21,"useNetInfo"],[19,33,18,31],[20,2,19,0,"exports"],[20,9,19,7],[20,10,19,8,"useNetInfoInstance"],[20,28,19,26],[20,31,19,29,"useNetInfoInstance"],[20,49,19,47],[21,2,20,0,"exports"],[21,9,20,7],[21,10,20,8,"default"],[21,17,20,15],[21,20,20,18],[21,25,20,23],[21,26,20,24],[22,2,22,0],[22,6,22,4,"_react"],[22,12,22,10],[22,15,22,13,"require"],[22,22,22,20],[22,23,22,20,"_dependencyMap"],[22,37,22,20],[22,49,22,28],[22,50,22,29],[23,2,22,30],[23,6,22,30,"_reactNative"],[23,18,22,30],[23,21,22,30,"require"],[23,28,22,30],[23,29,22,30,"_dependencyMap"],[23,43,22,30],[24,2,26,0],[24,6,26,4,"_defaultConfiguration"],[24,27,26,25],[24,30,26,28,"_interopRequireDefault"],[24,52,26,50],[24,53,26,51,"require"],[24,60,26,58],[24,61,26,58,"_dependencyMap"],[24,75,26,58],[24,113,26,92],[24,114,26,93],[24,115,26,94],[25,2,28,0],[25,6,28,4,"_nativeInterface"],[25,22,28,20],[25,25,28,23,"_interopRequireDefault"],[25,47,28,45],[25,48,28,46,"require"],[25,55,28,53],[25,56,28,53,"_dependencyMap"],[25,70,28,53],[25,103,28,82],[25,104,28,83],[25,105,28,84],[26,2,30,0],[26,6,30,4,"_state2"],[26,13,30,11],[26,16,30,14,"_interopRequireDefault"],[26,38,30,36],[26,39,30,37,"require"],[26,46,30,44],[26,47,30,44,"_dependencyMap"],[26,61,30,44],[26,84,30,63],[26,85,30,64],[26,86,30,65],[27,2,32,0],[27,6,32,4,"Types"],[27,11,32,9],[27,14,32,12,"_interopRequireWildcard"],[27,37,32,35],[27,38,32,36,"require"],[27,45,32,43],[27,46,32,43,"_dependencyMap"],[27,60,32,43],[27,83,32,62],[27,84,32,63],[27,85,32,64],[28,2,34,0,"Object"],[28,8,34,6],[28,9,34,7,"keys"],[28,13,34,11],[28,14,34,12,"Types"],[28,19,34,17],[28,20,34,18],[28,21,34,19,"forEach"],[28,28,34,26],[28,29,34,27],[28,39,34,37,"key"],[28,42,34,40],[28,44,34,42],[29,4,35,2],[29,8,35,6,"key"],[29,11,35,9],[29,16,35,14],[29,25,35,23],[29,29,35,27,"key"],[29,32,35,30],[29,37,35,35],[29,49,35,47],[29,51,35,49],[30,4,36,2],[30,8,36,6,"Object"],[30,14,36,12],[30,15,36,13,"prototype"],[30,24,36,22],[30,25,36,23,"hasOwnProperty"],[30,39,36,37],[30,40,36,38,"call"],[30,44,36,42],[30,45,36,43,"_exportNames"],[30,57,36,55],[30,59,36,57,"key"],[30,62,36,60],[30,63,36,61],[30,65,36,63],[31,4,37,2],[31,8,37,6,"key"],[31,11,37,9],[31,15,37,13,"exports"],[31,22,37,20],[31,26,37,24,"exports"],[31,33,37,31],[31,34,37,32,"key"],[31,37,37,35],[31,38,37,36],[31,43,37,41,"Types"],[31,48,37,46],[31,49,37,47,"key"],[31,52,37,50],[31,53,37,51],[31,55,37,53],[32,4,38,2,"Object"],[32,10,38,8],[32,11,38,9,"defineProperty"],[32,25,38,23],[32,26,38,24,"exports"],[32,33,38,31],[32,35,38,33,"key"],[32,38,38,36],[32,40,38,38],[33,6,39,4,"enumerable"],[33,16,39,14],[33,18,39,16],[33,22,39,20],[34,6,40,4,"get"],[34,9,40,7],[34,11,40,9],[34,20,40,9,"get"],[34,21,40,9],[34,23,40,21],[35,8,41,6],[35,15,41,13,"Types"],[35,20,41,18],[35,21,41,19,"key"],[35,24,41,22],[35,25,41,23],[36,6,42,4],[37,4,43,2],[37,5,43,3],[37,6,43,4],[38,2,44,0],[38,3,44,1],[38,4,44,2],[39,2,46,0],[39,11,46,9,"_getRequireWildcardCache"],[39,35,46,33,"_getRequireWildcardCache"],[39,36,46,34,"nodeInterop"],[39,47,46,45],[39,49,46,47],[40,4,46,49],[40,8,46,53],[40,15,46,60,"WeakMap"],[40,22,46,67],[40,27,46,72],[40,37,46,82],[40,39,46,84],[40,46,46,91],[40,50,46,95],[41,4,46,97],[41,8,46,101,"cacheBabelInterop"],[41,25,46,118],[41,28,46,121],[41,32,46,125,"WeakMap"],[41,39,46,132],[41,40,46,133],[41,41,46,134],[42,4,46,136],[42,8,46,140,"cacheNodeInterop"],[42,24,46,156],[42,27,46,159],[42,31,46,163,"WeakMap"],[42,38,46,170],[42,39,46,171],[42,40,46,172],[43,4,46,174],[43,11,46,181],[43,12,46,182,"_getRequireWildcardCache"],[43,36,46,206],[43,39,46,209],[43,48,46,209,"_getRequireWildcardCache"],[43,49,46,219,"nodeInterop"],[43,60,46,230],[43,62,46,232],[44,6,46,234],[44,13,46,241,"nodeInterop"],[44,24,46,252],[44,27,46,255,"cacheNodeInterop"],[44,43,46,271],[44,46,46,274,"cacheBabelInterop"],[44,63,46,291],[45,4,46,293],[45,5,46,294],[45,7,46,296,"nodeInterop"],[45,18,46,307],[45,19,46,308],[46,2,46,310],[47,2,48,0],[47,11,48,9,"_interopRequireWildcard"],[47,34,48,32,"_interopRequireWildcard"],[47,35,48,33,"obj"],[47,38,48,36],[47,40,48,38,"nodeInterop"],[47,51,48,49],[47,53,48,51],[48,4,48,53],[48,8,48,57],[48,9,48,58,"nodeInterop"],[48,20,48,69],[48,24,48,73,"obj"],[48,27,48,76],[48,31,48,80,"obj"],[48,34,48,83],[48,35,48,84,"__esModule"],[48,45,48,94],[48,47,48,96],[49,6,48,98],[49,13,48,105,"obj"],[49,16,48,108],[50,4,48,110],[51,4,48,112],[51,8,48,116,"obj"],[51,11,48,119],[51,16,48,124],[51,20,48,128],[51,24,48,132],[51,31,48,139,"obj"],[51,34,48,142],[51,39,48,147],[51,47,48,155],[51,51,48,159],[51,58,48,166,"obj"],[51,61,48,169],[51,66,48,174],[51,76,48,184],[51,78,48,186],[52,6,48,188],[52,13,48,195],[53,8,48,197,"default"],[53,15,48,204],[53,17,48,206,"obj"],[54,6,48,210],[54,7,48,211],[55,4,48,213],[56,4,48,215],[56,8,48,219,"cache"],[56,13,48,224],[56,16,48,227,"_getRequireWildcardCache"],[56,40,48,251],[56,41,48,252,"nodeInterop"],[56,52,48,263],[56,53,48,264],[57,4,48,266],[57,8,48,270,"cache"],[57,13,48,275],[57,17,48,279,"cache"],[57,22,48,284],[57,23,48,285,"has"],[57,26,48,288],[57,27,48,289,"obj"],[57,30,48,292],[57,31,48,293],[57,33,48,295],[58,6,48,297],[58,13,48,304,"cache"],[58,18,48,309],[58,19,48,310,"get"],[58,22,48,313],[58,23,48,314,"obj"],[58,26,48,317],[58,27,48,318],[59,4,48,320],[60,4,48,322],[60,8,48,326,"newObj"],[60,14,48,332],[60,17,48,335],[60,18,48,336],[60,19,48,337],[61,4,48,339],[61,8,48,343,"hasPropertyDescriptor"],[61,29,48,364],[61,32,48,367,"Object"],[61,38,48,373],[61,39,48,374,"defineProperty"],[61,53,48,388],[61,57,48,392,"Object"],[61,63,48,398],[61,64,48,399,"getOwnPropertyDescriptor"],[61,88,48,423],[62,4,48,425],[62,9,48,430],[62,13,48,434,"key"],[62,16,48,437],[62,20,48,441,"obj"],[62,23,48,444],[62,25,48,446],[63,6,48,448],[63,10,48,452,"key"],[63,13,48,455],[63,18,48,460],[63,27,48,469],[63,31,48,473,"Object"],[63,37,48,479],[63,38,48,480,"prototype"],[63,47,48,489],[63,48,48,490,"hasOwnProperty"],[63,62,48,504],[63,63,48,505,"call"],[63,67,48,509],[63,68,48,510,"obj"],[63,71,48,513],[63,73,48,515,"key"],[63,76,48,518],[63,77,48,519],[63,79,48,521],[64,8,48,523],[64,12,48,527,"desc"],[64,16,48,531],[64,19,48,534,"hasPropertyDescriptor"],[64,40,48,555],[64,43,48,558,"Object"],[64,49,48,564],[64,50,48,565,"getOwnPropertyDescriptor"],[64,74,48,589],[64,75,48,590,"obj"],[64,78,48,593],[64,80,48,595,"key"],[64,83,48,598],[64,84,48,599],[64,87,48,602],[64,91,48,606],[65,8,48,608],[65,12,48,612,"desc"],[65,16,48,616],[65,21,48,621,"desc"],[65,25,48,625],[65,26,48,626,"get"],[65,29,48,629],[65,33,48,633,"desc"],[65,37,48,637],[65,38,48,638,"set"],[65,41,48,641],[65,42,48,642],[65,44,48,644],[66,10,48,646,"Object"],[66,16,48,652],[66,17,48,653,"defineProperty"],[66,31,48,667],[66,32,48,668,"newObj"],[66,38,48,674],[66,40,48,676,"key"],[66,43,48,679],[66,45,48,681,"desc"],[66,49,48,685],[66,50,48,686],[67,8,48,688],[67,9,48,689],[67,15,48,695],[68,10,48,697,"newObj"],[68,16,48,703],[68,17,48,704,"key"],[68,20,48,707],[68,21,48,708],[68,24,48,711,"obj"],[68,27,48,714],[68,28,48,715,"key"],[68,31,48,718],[68,32,48,719],[69,8,48,721],[70,6,48,723],[71,4,48,725],[72,4,48,727,"newObj"],[72,10,48,733],[72,11,48,734,"default"],[72,18,48,741],[72,21,48,744,"obj"],[72,24,48,747],[73,4,48,749],[73,8,48,753,"cache"],[73,13,48,758],[73,15,48,760],[74,6,48,762,"cache"],[74,11,48,767],[74,12,48,768,"set"],[74,15,48,771],[74,16,48,772,"obj"],[74,19,48,775],[74,21,48,777,"newObj"],[74,27,48,783],[74,28,48,784],[75,4,48,786],[76,4,48,788],[76,11,48,795,"newObj"],[76,17,48,801],[77,2,48,803],[78,2,50,0],[78,11,50,9,"_interopRequireDefault"],[78,33,50,31,"_interopRequireDefault"],[78,34,50,32,"obj"],[78,37,50,35],[78,39,50,37],[79,4,50,39],[79,11,50,46,"obj"],[79,14,50,49],[79,18,50,53,"obj"],[79,21,50,56],[79,22,50,57,"__esModule"],[79,32,50,67],[79,35,50,70,"obj"],[79,38,50,73],[79,41,50,76],[80,6,50,78,"default"],[80,13,50,85],[80,15,50,87,"obj"],[81,4,50,91],[81,5,50,92],[82,2,50,94],[84,2,52,0],[85,0,53,0],[86,0,54,0],[87,0,55,0],[88,0,56,0],[89,0,57,0],[90,0,58,0],[91,0,59,0],[92,2,60,0],[93,2,61,0],[93,6,61,4,"_configuration"],[93,20,61,18],[93,23,61,21,"_defaultConfiguration"],[93,44,61,42],[93,45,61,43,"default"],[93,52,61,50],[93,53,61,51],[93,54,61,52],[95,2,63,0],[95,6,63,4,"_state"],[95,12,63,10],[95,15,63,13],[95,19,63,17],[96,2,65,0],[96,8,65,6,"createState"],[96,19,65,17],[96,22,65,20,"createState"],[96,23,65,20],[96,28,65,26],[97,4,66,2],[97,11,66,9],[97,15,66,13,"_state2"],[97,22,66,20],[97,23,66,21,"default"],[97,30,66,28],[97,31,66,29,"_configuration"],[97,45,66,43],[97,46,66,44],[98,2,67,0],[98,3,67,1],[98,4,67,2],[98,5,67,3],[100,2,70,0],[100,6,70,4,"isRequestInProgress"],[100,25,70,23],[100,28,70,26],[100,33,70,31],[101,2,71,0],[101,6,71,4,"requestQueue"],[101,18,71,16],[101,21,71,19],[101,23,71,21],[102,2,72,0],[103,0,73,0],[104,0,74,0],[105,0,75,0],[106,0,76,0],[107,0,77,0],[108,0,78,0],[110,2,80,0],[110,11,80,9,"configure"],[110,20,80,18,"configure"],[110,21,80,19,"configuration"],[110,34,80,32],[110,36,80,34],[111,4,81,2,"_configuration"],[111,18,81,16],[111,21,81,19],[112,6,81,21],[112,9,81,24,"_defaultConfiguration"],[112,30,81,45],[112,31,81,46,"default"],[112,38,81,53],[113,6,82,4],[113,9,82,7,"configuration"],[114,4,83,2],[114,5,83,3],[115,4,85,2],[115,8,85,6,"_state"],[115,14,85,12],[115,16,85,14],[116,6,86,4,"_state"],[116,12,86,10],[116,13,86,11,"tearDown"],[116,21,86,19],[116,22,86,20],[116,23,86,21],[117,6,88,4,"_state"],[117,12,88,10],[117,15,88,13,"createState"],[117,26,88,24],[117,27,88,25],[117,28,88,26],[118,4,89,2],[119,4,91,2],[119,8,91,6,"_reactNative"],[119,20,91,18],[119,21,91,19,"Platform"],[119,29,91,27],[119,30,91,28,"OS"],[119,32,91,30],[119,37,91,35],[119,42,91,40],[119,44,91,42],[120,6,92,4,"_nativeInterface"],[120,22,92,20],[120,23,92,21,"default"],[120,30,92,28],[120,31,92,29,"configure"],[120,40,92,38],[120,41,92,39,"configuration"],[120,54,92,52],[120,55,92,53],[121,4,93,2],[122,2,94,0],[123,2,95,0],[124,0,96,0],[125,0,97,0],[126,0,98,0],[127,0,99,0],[128,0,100,0],[129,0,101,0],[130,0,102,0],[132,2,105,0],[132,11,105,9,"fetch"],[132,16,105,14,"fetch"],[132,17,105,15,"requestedInterface"],[132,35,105,33],[132,37,105,35],[133,4,106,2],[133,8,106,6],[133,9,106,7,"_state"],[133,15,106,13],[133,17,106,15],[134,6,107,4,"_state"],[134,12,107,10],[134,15,107,13,"createState"],[134,26,107,24],[134,27,107,25],[134,28,107,26],[135,4,108,2],[136,4,110,2],[136,11,110,9,"_state"],[136,17,110,15],[136,18,110,16,"latest"],[136,24,110,22],[136,25,110,23,"requestedInterface"],[136,43,110,41],[136,44,110,42],[137,2,111,0],[138,2,112,0],[139,0,113,0],[140,0,114,0],[141,0,115,0],[142,0,116,0],[144,2,119,0],[144,11,119,9,"refresh"],[144,18,119,16,"refresh"],[144,19,119,16],[144,21,119,19],[145,4,120,2],[145,8,120,6],[145,9,120,7,"_state"],[145,15,120,13],[145,17,120,15],[146,6,121,4,"_state"],[146,12,121,10],[146,15,121,13,"createState"],[146,26,121,24],[146,27,121,25],[146,28,121,26],[147,4,122,2],[147,5,122,3],[147,6,122,4],[149,4,125,2],[149,8,125,6,"isRequestInProgress"],[149,27,125,25],[149,29,125,27],[150,6,126,4],[150,13,126,11],[150,17,126,15,"Promise"],[150,24,126,22],[150,25,126,23,"resolve"],[150,32,126,30],[150,36,126,34],[151,8,127,6,"requestQueue"],[151,20,127,18],[151,21,127,19,"push"],[151,25,127,23],[151,26,127,24,"resolve"],[151,33,127,31],[151,34,127,32],[152,6,128,4],[152,7,128,5],[152,8,128,6],[153,4,129,2],[154,4,131,2,"isRequestInProgress"],[154,23,131,21],[154,26,131,24],[154,30,131,28],[155,4,132,2],[155,11,132,9,"_state"],[155,17,132,15],[155,18,132,16,"_fetchCurrentState"],[155,36,132,34],[155,37,132,35],[155,38,132,36],[155,39,132,37,"then"],[155,43,132,41],[155,44,132,42,"result"],[155,50,132,48],[155,54,132,52],[156,6,133,4,"requestQueue"],[156,18,133,16],[156,19,133,17,"forEach"],[156,26,133,24],[156,27,133,25,"resolve"],[156,34,133,32],[156,38,133,36,"resolve"],[156,45,133,43],[156,46,133,44,"result"],[156,52,133,50],[156,53,133,51],[156,54,133,52],[157,6,134,4,"requestQueue"],[157,18,134,16],[157,21,134,19],[157,23,134,21],[158,6,135,4],[158,13,135,11,"result"],[158,19,135,17],[159,4,136,2],[159,5,136,3],[159,6,136,4],[159,7,136,5,"finally"],[159,14,136,12],[159,15,136,13],[159,21,136,19],[160,6,137,4,"isRequestInProgress"],[160,25,137,23],[160,28,137,26],[160,33,137,31],[161,4,138,2],[161,5,138,3],[161,6,138,4],[162,2,139,0],[163,2,140,0],[164,0,141,0],[165,0,142,0],[166,0,143,0],[167,0,144,0],[168,0,145,0],[169,0,146,0],[170,0,147,0],[171,0,148,0],[172,0,149,0],[173,0,150,0],[175,2,153,0],[175,11,153,9,"addEventListener"],[175,27,153,25,"addEventListener"],[175,28,153,26,"listener"],[175,36,153,34],[175,38,153,36],[176,4,154,2],[176,8,154,6],[176,9,154,7,"_state"],[176,15,154,13],[176,17,154,15],[177,6,155,4,"_state"],[177,12,155,10],[177,15,155,13,"createState"],[177,26,155,24],[177,27,155,25],[177,28,155,26],[178,4,156,2],[179,4,158,2,"_state"],[179,10,158,8],[179,11,158,9,"add"],[179,14,158,12],[179,15,158,13,"listener"],[179,23,158,21],[179,24,158,22],[180,4,160,2],[180,11,160,9],[180,17,160,15],[181,6,161,4,"_state"],[181,12,161,10],[181,16,161,14,"_state"],[181,22,161,20],[181,23,161,21,"remove"],[181,29,161,27],[181,30,161,28,"listener"],[181,38,161,36],[181,39,161,37],[182,4,162,2],[182,5,162,3],[183,2,163,0],[184,2,164,0],[185,0,165,0],[186,0,166,0],[187,0,167,0],[188,0,168,0],[189,0,169,0],[190,0,170,0],[192,2,173,0],[192,11,173,9,"useNetInfo"],[192,21,173,19,"useNetInfo"],[192,22,173,20,"configuration"],[192,35,173,33],[192,37,173,35],[193,4,174,2],[193,8,174,6,"configuration"],[193,21,174,19],[193,23,174,21],[194,6,175,4,"configure"],[194,15,175,13],[194,16,175,14,"configuration"],[194,29,175,27],[194,30,175,28],[195,4,176,2],[196,4,178,2],[196,10,178,8],[196,11,178,9,"netInfo"],[196,18,178,16],[196,20,178,18,"setNetInfo"],[196,30,178,28],[196,31,178,29],[196,34,178,32],[196,35,178,33],[196,36,178,34],[196,38,178,36,"_react"],[196,44,178,42],[196,45,178,43,"useState"],[196,53,178,51],[196,55,178,53],[197,6,179,4,"type"],[197,10,179,8],[197,12,179,10,"Types"],[197,17,179,15],[197,18,179,16,"NetInfoStateType"],[197,34,179,32],[197,35,179,33,"unknown"],[197,42,179,40],[198,6,180,4,"isConnected"],[198,17,180,15],[198,19,180,17],[198,23,180,21],[199,6,181,4,"isInternetReachable"],[199,25,181,23],[199,27,181,25],[199,31,181,29],[200,6,182,4,"details"],[200,13,182,11],[200,15,182,13],[201,4,183,2],[201,5,183,3],[201,6,183,4],[202,4,184,2],[202,5,184,3],[202,6,184,4],[202,8,184,6,"_react"],[202,14,184,12],[202,15,184,13,"useEffect"],[202,24,184,22],[202,26,184,24],[202,32,184,30],[203,6,185,4],[203,12,185,10,"unsubscribe"],[203,23,185,21],[203,26,185,24,"addEventListener"],[203,42,185,40],[203,43,185,41,"setNetInfo"],[203,53,185,51],[203,54,185,52],[204,6,186,4],[204,13,186,11],[204,19,186,17,"unsubscribe"],[204,30,186,28],[204,31,186,29],[204,32,186,30],[205,4,187,2],[205,5,187,3],[205,7,187,5],[205,9,187,7],[205,10,187,8],[206,4,188,2],[206,11,188,9,"netInfo"],[206,18,188,16],[207,2,189,0],[208,2,190,0],[209,0,191,0],[210,0,192,0],[211,0,193,0],[212,0,194,0],[213,0,195,0],[214,0,196,0],[215,0,197,0],[216,0,198,0],[218,2,201,0],[218,11,201,9,"useNetInfoInstance"],[218,29,201,27,"useNetInfoInstance"],[218,30,201,28,"isPaused"],[218,38,201,36],[218,41,201,39],[218,46,201,44],[218,48,201,46,"configuration"],[218,61,201,59],[218,63,201,61],[219,4,202,2],[219,10,202,8],[219,11,202,9,"networkInfoManager"],[219,29,202,27],[219,31,202,29,"setNetworkInfoManager"],[219,52,202,50],[219,53,202,51],[219,56,202,54],[219,57,202,55],[219,58,202,56],[219,60,202,58,"_react"],[219,66,202,64],[219,67,202,65,"useState"],[219,75,202,73],[219,77,202,75],[219,78,202,76],[220,4,203,2],[220,10,203,8],[220,11,203,9,"netInfo"],[220,18,203,16],[220,20,203,18,"setNetInfo"],[220,30,203,28],[220,31,203,29],[220,34,203,32],[220,35,203,33],[220,36,203,34],[220,38,203,36,"_react"],[220,44,203,42],[220,45,203,43,"useState"],[220,53,203,51],[220,55,203,53],[221,6,204,4,"type"],[221,10,204,8],[221,12,204,10,"Types"],[221,17,204,15],[221,18,204,16,"NetInfoStateType"],[221,34,204,32],[221,35,204,33,"unknown"],[221,42,204,40],[222,6,205,4,"isConnected"],[222,17,205,15],[222,19,205,17],[222,23,205,21],[223,6,206,4,"isInternetReachable"],[223,25,206,23],[223,27,206,25],[223,31,206,29],[224,6,207,4,"details"],[224,13,207,11],[224,15,207,13],[225,4,208,2],[225,5,208,3],[225,6,208,4],[226,4,209,2],[226,5,209,3],[226,6,209,4],[226,8,209,6,"_react"],[226,14,209,12],[226,15,209,13,"useEffect"],[226,24,209,22],[226,26,209,24],[226,32,209,30],[227,6,210,4],[227,10,210,8,"isPaused"],[227,18,210,16],[227,20,210,18],[228,8,211,6],[229,6,212,4],[230,6,214,4],[230,12,214,10,"config"],[230,18,214,16],[230,21,214,19],[231,8,214,21],[231,11,214,24,"_defaultConfiguration"],[231,32,214,45],[231,33,214,46,"default"],[231,40,214,53],[232,8,215,6],[232,11,215,9,"configuration"],[233,6,216,4],[233,7,216,5],[234,6,217,4],[234,12,217,10,"state"],[234,17,217,15],[234,20,217,18],[234,24,217,22,"_state2"],[234,31,217,29],[234,32,217,30,"default"],[234,39,217,37],[234,40,217,38,"config"],[234,46,217,44],[234,47,217,45],[235,6,218,4,"setNetworkInfoManager"],[235,27,218,25],[235,28,218,26,"state"],[235,33,218,31],[235,34,218,32],[236,6,219,4,"state"],[236,11,219,9],[236,12,219,10,"add"],[236,15,219,13],[236,16,219,14,"setNetInfo"],[236,26,219,24],[236,27,219,25],[237,6,220,4],[237,13,220,11,"state"],[237,18,220,16],[237,19,220,17,"tearDown"],[237,27,220,25],[238,4,221,2],[238,5,221,3],[238,7,221,5],[238,8,221,6,"isPaused"],[238,16,221,14],[238,18,221,16,"configuration"],[238,31,221,29],[238,32,221,30],[238,33,221,31],[239,4,222,2],[239,10,222,8,"refresh"],[239,17,222,15],[239,20,222,18],[239,21,222,19],[239,22,222,20],[239,24,222,22,"_react"],[239,30,222,28],[239,31,222,29,"useCallback"],[239,42,222,40],[239,44,222,42],[239,50,222,48],[240,6,223,4],[240,10,223,8,"networkInfoManager"],[240,28,223,26],[240,32,223,30],[240,33,223,31,"isRequestInProgress"],[240,52,223,50],[240,54,223,52],[241,8,224,6,"isRequestInProgress"],[241,27,224,25],[241,30,224,28],[241,34,224,32],[242,8,226,6,"networkInfoManager"],[242,26,226,24],[242,27,226,25,"_fetchCurrentState"],[242,45,226,43],[242,46,226,44],[242,47,226,45],[242,48,226,46,"finally"],[242,55,226,53],[242,56,226,54],[242,62,226,60],[243,10,227,8,"isRequestInProgress"],[243,29,227,27],[243,32,227,30],[243,37,227,35],[244,8,228,6],[244,9,228,7],[244,10,228,8],[245,6,229,4],[246,4,230,2],[246,5,230,3],[246,7,230,5],[246,8,230,6,"networkInfoManager"],[246,26,230,24],[246,27,230,25],[246,28,230,26],[247,4,231,2],[247,11,231,9],[248,6,232,4,"netInfo"],[248,13,232,11],[249,6,233,4,"refresh"],[250,4,234,2],[250,5,234,3],[251,2,235,0],[252,2,237,0],[252,6,237,4,"_default"],[252,14,237,12],[252,17,237,15],[253,4,238,2,"configure"],[253,13,238,11],[254,4,239,2,"fetch"],[254,9,239,7],[255,4,240,2,"refresh"],[255,11,240,9],[256,4,241,2,"addEventListener"],[256,20,241,18],[257,4,242,2,"useNetInfo"],[257,14,242,12],[258,4,243,2,"useNetInfoInstance"],[259,2,244,0],[259,3,244,1],[260,2,245,0,"exports"],[260,9,245,7],[260,10,245,8,"default"],[260,17,245,15],[260,20,245,18,"_default"],[260,28,245,26],[261,0,245,27],[261,3]],"functionMap":{"names":["<global>","Object.keys.forEach$argument_0","Object.defineProperty$argument_2.get","_getRequireWildcardCache","_interopRequireWildcard","_interopRequireDefault","createState","configure","fetch","refresh","Promise$argument_0","_state._fetchCurrentState.then$argument_0","requestQueue.forEach$argument_0","_state._fetchCurrentState.then._finally$argument_0","addEventListener","<anonymous>","useNetInfo","useNetInfoInstance","networkInfoManager._fetchCurrentState._finally$argument_0"],"mappings":"AAA;2BCiC;SCM;KDE;CDE;AGE,uTH;AIE,oyBJ;AKE,+FL;oBMe;CNE;AOa;CPc;AQW;CRM;ASQ;uBCO;KDE;0CEI;yBCC,0BD;GFG,UI;GJE;CTC;Acc;SCO;GDE;CdC;AgBU;wBDW;GCG;ChBE;AiBY;wBFQ;GEY;0CFC;sDGI;OHE;GEE;CjBK"},"hasCjsExports":true},"type":"js/module"}]}