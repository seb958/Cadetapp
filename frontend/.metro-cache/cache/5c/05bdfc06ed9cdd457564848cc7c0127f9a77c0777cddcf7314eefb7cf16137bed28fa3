{"dependencies":[{"name":"./privateTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":203},"end":{"line":9,"column":59,"index":262}}],"key":"8BvuxiTUsGHSowX5GFNP+ePi44c=","exportNames":["*"],"imports":1}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":263},"end":{"line":10,"column":70,"index":333}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _privateTypes = require(_dependencyMap[0], \"./privateTypes\");\n  var _types = require(_dependencyMap[1], \"./types\");\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // See https://wicg.github.io/netinfo/#dom-connectiontype\n\n  // Use a constant test of this form because in SSR on next.js, optional chaining is not sufficient,\n  // but this test correctly detects that window is not available and allows for conditionals before access\n  const isWindowPresent = typeof window !== 'undefined'; // Check if window exists and if the browser supports the connection API\n\n  const connection = isWindowPresent && !window.hasOwnProperty('tizen') && !window.hasOwnProperty('webOS') ? window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection : undefined; // Map browser types to native types\n\n  const typeMapping = {\n    bluetooth: _types.NetInfoStateType.bluetooth,\n    cellular: _types.NetInfoStateType.cellular,\n    ethernet: _types.NetInfoStateType.ethernet,\n    none: _types.NetInfoStateType.none,\n    other: _types.NetInfoStateType.other,\n    unknown: _types.NetInfoStateType.unknown,\n    wifi: _types.NetInfoStateType.wifi,\n    wimax: _types.NetInfoStateType.wimax,\n    mixed: _types.NetInfoStateType.other\n  };\n  const effectiveTypeMapping = {\n    '2g': _types.NetInfoCellularGeneration['2g'],\n    '3g': _types.NetInfoCellularGeneration['3g'],\n    '4g': _types.NetInfoCellularGeneration['4g'],\n    'slow-2g': _types.NetInfoCellularGeneration['2g']\n  }; // Determine current state of connection\n\n  const getCurrentState = _requestedInterface => {\n    const isConnected = isWindowPresent ? navigator.onLine : false;\n    const baseState = {\n      isInternetReachable: null\n    }; // If we don't have a connection object, we return minimal information\n\n    if (!connection) {\n      if (isConnected) {\n        const state = Object.assign({}, baseState, {\n          isConnected: true,\n          type: _types.NetInfoStateType.other,\n          details: {\n            isConnectionExpensive: false\n          }\n        });\n        return state;\n      }\n      const state = Object.assign({}, baseState, {\n        isConnected: false,\n        isInternetReachable: false,\n        type: _types.NetInfoStateType.none,\n        details: null\n      });\n      return state;\n    } // Otherwise try to return detailed information\n\n    const isConnectionExpensive = connection.saveData;\n    const type = connection.type ? typeMapping[connection.type] : isConnected ? _types.NetInfoStateType.other : _types.NetInfoStateType.unknown;\n    if (type === _types.NetInfoStateType.bluetooth) {\n      const state = Object.assign({}, baseState, {\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive\n        }\n      });\n      return state;\n    } else if (type === _types.NetInfoStateType.cellular) {\n      const state = Object.assign({}, baseState, {\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          cellularGeneration: effectiveTypeMapping[connection.effectiveType] || null,\n          carrier: null\n        }\n      });\n      return state;\n    } else if (type === _types.NetInfoStateType.ethernet) {\n      const state = Object.assign({}, baseState, {\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          ipAddress: null,\n          subnet: null\n        }\n      });\n      return state;\n    } else if (type === _types.NetInfoStateType.wifi) {\n      const state = Object.assign({}, baseState, {\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          ssid: null,\n          bssid: null,\n          strength: null,\n          ipAddress: null,\n          subnet: null,\n          frequency: null,\n          linkSpeed: null,\n          rxLinkSpeed: null,\n          txLinkSpeed: null\n        }\n      });\n      return state;\n    } else if (type === _types.NetInfoStateType.wimax) {\n      const state = Object.assign({}, baseState, {\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive\n        }\n      });\n      return state;\n    } else if (type === _types.NetInfoStateType.none) {\n      const state = Object.assign({}, baseState, {\n        isConnected: false,\n        isInternetReachable: false,\n        type,\n        details: null\n      });\n      return state;\n    } else if (type === _types.NetInfoStateType.unknown) {\n      const state = Object.assign({}, baseState, {\n        isConnected,\n        isInternetReachable: null,\n        type,\n        details: null\n      });\n      return state;\n    }\n    const state = Object.assign({}, baseState, {\n      isConnected: true,\n      type: _types.NetInfoStateType.other,\n      details: {\n        isConnectionExpensive\n      }\n    });\n    return state;\n  };\n  const handlers = [];\n  const nativeHandlers = [];\n  const RNCNetInfo = {\n    addListener(type, handler) {\n      switch (type) {\n        case _privateTypes.DEVICE_CONNECTIVITY_EVENT:\n          {\n            const nativeHandler = () => {\n              handler(getCurrentState());\n            };\n            if (connection) {\n              connection.addEventListener('change', nativeHandler);\n            } else {\n              if (isWindowPresent) {\n                window.addEventListener('online', nativeHandler, false);\n                window.addEventListener('offline', nativeHandler, false);\n              }\n            } // Remember handlers\n\n            handlers.push(handler);\n            nativeHandlers.push(nativeHandler);\n            break;\n          }\n      }\n    },\n    removeListeners(type, handler) {\n      switch (type) {\n        case _privateTypes.DEVICE_CONNECTIVITY_EVENT:\n          {\n            // Get native handler\n            const index = handlers.indexOf(handler);\n            const nativeHandler = nativeHandlers[index];\n            if (connection) {\n              connection.removeEventListener('change', nativeHandler);\n            } else {\n              if (isWindowPresent) {\n                window.removeEventListener('online', nativeHandler);\n                window.removeEventListener('offline', nativeHandler);\n              }\n            } // Remove handlers\n\n            handlers.splice(index, 1);\n            nativeHandlers.splice(index, 1);\n            break;\n          }\n      }\n    },\n    async getCurrentState(requestedInterface) {\n      return getCurrentState(requestedInterface);\n    },\n    configure() {\n      return;\n    }\n  };\n  var _default = RNCNetInfo;\n});","lineCount":217,"map":[[7,2,215,0,"Object"],[7,8,215,0],[7,9,215,0,"defineProperty"],[7,23,215,0],[7,24,215,0,"exports"],[7,31,215,0],[8,4,215,0,"enumerable"],[8,14,215,0],[9,4,215,0,"get"],[9,7,215,0],[9,18,215,0,"get"],[9,19,215,0],[10,6,215,0],[10,13,215,0,"_default"],[10,21,215,0],[11,4,215,0],[12,2,215,0],[13,2,9,0],[13,6,9,0,"_privateTypes"],[13,19,9,0],[13,22,9,0,"require"],[13,29,9,0],[13,30,9,0,"_dependencyMap"],[13,44,9,0],[14,2,10,0],[14,6,10,0,"_types"],[14,12,10,0],[14,15,10,0,"require"],[14,22,10,0],[14,23,10,0,"_dependencyMap"],[14,37,10,0],[15,2,1,0],[16,0,2,0],[17,0,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[24,2,10,71],[26,2,12,0],[27,2,13,0],[28,2,14,0],[28,8,14,6,"isWindowPresent"],[28,23,14,21],[28,26,14,24],[28,33,14,31,"window"],[28,39,14,37],[28,44,14,42],[28,55,14,53],[28,56,14,54],[28,57,14,55],[30,2,16,0],[30,8,16,6,"connection"],[30,18,16,16],[30,21,16,19,"isWindowPresent"],[30,36,16,34],[30,40,16,38],[30,41,16,39,"window"],[30,47,16,45],[30,48,16,46,"hasOwnProperty"],[30,62,16,60],[30,63,16,61],[30,70,16,68],[30,71,16,69],[30,75,16,73],[30,76,16,74,"window"],[30,82,16,80],[30,83,16,81,"hasOwnProperty"],[30,97,16,95],[30,98,16,96],[30,105,16,103],[30,106,16,104],[30,109,16,107,"window"],[30,115,16,113],[30,116,16,114,"navigator"],[30,125,16,123],[30,126,16,124,"connection"],[30,136,16,134],[30,140,16,138,"window"],[30,146,16,144],[30,147,16,145,"navigator"],[30,156,16,154],[30,157,16,155,"mozConnection"],[30,170,16,168],[30,174,16,172,"window"],[30,180,16,178],[30,181,16,179,"navigator"],[30,190,16,188],[30,191,16,189,"webkitConnection"],[30,207,16,205],[30,210,16,208,"undefined"],[30,219,16,217],[30,220,16,218],[30,221,16,219],[32,2,18,0],[32,8,18,6,"typeMapping"],[32,19,18,17],[32,22,18,20],[33,4,19,2,"bluetooth"],[33,13,19,11],[33,15,19,13,"NetInfoStateType"],[33,21,19,29],[33,22,19,29,"NetInfoStateType"],[33,38,19,29],[33,39,19,30,"bluetooth"],[33,48,19,39],[34,4,20,2,"cellular"],[34,12,20,10],[34,14,20,12,"NetInfoStateType"],[34,20,20,28],[34,21,20,28,"NetInfoStateType"],[34,37,20,28],[34,38,20,29,"cellular"],[34,46,20,37],[35,4,21,2,"ethernet"],[35,12,21,10],[35,14,21,12,"NetInfoStateType"],[35,20,21,28],[35,21,21,28,"NetInfoStateType"],[35,37,21,28],[35,38,21,29,"ethernet"],[35,46,21,37],[36,4,22,2,"none"],[36,8,22,6],[36,10,22,8,"NetInfoStateType"],[36,16,22,24],[36,17,22,24,"NetInfoStateType"],[36,33,22,24],[36,34,22,25,"none"],[36,38,22,29],[37,4,23,2,"other"],[37,9,23,7],[37,11,23,9,"NetInfoStateType"],[37,17,23,25],[37,18,23,25,"NetInfoStateType"],[37,34,23,25],[37,35,23,26,"other"],[37,40,23,31],[38,4,24,2,"unknown"],[38,11,24,9],[38,13,24,11,"NetInfoStateType"],[38,19,24,27],[38,20,24,27,"NetInfoStateType"],[38,36,24,27],[38,37,24,28,"unknown"],[38,44,24,35],[39,4,25,2,"wifi"],[39,8,25,6],[39,10,25,8,"NetInfoStateType"],[39,16,25,24],[39,17,25,24,"NetInfoStateType"],[39,33,25,24],[39,34,25,25,"wifi"],[39,38,25,29],[40,4,26,2,"wimax"],[40,9,26,7],[40,11,26,9,"NetInfoStateType"],[40,17,26,25],[40,18,26,25,"NetInfoStateType"],[40,34,26,25],[40,35,26,26,"wimax"],[40,40,26,31],[41,4,27,2,"mixed"],[41,9,27,7],[41,11,27,9,"NetInfoStateType"],[41,17,27,25],[41,18,27,25,"NetInfoStateType"],[41,34,27,25],[41,35,27,26,"other"],[42,2,28,0],[42,3,28,1],[43,2,29,0],[43,8,29,6,"effectiveTypeMapping"],[43,28,29,26],[43,31,29,29],[44,4,30,2],[44,8,30,6],[44,10,30,8,"NetInfoCellularGeneration"],[44,16,30,33],[44,17,30,33,"NetInfoCellularGeneration"],[44,42,30,33],[44,43,30,34],[44,47,30,38],[44,48,30,39],[45,4,31,2],[45,8,31,6],[45,10,31,8,"NetInfoCellularGeneration"],[45,16,31,33],[45,17,31,33,"NetInfoCellularGeneration"],[45,42,31,33],[45,43,31,34],[45,47,31,38],[45,48,31,39],[46,4,32,2],[46,8,32,6],[46,10,32,8,"NetInfoCellularGeneration"],[46,16,32,33],[46,17,32,33,"NetInfoCellularGeneration"],[46,42,32,33],[46,43,32,34],[46,47,32,38],[46,48,32,39],[47,4,33,2],[47,13,33,11],[47,15,33,13,"NetInfoCellularGeneration"],[47,21,33,38],[47,22,33,38,"NetInfoCellularGeneration"],[47,47,33,38],[47,48,33,39],[47,52,33,43],[48,2,34,0],[48,3,34,1],[48,4,34,2],[48,5,34,3],[50,2,36,0],[50,8,36,6,"getCurrentState"],[50,23,36,21],[50,26,36,24,"_requestedInterface"],[50,45,36,43],[50,49,36,47],[51,4,37,2],[51,10,37,8,"isConnected"],[51,21,37,19],[51,24,37,22,"isWindowPresent"],[51,39,37,37],[51,42,37,40,"navigator"],[51,51,37,49],[51,52,37,50,"onLine"],[51,58,37,56],[51,61,37,59],[51,66,37,64],[52,4,38,2],[52,10,38,8,"baseState"],[52,19,38,17],[52,22,38,20],[53,6,39,4,"isInternetReachable"],[53,25,39,23],[53,27,39,25],[54,4,40,2],[54,5,40,3],[54,6,40,4],[54,7,40,5],[56,4,42,2],[56,8,42,6],[56,9,42,7,"connection"],[56,19,42,17],[56,21,42,19],[57,6,43,4],[57,10,43,8,"isConnected"],[57,21,43,19],[57,23,43,21],[58,8,44,6],[58,14,44,12,"state"],[58,19,44,17],[58,22,44,17,"Object"],[58,28,44,17],[58,29,44,17,"assign"],[58,35,44,17],[58,40,44,25,"baseState"],[58,49,44,34],[59,10,45,8,"isConnected"],[59,21,45,19],[59,23,45,21],[59,27,45,25],[60,10,46,8,"type"],[60,14,46,12],[60,16,46,14,"NetInfoStateType"],[60,22,46,30],[60,23,46,30,"NetInfoStateType"],[60,39,46,30],[60,40,46,31,"other"],[60,45,46,36],[61,10,47,8,"details"],[61,17,47,15],[61,19,47,17],[62,12,48,10,"isConnectionExpensive"],[62,33,48,31],[62,35,48,33],[63,10,49,8],[64,8,49,9],[64,10,50,7],[65,8,51,6],[65,15,51,13,"state"],[65,20,51,18],[66,6,52,4],[67,6,54,4],[67,12,54,10,"state"],[67,17,54,15],[67,20,54,15,"Object"],[67,26,54,15],[67,27,54,15,"assign"],[67,33,54,15],[67,38,54,23,"baseState"],[67,47,54,32],[68,8,55,6,"isConnected"],[68,19,55,17],[68,21,55,19],[68,26,55,24],[69,8,56,6,"isInternetReachable"],[69,27,56,25],[69,29,56,27],[69,34,56,32],[70,8,57,6,"type"],[70,12,57,10],[70,14,57,12,"NetInfoStateType"],[70,20,57,28],[70,21,57,28,"NetInfoStateType"],[70,37,57,28],[70,38,57,29,"none"],[70,42,57,33],[71,8,58,6,"details"],[71,15,58,13],[71,17,58,15],[72,6,58,19],[72,8,59,5],[73,6,60,4],[73,13,60,11,"state"],[73,18,60,16],[74,4,61,2],[74,5,61,3],[74,6,61,4],[76,4,64,2],[76,10,64,8,"isConnectionExpensive"],[76,31,64,29],[76,34,64,32,"connection"],[76,44,64,42],[76,45,64,43,"saveData"],[76,53,64,51],[77,4,65,2],[77,10,65,8,"type"],[77,14,65,12],[77,17,65,15,"connection"],[77,27,65,25],[77,28,65,26,"type"],[77,32,65,30],[77,35,65,33,"typeMapping"],[77,46,65,44],[77,47,65,45,"connection"],[77,57,65,55],[77,58,65,56,"type"],[77,62,65,60],[77,63,65,61],[77,66,65,64,"isConnected"],[77,77,65,75],[77,80,65,78,"NetInfoStateType"],[77,86,65,94],[77,87,65,94,"NetInfoStateType"],[77,103,65,94],[77,104,65,95,"other"],[77,109,65,100],[77,112,65,103,"NetInfoStateType"],[77,118,65,119],[77,119,65,119,"NetInfoStateType"],[77,135,65,119],[77,136,65,120,"unknown"],[77,143,65,127],[78,4,67,2],[78,8,67,6,"type"],[78,12,67,10],[78,17,67,15,"NetInfoStateType"],[78,23,67,31],[78,24,67,31,"NetInfoStateType"],[78,40,67,31],[78,41,67,32,"bluetooth"],[78,50,67,41],[78,52,67,43],[79,6,68,4],[79,12,68,10,"state"],[79,17,68,15],[79,20,68,15,"Object"],[79,26,68,15],[79,27,68,15,"assign"],[79,33,68,15],[79,38,68,23,"baseState"],[79,47,68,32],[80,8,69,6,"isConnected"],[80,19,69,17],[80,21,69,19],[80,25,69,23],[81,8,70,6,"type"],[81,12,70,10],[82,8,71,6,"details"],[82,15,71,13],[82,17,71,15],[83,10,72,8,"isConnectionExpensive"],[84,8,73,6],[85,6,73,7],[85,8,74,5],[86,6,75,4],[86,13,75,11,"state"],[86,18,75,16],[87,4,76,2],[87,5,76,3],[87,11,76,9],[87,15,76,13,"type"],[87,19,76,17],[87,24,76,22,"NetInfoStateType"],[87,30,76,38],[87,31,76,38,"NetInfoStateType"],[87,47,76,38],[87,48,76,39,"cellular"],[87,56,76,47],[87,58,76,49],[88,6,77,4],[88,12,77,10,"state"],[88,17,77,15],[88,20,77,15,"Object"],[88,26,77,15],[88,27,77,15,"assign"],[88,33,77,15],[88,38,77,23,"baseState"],[88,47,77,32],[89,8,78,6,"isConnected"],[89,19,78,17],[89,21,78,19],[89,25,78,23],[90,8,79,6,"type"],[90,12,79,10],[91,8,80,6,"details"],[91,15,80,13],[91,17,80,15],[92,10,81,8,"isConnectionExpensive"],[92,31,81,29],[93,10,82,8,"cellularGeneration"],[93,28,82,26],[93,30,82,28,"effectiveTypeMapping"],[93,50,82,48],[93,51,82,49,"connection"],[93,61,82,59],[93,62,82,60,"effectiveType"],[93,75,82,73],[93,76,82,74],[93,80,82,78],[93,84,82,82],[94,10,83,8,"carrier"],[94,17,83,15],[94,19,83,17],[95,8,84,6],[96,6,84,7],[96,8,85,5],[97,6,86,4],[97,13,86,11,"state"],[97,18,86,16],[98,4,87,2],[98,5,87,3],[98,11,87,9],[98,15,87,13,"type"],[98,19,87,17],[98,24,87,22,"NetInfoStateType"],[98,30,87,38],[98,31,87,38,"NetInfoStateType"],[98,47,87,38],[98,48,87,39,"ethernet"],[98,56,87,47],[98,58,87,49],[99,6,88,4],[99,12,88,10,"state"],[99,17,88,15],[99,20,88,15,"Object"],[99,26,88,15],[99,27,88,15,"assign"],[99,33,88,15],[99,38,88,23,"baseState"],[99,47,88,32],[100,8,89,6,"isConnected"],[100,19,89,17],[100,21,89,19],[100,25,89,23],[101,8,90,6,"type"],[101,12,90,10],[102,8,91,6,"details"],[102,15,91,13],[102,17,91,15],[103,10,92,8,"isConnectionExpensive"],[103,31,92,29],[104,10,93,8,"ipAddress"],[104,19,93,17],[104,21,93,19],[104,25,93,23],[105,10,94,8,"subnet"],[105,16,94,14],[105,18,94,16],[106,8,95,6],[107,6,95,7],[107,8,96,5],[108,6,97,4],[108,13,97,11,"state"],[108,18,97,16],[109,4,98,2],[109,5,98,3],[109,11,98,9],[109,15,98,13,"type"],[109,19,98,17],[109,24,98,22,"NetInfoStateType"],[109,30,98,38],[109,31,98,38,"NetInfoStateType"],[109,47,98,38],[109,48,98,39,"wifi"],[109,52,98,43],[109,54,98,45],[110,6,99,4],[110,12,99,10,"state"],[110,17,99,15],[110,20,99,15,"Object"],[110,26,99,15],[110,27,99,15,"assign"],[110,33,99,15],[110,38,99,23,"baseState"],[110,47,99,32],[111,8,100,6,"isConnected"],[111,19,100,17],[111,21,100,19],[111,25,100,23],[112,8,101,6,"type"],[112,12,101,10],[113,8,102,6,"details"],[113,15,102,13],[113,17,102,15],[114,10,103,8,"isConnectionExpensive"],[114,31,103,29],[115,10,104,8,"ssid"],[115,14,104,12],[115,16,104,14],[115,20,104,18],[116,10,105,8,"bssid"],[116,15,105,13],[116,17,105,15],[116,21,105,19],[117,10,106,8,"strength"],[117,18,106,16],[117,20,106,18],[117,24,106,22],[118,10,107,8,"ipAddress"],[118,19,107,17],[118,21,107,19],[118,25,107,23],[119,10,108,8,"subnet"],[119,16,108,14],[119,18,108,16],[119,22,108,20],[120,10,109,8,"frequency"],[120,19,109,17],[120,21,109,19],[120,25,109,23],[121,10,110,8,"linkSpeed"],[121,19,110,17],[121,21,110,19],[121,25,110,23],[122,10,111,8,"rxLinkSpeed"],[122,21,111,19],[122,23,111,21],[122,27,111,25],[123,10,112,8,"txLinkSpeed"],[123,21,112,19],[123,23,112,21],[124,8,113,6],[125,6,113,7],[125,8,114,5],[126,6,115,4],[126,13,115,11,"state"],[126,18,115,16],[127,4,116,2],[127,5,116,3],[127,11,116,9],[127,15,116,13,"type"],[127,19,116,17],[127,24,116,22,"NetInfoStateType"],[127,30,116,38],[127,31,116,38,"NetInfoStateType"],[127,47,116,38],[127,48,116,39,"wimax"],[127,53,116,44],[127,55,116,46],[128,6,117,4],[128,12,117,10,"state"],[128,17,117,15],[128,20,117,15,"Object"],[128,26,117,15],[128,27,117,15,"assign"],[128,33,117,15],[128,38,117,23,"baseState"],[128,47,117,32],[129,8,118,6,"isConnected"],[129,19,118,17],[129,21,118,19],[129,25,118,23],[130,8,119,6,"type"],[130,12,119,10],[131,8,120,6,"details"],[131,15,120,13],[131,17,120,15],[132,10,121,8,"isConnectionExpensive"],[133,8,122,6],[134,6,122,7],[134,8,123,5],[135,6,124,4],[135,13,124,11,"state"],[135,18,124,16],[136,4,125,2],[136,5,125,3],[136,11,125,9],[136,15,125,13,"type"],[136,19,125,17],[136,24,125,22,"NetInfoStateType"],[136,30,125,38],[136,31,125,38,"NetInfoStateType"],[136,47,125,38],[136,48,125,39,"none"],[136,52,125,43],[136,54,125,45],[137,6,126,4],[137,12,126,10,"state"],[137,17,126,15],[137,20,126,15,"Object"],[137,26,126,15],[137,27,126,15,"assign"],[137,33,126,15],[137,38,126,23,"baseState"],[137,47,126,32],[138,8,127,6,"isConnected"],[138,19,127,17],[138,21,127,19],[138,26,127,24],[139,8,128,6,"isInternetReachable"],[139,27,128,25],[139,29,128,27],[139,34,128,32],[140,8,129,6,"type"],[140,12,129,10],[141,8,130,6,"details"],[141,15,130,13],[141,17,130,15],[142,6,130,19],[142,8,131,5],[143,6,132,4],[143,13,132,11,"state"],[143,18,132,16],[144,4,133,2],[144,5,133,3],[144,11,133,9],[144,15,133,13,"type"],[144,19,133,17],[144,24,133,22,"NetInfoStateType"],[144,30,133,38],[144,31,133,38,"NetInfoStateType"],[144,47,133,38],[144,48,133,39,"unknown"],[144,55,133,46],[144,57,133,48],[145,6,134,4],[145,12,134,10,"state"],[145,17,134,15],[145,20,134,15,"Object"],[145,26,134,15],[145,27,134,15,"assign"],[145,33,134,15],[145,38,134,23,"baseState"],[145,47,134,32],[146,8,135,6,"isConnected"],[146,19,135,17],[147,8,136,6,"isInternetReachable"],[147,27,136,25],[147,29,136,27],[147,33,136,31],[148,8,137,6,"type"],[148,12,137,10],[149,8,138,6,"details"],[149,15,138,13],[149,17,138,15],[150,6,138,19],[150,8,139,5],[151,6,140,4],[151,13,140,11,"state"],[151,18,140,16],[152,4,141,2],[153,4,143,2],[153,10,143,8,"state"],[153,15,143,13],[153,18,143,13,"Object"],[153,24,143,13],[153,25,143,13,"assign"],[153,31,143,13],[153,36,143,21,"baseState"],[153,45,143,30],[154,6,144,4,"isConnected"],[154,17,144,15],[154,19,144,17],[154,23,144,21],[155,6,145,4,"type"],[155,10,145,8],[155,12,145,10,"NetInfoStateType"],[155,18,145,26],[155,19,145,26,"NetInfoStateType"],[155,35,145,26],[155,36,145,27,"other"],[155,41,145,32],[156,6,146,4,"details"],[156,13,146,11],[156,15,146,13],[157,8,147,6,"isConnectionExpensive"],[158,6,148,4],[159,4,148,5],[159,6,149,3],[160,4,150,2],[160,11,150,9,"state"],[160,16,150,14],[161,2,151,0],[161,3,151,1],[162,2,153,0],[162,8,153,6,"handlers"],[162,16,153,14],[162,19,153,17],[162,21,153,19],[163,2,154,0],[163,8,154,6,"nativeHandlers"],[163,22,154,20],[163,25,154,23],[163,27,154,25],[164,2,155,0],[164,8,155,6,"RNCNetInfo"],[164,18,155,16],[164,21,155,19],[165,4,156,2,"addListener"],[165,15,156,13,"addListener"],[165,16,156,14,"type"],[165,20,156,18],[165,22,156,20,"handler"],[165,29,156,27],[165,31,156,29],[166,6,157,4],[166,14,157,12,"type"],[166,18,157,16],[167,8,158,6],[167,13,158,11,"DEVICE_CONNECTIVITY_EVENT"],[167,26,158,36],[167,27,158,36,"DEVICE_CONNECTIVITY_EVENT"],[167,52,158,36],[168,10,159,8],[169,12,160,10],[169,18,160,16,"nativeHandler"],[169,31,160,29],[169,34,160,32,"nativeHandler"],[169,35,160,32],[169,40,160,38],[170,14,161,12,"handler"],[170,21,161,19],[170,22,161,20,"getCurrentState"],[170,37,161,35],[170,38,161,36],[170,39,161,37],[170,40,161,38],[171,12,162,10],[171,13,162,11],[172,12,164,10],[172,16,164,14,"connection"],[172,26,164,24],[172,28,164,26],[173,14,165,12,"connection"],[173,24,165,22],[173,25,165,23,"addEventListener"],[173,41,165,39],[173,42,165,40],[173,50,165,48],[173,52,165,50,"nativeHandler"],[173,65,165,63],[173,66,165,64],[174,12,166,10],[174,13,166,11],[174,19,166,17],[175,14,167,12],[175,18,167,16,"isWindowPresent"],[175,33,167,31],[175,35,167,33],[176,16,168,14,"window"],[176,22,168,20],[176,23,168,21,"addEventListener"],[176,39,168,37],[176,40,168,38],[176,48,168,46],[176,50,168,48,"nativeHandler"],[176,63,168,61],[176,65,168,63],[176,70,168,68],[176,71,168,69],[177,16,169,14,"window"],[177,22,169,20],[177,23,169,21,"addEventListener"],[177,39,169,37],[177,40,169,38],[177,49,169,47],[177,51,169,49,"nativeHandler"],[177,64,169,62],[177,66,169,64],[177,71,169,69],[177,72,169,70],[178,14,170,12],[179,12,171,10],[179,13,171,11],[179,14,171,12],[181,12,174,10,"handlers"],[181,20,174,18],[181,21,174,19,"push"],[181,25,174,23],[181,26,174,24,"handler"],[181,33,174,31],[181,34,174,32],[182,12,175,10,"nativeHandlers"],[182,26,175,24],[182,27,175,25,"push"],[182,31,175,29],[182,32,175,30,"nativeHandler"],[182,45,175,43],[182,46,175,44],[183,12,176,10],[184,10,177,8],[185,6,178,4],[186,4,179,2],[186,5,179,3],[187,4,181,2,"removeListeners"],[187,19,181,17,"removeListeners"],[187,20,181,18,"type"],[187,24,181,22],[187,26,181,24,"handler"],[187,33,181,31],[187,35,181,33],[188,6,182,4],[188,14,182,12,"type"],[188,18,182,16],[189,8,183,6],[189,13,183,11,"DEVICE_CONNECTIVITY_EVENT"],[189,26,183,36],[189,27,183,36,"DEVICE_CONNECTIVITY_EVENT"],[189,52,183,36],[190,10,184,8],[191,12,185,10],[192,12,186,10],[192,18,186,16,"index"],[192,23,186,21],[192,26,186,24,"handlers"],[192,34,186,32],[192,35,186,33,"indexOf"],[192,42,186,40],[192,43,186,41,"handler"],[192,50,186,48],[192,51,186,49],[193,12,187,10],[193,18,187,16,"nativeHandler"],[193,31,187,29],[193,34,187,32,"nativeHandlers"],[193,48,187,46],[193,49,187,47,"index"],[193,54,187,52],[193,55,187,53],[194,12,189,10],[194,16,189,14,"connection"],[194,26,189,24],[194,28,189,26],[195,14,190,12,"connection"],[195,24,190,22],[195,25,190,23,"removeEventListener"],[195,44,190,42],[195,45,190,43],[195,53,190,51],[195,55,190,53,"nativeHandler"],[195,68,190,66],[195,69,190,67],[196,12,191,10],[196,13,191,11],[196,19,191,17],[197,14,192,12],[197,18,192,16,"isWindowPresent"],[197,33,192,31],[197,35,192,33],[198,16,193,14,"window"],[198,22,193,20],[198,23,193,21,"removeEventListener"],[198,42,193,40],[198,43,193,41],[198,51,193,49],[198,53,193,51,"nativeHandler"],[198,66,193,64],[198,67,193,65],[199,16,194,14,"window"],[199,22,194,20],[199,23,194,21,"removeEventListener"],[199,42,194,40],[199,43,194,41],[199,52,194,50],[199,54,194,52,"nativeHandler"],[199,67,194,65],[199,68,194,66],[200,14,195,12],[201,12,196,10],[201,13,196,11],[201,14,196,12],[203,12,199,10,"handlers"],[203,20,199,18],[203,21,199,19,"splice"],[203,27,199,25],[203,28,199,26,"index"],[203,33,199,31],[203,35,199,33],[203,36,199,34],[203,37,199,35],[204,12,200,10,"nativeHandlers"],[204,26,200,24],[204,27,200,25,"splice"],[204,33,200,31],[204,34,200,32,"index"],[204,39,200,37],[204,41,200,39],[204,42,200,40],[204,43,200,41],[205,12,201,10],[206,10,202,8],[207,6,203,4],[208,4,204,2],[208,5,204,3],[209,4,206,2],[209,10,206,8,"getCurrentState"],[209,25,206,23,"getCurrentState"],[209,26,206,24,"requestedInterface"],[209,44,206,42],[209,46,206,44],[210,6,207,4],[210,13,207,11,"getCurrentState"],[210,28,207,26],[210,29,207,27,"requestedInterface"],[210,47,207,45],[210,48,207,46],[211,4,208,2],[211,5,208,3],[212,4,210,2,"configure"],[212,13,210,11,"configure"],[212,14,210,11],[212,16,210,14],[213,6,211,4],[214,4,212,2],[215,2,214,0],[215,3,214,1],[216,2,215,0],[216,6,215,0,"_default"],[216,14,215,0],[216,17,215,15,"RNCNetInfo"],[216,27,215,25],[217,0,215,26],[217,3]],"functionMap":{"names":["<global>","getCurrentState","RNCNetInfo.addListener","nativeHandler","RNCNetInfo.removeListeners","RNCNetInfo.getCurrentState","RNCNetInfo.configure"],"mappings":"AAA;wBCmC;CDmH;EEK;gCCI;WDE;GFiB;EIE;GJuB;EKE;GLE;EME;GNE"},"hasCjsExports":false},"type":"js/module"}]}