{"dependencies":[{"name":"./core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":197},"end":{"line":12,"column":16,"index":286}}],"key":"0ONCEUiDM4TuRiJMnypk4k7v4nE=","exportNames":["*"],"imports":1}},{"name":"./PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":287},"end":{"line":13,"column":61,"index":348}}],"key":"O136KS8LvzB4pufOIvMCitL6KOc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"updateLayoutAnimations\", {\n    enumerable: true,\n    get: function () {\n      return updateLayoutAnimations;\n    }\n  });\n  var _core = require(_dependencyMap[0], \"./core\");\n  var _PlatformChecker = require(_dependencyMap[1], \"./PlatformChecker\");\n  function createUpdateManager() {\n    var animations = [];\n    // When a stack is rerendered we reconfigure all the shared elements.\n    // To do that we want them to appear in our batch in the correct order,\n    // so we defer some of the updates to appear at the end of the batch.\n    var deferredAnimations = [];\n    return {\n      update(batchItem, isUnmounting) {\n        if (isUnmounting) {\n          deferredAnimations.push(batchItem);\n        } else {\n          animations.push(batchItem);\n        }\n        if (animations.length + deferredAnimations.length === 1) {\n          (0, _PlatformChecker.isFabric)() ? this.flush() : setImmediate(this.flush);\n        }\n      },\n      flush() {\n        (0, _core.configureLayoutAnimationBatch)(animations.concat(deferredAnimations));\n        animations.length = 0;\n        deferredAnimations.length = 0;\n      }\n    };\n  }\n\n  /**\n   * Lets you update the current configuration of the layout animation or shared\n   * element transition for a given component. Configurations are batched and\n   * applied at the end of the current execution block, right before sending the\n   * response back to native.\n   *\n   * @param viewTag - The tag of the component you'd like to configure.\n   * @param type - The type of the animation you'd like to configure -\n   *   {@link LayoutAnimationType}.\n   * @param config - The animation configuration - {@link LayoutAnimationFunction},\n   *   {@link SharedTransitionAnimationsFunction}, {@link ProgressAnimationCallback}\n   *   or {@link Keyframe}. Passing `undefined` will remove the animation.\n   * @param sharedTransitionTag - The tag of the shared element transition you'd\n   *   like to configure. Passing `undefined` will remove the transition.\n   * @param isUnmounting - Determines whether the configuration should be included\n   *   at the end of the batch, after all the non-deferred configurations (even\n   *   those that were updated later). This is used to retain the correct ordering\n   *   of shared elements. Defaults to `false`.\n   */\n  var updateLayoutAnimations;\n  if ((0, _PlatformChecker.shouldBeUseWeb)()) {\n    updateLayoutAnimations = () => {\n      // no-op\n    };\n  } else {\n    var updateLayoutAnimationsManager = createUpdateManager();\n    updateLayoutAnimations = (viewTag, type, config, sharedTransitionTag, isUnmounting) => updateLayoutAnimationsManager.update({\n      viewTag,\n      type,\n      config: config ? (0, _core.makeShareableCloneRecursive)(config) : undefined,\n      sharedTransitionTag\n    }, isUnmounting);\n  }\n});","lineCount":73,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,60,0,"Object"],[7,8,60,0],[7,9,60,0,"defineProperty"],[7,23,60,0],[7,24,60,0,"exports"],[7,31,60,0],[8,4,60,0,"enumerable"],[8,14,60,0],[9,4,60,0,"get"],[9,7,60,0],[9,18,60,0,"get"],[9,19,60,0],[10,6,60,0],[10,13,60,0,"updateLayoutAnimations"],[10,35,60,0],[11,4,60,0],[12,2,60,0],[13,2,9,0],[13,6,9,0,"_core"],[13,11,9,0],[13,14,9,0,"require"],[13,21,9,0],[13,22,9,0,"_dependencyMap"],[13,36,9,0],[14,2,13,0],[14,6,13,0,"_PlatformChecker"],[14,22,13,0],[14,25,13,0,"require"],[14,32,13,0],[14,33,13,0,"_dependencyMap"],[14,47,13,0],[15,2,15,0],[15,11,15,9,"createUpdateManager"],[15,30,15,28,"createUpdateManager"],[15,31,15,28],[15,33,15,31],[16,4,16,2],[16,8,16,8,"animations"],[16,18,16,46],[16,21,16,49],[16,23,16,51],[17,4,17,2],[18,4,18,2],[19,4,19,2],[20,4,20,2],[20,8,20,8,"deferredAnimations"],[20,26,20,54],[20,29,20,57],[20,31,20,59],[21,4,22,2],[21,11,22,9],[22,6,23,4,"update"],[22,12,23,10,"update"],[22,13,23,11,"batchItem"],[22,22,23,46],[22,24,23,48,"isUnmounting"],[22,36,23,70],[22,38,23,72],[23,8,24,6],[23,12,24,10,"isUnmounting"],[23,24,24,22],[23,26,24,24],[24,10,25,8,"deferredAnimations"],[24,28,25,26],[24,29,25,27,"push"],[24,33,25,31],[24,34,25,32,"batchItem"],[24,43,25,41],[24,44,25,42],[25,8,26,6],[25,9,26,7],[25,15,26,13],[26,10,27,8,"animations"],[26,20,27,18],[26,21,27,19,"push"],[26,25,27,23],[26,26,27,24,"batchItem"],[26,35,27,33],[26,36,27,34],[27,8,28,6],[28,8,29,6],[28,12,29,10,"animations"],[28,22,29,20],[28,23,29,21,"length"],[28,29,29,27],[28,32,29,30,"deferredAnimations"],[28,50,29,48],[28,51,29,49,"length"],[28,57,29,55],[28,62,29,60],[28,63,29,61],[28,65,29,63],[29,10,30,8],[29,14,30,8,"isFabric"],[29,30,30,16],[29,31,30,16,"isFabric"],[29,39,30,16],[29,41,30,17],[29,42,30,18],[29,45,30,21],[29,49,30,25],[29,50,30,26,"flush"],[29,55,30,31],[29,56,30,32],[29,57,30,33],[29,60,30,36,"setImmediate"],[29,72,30,48],[29,73,30,49],[29,77,30,53],[29,78,30,54,"flush"],[29,83,30,59],[29,84,30,60],[30,8,31,6],[31,6,32,4],[31,7,32,5],[32,6,33,4,"flush"],[32,11,33,9,"flush"],[32,12,33,9],[32,14,33,22],[33,8,34,6],[33,12,34,6,"configureLayoutAnimationBatch"],[33,17,34,35],[33,18,34,35,"configureLayoutAnimationBatch"],[33,47,34,35],[33,49,34,36,"animations"],[33,59,34,46],[33,60,34,47,"concat"],[33,66,34,53],[33,67,34,54,"deferredAnimations"],[33,85,34,72],[33,86,34,73],[33,87,34,74],[34,8,35,6,"animations"],[34,18,35,16],[34,19,35,17,"length"],[34,25,35,23],[34,28,35,26],[34,29,35,27],[35,8,36,6,"deferredAnimations"],[35,26,36,24],[35,27,36,25,"length"],[35,33,36,31],[35,36,36,34],[35,37,36,35],[36,6,37,4],[37,4,38,2],[37,5,38,3],[38,2,39,0],[40,2,41,0],[41,0,42,0],[42,0,43,0],[43,0,44,0],[44,0,45,0],[45,0,46,0],[46,0,47,0],[47,0,48,0],[48,0,49,0],[49,0,50,0],[50,0,51,0],[51,0,52,0],[52,0,53,0],[53,0,54,0],[54,0,55,0],[55,0,56,0],[56,0,57,0],[57,0,58,0],[58,0,59,0],[59,2,60,7],[59,6,60,11,"updateLayoutAnimations"],[59,28,70,9],[60,2,72,0],[60,6,72,4],[60,10,72,4,"shouldBeUseWeb"],[60,26,72,18],[60,27,72,18,"shouldBeUseWeb"],[60,41,72,18],[60,43,72,19],[60,44,72,20],[60,46,72,22],[61,4,73,2,"updateLayoutAnimations"],[61,26,73,24],[61,29,73,27,"updateLayoutAnimations"],[61,30,73,27],[61,35,73,33],[62,6,74,4],[63,4,74,4],[63,5,75,3],[64,2,76,0],[64,3,76,1],[64,9,76,7],[65,4,77,2],[65,8,77,8,"updateLayoutAnimationsManager"],[65,37,77,37],[65,40,77,40,"createUpdateManager"],[65,59,77,59],[65,60,77,60],[65,61,77,61],[66,4,78,2,"updateLayoutAnimations"],[66,26,78,24],[66,29,78,27,"updateLayoutAnimations"],[66,30,79,4,"viewTag"],[66,37,79,11],[66,39,80,4,"type"],[66,43,80,8],[66,45,81,4,"config"],[66,51,81,10],[66,53,82,4,"sharedTransitionTag"],[66,72,82,23],[66,74,83,4,"isUnmounting"],[66,86,83,16],[66,91,85,4,"updateLayoutAnimationsManager"],[66,120,85,33],[66,121,85,34,"update"],[66,127,85,40],[66,128,86,6],[67,6,87,8,"viewTag"],[67,13,87,15],[68,6,88,8,"type"],[68,10,88,12],[69,6,89,8,"config"],[69,12,89,14],[69,14,89,16,"config"],[69,20,89,22],[69,23,89,25],[69,27,89,25,"makeShareableCloneRecursive"],[69,32,89,52],[69,33,89,52,"makeShareableCloneRecursive"],[69,60,89,52],[69,62,89,53,"config"],[69,68,89,59],[69,69,89,60],[69,72,89,63,"undefined"],[69,81,89,72],[70,6,90,8,"sharedTransitionTag"],[71,4,91,6],[71,5,91,7],[71,7,92,6,"isUnmounting"],[71,19,93,4],[71,20,93,5],[72,2,94,0],[73,0,94,1],[73,3]],"functionMap":{"names":["<global>","createUpdateManager","update","flush","updateLayoutAnimations"],"mappings":"AAA;ACc;ICQ;KDS;IEC;KFI;CDE;2BIkC;GJE;2BIG;KJe"},"hasCjsExports":false},"type":"js/module"}]}