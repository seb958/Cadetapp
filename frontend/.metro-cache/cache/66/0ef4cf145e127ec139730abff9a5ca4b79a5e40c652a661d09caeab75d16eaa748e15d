{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return EventManager;\n    }\n  });\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  class EventManager {\n    constructor(view) {\n      _defineProperty(this, \"view\", void 0);\n      _defineProperty(this, \"pointersInBounds\", []);\n      _defineProperty(this, \"activePointersCounter\", void 0);\n      this.view = view;\n      this.activePointersCounter = 0;\n    }\n    onPointerDown(_event) {}\n    onPointerAdd(_event) {}\n    onPointerUp(_event) {}\n    onPointerRemove(_event) {}\n    onPointerMove(_event) {}\n    onPointerLeave(_event) {} // Called only when pointer is pressed (or touching)\n\n    onPointerEnter(_event) {} // Called only when pointer is pressed (or touching)\n\n    onPointerCancel(_event) {// When pointer cancel is triggered and there are more pointers on the view, only one pointer is cancelled\n      // Because we want all pointers to be cancelled by that event, we are doing it manually by reseting handler and changing activePointersCounter to 0\n      // Events that correspond to removing the pointer (pointerup, touchend) have condition, that they don't perform any action when activePointersCounter\n      // is equal to 0. This prevents counter from going to negative values, when pointers are removed from view after one of them has been cancelled\n    }\n    onPointerOutOfBounds(_event) {}\n    onPointerMoveOver(_event) {}\n    onPointerMoveOut(_event) {}\n    onWheel(_event) {}\n    setOnPointerDown(callback) {\n      this.onPointerDown = callback;\n    }\n    setOnPointerAdd(callback) {\n      this.onPointerAdd = callback;\n    }\n    setOnPointerUp(callback) {\n      this.onPointerUp = callback;\n    }\n    setOnPointerRemove(callback) {\n      this.onPointerRemove = callback;\n    }\n    setOnPointerMove(callback) {\n      this.onPointerMove = callback;\n    }\n    setOnPointerLeave(callback) {\n      this.onPointerLeave = callback;\n    }\n    setOnPointerEnter(callback) {\n      this.onPointerEnter = callback;\n    }\n    setOnPointerCancel(callback) {\n      this.onPointerCancel = callback;\n    }\n    setOnPointerOutOfBounds(callback) {\n      this.onPointerOutOfBounds = callback;\n    }\n    setOnPointerMoveOver(callback) {\n      this.onPointerMoveOver = callback;\n    }\n    setOnPointerMoveOut(callback) {\n      this.onPointerMoveOut = callback;\n    }\n    setOnWheel(callback) {\n      this.onWheel = callback;\n    }\n    markAsInBounds(pointerId) {\n      if (this.pointersInBounds.indexOf(pointerId) >= 0) {\n        return;\n      }\n      this.pointersInBounds.push(pointerId);\n    }\n    markAsOutOfBounds(pointerId) {\n      const index = this.pointersInBounds.indexOf(pointerId);\n      if (index < 0) {\n        return;\n      }\n      this.pointersInBounds.splice(index, 1);\n    }\n    resetManager() {\n      // Reseting activePointersCounter is necessary to make gestures such as pinch work properly\n      // There are gestures that end when there is still one active pointer (like pinch/rotation)\n      // When these gestures end, they are reset, but they still receive events from pointer that is active\n      // This causes trouble, since only onPointerDown registers gesture in orchestrator, and while gestures receive\n      // Events from active pointer after they finished, next pointerdown event will be registered as additional pointer, not the first one\n      // This casues trouble like gestures getting stuck in END state, even though they should have gone to UNDETERMINED\n      this.activePointersCounter = 0;\n      this.pointersInBounds = [];\n    }\n  }\n});","lineCount":114,"map":[[7,2,4,15,"Object"],[7,8,4,15],[7,9,4,15,"defineProperty"],[7,23,4,15],[7,24,4,15,"exports"],[7,31,4,15],[8,4,4,15,"enumerable"],[8,14,4,15],[9,4,4,15,"get"],[9,7,4,15],[9,18,4,15,"get"],[9,19,4,15],[10,6,4,15],[10,13,4,15,"EventManager"],[10,25,4,15],[11,4,4,15],[12,2,4,15],[13,2,1,0],[13,11,1,9,"_defineProperty"],[13,26,1,24,"_defineProperty"],[13,27,1,25,"obj"],[13,30,1,28],[13,32,1,30,"key"],[13,35,1,33],[13,37,1,35,"value"],[13,42,1,40],[13,44,1,42],[14,4,1,44],[14,8,1,48,"key"],[14,11,1,51],[14,15,1,55,"obj"],[14,18,1,58],[14,20,1,60],[15,6,1,62,"Object"],[15,12,1,68],[15,13,1,69,"defineProperty"],[15,27,1,83],[15,28,1,84,"obj"],[15,31,1,87],[15,33,1,89,"key"],[15,36,1,92],[15,38,1,94],[16,8,1,96,"value"],[16,13,1,101],[16,15,1,103,"value"],[16,20,1,108],[17,8,1,110,"enumerable"],[17,18,1,120],[17,20,1,122],[17,24,1,126],[18,8,1,128,"configurable"],[18,20,1,140],[18,22,1,142],[18,26,1,146],[19,8,1,148,"writable"],[19,16,1,156],[19,18,1,158],[20,6,1,163],[20,7,1,164],[20,8,1,165],[21,4,1,167],[21,5,1,168],[21,11,1,174],[22,6,1,176,"obj"],[22,9,1,179],[22,10,1,180,"key"],[22,13,1,183],[22,14,1,184],[22,17,1,187,"value"],[22,22,1,192],[23,4,1,194],[24,4,1,196],[24,11,1,203,"obj"],[24,14,1,206],[25,2,1,208],[27,2,3,0],[28,2,4,15],[28,8,4,21,"EventManager"],[28,20,4,33],[28,21,4,34],[29,4,5,2,"constructor"],[29,15,5,13,"constructor"],[29,16,5,14,"view"],[29,20,5,18],[29,22,5,20],[30,6,6,4,"_defineProperty"],[30,21,6,19],[30,22,6,20],[30,26,6,24],[30,28,6,26],[30,34,6,32],[30,36,6,34],[30,41,6,39],[30,42,6,40],[30,43,6,41],[31,6,8,4,"_defineProperty"],[31,21,8,19],[31,22,8,20],[31,26,8,24],[31,28,8,26],[31,46,8,44],[31,48,8,46],[31,50,8,48],[31,51,8,49],[32,6,10,4,"_defineProperty"],[32,21,10,19],[32,22,10,20],[32,26,10,24],[32,28,10,26],[32,51,10,49],[32,53,10,51],[32,58,10,56],[32,59,10,57],[32,60,10,58],[33,6,12,4],[33,10,12,8],[33,11,12,9,"view"],[33,15,12,13],[33,18,12,16,"view"],[33,22,12,20],[34,6,13,4],[34,10,13,8],[34,11,13,9,"activePointersCounter"],[34,32,13,30],[34,35,13,33],[34,36,13,34],[35,4,14,2],[36,4,16,2,"onPointerDown"],[36,17,16,15,"onPointerDown"],[36,18,16,16,"_event"],[36,24,16,22],[36,26,16,24],[36,27,16,25],[37,4,18,2,"onPointerAdd"],[37,16,18,14,"onPointerAdd"],[37,17,18,15,"_event"],[37,23,18,21],[37,25,18,23],[37,26,18,24],[38,4,20,2,"onPointerUp"],[38,15,20,13,"onPointerUp"],[38,16,20,14,"_event"],[38,22,20,20],[38,24,20,22],[38,25,20,23],[39,4,22,2,"onPointerRemove"],[39,19,22,17,"onPointerRemove"],[39,20,22,18,"_event"],[39,26,22,24],[39,28,22,26],[39,29,22,27],[40,4,24,2,"onPointerMove"],[40,17,24,15,"onPointerMove"],[40,18,24,16,"_event"],[40,24,24,22],[40,26,24,24],[40,27,24,25],[41,4,26,2,"onPointerLeave"],[41,18,26,16,"onPointerLeave"],[41,19,26,17,"_event"],[41,25,26,23],[41,27,26,25],[41,28,26,26],[41,29,26,27],[41,30,26,28],[43,4,29,2,"onPointerEnter"],[43,18,29,16,"onPointerEnter"],[43,19,29,17,"_event"],[43,25,29,23],[43,27,29,25],[43,28,29,26],[43,29,29,27],[43,30,29,28],[45,4,32,2,"onPointerCancel"],[45,19,32,17,"onPointerCancel"],[45,20,32,18,"_event"],[45,26,32,24],[45,28,32,26],[45,29,32,27],[46,6,33,4],[47,6,34,4],[48,6,35,4],[49,4,35,4],[50,4,38,2,"onPointerOutOfBounds"],[50,24,38,22,"onPointerOutOfBounds"],[50,25,38,23,"_event"],[50,31,38,29],[50,33,38,31],[50,34,38,32],[51,4,40,2,"onPointerMoveOver"],[51,21,40,19,"onPointerMoveOver"],[51,22,40,20,"_event"],[51,28,40,26],[51,30,40,28],[51,31,40,29],[52,4,42,2,"onPointerMoveOut"],[52,20,42,18,"onPointerMoveOut"],[52,21,42,19,"_event"],[52,27,42,25],[52,29,42,27],[52,30,42,28],[53,4,44,2,"onWheel"],[53,11,44,9,"onWheel"],[53,12,44,10,"_event"],[53,18,44,16],[53,20,44,18],[53,21,44,19],[54,4,46,2,"setOnPointerDown"],[54,20,46,18,"setOnPointerDown"],[54,21,46,19,"callback"],[54,29,46,27],[54,31,46,29],[55,6,47,4],[55,10,47,8],[55,11,47,9,"onPointerDown"],[55,24,47,22],[55,27,47,25,"callback"],[55,35,47,33],[56,4,48,2],[57,4,50,2,"setOnPointerAdd"],[57,19,50,17,"setOnPointerAdd"],[57,20,50,18,"callback"],[57,28,50,26],[57,30,50,28],[58,6,51,4],[58,10,51,8],[58,11,51,9,"onPointerAdd"],[58,23,51,21],[58,26,51,24,"callback"],[58,34,51,32],[59,4,52,2],[60,4,54,2,"setOnPointerUp"],[60,18,54,16,"setOnPointerUp"],[60,19,54,17,"callback"],[60,27,54,25],[60,29,54,27],[61,6,55,4],[61,10,55,8],[61,11,55,9,"onPointerUp"],[61,22,55,20],[61,25,55,23,"callback"],[61,33,55,31],[62,4,56,2],[63,4,58,2,"setOnPointerRemove"],[63,22,58,20,"setOnPointerRemove"],[63,23,58,21,"callback"],[63,31,58,29],[63,33,58,31],[64,6,59,4],[64,10,59,8],[64,11,59,9,"onPointerRemove"],[64,26,59,24],[64,29,59,27,"callback"],[64,37,59,35],[65,4,60,2],[66,4,62,2,"setOnPointerMove"],[66,20,62,18,"setOnPointerMove"],[66,21,62,19,"callback"],[66,29,62,27],[66,31,62,29],[67,6,63,4],[67,10,63,8],[67,11,63,9,"onPointerMove"],[67,24,63,22],[67,27,63,25,"callback"],[67,35,63,33],[68,4,64,2],[69,4,66,2,"setOnPointerLeave"],[69,21,66,19,"setOnPointerLeave"],[69,22,66,20,"callback"],[69,30,66,28],[69,32,66,30],[70,6,67,4],[70,10,67,8],[70,11,67,9,"onPointerLeave"],[70,25,67,23],[70,28,67,26,"callback"],[70,36,67,34],[71,4,68,2],[72,4,70,2,"setOnPointerEnter"],[72,21,70,19,"setOnPointerEnter"],[72,22,70,20,"callback"],[72,30,70,28],[72,32,70,30],[73,6,71,4],[73,10,71,8],[73,11,71,9,"onPointerEnter"],[73,25,71,23],[73,28,71,26,"callback"],[73,36,71,34],[74,4,72,2],[75,4,74,2,"setOnPointerCancel"],[75,22,74,20,"setOnPointerCancel"],[75,23,74,21,"callback"],[75,31,74,29],[75,33,74,31],[76,6,75,4],[76,10,75,8],[76,11,75,9,"onPointerCancel"],[76,26,75,24],[76,29,75,27,"callback"],[76,37,75,35],[77,4,76,2],[78,4,78,2,"setOnPointerOutOfBounds"],[78,27,78,25,"setOnPointerOutOfBounds"],[78,28,78,26,"callback"],[78,36,78,34],[78,38,78,36],[79,6,79,4],[79,10,79,8],[79,11,79,9,"onPointerOutOfBounds"],[79,31,79,29],[79,34,79,32,"callback"],[79,42,79,40],[80,4,80,2],[81,4,82,2,"setOnPointerMoveOver"],[81,24,82,22,"setOnPointerMoveOver"],[81,25,82,23,"callback"],[81,33,82,31],[81,35,82,33],[82,6,83,4],[82,10,83,8],[82,11,83,9,"onPointerMoveOver"],[82,28,83,26],[82,31,83,29,"callback"],[82,39,83,37],[83,4,84,2],[84,4,86,2,"setOnPointerMoveOut"],[84,23,86,21,"setOnPointerMoveOut"],[84,24,86,22,"callback"],[84,32,86,30],[84,34,86,32],[85,6,87,4],[85,10,87,8],[85,11,87,9,"onPointerMoveOut"],[85,27,87,25],[85,30,87,28,"callback"],[85,38,87,36],[86,4,88,2],[87,4,90,2,"setOnWheel"],[87,14,90,12,"setOnWheel"],[87,15,90,13,"callback"],[87,23,90,21],[87,25,90,23],[88,6,91,4],[88,10,91,8],[88,11,91,9,"onWheel"],[88,18,91,16],[88,21,91,19,"callback"],[88,29,91,27],[89,4,92,2],[90,4,94,2,"markAsInBounds"],[90,18,94,16,"markAsInBounds"],[90,19,94,17,"pointerId"],[90,28,94,26],[90,30,94,28],[91,6,95,4],[91,10,95,8],[91,14,95,12],[91,15,95,13,"pointersInBounds"],[91,31,95,29],[91,32,95,30,"indexOf"],[91,39,95,37],[91,40,95,38,"pointerId"],[91,49,95,47],[91,50,95,48],[91,54,95,52],[91,55,95,53],[91,57,95,55],[92,8,96,6],[93,6,97,4],[94,6,99,4],[94,10,99,8],[94,11,99,9,"pointersInBounds"],[94,27,99,25],[94,28,99,26,"push"],[94,32,99,30],[94,33,99,31,"pointerId"],[94,42,99,40],[94,43,99,41],[95,4,100,2],[96,4,102,2,"markAsOutOfBounds"],[96,21,102,19,"markAsOutOfBounds"],[96,22,102,20,"pointerId"],[96,31,102,29],[96,33,102,31],[97,6,103,4],[97,12,103,10,"index"],[97,17,103,15],[97,20,103,18],[97,24,103,22],[97,25,103,23,"pointersInBounds"],[97,41,103,39],[97,42,103,40,"indexOf"],[97,49,103,47],[97,50,103,48,"pointerId"],[97,59,103,57],[97,60,103,58],[98,6,105,4],[98,10,105,8,"index"],[98,15,105,13],[98,18,105,16],[98,19,105,17],[98,21,105,19],[99,8,106,6],[100,6,107,4],[101,6,109,4],[101,10,109,8],[101,11,109,9,"pointersInBounds"],[101,27,109,25],[101,28,109,26,"splice"],[101,34,109,32],[101,35,109,33,"index"],[101,40,109,38],[101,42,109,40],[101,43,109,41],[101,44,109,42],[102,4,110,2],[103,4,112,2,"resetManager"],[103,16,112,14,"resetManager"],[103,17,112,14],[103,19,112,17],[104,6,113,4],[105,6,114,4],[106,6,115,4],[107,6,116,4],[108,6,117,4],[109,6,118,4],[110,6,119,4],[110,10,119,8],[110,11,119,9,"activePointersCounter"],[110,32,119,30],[110,35,119,33],[110,36,119,34],[111,6,120,4],[111,10,120,8],[111,11,120,9,"pointersInBounds"],[111,27,120,25],[111,30,120,28],[111,32,120,30],[112,4,121,2],[113,2,123,0],[114,0,123,1],[114,3]],"functionMap":{"names":["_defineProperty","<global>","EventManager","constructor","onPointerDown","onPointerAdd","onPointerUp","onPointerRemove","onPointerMove","onPointerLeave","onPointerEnter","onPointerCancel","onPointerOutOfBounds","onPointerMoveOver","onPointerMoveOut","onWheel","setOnPointerDown","setOnPointerAdd","setOnPointerUp","setOnPointerRemove","setOnPointerMove","setOnPointerLeave","setOnPointerEnter","setOnPointerCancel","setOnPointerOutOfBounds","setOnPointerMoveOver","setOnPointerMoveOut","setOnWheel","markAsInBounds","markAsOutOfBounds","resetManager"],"mappings":"AAA,iNC;eCG;ECC;GDS;EEE,wBF;EGE,uBH;EIE,sBJ;EKE,0BL;EME,wBN;EOE,yBP;EQG,yBR;ESG;GTI;EUE,+BV;EWE,4BX;EYE,2BZ;EaE,kBb;EcE;GdE;EeE;GfE;EgBE;GhBE;EiBE;GjBE;EkBE;GlBE;EmBE;GnBE;EoBE;GpBE;EqBE;GrBE;EsBE;GtBE;EuBE;GvBE;EwBE;GxBE;EyBE;GzBE;E0BE;G1BM;E2BE;G3BQ;E4BE;G5BS;CDE"},"hasCjsExports":false},"type":"js/module"}]}