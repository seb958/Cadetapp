{"dependencies":[{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":43,"column":4,"index":1412},"end":{"line":43,"column":29,"index":1437}}],"key":"MLjvisfgn5XkSYgDpD4nfivY4nE=","exportNames":["*"],"imports":1,"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"getInstallationErrorMessage\", {\n    enumerable: true,\n    get: function () {\n      return getInstallationErrorMessage;\n    }\n  });\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[0], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  const getMessage = message => {\n    return ['react-native-date-picker is not installed correctly. Make sure you: ', '', ...message, '', 'Please reply in this thread if this solved your issue or not: ', 'https://github.com/henninghall/react-native-date-picker/issues/404', '', \"To ignore this warning, add 'global.ignoreDatePickerWarning = true' to the top of your index file.\"].join('\\n');\n  };\n  const messages = {\n    ios: {\n      expo: getMessage([\"1. Have rebuilt your app (with for instance 'npx expo run:ios')\", '2. Are not using Expo Go (Expo Go is unsupported). See README for more info: ', 'https://github.com/henninghall/react-native-date-picker']),\n      nonExpo: getMessage([\"1. Installed pods (by for instance running 'cd ios && pod install')\", \"2. Rebuilt the app (by for instance 'npx react-native run-ios')\"])\n    },\n    android: {\n      expo: getMessage([\"1. Have rebuilt your app (with for instance 'npx expo run:android')\", '2. Are not using Expo Go (Expo Go is unsupported). See README for more info: ', 'https://github.com/henninghall/react-native-date-picker']),\n      nonExpo: getMessage([\"1. Rebuilt the app (by for instance 'npx react-native run-ios')\"])\n    }\n  };\n  const getInstallationErrorMessage = () => {\n    try {\n      // @ts-ignore\n      require(_dependencyMap[1], \"expo-constants\").default;\n      return messages[Platform.default.OS].expo;\n    } catch (e) {\n      return messages[Platform.default.OS].nonExpo;\n    }\n  };\n});","lineCount":42,"map":[[12,2,40,0,"Object"],[12,8,40,0],[12,9,40,0,"defineProperty"],[12,23,40,0],[12,24,40,0,"exports"],[12,31,40,0],[13,4,40,0,"enumerable"],[13,14,40,0],[14,4,40,0,"get"],[14,7,40,0],[14,18,40,0,"get"],[14,19,40,0],[15,6,40,0],[15,13,40,0,"getInstallationErrorMessage"],[15,40,40,0],[16,4,40,0],[17,2,40,0],[18,2,48,1],[18,6,48,1,"_reactNativeWebDistExportsPlatform"],[18,40,48,1],[18,43,48,1,"require"],[18,50,48,1],[18,51,48,1,"_dependencyMap"],[18,65,48,1],[19,2,48,1],[19,6,48,1,"Platform"],[19,14,48,1],[19,17,48,1,"_interopDefault"],[19,32,48,1],[19,33,48,1,"_reactNativeWebDistExportsPlatform"],[19,67,48,1],[20,2,3,0],[20,8,3,6,"getMessage"],[20,18,3,16],[20,21,3,20,"message"],[20,28,3,27],[20,32,3,32],[21,4,4,2],[21,11,4,9],[21,12,5,4],[21,82,5,74],[21,84,6,4],[21,86,6,6],[21,88,7,4],[21,91,7,7,"message"],[21,98,7,14],[21,100,8,4],[21,102,8,6],[21,104,9,4],[21,168,9,68],[21,170,10,4],[21,238,10,72],[21,240,11,4],[21,242,11,6],[21,244,12,4],[21,344,12,104],[21,345,13,3],[21,346,13,4,"join"],[21,350,13,8],[21,351,13,9],[21,355,13,13],[21,356,13,14],[22,2,14,0],[22,3,14,1],[23,2,16,0],[23,8,16,6,"messages"],[23,16,16,14],[23,19,16,17],[24,4,17,2,"ios"],[24,7,17,5],[24,9,17,7],[25,6,18,4,"expo"],[25,10,18,8],[25,12,18,10,"getMessage"],[25,22,18,20],[25,23,18,21],[25,24,19,6],[25,89,19,71],[25,91,20,6],[25,170,20,85],[25,172,21,6],[25,229,21,63],[25,230,22,5],[25,231,22,6],[26,6,23,4,"nonExpo"],[26,13,23,11],[26,15,23,13,"getMessage"],[26,25,23,23],[26,26,23,24],[26,27,24,6],[26,96,24,75],[26,98,25,6],[26,163,25,71],[26,164,26,5],[27,4,27,2],[27,5,27,3],[28,4,28,2,"android"],[28,11,28,9],[28,13,28,11],[29,6,29,4,"expo"],[29,10,29,8],[29,12,29,10,"getMessage"],[29,22,29,20],[29,23,29,21],[29,24,30,6],[29,93,30,75],[29,95,31,6],[29,174,31,85],[29,176,32,6],[29,233,32,63],[29,234,33,5],[29,235,33,6],[30,6,34,4,"nonExpo"],[30,13,34,11],[30,15,34,13,"getMessage"],[30,25,34,23],[30,26,34,24],[30,27,35,6],[30,92,35,71],[30,93,36,5],[31,4,37,2],[32,2,38,0],[32,3,38,1],[33,2,40,7],[33,8,40,13,"getInstallationErrorMessage"],[33,35,40,40],[33,38,40,43,"getInstallationErrorMessage"],[33,39,40,43],[33,44,40,49],[34,4,41,2],[34,8,41,6],[35,6,42,4],[36,6,43,4,"require"],[36,13,43,11],[36,14,43,11,"_dependencyMap"],[36,28,43,11],[36,49,43,28],[36,50,43,29],[36,51,43,30,"default"],[36,58,43,37],[37,6,44,4],[37,13,44,11,"messages"],[37,21,44,19],[37,22,44,20,"Platform"],[37,30,44,28],[37,31,44,28,"default"],[37,38,44,28],[37,39,44,29,"OS"],[37,41,44,31],[37,42,44,32],[37,43,44,33,"expo"],[37,47,44,37],[38,4,45,2],[38,5,45,3],[38,6,45,4],[38,13,45,11,"e"],[38,14,45,12],[38,16,45,14],[39,6,46,4],[39,13,46,11,"messages"],[39,21,46,19],[39,22,46,20,"Platform"],[39,30,46,28],[39,31,46,28,"default"],[39,38,46,28],[39,39,46,29,"OS"],[39,41,46,31],[39,42,46,32],[39,43,46,33,"nonExpo"],[39,50,46,40],[40,4,47,2],[41,2,48,0],[41,3,48,1],[42,0,48,1],[42,3]],"functionMap":{"names":["<global>","getMessage","getInstallationErrorMessage"],"mappings":"AAA;mBCE;CDW;2CE0B;CFQ"},"hasCjsExports":false},"type":"js/module"}]}