{"dependencies":[{"name":"../PointerType","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":19,"index":438},"end":{"line":13,"column":44,"index":463}}],"key":"rQsYrq7zAPoGzQO1FYQpBWrhZCw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RNSVGElements = exports.PointerTypeMapping = void 0;\n  exports.calculateViewScale = calculateViewScale;\n  exports.degToRad = exports.coneToDeviation = void 0;\n  exports.isPointerInBounds = isPointerInBounds;\n  exports.isRNSVGElement = isRNSVGElement;\n  exports.isRNSVGNode = isRNSVGNode;\n  exports.tryExtractStylusData = tryExtractStylusData;\n  var _PointerType = require(_dependencyMap[0], \"../PointerType\");\n  function isPointerInBounds(view, {\n    x,\n    y\n  }) {\n    const rect = view.getBoundingClientRect();\n    return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n  }\n  const PointerTypeMapping = exports.PointerTypeMapping = new Map([['mouse', _PointerType.PointerType.MOUSE], ['touch', _PointerType.PointerType.TOUCH], ['pen', _PointerType.PointerType.STYLUS], ['none', _PointerType.PointerType.OTHER]]);\n  const degToRad = degrees => degrees * Math.PI / 180;\n  exports.degToRad = degToRad;\n  const coneToDeviation = degrees => Math.cos(degToRad(degrees / 2));\n  exports.coneToDeviation = coneToDeviation;\n  function calculateViewScale(view) {\n    const styles = getComputedStyle(view);\n    const resultScales = {\n      scaleX: 1,\n      scaleY: 1\n    };\n\n    // Get scales from scale property\n    if (styles.scale !== undefined && styles.scale !== 'none') {\n      const scales = styles.scale.split(' ');\n      if (scales[0]) {\n        resultScales.scaleX = parseFloat(scales[0]);\n      }\n      resultScales.scaleY = scales[1] ? parseFloat(scales[1]) : parseFloat(scales[0]);\n    }\n\n    // Get scales from transform property\n    const matrixElements = new RegExp(/matrix\\((.+)\\)/).exec(styles.transform)?.[1];\n    if (matrixElements) {\n      const matrixElementsArray = matrixElements.split(', ');\n      resultScales.scaleX *= parseFloat(matrixElementsArray[0]);\n      resultScales.scaleY *= parseFloat(matrixElementsArray[3]);\n    }\n    return resultScales;\n  }\n  function tryExtractStylusData(event) {\n    const pointerType = PointerTypeMapping.get(event.pointerType);\n    if (pointerType !== _PointerType.PointerType.STYLUS) {\n      return;\n    }\n\n    // @ts-ignore This property exists (https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties)\n    const eventAzimuthAngle = event.azimuthAngle;\n    // @ts-ignore This property exists (https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties)\n    const eventAltitudeAngle = event.altitudeAngle;\n    if (event.tiltX === 0 && event.tiltY === 0) {\n      // If we are in this branch, it means that either tilt properties are not supported and we have to calculate them from altitude and azimuth angles,\n      // or stylus is perpendicular to the screen and we can use altitude / azimuth instead of tilt\n\n      // If azimuth and altitude are undefined in this branch, it means that we are either perpendicular to the screen,\n      // or that none of the position sets is supported. In that case, we can treat stylus as perpendicular\n      if (eventAzimuthAngle === undefined || eventAltitudeAngle === undefined) {\n        return {\n          tiltX: 0,\n          tiltY: 0,\n          azimuthAngle: Math.PI / 2,\n          altitudeAngle: Math.PI / 2,\n          pressure: event.pressure\n        };\n      }\n      const {\n        tiltX,\n        tiltY\n      } = spherical2tilt(eventAltitudeAngle, eventAzimuthAngle);\n      return {\n        tiltX,\n        tiltY,\n        azimuthAngle: eventAzimuthAngle,\n        altitudeAngle: eventAltitudeAngle,\n        pressure: event.pressure\n      };\n    }\n    const {\n      altitudeAngle,\n      azimuthAngle\n    } = tilt2spherical(event.tiltX, event.tiltY);\n    return {\n      tiltX: event.tiltX,\n      tiltY: event.tiltY,\n      azimuthAngle,\n      altitudeAngle,\n      pressure: event.pressure\n    };\n  }\n\n  // `altitudeAngle` and `azimuthAngle` are experimental properties, which are not supported on Firefox and Safari.\n  // Given that, we use `tilt` properties and algorithm that converts one value to another.\n  //\n  // Source: https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\n  function tilt2spherical(tiltX, tiltY) {\n    const tiltXrad = tiltX * Math.PI / 180;\n    const tiltYrad = tiltY * Math.PI / 180;\n\n    // calculate azimuth angle\n    let azimuthAngle = 0;\n    if (tiltX === 0) {\n      if (tiltY > 0) {\n        azimuthAngle = Math.PI / 2;\n      } else if (tiltY < 0) {\n        azimuthAngle = 3 * Math.PI / 2;\n      }\n    } else if (tiltY === 0) {\n      if (tiltX < 0) {\n        azimuthAngle = Math.PI;\n      }\n    } else if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n      // not enough information to calculate azimuth\n      azimuthAngle = 0;\n    } else {\n      // Non-boundary case: neither tiltX nor tiltY is equal to 0 or +-90\n      const tanX = Math.tan(tiltXrad);\n      const tanY = Math.tan(tiltYrad);\n      azimuthAngle = Math.atan2(tanY, tanX);\n      if (azimuthAngle < 0) {\n        azimuthAngle += 2 * Math.PI;\n      }\n    }\n\n    // calculate altitude angle\n    let altitudeAngle = 0;\n    if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n      altitudeAngle = 0;\n    } else if (tiltX === 0) {\n      altitudeAngle = Math.PI / 2 - Math.abs(tiltYrad);\n    } else if (tiltY === 0) {\n      altitudeAngle = Math.PI / 2 - Math.abs(tiltXrad);\n    } else {\n      // Non-boundary case: neither tiltX nor tiltY is equal to 0 or +-90\n      altitudeAngle = Math.atan(1.0 / Math.sqrt(Math.pow(Math.tan(tiltXrad), 2) + Math.pow(Math.tan(tiltYrad), 2)));\n    }\n    return {\n      altitudeAngle: altitudeAngle,\n      azimuthAngle: azimuthAngle\n    };\n  }\n\n  // If we are on a platform that doesn't support `tiltX` and `tiltY`, we have to calculate them from `altitude` and `azimuth` angles.\n  //\n  // Source: https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\n  function spherical2tilt(altitudeAngle, azimuthAngle) {\n    const radToDeg = 180 / Math.PI;\n    let tiltXrad = 0;\n    let tiltYrad = 0;\n    if (altitudeAngle === 0) {\n      // the pen is in the X-Y plane\n      if (azimuthAngle === 0 || azimuthAngle === 2 * Math.PI) {\n        // pen is on positive X axis\n        tiltXrad = Math.PI / 2;\n      }\n      if (azimuthAngle === Math.PI / 2) {\n        // pen is on positive Y axis\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle === Math.PI) {\n        // pen is on negative X axis\n        tiltXrad = -Math.PI / 2;\n      }\n      if (azimuthAngle === 3 * Math.PI / 2) {\n        // pen is on negative Y axis\n        tiltYrad = -Math.PI / 2;\n      }\n      if (azimuthAngle > 0 && azimuthAngle < Math.PI / 2) {\n        tiltXrad = Math.PI / 2;\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle > Math.PI / 2 && azimuthAngle < Math.PI) {\n        tiltXrad = -Math.PI / 2;\n        tiltYrad = Math.PI / 2;\n      }\n      if (azimuthAngle > Math.PI && azimuthAngle < 3 * Math.PI / 2) {\n        tiltXrad = -Math.PI / 2;\n        tiltYrad = -Math.PI / 2;\n      }\n      if (azimuthAngle > 3 * Math.PI / 2 && azimuthAngle < 2 * Math.PI) {\n        tiltXrad = Math.PI / 2;\n        tiltYrad = -Math.PI / 2;\n      }\n    }\n    if (altitudeAngle !== 0) {\n      const tanAlt = Math.tan(altitudeAngle);\n      tiltXrad = Math.atan(Math.cos(azimuthAngle) / tanAlt);\n      tiltYrad = Math.atan(Math.sin(azimuthAngle) / tanAlt);\n    }\n    const tiltX = Math.round(tiltXrad * radToDeg);\n    const tiltY = Math.round(tiltYrad * radToDeg);\n    return {\n      tiltX,\n      tiltY\n    };\n  }\n  const RNSVGElements = exports.RNSVGElements = new Set(['Circle', 'ClipPath', 'Ellipse', 'ForeignObject', 'G', 'Image', 'Line', 'Marker', 'Mask', 'Path', 'Pattern', 'Polygon', 'Polyline', 'Rect', 'Svg', 'Symbol', 'TSpan', 'Text', 'TextPath', 'Use']);\n\n  // This function helps us determine whether given node is SVGElement or not. In our implementation of\n  // findNodeHandle, we can encounter such element in 2 forms - SVG tag or ref to SVG Element. Since Gesture Handler\n  // does not depend on SVG, we use our simplified SVGRef type that has `elementRef` field. This is something that is present\n  // in actual SVG ref object.\n  //\n  // In order to make sure that node passed into this function is in fact SVG element, first we check if its constructor name\n  // corresponds to one of the possible SVG elements. Then we also check if `elementRef` field exists.\n  // By doing both steps we decrease probability of detecting situations where, for example, user makes custom `Circle` and\n  // we treat it as SVG.\n  function isRNSVGElement(viewRef) {\n    const componentClassName = Object.getPrototypeOf(viewRef).constructor.name;\n    return RNSVGElements.has(componentClassName) && Object.hasOwn(viewRef, 'elementRef');\n  }\n\n  // This function checks if given node is SVGElement. Unlike the function above, this one\n  // operates on React Nodes, not DOM nodes.\n  //\n  // Second condition was introduced to handle case where SVG element was wrapped with\n  // `createAnimatedComponent` from Reanimated.\n  function isRNSVGNode(node) {\n    // If `ref` has `rngh` field, it means that component comes from Gesture Handler. This is a special case for\n    // `Text` component, which is present in `RNSVGElements` set, yet we don't want to treat it as SVG.\n    if (node.ref?.rngh) {\n      return false;\n    }\n    return Object.getPrototypeOf(node?.type)?.name === 'WebShape' || RNSVGElements.has(node?.type?.displayName);\n  }\n});","lineCount":236,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"RNSVGElements"],[7,23,6,21],[7,26,6,24,"exports"],[7,33,6,31],[7,34,6,32,"PointerTypeMapping"],[7,52,6,50],[7,55,6,53],[7,60,6,58],[7,61,6,59],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"calculateViewScale"],[8,28,7,26],[8,31,7,29,"calculateViewScale"],[8,49,7,47],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"degToRad"],[9,18,8,16],[9,21,8,19,"exports"],[9,28,8,26],[9,29,8,27,"coneToDeviation"],[9,44,8,42],[9,47,8,45],[9,52,8,50],[9,53,8,51],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"isPointerInBounds"],[10,27,9,25],[10,30,9,28,"isPointerInBounds"],[10,47,9,45],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"isRNSVGElement"],[11,24,10,22],[11,27,10,25,"isRNSVGElement"],[11,41,10,39],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"isRNSVGNode"],[12,21,11,19],[12,24,11,22,"isRNSVGNode"],[12,35,11,33],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"tryExtractStylusData"],[13,30,12,28],[13,33,12,31,"tryExtractStylusData"],[13,53,12,51],[14,2,13,0],[14,6,13,4,"_PointerType"],[14,18,13,16],[14,21,13,19,"require"],[14,28,13,26],[14,29,13,26,"_dependencyMap"],[14,43,13,26],[14,64,13,43],[14,65,13,44],[15,2,14,0],[15,11,14,9,"isPointerInBounds"],[15,28,14,26,"isPointerInBounds"],[15,29,14,27,"view"],[15,33,14,31],[15,35,14,33],[16,4,15,2,"x"],[16,5,15,3],[17,4,16,2,"y"],[18,2,17,0],[18,3,17,1],[18,5,17,3],[19,4,18,2],[19,10,18,8,"rect"],[19,14,18,12],[19,17,18,15,"view"],[19,21,18,19],[19,22,18,20,"getBoundingClientRect"],[19,43,18,41],[19,44,18,42],[19,45,18,43],[20,4,19,2],[20,11,19,9,"x"],[20,12,19,10],[20,16,19,14,"rect"],[20,20,19,18],[20,21,19,19,"left"],[20,25,19,23],[20,29,19,27,"x"],[20,30,19,28],[20,34,19,32,"rect"],[20,38,19,36],[20,39,19,37,"right"],[20,44,19,42],[20,48,19,46,"y"],[20,49,19,47],[20,53,19,51,"rect"],[20,57,19,55],[20,58,19,56,"top"],[20,61,19,59],[20,65,19,63,"y"],[20,66,19,64],[20,70,19,68,"rect"],[20,74,19,72],[20,75,19,73,"bottom"],[20,81,19,79],[21,2,20,0],[22,2,21,0],[22,8,21,6,"PointerTypeMapping"],[22,26,21,24],[22,29,21,27,"exports"],[22,36,21,34],[22,37,21,35,"PointerTypeMapping"],[22,55,21,53],[22,58,21,56],[22,62,21,60,"Map"],[22,65,21,63],[22,66,21,64],[22,67,21,65],[22,68,21,66],[22,75,21,73],[22,77,21,75,"_PointerType"],[22,89,21,87],[22,90,21,88,"PointerType"],[22,101,21,99],[22,102,21,100,"MOUSE"],[22,107,21,105],[22,108,21,106],[22,110,21,108],[22,111,21,109],[22,118,21,116],[22,120,21,118,"_PointerType"],[22,132,21,130],[22,133,21,131,"PointerType"],[22,144,21,142],[22,145,21,143,"TOUCH"],[22,150,21,148],[22,151,21,149],[22,153,21,151],[22,154,21,152],[22,159,21,157],[22,161,21,159,"_PointerType"],[22,173,21,171],[22,174,21,172,"PointerType"],[22,185,21,183],[22,186,21,184,"STYLUS"],[22,192,21,190],[22,193,21,191],[22,195,21,193],[22,196,21,194],[22,202,21,200],[22,204,21,202,"_PointerType"],[22,216,21,214],[22,217,21,215,"PointerType"],[22,228,21,226],[22,229,21,227,"OTHER"],[22,234,21,232],[22,235,21,233],[22,236,21,234],[22,237,21,235],[23,2,22,0],[23,8,22,6,"degToRad"],[23,16,22,14],[23,19,22,17,"degrees"],[23,26,22,24],[23,30,22,28,"degrees"],[23,37,22,35],[23,40,22,38,"Math"],[23,44,22,42],[23,45,22,43,"PI"],[23,47,22,45],[23,50,22,48],[23,53,22,51],[24,2,23,0,"exports"],[24,9,23,7],[24,10,23,8,"degToRad"],[24,18,23,16],[24,21,23,19,"degToRad"],[24,29,23,27],[25,2,24,0],[25,8,24,6,"coneToDeviation"],[25,23,24,21],[25,26,24,24,"degrees"],[25,33,24,31],[25,37,24,35,"Math"],[25,41,24,39],[25,42,24,40,"cos"],[25,45,24,43],[25,46,24,44,"degToRad"],[25,54,24,52],[25,55,24,53,"degrees"],[25,62,24,60],[25,65,24,63],[25,66,24,64],[25,67,24,65],[25,68,24,66],[26,2,25,0,"exports"],[26,9,25,7],[26,10,25,8,"coneToDeviation"],[26,25,25,23],[26,28,25,26,"coneToDeviation"],[26,43,25,41],[27,2,26,0],[27,11,26,9,"calculateViewScale"],[27,29,26,27,"calculateViewScale"],[27,30,26,28,"view"],[27,34,26,32],[27,36,26,34],[28,4,27,2],[28,10,27,8,"styles"],[28,16,27,14],[28,19,27,17,"getComputedStyle"],[28,35,27,33],[28,36,27,34,"view"],[28,40,27,38],[28,41,27,39],[29,4,28,2],[29,10,28,8,"resultScales"],[29,22,28,20],[29,25,28,23],[30,6,29,4,"scaleX"],[30,12,29,10],[30,14,29,12],[30,15,29,13],[31,6,30,4,"scaleY"],[31,12,30,10],[31,14,30,12],[32,4,31,2],[32,5,31,3],[34,4,33,2],[35,4,34,2],[35,8,34,6,"styles"],[35,14,34,12],[35,15,34,13,"scale"],[35,20,34,18],[35,25,34,23,"undefined"],[35,34,34,32],[35,38,34,36,"styles"],[35,44,34,42],[35,45,34,43,"scale"],[35,50,34,48],[35,55,34,53],[35,61,34,59],[35,63,34,61],[36,6,35,4],[36,12,35,10,"scales"],[36,18,35,16],[36,21,35,19,"styles"],[36,27,35,25],[36,28,35,26,"scale"],[36,33,35,31],[36,34,35,32,"split"],[36,39,35,37],[36,40,35,38],[36,43,35,41],[36,44,35,42],[37,6,36,4],[37,10,36,8,"scales"],[37,16,36,14],[37,17,36,15],[37,18,36,16],[37,19,36,17],[37,21,36,19],[38,8,37,6,"resultScales"],[38,20,37,18],[38,21,37,19,"scaleX"],[38,27,37,25],[38,30,37,28,"parseFloat"],[38,40,37,38],[38,41,37,39,"scales"],[38,47,37,45],[38,48,37,46],[38,49,37,47],[38,50,37,48],[38,51,37,49],[39,6,38,4],[40,6,39,4,"resultScales"],[40,18,39,16],[40,19,39,17,"scaleY"],[40,25,39,23],[40,28,39,26,"scales"],[40,34,39,32],[40,35,39,33],[40,36,39,34],[40,37,39,35],[40,40,39,38,"parseFloat"],[40,50,39,48],[40,51,39,49,"scales"],[40,57,39,55],[40,58,39,56],[40,59,39,57],[40,60,39,58],[40,61,39,59],[40,64,39,62,"parseFloat"],[40,74,39,72],[40,75,39,73,"scales"],[40,81,39,79],[40,82,39,80],[40,83,39,81],[40,84,39,82],[40,85,39,83],[41,4,40,2],[43,4,42,2],[44,4,43,2],[44,10,43,8,"matrixElements"],[44,24,43,22],[44,27,43,25],[44,31,43,29,"RegExp"],[44,37,43,35],[44,38,43,36],[44,54,43,52],[44,55,43,53],[44,56,43,54,"exec"],[44,60,43,58],[44,61,43,59,"styles"],[44,67,43,65],[44,68,43,66,"transform"],[44,77,43,75],[44,78,43,76],[44,81,43,79],[44,82,43,80],[44,83,43,81],[45,4,44,2],[45,8,44,6,"matrixElements"],[45,22,44,20],[45,24,44,22],[46,6,45,4],[46,12,45,10,"matrixElementsArray"],[46,31,45,29],[46,34,45,32,"matrixElements"],[46,48,45,46],[46,49,45,47,"split"],[46,54,45,52],[46,55,45,53],[46,59,45,57],[46,60,45,58],[47,6,46,4,"resultScales"],[47,18,46,16],[47,19,46,17,"scaleX"],[47,25,46,23],[47,29,46,27,"parseFloat"],[47,39,46,37],[47,40,46,38,"matrixElementsArray"],[47,59,46,57],[47,60,46,58],[47,61,46,59],[47,62,46,60],[47,63,46,61],[48,6,47,4,"resultScales"],[48,18,47,16],[48,19,47,17,"scaleY"],[48,25,47,23],[48,29,47,27,"parseFloat"],[48,39,47,37],[48,40,47,38,"matrixElementsArray"],[48,59,47,57],[48,60,47,58],[48,61,47,59],[48,62,47,60],[48,63,47,61],[49,4,48,2],[50,4,49,2],[50,11,49,9,"resultScales"],[50,23,49,21],[51,2,50,0],[52,2,51,0],[52,11,51,9,"tryExtractStylusData"],[52,31,51,29,"tryExtractStylusData"],[52,32,51,30,"event"],[52,37,51,35],[52,39,51,37],[53,4,52,2],[53,10,52,8,"pointerType"],[53,21,52,19],[53,24,52,22,"PointerTypeMapping"],[53,42,52,40],[53,43,52,41,"get"],[53,46,52,44],[53,47,52,45,"event"],[53,52,52,50],[53,53,52,51,"pointerType"],[53,64,52,62],[53,65,52,63],[54,4,53,2],[54,8,53,6,"pointerType"],[54,19,53,17],[54,24,53,22,"_PointerType"],[54,36,53,34],[54,37,53,35,"PointerType"],[54,48,53,46],[54,49,53,47,"STYLUS"],[54,55,53,53],[54,57,53,55],[55,6,54,4],[56,4,55,2],[58,4,57,2],[59,4,58,2],[59,10,58,8,"eventAzimuthAngle"],[59,27,58,25],[59,30,58,28,"event"],[59,35,58,33],[59,36,58,34,"azimuthAngle"],[59,48,58,46],[60,4,59,2],[61,4,60,2],[61,10,60,8,"eventAltitudeAngle"],[61,28,60,26],[61,31,60,29,"event"],[61,36,60,34],[61,37,60,35,"altitudeAngle"],[61,50,60,48],[62,4,61,2],[62,8,61,6,"event"],[62,13,61,11],[62,14,61,12,"tiltX"],[62,19,61,17],[62,24,61,22],[62,25,61,23],[62,29,61,27,"event"],[62,34,61,32],[62,35,61,33,"tiltY"],[62,40,61,38],[62,45,61,43],[62,46,61,44],[62,48,61,46],[63,6,62,4],[64,6,63,4],[66,6,65,4],[67,6,66,4],[68,6,67,4],[68,10,67,8,"eventAzimuthAngle"],[68,27,67,25],[68,32,67,30,"undefined"],[68,41,67,39],[68,45,67,43,"eventAltitudeAngle"],[68,63,67,61],[68,68,67,66,"undefined"],[68,77,67,75],[68,79,67,77],[69,8,68,6],[69,15,68,13],[70,10,69,8,"tiltX"],[70,15,69,13],[70,17,69,15],[70,18,69,16],[71,10,70,8,"tiltY"],[71,15,70,13],[71,17,70,15],[71,18,70,16],[72,10,71,8,"azimuthAngle"],[72,22,71,20],[72,24,71,22,"Math"],[72,28,71,26],[72,29,71,27,"PI"],[72,31,71,29],[72,34,71,32],[72,35,71,33],[73,10,72,8,"altitudeAngle"],[73,23,72,21],[73,25,72,23,"Math"],[73,29,72,27],[73,30,72,28,"PI"],[73,32,72,30],[73,35,72,33],[73,36,72,34],[74,10,73,8,"pressure"],[74,18,73,16],[74,20,73,18,"event"],[74,25,73,23],[74,26,73,24,"pressure"],[75,8,74,6],[75,9,74,7],[76,6,75,4],[77,6,76,4],[77,12,76,10],[78,8,77,6,"tiltX"],[78,13,77,11],[79,8,78,6,"tiltY"],[80,6,79,4],[80,7,79,5],[80,10,79,8,"spherical2tilt"],[80,24,79,22],[80,25,79,23,"eventAltitudeAngle"],[80,43,79,41],[80,45,79,43,"eventAzimuthAngle"],[80,62,79,60],[80,63,79,61],[81,6,80,4],[81,13,80,11],[82,8,81,6,"tiltX"],[82,13,81,11],[83,8,82,6,"tiltY"],[83,13,82,11],[84,8,83,6,"azimuthAngle"],[84,20,83,18],[84,22,83,20,"eventAzimuthAngle"],[84,39,83,37],[85,8,84,6,"altitudeAngle"],[85,21,84,19],[85,23,84,21,"eventAltitudeAngle"],[85,41,84,39],[86,8,85,6,"pressure"],[86,16,85,14],[86,18,85,16,"event"],[86,23,85,21],[86,24,85,22,"pressure"],[87,6,86,4],[87,7,86,5],[88,4,87,2],[89,4,88,2],[89,10,88,8],[90,6,89,4,"altitudeAngle"],[90,19,89,17],[91,6,90,4,"azimuthAngle"],[92,4,91,2],[92,5,91,3],[92,8,91,6,"tilt2spherical"],[92,22,91,20],[92,23,91,21,"event"],[92,28,91,26],[92,29,91,27,"tiltX"],[92,34,91,32],[92,36,91,34,"event"],[92,41,91,39],[92,42,91,40,"tiltY"],[92,47,91,45],[92,48,91,46],[93,4,92,2],[93,11,92,9],[94,6,93,4,"tiltX"],[94,11,93,9],[94,13,93,11,"event"],[94,18,93,16],[94,19,93,17,"tiltX"],[94,24,93,22],[95,6,94,4,"tiltY"],[95,11,94,9],[95,13,94,11,"event"],[95,18,94,16],[95,19,94,17,"tiltY"],[95,24,94,22],[96,6,95,4,"azimuthAngle"],[96,18,95,16],[97,6,96,4,"altitudeAngle"],[97,19,96,17],[98,6,97,4,"pressure"],[98,14,97,12],[98,16,97,14,"event"],[98,21,97,19],[98,22,97,20,"pressure"],[99,4,98,2],[99,5,98,3],[100,2,99,0],[102,2,101,0],[103,2,102,0],[104,2,103,0],[105,2,104,0],[106,2,105,0],[106,11,105,9,"tilt2spherical"],[106,25,105,23,"tilt2spherical"],[106,26,105,24,"tiltX"],[106,31,105,29],[106,33,105,31,"tiltY"],[106,38,105,36],[106,40,105,38],[107,4,106,2],[107,10,106,8,"tiltXrad"],[107,18,106,16],[107,21,106,19,"tiltX"],[107,26,106,24],[107,29,106,27,"Math"],[107,33,106,31],[107,34,106,32,"PI"],[107,36,106,34],[107,39,106,37],[107,42,106,40],[108,4,107,2],[108,10,107,8,"tiltYrad"],[108,18,107,16],[108,21,107,19,"tiltY"],[108,26,107,24],[108,29,107,27,"Math"],[108,33,107,31],[108,34,107,32,"PI"],[108,36,107,34],[108,39,107,37],[108,42,107,40],[110,4,109,2],[111,4,110,2],[111,8,110,6,"azimuthAngle"],[111,20,110,18],[111,23,110,21],[111,24,110,22],[112,4,111,2],[112,8,111,6,"tiltX"],[112,13,111,11],[112,18,111,16],[112,19,111,17],[112,21,111,19],[113,6,112,4],[113,10,112,8,"tiltY"],[113,15,112,13],[113,18,112,16],[113,19,112,17],[113,21,112,19],[114,8,113,6,"azimuthAngle"],[114,20,113,18],[114,23,113,21,"Math"],[114,27,113,25],[114,28,113,26,"PI"],[114,30,113,28],[114,33,113,31],[114,34,113,32],[115,6,114,4],[115,7,114,5],[115,13,114,11],[115,17,114,15,"tiltY"],[115,22,114,20],[115,25,114,23],[115,26,114,24],[115,28,114,26],[116,8,115,6,"azimuthAngle"],[116,20,115,18],[116,23,115,21],[116,24,115,22],[116,27,115,25,"Math"],[116,31,115,29],[116,32,115,30,"PI"],[116,34,115,32],[116,37,115,35],[116,38,115,36],[117,6,116,4],[118,4,117,2],[118,5,117,3],[118,11,117,9],[118,15,117,13,"tiltY"],[118,20,117,18],[118,25,117,23],[118,26,117,24],[118,28,117,26],[119,6,118,4],[119,10,118,8,"tiltX"],[119,15,118,13],[119,18,118,16],[119,19,118,17],[119,21,118,19],[120,8,119,6,"azimuthAngle"],[120,20,119,18],[120,23,119,21,"Math"],[120,27,119,25],[120,28,119,26,"PI"],[120,30,119,28],[121,6,120,4],[122,4,121,2],[122,5,121,3],[122,11,121,9],[122,15,121,13,"Math"],[122,19,121,17],[122,20,121,18,"abs"],[122,23,121,21],[122,24,121,22,"tiltX"],[122,29,121,27],[122,30,121,28],[122,35,121,33],[122,37,121,35],[122,41,121,39,"Math"],[122,45,121,43],[122,46,121,44,"abs"],[122,49,121,47],[122,50,121,48,"tiltY"],[122,55,121,53],[122,56,121,54],[122,61,121,59],[122,63,121,61],[122,65,121,63],[123,6,122,4],[124,6,123,4,"azimuthAngle"],[124,18,123,16],[124,21,123,19],[124,22,123,20],[125,4,124,2],[125,5,124,3],[125,11,124,9],[126,6,125,4],[127,6,126,4],[127,12,126,10,"tanX"],[127,16,126,14],[127,19,126,17,"Math"],[127,23,126,21],[127,24,126,22,"tan"],[127,27,126,25],[127,28,126,26,"tiltXrad"],[127,36,126,34],[127,37,126,35],[128,6,127,4],[128,12,127,10,"tanY"],[128,16,127,14],[128,19,127,17,"Math"],[128,23,127,21],[128,24,127,22,"tan"],[128,27,127,25],[128,28,127,26,"tiltYrad"],[128,36,127,34],[128,37,127,35],[129,6,128,4,"azimuthAngle"],[129,18,128,16],[129,21,128,19,"Math"],[129,25,128,23],[129,26,128,24,"atan2"],[129,31,128,29],[129,32,128,30,"tanY"],[129,36,128,34],[129,38,128,36,"tanX"],[129,42,128,40],[129,43,128,41],[130,6,129,4],[130,10,129,8,"azimuthAngle"],[130,22,129,20],[130,25,129,23],[130,26,129,24],[130,28,129,26],[131,8,130,6,"azimuthAngle"],[131,20,130,18],[131,24,130,22],[131,25,130,23],[131,28,130,26,"Math"],[131,32,130,30],[131,33,130,31,"PI"],[131,35,130,33],[132,6,131,4],[133,4,132,2],[135,4,134,2],[136,4,135,2],[136,8,135,6,"altitudeAngle"],[136,21,135,19],[136,24,135,22],[136,25,135,23],[137,4,136,2],[137,8,136,6,"Math"],[137,12,136,10],[137,13,136,11,"abs"],[137,16,136,14],[137,17,136,15,"tiltX"],[137,22,136,20],[137,23,136,21],[137,28,136,26],[137,30,136,28],[137,34,136,32,"Math"],[137,38,136,36],[137,39,136,37,"abs"],[137,42,136,40],[137,43,136,41,"tiltY"],[137,48,136,46],[137,49,136,47],[137,54,136,52],[137,56,136,54],[137,58,136,56],[138,6,137,4,"altitudeAngle"],[138,19,137,17],[138,22,137,20],[138,23,137,21],[139,4,138,2],[139,5,138,3],[139,11,138,9],[139,15,138,13,"tiltX"],[139,20,138,18],[139,25,138,23],[139,26,138,24],[139,28,138,26],[140,6,139,4,"altitudeAngle"],[140,19,139,17],[140,22,139,20,"Math"],[140,26,139,24],[140,27,139,25,"PI"],[140,29,139,27],[140,32,139,30],[140,33,139,31],[140,36,139,34,"Math"],[140,40,139,38],[140,41,139,39,"abs"],[140,44,139,42],[140,45,139,43,"tiltYrad"],[140,53,139,51],[140,54,139,52],[141,4,140,2],[141,5,140,3],[141,11,140,9],[141,15,140,13,"tiltY"],[141,20,140,18],[141,25,140,23],[141,26,140,24],[141,28,140,26],[142,6,141,4,"altitudeAngle"],[142,19,141,17],[142,22,141,20,"Math"],[142,26,141,24],[142,27,141,25,"PI"],[142,29,141,27],[142,32,141,30],[142,33,141,31],[142,36,141,34,"Math"],[142,40,141,38],[142,41,141,39,"abs"],[142,44,141,42],[142,45,141,43,"tiltXrad"],[142,53,141,51],[142,54,141,52],[143,4,142,2],[143,5,142,3],[143,11,142,9],[144,6,143,4],[145,6,144,4,"altitudeAngle"],[145,19,144,17],[145,22,144,20,"Math"],[145,26,144,24],[145,27,144,25,"atan"],[145,31,144,29],[145,32,144,30],[145,35,144,33],[145,38,144,36,"Math"],[145,42,144,40],[145,43,144,41,"sqrt"],[145,47,144,45],[145,48,144,46,"Math"],[145,52,144,50],[145,53,144,51,"pow"],[145,56,144,54],[145,57,144,55,"Math"],[145,61,144,59],[145,62,144,60,"tan"],[145,65,144,63],[145,66,144,64,"tiltXrad"],[145,74,144,72],[145,75,144,73],[145,77,144,75],[145,78,144,76],[145,79,144,77],[145,82,144,80,"Math"],[145,86,144,84],[145,87,144,85,"pow"],[145,90,144,88],[145,91,144,89,"Math"],[145,95,144,93],[145,96,144,94,"tan"],[145,99,144,97],[145,100,144,98,"tiltYrad"],[145,108,144,106],[145,109,144,107],[145,111,144,109],[145,112,144,110],[145,113,144,111],[145,114,144,112],[145,115,144,113],[146,4,145,2],[147,4,146,2],[147,11,146,9],[148,6,147,4,"altitudeAngle"],[148,19,147,17],[148,21,147,19,"altitudeAngle"],[148,34,147,32],[149,6,148,4,"azimuthAngle"],[149,18,148,16],[149,20,148,18,"azimuthAngle"],[150,4,149,2],[150,5,149,3],[151,2,150,0],[153,2,152,0],[154,2,153,0],[155,2,154,0],[156,2,155,0],[156,11,155,9,"spherical2tilt"],[156,25,155,23,"spherical2tilt"],[156,26,155,24,"altitudeAngle"],[156,39,155,37],[156,41,155,39,"azimuthAngle"],[156,53,155,51],[156,55,155,53],[157,4,156,2],[157,10,156,8,"radToDeg"],[157,18,156,16],[157,21,156,19],[157,24,156,22],[157,27,156,25,"Math"],[157,31,156,29],[157,32,156,30,"PI"],[157,34,156,32],[158,4,157,2],[158,8,157,6,"tiltXrad"],[158,16,157,14],[158,19,157,17],[158,20,157,18],[159,4,158,2],[159,8,158,6,"tiltYrad"],[159,16,158,14],[159,19,158,17],[159,20,158,18],[160,4,159,2],[160,8,159,6,"altitudeAngle"],[160,21,159,19],[160,26,159,24],[160,27,159,25],[160,29,159,27],[161,6,160,4],[162,6,161,4],[162,10,161,8,"azimuthAngle"],[162,22,161,20],[162,27,161,25],[162,28,161,26],[162,32,161,30,"azimuthAngle"],[162,44,161,42],[162,49,161,47],[162,50,161,48],[162,53,161,51,"Math"],[162,57,161,55],[162,58,161,56,"PI"],[162,60,161,58],[162,62,161,60],[163,8,162,6],[164,8,163,6,"tiltXrad"],[164,16,163,14],[164,19,163,17,"Math"],[164,23,163,21],[164,24,163,22,"PI"],[164,26,163,24],[164,29,163,27],[164,30,163,28],[165,6,164,4],[166,6,165,4],[166,10,165,8,"azimuthAngle"],[166,22,165,20],[166,27,165,25,"Math"],[166,31,165,29],[166,32,165,30,"PI"],[166,34,165,32],[166,37,165,35],[166,38,165,36],[166,40,165,38],[167,8,166,6],[168,8,167,6,"tiltYrad"],[168,16,167,14],[168,19,167,17,"Math"],[168,23,167,21],[168,24,167,22,"PI"],[168,26,167,24],[168,29,167,27],[168,30,167,28],[169,6,168,4],[170,6,169,4],[170,10,169,8,"azimuthAngle"],[170,22,169,20],[170,27,169,25,"Math"],[170,31,169,29],[170,32,169,30,"PI"],[170,34,169,32],[170,36,169,34],[171,8,170,6],[172,8,171,6,"tiltXrad"],[172,16,171,14],[172,19,171,17],[172,20,171,18,"Math"],[172,24,171,22],[172,25,171,23,"PI"],[172,27,171,25],[172,30,171,28],[172,31,171,29],[173,6,172,4],[174,6,173,4],[174,10,173,8,"azimuthAngle"],[174,22,173,20],[174,27,173,25],[174,28,173,26],[174,31,173,29,"Math"],[174,35,173,33],[174,36,173,34,"PI"],[174,38,173,36],[174,41,173,39],[174,42,173,40],[174,44,173,42],[175,8,174,6],[176,8,175,6,"tiltYrad"],[176,16,175,14],[176,19,175,17],[176,20,175,18,"Math"],[176,24,175,22],[176,25,175,23,"PI"],[176,27,175,25],[176,30,175,28],[176,31,175,29],[177,6,176,4],[178,6,177,4],[178,10,177,8,"azimuthAngle"],[178,22,177,20],[178,25,177,23],[178,26,177,24],[178,30,177,28,"azimuthAngle"],[178,42,177,40],[178,45,177,43,"Math"],[178,49,177,47],[178,50,177,48,"PI"],[178,52,177,50],[178,55,177,53],[178,56,177,54],[178,58,177,56],[179,8,178,6,"tiltXrad"],[179,16,178,14],[179,19,178,17,"Math"],[179,23,178,21],[179,24,178,22,"PI"],[179,26,178,24],[179,29,178,27],[179,30,178,28],[180,8,179,6,"tiltYrad"],[180,16,179,14],[180,19,179,17,"Math"],[180,23,179,21],[180,24,179,22,"PI"],[180,26,179,24],[180,29,179,27],[180,30,179,28],[181,6,180,4],[182,6,181,4],[182,10,181,8,"azimuthAngle"],[182,22,181,20],[182,25,181,23,"Math"],[182,29,181,27],[182,30,181,28,"PI"],[182,32,181,30],[182,35,181,33],[182,36,181,34],[182,40,181,38,"azimuthAngle"],[182,52,181,50],[182,55,181,53,"Math"],[182,59,181,57],[182,60,181,58,"PI"],[182,62,181,60],[182,64,181,62],[183,8,182,6,"tiltXrad"],[183,16,182,14],[183,19,182,17],[183,20,182,18,"Math"],[183,24,182,22],[183,25,182,23,"PI"],[183,27,182,25],[183,30,182,28],[183,31,182,29],[184,8,183,6,"tiltYrad"],[184,16,183,14],[184,19,183,17,"Math"],[184,23,183,21],[184,24,183,22,"PI"],[184,26,183,24],[184,29,183,27],[184,30,183,28],[185,6,184,4],[186,6,185,4],[186,10,185,8,"azimuthAngle"],[186,22,185,20],[186,25,185,23,"Math"],[186,29,185,27],[186,30,185,28,"PI"],[186,32,185,30],[186,36,185,34,"azimuthAngle"],[186,48,185,46],[186,51,185,49],[186,52,185,50],[186,55,185,53,"Math"],[186,59,185,57],[186,60,185,58,"PI"],[186,62,185,60],[186,65,185,63],[186,66,185,64],[186,68,185,66],[187,8,186,6,"tiltXrad"],[187,16,186,14],[187,19,186,17],[187,20,186,18,"Math"],[187,24,186,22],[187,25,186,23,"PI"],[187,27,186,25],[187,30,186,28],[187,31,186,29],[188,8,187,6,"tiltYrad"],[188,16,187,14],[188,19,187,17],[188,20,187,18,"Math"],[188,24,187,22],[188,25,187,23,"PI"],[188,27,187,25],[188,30,187,28],[188,31,187,29],[189,6,188,4],[190,6,189,4],[190,10,189,8,"azimuthAngle"],[190,22,189,20],[190,25,189,23],[190,26,189,24],[190,29,189,27,"Math"],[190,33,189,31],[190,34,189,32,"PI"],[190,36,189,34],[190,39,189,37],[190,40,189,38],[190,44,189,42,"azimuthAngle"],[190,56,189,54],[190,59,189,57],[190,60,189,58],[190,63,189,61,"Math"],[190,67,189,65],[190,68,189,66,"PI"],[190,70,189,68],[190,72,189,70],[191,8,190,6,"tiltXrad"],[191,16,190,14],[191,19,190,17,"Math"],[191,23,190,21],[191,24,190,22,"PI"],[191,26,190,24],[191,29,190,27],[191,30,190,28],[192,8,191,6,"tiltYrad"],[192,16,191,14],[192,19,191,17],[192,20,191,18,"Math"],[192,24,191,22],[192,25,191,23,"PI"],[192,27,191,25],[192,30,191,28],[192,31,191,29],[193,6,192,4],[194,4,193,2],[195,4,194,2],[195,8,194,6,"altitudeAngle"],[195,21,194,19],[195,26,194,24],[195,27,194,25],[195,29,194,27],[196,6,195,4],[196,12,195,10,"tanAlt"],[196,18,195,16],[196,21,195,19,"Math"],[196,25,195,23],[196,26,195,24,"tan"],[196,29,195,27],[196,30,195,28,"altitudeAngle"],[196,43,195,41],[196,44,195,42],[197,6,196,4,"tiltXrad"],[197,14,196,12],[197,17,196,15,"Math"],[197,21,196,19],[197,22,196,20,"atan"],[197,26,196,24],[197,27,196,25,"Math"],[197,31,196,29],[197,32,196,30,"cos"],[197,35,196,33],[197,36,196,34,"azimuthAngle"],[197,48,196,46],[197,49,196,47],[197,52,196,50,"tanAlt"],[197,58,196,56],[197,59,196,57],[198,6,197,4,"tiltYrad"],[198,14,197,12],[198,17,197,15,"Math"],[198,21,197,19],[198,22,197,20,"atan"],[198,26,197,24],[198,27,197,25,"Math"],[198,31,197,29],[198,32,197,30,"sin"],[198,35,197,33],[198,36,197,34,"azimuthAngle"],[198,48,197,46],[198,49,197,47],[198,52,197,50,"tanAlt"],[198,58,197,56],[198,59,197,57],[199,4,198,2],[200,4,199,2],[200,10,199,8,"tiltX"],[200,15,199,13],[200,18,199,16,"Math"],[200,22,199,20],[200,23,199,21,"round"],[200,28,199,26],[200,29,199,27,"tiltXrad"],[200,37,199,35],[200,40,199,38,"radToDeg"],[200,48,199,46],[200,49,199,47],[201,4,200,2],[201,10,200,8,"tiltY"],[201,15,200,13],[201,18,200,16,"Math"],[201,22,200,20],[201,23,200,21,"round"],[201,28,200,26],[201,29,200,27,"tiltYrad"],[201,37,200,35],[201,40,200,38,"radToDeg"],[201,48,200,46],[201,49,200,47],[202,4,201,2],[202,11,201,9],[203,6,202,4,"tiltX"],[203,11,202,9],[204,6,203,4,"tiltY"],[205,4,204,2],[205,5,204,3],[206,2,205,0],[207,2,206,0],[207,8,206,6,"RNSVGElements"],[207,21,206,19],[207,24,206,22,"exports"],[207,31,206,29],[207,32,206,30,"RNSVGElements"],[207,45,206,43],[207,48,206,46],[207,52,206,50,"Set"],[207,55,206,53],[207,56,206,54],[207,57,206,55],[207,65,206,63],[207,67,206,65],[207,77,206,75],[207,79,206,77],[207,88,206,86],[207,90,206,88],[207,105,206,103],[207,107,206,105],[207,110,206,108],[207,112,206,110],[207,119,206,117],[207,121,206,119],[207,127,206,125],[207,129,206,127],[207,137,206,135],[207,139,206,137],[207,145,206,143],[207,147,206,145],[207,153,206,151],[207,155,206,153],[207,164,206,162],[207,166,206,164],[207,175,206,173],[207,177,206,175],[207,187,206,185],[207,189,206,187],[207,195,206,193],[207,197,206,195],[207,202,206,200],[207,204,206,202],[207,212,206,210],[207,214,206,212],[207,221,206,219],[207,223,206,221],[207,229,206,227],[207,231,206,229],[207,241,206,239],[207,243,206,241],[207,248,206,246],[207,249,206,247],[207,250,206,248],[209,2,208,0],[210,2,209,0],[211,2,210,0],[212,2,211,0],[213,2,212,0],[214,2,213,0],[215,2,214,0],[216,2,215,0],[217,2,216,0],[218,2,217,0],[218,11,217,9,"isRNSVGElement"],[218,25,217,23,"isRNSVGElement"],[218,26,217,24,"viewRef"],[218,33,217,31],[218,35,217,33],[219,4,218,2],[219,10,218,8,"componentClassName"],[219,28,218,26],[219,31,218,29,"Object"],[219,37,218,35],[219,38,218,36,"getPrototypeOf"],[219,52,218,50],[219,53,218,51,"viewRef"],[219,60,218,58],[219,61,218,59],[219,62,218,60,"constructor"],[219,73,218,71],[219,74,218,72,"name"],[219,78,218,76],[220,4,219,2],[220,11,219,9,"RNSVGElements"],[220,24,219,22],[220,25,219,23,"has"],[220,28,219,26],[220,29,219,27,"componentClassName"],[220,47,219,45],[220,48,219,46],[220,52,219,50,"Object"],[220,58,219,56],[220,59,219,57,"hasOwn"],[220,65,219,63],[220,66,219,64,"viewRef"],[220,73,219,71],[220,75,219,73],[220,87,219,85],[220,88,219,86],[221,2,220,0],[223,2,222,0],[224,2,223,0],[225,2,224,0],[226,2,225,0],[227,2,226,0],[228,2,227,0],[228,11,227,9,"isRNSVGNode"],[228,22,227,20,"isRNSVGNode"],[228,23,227,21,"node"],[228,27,227,25],[228,29,227,27],[229,4,228,2],[230,4,229,2],[231,4,230,2],[231,8,230,6,"node"],[231,12,230,10],[231,13,230,11,"ref"],[231,16,230,14],[231,18,230,16,"rngh"],[231,22,230,20],[231,24,230,22],[232,6,231,4],[232,13,231,11],[232,18,231,16],[233,4,232,2],[234,4,233,2],[234,11,233,9,"Object"],[234,17,233,15],[234,18,233,16,"getPrototypeOf"],[234,32,233,30],[234,33,233,31,"node"],[234,37,233,35],[234,39,233,37,"type"],[234,43,233,41],[234,44,233,42],[234,46,233,44,"name"],[234,50,233,48],[234,55,233,53],[234,65,233,63],[234,69,233,67,"RNSVGElements"],[234,82,233,80],[234,83,233,81,"has"],[234,86,233,84],[234,87,233,85,"node"],[234,91,233,89],[234,93,233,91,"type"],[234,97,233,95],[234,99,233,97,"displayName"],[234,110,233,108],[234,111,233,109],[235,2,234,0],[236,0,234,1],[236,3]],"functionMap":{"names":["<global>","isPointerInBounds","degToRad","coneToDeviation","calculateViewScale","tryExtractStylusData","tilt2spherical","spherical2tilt","isRNSVGElement","isRNSVGNode"],"mappings":"AAA;ACa;CDM;iBEE,kCF;wBGE,0CH;AIE;CJwB;AKC;CLgD;AMM;CN6C;AOK;CPkD;AQY;CRG;ASO;CTO"},"hasCjsExports":true},"type":"js/module"}]}