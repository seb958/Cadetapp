{"dependencies":[{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":69,"index":270}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"@react-native-community/netinfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":271},"end":{"line":10,"column":54,"index":325}}],"key":"PqZcYTlMIVnzFjdViPzMiGUu7Hg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"initNetworkListener\", {\n    enumerable: true,\n    get: function () {\n      return initNetworkListener;\n    }\n  });\n  Object.defineProperty(exports, \"addConnectionListener\", {\n    enumerable: true,\n    get: function () {\n      return addConnectionListener;\n    }\n  });\n  Object.defineProperty(exports, \"removeConnectionListener\", {\n    enumerable: true,\n    get: function () {\n      return removeConnectionListener;\n    }\n  });\n  Object.defineProperty(exports, \"getConnectionStatus\", {\n    enumerable: true,\n    get: function () {\n      return getConnectionStatus;\n    }\n  });\n  Object.defineProperty(exports, \"saveCacheData\", {\n    enumerable: true,\n    get: function () {\n      return saveCacheData;\n    }\n  });\n  Object.defineProperty(exports, \"getCacheData\", {\n    enumerable: true,\n    get: function () {\n      return getCacheData;\n    }\n  });\n  Object.defineProperty(exports, \"downloadCacheData\", {\n    enumerable: true,\n    get: function () {\n      return downloadCacheData;\n    }\n  });\n  Object.defineProperty(exports, \"addToSyncQueue\", {\n    enumerable: true,\n    get: function () {\n      return addToSyncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"getSyncQueue\", {\n    enumerable: true,\n    get: function () {\n      return getSyncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"clearSyncQueue\", {\n    enumerable: true,\n    get: function () {\n      return clearSyncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"removeFromSyncQueue\", {\n    enumerable: true,\n    get: function () {\n      return removeFromSyncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"recordPresence\", {\n    enumerable: true,\n    get: function () {\n      return recordPresence;\n    }\n  });\n  Object.defineProperty(exports, \"recordUniformInspection\", {\n    enumerable: true,\n    get: function () {\n      return recordUniformInspection;\n    }\n  });\n  Object.defineProperty(exports, \"syncQueue\", {\n    enumerable: true,\n    get: function () {\n      return syncQueue;\n    }\n  });\n  Object.defineProperty(exports, \"triggerAutoSync\", {\n    enumerable: true,\n    get: function () {\n      return triggerAutoSync;\n    }\n  });\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[0], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _reactNativeCommunityNetinfo = require(_dependencyMap[1], \"@react-native-community/netinfo\");\n  var NetInfo = _interopDefault(_reactNativeCommunityNetinfo);\n  /**\n   * Service de gestion du mode hors ligne\n   * - Détection de la connexion internet\n   * - Cache des données essentielles\n   * - Queue de synchronisation\n   * - Synchronisation automatique et manuelle\n   */\n\n  // Clés de stockage\n  const STORAGE_KEYS = {\n    CACHE_USERS: '@cache_users',\n    CACHE_SECTIONS: '@cache_sections',\n    CACHE_ACTIVITIES: '@cache_activities',\n    CACHE_TIMESTAMP: '@cache_timestamp',\n    SYNC_QUEUE: '@sync_queue',\n    IS_SYNCING: '@is_syncing'\n  };\n\n  // Types\n\n  // ============================================================================\n  // DÉTECTION DE CONNEXION\n  // ============================================================================\n\n  let isOnline = true;\n  let connectionListeners = [];\n\n  /**\n   * Initialise la détection de connexion\n   */\n  const initNetworkListener = () => {\n    NetInfo.default.addEventListener(state => {\n      const wasOnline = isOnline;\n      isOnline = state.isConnected === true;\n\n      // Si passage de hors ligne à en ligne, notifier les listeners\n      if (!wasOnline && isOnline) {\n        console.log('🟢 Connexion internet restaurée');\n        connectionListeners.forEach(listener => listener(true));\n        // Déclencher synchronisation automatique\n        syncQueueAutomatically();\n      } else if (wasOnline && !isOnline) {\n        console.log('🔴 Connexion internet perdue');\n        connectionListeners.forEach(listener => listener(false));\n      }\n    });\n\n    // Vérifier l'état initial\n    NetInfo.default.fetch().then(state => {\n      isOnline = state.isConnected === true;\n      console.log(isOnline ? '🟢 En ligne' : '🔴 Hors ligne');\n    });\n  };\n\n  /**\n   * Ajoute un listener pour les changements de connexion\n   */\n  const addConnectionListener = listener => {\n    connectionListeners.push(listener);\n  };\n\n  /**\n   * Retire un listener\n   */\n  const removeConnectionListener = listener => {\n    connectionListeners = connectionListeners.filter(l => l !== listener);\n  };\n\n  /**\n   * Retourne l'état actuel de la connexion\n   */\n  const getConnectionStatus = () => {\n    return isOnline;\n  };\n\n  // ============================================================================\n  // GESTION DU CACHE\n  // ============================================================================\n\n  /**\n   * Sauvegarde les données en cache pour utilisation hors ligne\n   */\n  const saveCacheData = async data => {\n    try {\n      await AsyncStorage.default.setItem(STORAGE_KEYS.CACHE_USERS, JSON.stringify(data.users));\n      await AsyncStorage.default.setItem(STORAGE_KEYS.CACHE_SECTIONS, JSON.stringify(data.sections));\n      await AsyncStorage.default.setItem(STORAGE_KEYS.CACHE_ACTIVITIES, JSON.stringify(data.activities));\n      await AsyncStorage.default.setItem(STORAGE_KEYS.CACHE_TIMESTAMP, data.timestamp);\n      console.log('✅ Données mises en cache');\n    } catch (error) {\n      console.error('❌ Erreur sauvegarde cache:', error);\n    }\n  };\n\n  /**\n   * Récupère les données du cache\n   */\n  const getCacheData = async () => {\n    try {\n      const users = await AsyncStorage.default.getItem(STORAGE_KEYS.CACHE_USERS);\n      const sections = await AsyncStorage.default.getItem(STORAGE_KEYS.CACHE_SECTIONS);\n      const activities = await AsyncStorage.default.getItem(STORAGE_KEYS.CACHE_ACTIVITIES);\n      const timestamp = await AsyncStorage.default.getItem(STORAGE_KEYS.CACHE_TIMESTAMP);\n      if (!users || !sections || !timestamp) {\n        return null;\n      }\n      return {\n        users: JSON.parse(users),\n        sections: JSON.parse(sections),\n        activities: activities ? JSON.parse(activities) : [],\n        timestamp\n      };\n    } catch (error) {\n      console.error('❌ Erreur récupération cache:', error);\n      return null;\n    }\n  };\n\n  /**\n   * Télécharge et met en cache les données depuis le serveur\n   */\n  const downloadCacheData = async (apiUrl, token) => {\n    try {\n      const response = await fetch(`${apiUrl}/api/sync/cache-data`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Échec téléchargement données');\n      }\n      const data = await response.json();\n      await saveCacheData(data);\n      return true;\n    } catch (error) {\n      console.error('❌ Erreur téléchargement cache:', error);\n      return false;\n    }\n  };\n\n  // ============================================================================\n  // GESTION DE LA QUEUE DE SYNCHRONISATION\n  // ============================================================================\n\n  /**\n   * Ajoute un élément à la queue de synchronisation\n   */\n  const addToSyncQueue = async item => {\n    try {\n      const queueJson = await AsyncStorage.default.getItem(STORAGE_KEYS.SYNC_QUEUE);\n      const queue = queueJson ? JSON.parse(queueJson) : [];\n      queue.push(item);\n      await AsyncStorage.default.setItem(STORAGE_KEYS.SYNC_QUEUE, JSON.stringify(queue));\n      console.log(`📝 Ajouté à la queue: ${item.type} (${item.data.temp_id})`);\n    } catch (error) {\n      console.error('❌ Erreur ajout queue:', error);\n    }\n  };\n\n  /**\n   * Récupère la queue de synchronisation\n   */\n  const getSyncQueue = async () => {\n    try {\n      const queueJson = await AsyncStorage.default.getItem(STORAGE_KEYS.SYNC_QUEUE);\n      return queueJson ? JSON.parse(queueJson) : [];\n    } catch (error) {\n      console.error('❌ Erreur récupération queue:', error);\n      return [];\n    }\n  };\n\n  /**\n   * Vide la queue de synchronisation\n   */\n  const clearSyncQueue = async () => {\n    try {\n      await AsyncStorage.default.setItem(STORAGE_KEYS.SYNC_QUEUE, JSON.stringify([]));\n      console.log('🗑️ Queue vidée');\n    } catch (error) {\n      console.error('❌ Erreur vidage queue:', error);\n    }\n  };\n\n  /**\n   * Supprime des éléments spécifiques de la queue\n   */\n  const removeFromSyncQueue = async tempIds => {\n    try {\n      const queue = await getSyncQueue();\n      const newQueue = queue.filter(item => !tempIds.includes(item.data.temp_id));\n      await AsyncStorage.default.setItem(STORAGE_KEYS.SYNC_QUEUE, JSON.stringify(newQueue));\n      console.log(`🗑️ ${tempIds.length} éléments supprimés de la queue`);\n    } catch (error) {\n      console.error('❌ Erreur suppression queue:', error);\n    }\n  };\n\n  // ============================================================================\n  // ENREGISTREMENT HORS LIGNE\n  // ============================================================================\n\n  /**\n   * Enregistre une présence (en ligne ou hors ligne)\n   */\n  const recordPresence = async (cadetId, date, status, commentaire) => {\n    const presence = {\n      cadet_id: cadetId,\n      date,\n      status,\n      commentaire,\n      timestamp: new Date().toISOString(),\n      temp_id: `presence_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n\n    // Si hors ligne, ajouter à la queue\n    if (!isOnline) {\n      await addToSyncQueue({\n        type: 'presence',\n        data: presence,\n        attempts: 0,\n        created_at: new Date().toISOString()\n      });\n      return {\n        success: true,\n        offline: true\n      };\n    }\n\n    // Si en ligne, essayer d'envoyer immédiatement\n    // (Ce sera géré par le composant qui appelle cette fonction)\n    return {\n      success: true,\n      offline: false\n    };\n  };\n\n  /**\n   * Enregistre une inspection d'uniforme (en ligne ou hors ligne)\n   */\n  const recordUniformInspection = async (cadetId, date, uniformType, criteriaScores, commentaire) => {\n    const inspection = {\n      cadet_id: cadetId,\n      date,\n      uniform_type: uniformType,\n      criteria_scores: criteriaScores,\n      commentaire,\n      timestamp: new Date().toISOString(),\n      temp_id: `inspection_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n    console.log('💾 recordUniformInspection - Mode:', isOnline ? 'EN LIGNE' : 'HORS LIGNE');\n\n    // Si hors ligne, ajouter à la queue\n    if (!isOnline) {\n      await addToSyncQueue({\n        type: 'inspection',\n        data: inspection,\n        attempts: 0,\n        created_at: new Date().toISOString()\n      });\n      console.log('📦 Inspection ajoutée à la queue de synchronisation');\n      return {\n        success: true,\n        offline: true\n      };\n    }\n\n    // Si en ligne, retourner false pour que l'appelant gère l'envoi\n    return {\n      success: true,\n      offline: false\n    };\n  };\n\n  // ============================================================================\n  // SYNCHRONISATION\n  // ============================================================================\n\n  /**\n   * Synchronise la queue avec le serveur\n   */\n  const syncQueue = async (apiUrl, token, onProgress) => {\n    try {\n      // Vérifier si une synchronisation est déjà en cours\n      const isSyncing = await AsyncStorage.default.getItem(STORAGE_KEYS.IS_SYNCING);\n      if (isSyncing === 'true') {\n        console.log('⚠️ Synchronisation déjà en cours');\n        return {\n          success: false,\n          synced: 0,\n          errors: 0\n        };\n      }\n\n      // Marquer la synchronisation comme en cours\n      await AsyncStorage.default.setItem(STORAGE_KEYS.IS_SYNCING, 'true');\n      const queue = await getSyncQueue();\n      if (queue.length === 0) {\n        await AsyncStorage.default.setItem(STORAGE_KEYS.IS_SYNCING, 'false');\n        return {\n          success: true,\n          synced: 0,\n          errors: 0\n        };\n      }\n      console.log(`🔄 Synchronisation de ${queue.length} éléments...`);\n\n      // Préparer les données pour l'API batch\n      const presences = [];\n      const inspections = [];\n      queue.forEach(item => {\n        if (item.type === 'presence') {\n          presences.push(item.data);\n        } else if (item.type === 'inspection') {\n          inspections.push(item.data);\n        }\n      });\n\n      // Appeler l'API de synchronisation batch\n      const response = await fetch(`${apiUrl}/api/sync/batch`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          presences,\n          inspections\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Échec synchronisation');\n      }\n      const result = await response.json();\n\n      // Logger les erreurs pour debug\n      const errors = [...result.presence_results.filter(r => !r.success), ...result.inspection_results.filter(r => !r.success)];\n      if (errors.length > 0) {\n        console.log('❌ Erreurs de synchronisation:', JSON.stringify(errors, null, 2));\n      }\n\n      // Supprimer les éléments synchronisés avec succès de la queue\n      const successTempIds = [...result.presence_results.filter(r => r.success).map(r => r.temp_id), ...result.inspection_results.filter(r => r.success).map(r => r.temp_id)];\n      await removeFromSyncQueue(successTempIds);\n\n      // Mettre à jour le cache avec les nouvelles données\n      await downloadCacheData(apiUrl, token);\n      await AsyncStorage.default.setItem(STORAGE_KEYS.IS_SYNCING, 'false');\n      console.log(`✅ Synchronisation terminée: ${result.total_synced} synchronisés, ${result.total_errors} erreurs`);\n      return {\n        success: true,\n        synced: result.total_synced,\n        errors: result.total_errors,\n        errorDetails: errors.length > 0 ? errors : undefined\n      };\n    } catch (error) {\n      console.error('❌ Erreur synchronisation:', error);\n      await AsyncStorage.default.setItem(STORAGE_KEYS.IS_SYNCING, 'false');\n      return {\n        success: false,\n        synced: 0,\n        errors: 0\n      };\n    }\n  };\n\n  /**\n   * Synchronisation automatique (appelée quand connexion restaurée)\n   */\n  const syncQueueAutomatically = async () => {\n    // Cette fonction sera appelée avec les bonnes credentials depuis le composant\n    console.log('🔄 Synchronisation automatique déclenchée');\n  };\n\n  /**\n   * Export de la fonction pour déclencher la sync auto depuis l'app\n   */\n  const triggerAutoSync = async (apiUrl, token) => {\n    if (isOnline) {\n      await syncQueue(apiUrl, token);\n    }\n  };\n});","lineCount":488,"map":[[12,2,66,0,"Object"],[12,8,66,0],[12,9,66,0,"defineProperty"],[12,23,66,0],[12,24,66,0,"exports"],[12,31,66,0],[13,4,66,0,"enumerable"],[13,14,66,0],[14,4,66,0,"get"],[14,7,66,0],[14,18,66,0,"get"],[14,19,66,0],[15,6,66,0],[15,13,66,0,"initNetworkListener"],[15,32,66,0],[16,4,66,0],[17,2,66,0],[18,2,93,0,"Object"],[18,8,93,0],[18,9,93,0,"defineProperty"],[18,23,93,0],[18,24,93,0,"exports"],[18,31,93,0],[19,4,93,0,"enumerable"],[19,14,93,0],[20,4,93,0,"get"],[20,7,93,0],[20,18,93,0,"get"],[20,19,93,0],[21,6,93,0],[21,13,93,0,"addConnectionListener"],[21,34,93,0],[22,4,93,0],[23,2,93,0],[24,2,100,0,"Object"],[24,8,100,0],[24,9,100,0,"defineProperty"],[24,23,100,0],[24,24,100,0,"exports"],[24,31,100,0],[25,4,100,0,"enumerable"],[25,14,100,0],[26,4,100,0,"get"],[26,7,100,0],[26,18,100,0,"get"],[26,19,100,0],[27,6,100,0],[27,13,100,0,"removeConnectionListener"],[27,37,100,0],[28,4,100,0],[29,2,100,0],[30,2,107,0,"Object"],[30,8,107,0],[30,9,107,0,"defineProperty"],[30,23,107,0],[30,24,107,0,"exports"],[30,31,107,0],[31,4,107,0,"enumerable"],[31,14,107,0],[32,4,107,0,"get"],[32,7,107,0],[32,18,107,0,"get"],[32,19,107,0],[33,6,107,0],[33,13,107,0,"getConnectionStatus"],[33,32,107,0],[34,4,107,0],[35,2,107,0],[36,2,118,0,"Object"],[36,8,118,0],[36,9,118,0,"defineProperty"],[36,23,118,0],[36,24,118,0,"exports"],[36,31,118,0],[37,4,118,0,"enumerable"],[37,14,118,0],[38,4,118,0,"get"],[38,7,118,0],[38,18,118,0,"get"],[38,19,118,0],[39,6,118,0],[39,13,118,0,"saveCacheData"],[39,26,118,0],[40,4,118,0],[41,2,118,0],[42,2,133,0,"Object"],[42,8,133,0],[42,9,133,0,"defineProperty"],[42,23,133,0],[42,24,133,0,"exports"],[42,31,133,0],[43,4,133,0,"enumerable"],[43,14,133,0],[44,4,133,0,"get"],[44,7,133,0],[44,18,133,0,"get"],[44,19,133,0],[45,6,133,0],[45,13,133,0,"getCacheData"],[45,25,133,0],[46,4,133,0],[47,2,133,0],[48,2,159,0,"Object"],[48,8,159,0],[48,9,159,0,"defineProperty"],[48,23,159,0],[48,24,159,0,"exports"],[48,31,159,0],[49,4,159,0,"enumerable"],[49,14,159,0],[50,4,159,0,"get"],[50,7,159,0],[50,18,159,0,"get"],[50,19,159,0],[51,6,159,0],[51,13,159,0,"downloadCacheData"],[51,30,159,0],[52,4,159,0],[53,2,159,0],[54,2,187,0,"Object"],[54,8,187,0],[54,9,187,0,"defineProperty"],[54,23,187,0],[54,24,187,0,"exports"],[54,31,187,0],[55,4,187,0,"enumerable"],[55,14,187,0],[56,4,187,0,"get"],[56,7,187,0],[56,18,187,0,"get"],[56,19,187,0],[57,6,187,0],[57,13,187,0,"addToSyncQueue"],[57,27,187,0],[58,4,187,0],[59,2,187,0],[60,2,204,0,"Object"],[60,8,204,0],[60,9,204,0,"defineProperty"],[60,23,204,0],[60,24,204,0,"exports"],[60,31,204,0],[61,4,204,0,"enumerable"],[61,14,204,0],[62,4,204,0,"get"],[62,7,204,0],[62,18,204,0,"get"],[62,19,204,0],[63,6,204,0],[63,13,204,0,"getSyncQueue"],[63,25,204,0],[64,4,204,0],[65,2,204,0],[66,2,217,0,"Object"],[66,8,217,0],[66,9,217,0,"defineProperty"],[66,23,217,0],[66,24,217,0,"exports"],[66,31,217,0],[67,4,217,0,"enumerable"],[67,14,217,0],[68,4,217,0,"get"],[68,7,217,0],[68,18,217,0,"get"],[68,19,217,0],[69,6,217,0],[69,13,217,0,"clearSyncQueue"],[69,27,217,0],[70,4,217,0],[71,2,217,0],[72,2,229,0,"Object"],[72,8,229,0],[72,9,229,0,"defineProperty"],[72,23,229,0],[72,24,229,0,"exports"],[72,31,229,0],[73,4,229,0,"enumerable"],[73,14,229,0],[74,4,229,0,"get"],[74,7,229,0],[74,18,229,0,"get"],[74,19,229,0],[75,6,229,0],[75,13,229,0,"removeFromSyncQueue"],[75,32,229,0],[76,4,229,0],[77,2,229,0],[78,2,247,0,"Object"],[78,8,247,0],[78,9,247,0,"defineProperty"],[78,23,247,0],[78,24,247,0,"exports"],[78,31,247,0],[79,4,247,0,"enumerable"],[79,14,247,0],[80,4,247,0,"get"],[80,7,247,0],[80,18,247,0,"get"],[80,19,247,0],[81,6,247,0],[81,13,247,0,"recordPresence"],[81,27,247,0],[82,4,247,0],[83,2,247,0],[84,2,281,0,"Object"],[84,8,281,0],[84,9,281,0,"defineProperty"],[84,23,281,0],[84,24,281,0,"exports"],[84,31,281,0],[85,4,281,0,"enumerable"],[85,14,281,0],[86,4,281,0,"get"],[86,7,281,0],[86,18,281,0,"get"],[86,19,281,0],[87,6,281,0],[87,13,281,0,"recordUniformInspection"],[87,36,281,0],[88,4,281,0],[89,2,281,0],[90,2,323,0,"Object"],[90,8,323,0],[90,9,323,0,"defineProperty"],[90,23,323,0],[90,24,323,0,"exports"],[90,31,323,0],[91,4,323,0,"enumerable"],[91,14,323,0],[92,4,323,0,"get"],[92,7,323,0],[92,18,323,0,"get"],[92,19,323,0],[93,6,323,0],[93,13,323,0,"syncQueue"],[93,22,323,0],[94,4,323,0],[95,2,323,0],[96,2,424,0,"Object"],[96,8,424,0],[96,9,424,0,"defineProperty"],[96,23,424,0],[96,24,424,0,"exports"],[96,31,424,0],[97,4,424,0,"enumerable"],[97,14,424,0],[98,4,424,0,"get"],[98,7,424,0],[98,18,424,0,"get"],[98,19,424,0],[99,6,424,0],[99,13,424,0,"triggerAutoSync"],[99,28,424,0],[100,4,424,0],[101,2,424,0],[102,2,9,0],[102,6,9,0,"_reactNativeAsyncStorageAsyncStorage"],[102,42,9,0],[102,45,9,0,"require"],[102,52,9,0],[102,53,9,0,"_dependencyMap"],[102,67,9,0],[103,2,9,0],[103,6,9,0,"AsyncStorage"],[103,18,9,0],[103,21,9,0,"_interopDefault"],[103,36,9,0],[103,37,9,0,"_reactNativeAsyncStorageAsyncStorage"],[103,73,9,0],[104,2,10,0],[104,6,10,0,"_reactNativeCommunityNetinfo"],[104,34,10,0],[104,37,10,0,"require"],[104,44,10,0],[104,45,10,0,"_dependencyMap"],[104,59,10,0],[105,2,10,0],[105,6,10,0,"NetInfo"],[105,13,10,0],[105,16,10,0,"_interopDefault"],[105,31,10,0],[105,32,10,0,"_reactNativeCommunityNetinfo"],[105,60,10,0],[106,2,1,0],[107,0,2,0],[108,0,3,0],[109,0,4,0],[110,0,5,0],[111,0,6,0],[112,0,7,0],[114,2,12,0],[115,2,13,0],[115,8,13,6,"STORAGE_KEYS"],[115,20,13,18],[115,23,13,21],[116,4,14,2,"CACHE_USERS"],[116,15,14,13],[116,17,14,15],[116,31,14,29],[117,4,15,2,"CACHE_SECTIONS"],[117,18,15,16],[117,20,15,18],[117,37,15,35],[118,4,16,2,"CACHE_ACTIVITIES"],[118,20,16,18],[118,22,16,20],[118,41,16,39],[119,4,17,2,"CACHE_TIMESTAMP"],[119,19,17,17],[119,21,17,19],[119,39,17,37],[120,4,18,2,"SYNC_QUEUE"],[120,14,18,12],[120,16,18,14],[120,29,18,27],[121,4,19,2,"IS_SYNCING"],[121,14,19,12],[121,16,19,14],[122,2,20,0],[122,3,20,1],[124,2,22,0],[126,2,56,0],[127,2,57,0],[128,2,58,0],[130,2,60,0],[130,6,60,4,"isOnline"],[130,14,60,12],[130,17,60,15],[130,21,60,19],[131,2,61,0],[131,6,61,4,"connectionListeners"],[131,25,61,57],[131,28,61,60],[131,30,61,62],[133,2,63,0],[134,0,64,0],[135,0,65,0],[136,2,66,7],[136,8,66,13,"initNetworkListener"],[136,27,66,32],[136,30,66,35,"initNetworkListener"],[136,31,66,35],[136,36,66,41],[137,4,67,2,"NetInfo"],[137,11,67,9],[137,12,67,9,"default"],[137,19,67,9],[137,20,67,10,"addEventListener"],[137,36,67,26],[137,37,67,27,"state"],[137,42,67,32],[137,46,67,36],[138,6,68,4],[138,12,68,10,"wasOnline"],[138,21,68,19],[138,24,68,22,"isOnline"],[138,32,68,30],[139,6,69,4,"isOnline"],[139,14,69,12],[139,17,69,15,"state"],[139,22,69,20],[139,23,69,21,"isConnected"],[139,34,69,32],[139,39,69,37],[139,43,69,41],[141,6,71,4],[142,6,72,4],[142,10,72,8],[142,11,72,9,"wasOnline"],[142,20,72,18],[142,24,72,22,"isOnline"],[142,32,72,30],[142,34,72,32],[143,8,73,6,"console"],[143,15,73,13],[143,16,73,14,"log"],[143,19,73,17],[143,20,73,18],[143,53,73,51],[143,54,73,52],[144,8,74,6,"connectionListeners"],[144,27,74,25],[144,28,74,26,"forEach"],[144,35,74,33],[144,36,74,34,"listener"],[144,44,74,42],[144,48,74,46,"listener"],[144,56,74,54],[144,57,74,55],[144,61,74,59],[144,62,74,60],[144,63,74,61],[145,8,75,6],[146,8,76,6,"syncQueueAutomatically"],[146,30,76,28],[146,31,76,29],[146,32,76,30],[147,6,77,4],[147,7,77,5],[147,13,77,11],[147,17,77,15,"wasOnline"],[147,26,77,24],[147,30,77,28],[147,31,77,29,"isOnline"],[147,39,77,37],[147,41,77,39],[148,8,78,6,"console"],[148,15,78,13],[148,16,78,14,"log"],[148,19,78,17],[148,20,78,18],[148,50,78,48],[148,51,78,49],[149,8,79,6,"connectionListeners"],[149,27,79,25],[149,28,79,26,"forEach"],[149,35,79,33],[149,36,79,34,"listener"],[149,44,79,42],[149,48,79,46,"listener"],[149,56,79,54],[149,57,79,55],[149,62,79,60],[149,63,79,61],[149,64,79,62],[150,6,80,4],[151,4,81,2],[151,5,81,3],[151,6,81,4],[153,4,83,2],[154,4,84,2,"NetInfo"],[154,11,84,9],[154,12,84,9,"default"],[154,19,84,9],[154,20,84,10,"fetch"],[154,25,84,15],[154,26,84,16],[154,27,84,17],[154,28,84,18,"then"],[154,32,84,22],[154,33,84,23,"state"],[154,38,84,28],[154,42,84,32],[155,6,85,4,"isOnline"],[155,14,85,12],[155,17,85,15,"state"],[155,22,85,20],[155,23,85,21,"isConnected"],[155,34,85,32],[155,39,85,37],[155,43,85,41],[156,6,86,4,"console"],[156,13,86,11],[156,14,86,12,"log"],[156,17,86,15],[156,18,86,16,"isOnline"],[156,26,86,24],[156,29,86,27],[156,42,86,40],[156,45,86,43],[156,60,86,58],[156,61,86,59],[157,4,87,2],[157,5,87,3],[157,6,87,4],[158,2,88,0],[158,3,88,1],[160,2,90,0],[161,0,91,0],[162,0,92,0],[163,2,93,7],[163,8,93,13,"addConnectionListener"],[163,29,93,34],[163,32,93,38,"listener"],[163,40,93,73],[163,44,93,78],[164,4,94,2,"connectionListeners"],[164,23,94,21],[164,24,94,22,"push"],[164,28,94,26],[164,29,94,27,"listener"],[164,37,94,35],[164,38,94,36],[165,2,95,0],[165,3,95,1],[167,2,97,0],[168,0,98,0],[169,0,99,0],[170,2,100,7],[170,8,100,13,"removeConnectionListener"],[170,32,100,37],[170,35,100,41,"listener"],[170,43,100,76],[170,47,100,81],[171,4,101,2,"connectionListeners"],[171,23,101,21],[171,26,101,24,"connectionListeners"],[171,45,101,43],[171,46,101,44,"filter"],[171,52,101,50],[171,53,101,51,"l"],[171,54,101,52],[171,58,101,56,"l"],[171,59,101,57],[171,64,101,62,"listener"],[171,72,101,70],[171,73,101,71],[172,2,102,0],[172,3,102,1],[174,2,104,0],[175,0,105,0],[176,0,106,0],[177,2,107,7],[177,8,107,13,"getConnectionStatus"],[177,27,107,32],[177,30,107,35,"getConnectionStatus"],[177,31,107,35],[177,36,107,50],[178,4,108,2],[178,11,108,9,"isOnline"],[178,19,108,17],[179,2,109,0],[179,3,109,1],[181,2,111,0],[182,2,112,0],[183,2,113,0],[185,2,115,0],[186,0,116,0],[187,0,117,0],[188,2,118,7],[188,8,118,13,"saveCacheData"],[188,21,118,26],[188,24,118,29],[188,30,118,36,"data"],[188,34,118,51],[188,38,118,71],[189,4,119,2],[189,8,119,6],[190,6,120,4],[190,12,120,10,"AsyncStorage"],[190,24,120,22],[190,25,120,22,"default"],[190,32,120,22],[190,33,120,23,"setItem"],[190,40,120,30],[190,41,120,31,"STORAGE_KEYS"],[190,53,120,43],[190,54,120,44,"CACHE_USERS"],[190,65,120,55],[190,67,120,57,"JSON"],[190,71,120,61],[190,72,120,62,"stringify"],[190,81,120,71],[190,82,120,72,"data"],[190,86,120,76],[190,87,120,77,"users"],[190,92,120,82],[190,93,120,83],[190,94,120,84],[191,6,121,4],[191,12,121,10,"AsyncStorage"],[191,24,121,22],[191,25,121,22,"default"],[191,32,121,22],[191,33,121,23,"setItem"],[191,40,121,30],[191,41,121,31,"STORAGE_KEYS"],[191,53,121,43],[191,54,121,44,"CACHE_SECTIONS"],[191,68,121,58],[191,70,121,60,"JSON"],[191,74,121,64],[191,75,121,65,"stringify"],[191,84,121,74],[191,85,121,75,"data"],[191,89,121,79],[191,90,121,80,"sections"],[191,98,121,88],[191,99,121,89],[191,100,121,90],[192,6,122,4],[192,12,122,10,"AsyncStorage"],[192,24,122,22],[192,25,122,22,"default"],[192,32,122,22],[192,33,122,23,"setItem"],[192,40,122,30],[192,41,122,31,"STORAGE_KEYS"],[192,53,122,43],[192,54,122,44,"CACHE_ACTIVITIES"],[192,70,122,60],[192,72,122,62,"JSON"],[192,76,122,66],[192,77,122,67,"stringify"],[192,86,122,76],[192,87,122,77,"data"],[192,91,122,81],[192,92,122,82,"activities"],[192,102,122,92],[192,103,122,93],[192,104,122,94],[193,6,123,4],[193,12,123,10,"AsyncStorage"],[193,24,123,22],[193,25,123,22,"default"],[193,32,123,22],[193,33,123,23,"setItem"],[193,40,123,30],[193,41,123,31,"STORAGE_KEYS"],[193,53,123,43],[193,54,123,44,"CACHE_TIMESTAMP"],[193,69,123,59],[193,71,123,61,"data"],[193,75,123,65],[193,76,123,66,"timestamp"],[193,85,123,75],[193,86,123,76],[194,6,124,4,"console"],[194,13,124,11],[194,14,124,12,"log"],[194,17,124,15],[194,18,124,16],[194,44,124,42],[194,45,124,43],[195,4,125,2],[195,5,125,3],[195,6,125,4],[195,13,125,11,"error"],[195,18,125,16],[195,20,125,18],[196,6,126,4,"console"],[196,13,126,11],[196,14,126,12,"error"],[196,19,126,17],[196,20,126,18],[196,48,126,46],[196,50,126,48,"error"],[196,55,126,53],[196,56,126,54],[197,4,127,2],[198,2,128,0],[198,3,128,1],[200,2,130,0],[201,0,131,0],[202,0,132,0],[203,2,133,7],[203,8,133,13,"getCacheData"],[203,20,133,25],[203,23,133,28],[203,29,133,28,"getCacheData"],[203,30,133,28],[203,35,133,67],[204,4,134,2],[204,8,134,6],[205,6,135,4],[205,12,135,10,"users"],[205,17,135,15],[205,20,135,18],[205,26,135,24,"AsyncStorage"],[205,38,135,36],[205,39,135,36,"default"],[205,46,135,36],[205,47,135,37,"getItem"],[205,54,135,44],[205,55,135,45,"STORAGE_KEYS"],[205,67,135,57],[205,68,135,58,"CACHE_USERS"],[205,79,135,69],[205,80,135,70],[206,6,136,4],[206,12,136,10,"sections"],[206,20,136,18],[206,23,136,21],[206,29,136,27,"AsyncStorage"],[206,41,136,39],[206,42,136,39,"default"],[206,49,136,39],[206,50,136,40,"getItem"],[206,57,136,47],[206,58,136,48,"STORAGE_KEYS"],[206,70,136,60],[206,71,136,61,"CACHE_SECTIONS"],[206,85,136,75],[206,86,136,76],[207,6,137,4],[207,12,137,10,"activities"],[207,22,137,20],[207,25,137,23],[207,31,137,29,"AsyncStorage"],[207,43,137,41],[207,44,137,41,"default"],[207,51,137,41],[207,52,137,42,"getItem"],[207,59,137,49],[207,60,137,50,"STORAGE_KEYS"],[207,72,137,62],[207,73,137,63,"CACHE_ACTIVITIES"],[207,89,137,79],[207,90,137,80],[208,6,138,4],[208,12,138,10,"timestamp"],[208,21,138,19],[208,24,138,22],[208,30,138,28,"AsyncStorage"],[208,42,138,40],[208,43,138,40,"default"],[208,50,138,40],[208,51,138,41,"getItem"],[208,58,138,48],[208,59,138,49,"STORAGE_KEYS"],[208,71,138,61],[208,72,138,62,"CACHE_TIMESTAMP"],[208,87,138,77],[208,88,138,78],[209,6,140,4],[209,10,140,8],[209,11,140,9,"users"],[209,16,140,14],[209,20,140,18],[209,21,140,19,"sections"],[209,29,140,27],[209,33,140,31],[209,34,140,32,"timestamp"],[209,43,140,41],[209,45,140,43],[210,8,141,6],[210,15,141,13],[210,19,141,17],[211,6,142,4],[212,6,144,4],[212,13,144,11],[213,8,145,6,"users"],[213,13,145,11],[213,15,145,13,"JSON"],[213,19,145,17],[213,20,145,18,"parse"],[213,25,145,23],[213,26,145,24,"users"],[213,31,145,29],[213,32,145,30],[214,8,146,6,"sections"],[214,16,146,14],[214,18,146,16,"JSON"],[214,22,146,20],[214,23,146,21,"parse"],[214,28,146,26],[214,29,146,27,"sections"],[214,37,146,35],[214,38,146,36],[215,8,147,6,"activities"],[215,18,147,16],[215,20,147,18,"activities"],[215,30,147,28],[215,33,147,31,"JSON"],[215,37,147,35],[215,38,147,36,"parse"],[215,43,147,41],[215,44,147,42,"activities"],[215,54,147,52],[215,55,147,53],[215,58,147,56],[215,60,147,58],[216,8,148,6,"timestamp"],[217,6,149,4],[217,7,149,5],[218,4,150,2],[218,5,150,3],[218,6,150,4],[218,13,150,11,"error"],[218,18,150,16],[218,20,150,18],[219,6,151,4,"console"],[219,13,151,11],[219,14,151,12,"error"],[219,19,151,17],[219,20,151,18],[219,50,151,48],[219,52,151,50,"error"],[219,57,151,55],[219,58,151,56],[220,6,152,4],[220,13,152,11],[220,17,152,15],[221,4,153,2],[222,2,154,0],[222,3,154,1],[224,2,156,0],[225,0,157,0],[226,0,158,0],[227,2,159,7],[227,8,159,13,"downloadCacheData"],[227,25,159,30],[227,28,159,33],[227,34,159,33,"downloadCacheData"],[227,35,159,40,"apiUrl"],[227,41,159,54],[227,43,159,56,"token"],[227,48,159,69],[227,53,159,92],[228,4,160,2],[228,8,160,6],[229,6,161,4],[229,12,161,10,"response"],[229,20,161,18],[229,23,161,21],[229,29,161,27,"fetch"],[229,34,161,32],[229,35,161,33],[229,38,161,36,"apiUrl"],[229,44,161,42],[229,66,161,64],[229,68,161,66],[230,8,162,6,"headers"],[230,15,162,13],[230,17,162,15],[231,10,163,8],[231,25,163,23],[231,27,163,25],[231,37,163,35,"token"],[231,42,163,40],[232,8,164,6],[233,6,165,4],[233,7,165,5],[233,8,165,6],[234,6,167,4],[234,10,167,8],[234,11,167,9,"response"],[234,19,167,17],[234,20,167,18,"ok"],[234,22,167,20],[234,24,167,22],[235,8,168,6],[235,14,168,12],[235,18,168,16,"Error"],[235,23,168,21],[235,24,168,22],[235,54,168,52],[235,55,168,53],[236,6,169,4],[237,6,171,4],[237,12,171,10,"data"],[237,16,171,14],[237,19,171,17],[237,25,171,23,"response"],[237,33,171,31],[237,34,171,32,"json"],[237,38,171,36],[237,39,171,37],[237,40,171,38],[238,6,172,4],[238,12,172,10,"saveCacheData"],[238,25,172,23],[238,26,172,24,"data"],[238,30,172,28],[238,31,172,29],[239,6,173,4],[239,13,173,11],[239,17,173,15],[240,4,174,2],[240,5,174,3],[240,6,174,4],[240,13,174,11,"error"],[240,18,174,16],[240,20,174,18],[241,6,175,4,"console"],[241,13,175,11],[241,14,175,12,"error"],[241,19,175,17],[241,20,175,18],[241,52,175,50],[241,54,175,52,"error"],[241,59,175,57],[241,60,175,58],[242,6,176,4],[242,13,176,11],[242,18,176,16],[243,4,177,2],[244,2,178,0],[244,3,178,1],[246,2,180,0],[247,2,181,0],[248,2,182,0],[250,2,184,0],[251,0,185,0],[252,0,186,0],[253,2,187,7],[253,8,187,13,"addToSyncQueue"],[253,22,187,27],[253,25,187,30],[253,31,187,37,"item"],[253,35,187,56],[253,39,187,76],[254,4,188,2],[254,8,188,6],[255,6,189,4],[255,12,189,10,"queueJson"],[255,21,189,19],[255,24,189,22],[255,30,189,28,"AsyncStorage"],[255,42,189,40],[255,43,189,40,"default"],[255,50,189,40],[255,51,189,41,"getItem"],[255,58,189,48],[255,59,189,49,"STORAGE_KEYS"],[255,71,189,61],[255,72,189,62,"SYNC_QUEUE"],[255,82,189,72],[255,83,189,73],[256,6,190,4],[256,12,190,10,"queue"],[256,17,190,32],[256,20,190,35,"queueJson"],[256,29,190,44],[256,32,190,47,"JSON"],[256,36,190,51],[256,37,190,52,"parse"],[256,42,190,57],[256,43,190,58,"queueJson"],[256,52,190,67],[256,53,190,68],[256,56,190,71],[256,58,190,73],[257,6,192,4,"queue"],[257,11,192,9],[257,12,192,10,"push"],[257,16,192,14],[257,17,192,15,"item"],[257,21,192,19],[257,22,192,20],[258,6,194,4],[258,12,194,10,"AsyncStorage"],[258,24,194,22],[258,25,194,22,"default"],[258,32,194,22],[258,33,194,23,"setItem"],[258,40,194,30],[258,41,194,31,"STORAGE_KEYS"],[258,53,194,43],[258,54,194,44,"SYNC_QUEUE"],[258,64,194,54],[258,66,194,56,"JSON"],[258,70,194,60],[258,71,194,61,"stringify"],[258,80,194,70],[258,81,194,71,"queue"],[258,86,194,76],[258,87,194,77],[258,88,194,78],[259,6,195,4,"console"],[259,13,195,11],[259,14,195,12,"log"],[259,17,195,15],[259,18,195,16],[259,43,195,41,"item"],[259,47,195,45],[259,48,195,46,"type"],[259,52,195,50],[259,57,195,55,"item"],[259,61,195,59],[259,62,195,60,"data"],[259,66,195,64],[259,67,195,65,"temp_id"],[259,74,195,72],[259,77,195,75],[259,78,195,76],[260,4,196,2],[260,5,196,3],[260,6,196,4],[260,13,196,11,"error"],[260,18,196,16],[260,20,196,18],[261,6,197,4,"console"],[261,13,197,11],[261,14,197,12,"error"],[261,19,197,17],[261,20,197,18],[261,43,197,41],[261,45,197,43,"error"],[261,50,197,48],[261,51,197,49],[262,4,198,2],[263,2,199,0],[263,3,199,1],[265,2,201,0],[266,0,202,0],[267,0,203,0],[268,2,204,7],[268,8,204,13,"getSyncQueue"],[268,20,204,25],[268,23,204,28],[268,29,204,28,"getSyncQueue"],[268,30,204,28],[268,35,204,66],[269,4,205,2],[269,8,205,6],[270,6,206,4],[270,12,206,10,"queueJson"],[270,21,206,19],[270,24,206,22],[270,30,206,28,"AsyncStorage"],[270,42,206,40],[270,43,206,40,"default"],[270,50,206,40],[270,51,206,41,"getItem"],[270,58,206,48],[270,59,206,49,"STORAGE_KEYS"],[270,71,206,61],[270,72,206,62,"SYNC_QUEUE"],[270,82,206,72],[270,83,206,73],[271,6,207,4],[271,13,207,11,"queueJson"],[271,22,207,20],[271,25,207,23,"JSON"],[271,29,207,27],[271,30,207,28,"parse"],[271,35,207,33],[271,36,207,34,"queueJson"],[271,45,207,43],[271,46,207,44],[271,49,207,47],[271,51,207,49],[272,4,208,2],[272,5,208,3],[272,6,208,4],[272,13,208,11,"error"],[272,18,208,16],[272,20,208,18],[273,6,209,4,"console"],[273,13,209,11],[273,14,209,12,"error"],[273,19,209,17],[273,20,209,18],[273,50,209,48],[273,52,209,50,"error"],[273,57,209,55],[273,58,209,56],[274,6,210,4],[274,13,210,11],[274,15,210,13],[275,4,211,2],[276,2,212,0],[276,3,212,1],[278,2,214,0],[279,0,215,0],[280,0,216,0],[281,2,217,7],[281,8,217,13,"clearSyncQueue"],[281,22,217,27],[281,25,217,30],[281,31,217,30,"clearSyncQueue"],[281,32,217,30],[281,37,217,57],[282,4,218,2],[282,8,218,6],[283,6,219,4],[283,12,219,10,"AsyncStorage"],[283,24,219,22],[283,25,219,22,"default"],[283,32,219,22],[283,33,219,23,"setItem"],[283,40,219,30],[283,41,219,31,"STORAGE_KEYS"],[283,53,219,43],[283,54,219,44,"SYNC_QUEUE"],[283,64,219,54],[283,66,219,56,"JSON"],[283,70,219,60],[283,71,219,61,"stringify"],[283,80,219,70],[283,81,219,71],[283,83,219,73],[283,84,219,74],[283,85,219,75],[284,6,220,4,"console"],[284,13,220,11],[284,14,220,12,"log"],[284,17,220,15],[284,18,220,16],[284,35,220,33],[284,36,220,34],[285,4,221,2],[285,5,221,3],[285,6,221,4],[285,13,221,11,"error"],[285,18,221,16],[285,20,221,18],[286,6,222,4,"console"],[286,13,222,11],[286,14,222,12,"error"],[286,19,222,17],[286,20,222,18],[286,44,222,42],[286,46,222,44,"error"],[286,51,222,49],[286,52,222,50],[287,4,223,2],[288,2,224,0],[288,3,224,1],[290,2,226,0],[291,0,227,0],[292,0,228,0],[293,2,229,7],[293,8,229,13,"removeFromSyncQueue"],[293,27,229,32],[293,30,229,35],[293,36,229,42,"tempIds"],[293,43,229,59],[293,47,229,79],[294,4,230,2],[294,8,230,6],[295,6,231,4],[295,12,231,10,"queue"],[295,17,231,15],[295,20,231,18],[295,26,231,24,"getSyncQueue"],[295,38,231,36],[295,39,231,37],[295,40,231,38],[296,6,232,4],[296,12,232,10,"newQueue"],[296,20,232,18],[296,23,232,21,"queue"],[296,28,232,26],[296,29,232,27,"filter"],[296,35,232,33],[296,36,232,34,"item"],[296,40,232,38],[296,44,232,42],[296,45,232,43,"tempIds"],[296,52,232,50],[296,53,232,51,"includes"],[296,61,232,59],[296,62,232,60,"item"],[296,66,232,64],[296,67,232,65,"data"],[296,71,232,69],[296,72,232,70,"temp_id"],[296,79,232,77],[296,80,232,78],[296,81,232,79],[297,6,233,4],[297,12,233,10,"AsyncStorage"],[297,24,233,22],[297,25,233,22,"default"],[297,32,233,22],[297,33,233,23,"setItem"],[297,40,233,30],[297,41,233,31,"STORAGE_KEYS"],[297,53,233,43],[297,54,233,44,"SYNC_QUEUE"],[297,64,233,54],[297,66,233,56,"JSON"],[297,70,233,60],[297,71,233,61,"stringify"],[297,80,233,70],[297,81,233,71,"newQueue"],[297,89,233,79],[297,90,233,80],[297,91,233,81],[298,6,234,4,"console"],[298,13,234,11],[298,14,234,12,"log"],[298,17,234,15],[298,18,234,16],[298,25,234,23,"tempIds"],[298,32,234,30],[298,33,234,31,"length"],[298,39,234,37],[298,72,234,70],[298,73,234,71],[299,4,235,2],[299,5,235,3],[299,6,235,4],[299,13,235,11,"error"],[299,18,235,16],[299,20,235,18],[300,6,236,4,"console"],[300,13,236,11],[300,14,236,12,"error"],[300,19,236,17],[300,20,236,18],[300,49,236,47],[300,51,236,49,"error"],[300,56,236,54],[300,57,236,55],[301,4,237,2],[302,2,238,0],[302,3,238,1],[304,2,240,0],[305,2,241,0],[306,2,242,0],[308,2,244,0],[309,0,245,0],[310,0,246,0],[311,2,247,7],[311,8,247,13,"recordPresence"],[311,22,247,27],[311,25,247,30],[311,31,247,30,"recordPresence"],[311,32,248,2,"cadetId"],[311,39,248,17],[311,41,249,2,"date"],[311,45,249,14],[311,47,250,2,"status"],[311,53,250,41],[311,55,251,2,"commentaire"],[311,66,251,22],[311,71,252,54],[312,4,253,2],[312,10,253,8,"presence"],[312,18,253,33],[312,21,253,36],[313,6,254,4,"cadet_id"],[313,14,254,12],[313,16,254,14,"cadetId"],[313,23,254,21],[314,6,255,4,"date"],[314,10,255,8],[315,6,256,4,"status"],[315,12,256,10],[316,6,257,4,"commentaire"],[316,17,257,15],[317,6,258,4,"timestamp"],[317,15,258,13],[317,17,258,15],[317,21,258,19,"Date"],[317,25,258,23],[317,26,258,24],[317,27,258,25],[317,28,258,26,"toISOString"],[317,39,258,37],[317,40,258,38],[317,41,258,39],[318,6,259,4,"temp_id"],[318,13,259,11],[318,15,259,13],[318,27,259,25,"Date"],[318,31,259,29],[318,32,259,30,"now"],[318,35,259,33],[318,36,259,34],[318,37,259,35],[318,41,259,39,"Math"],[318,45,259,43],[318,46,259,44,"random"],[318,52,259,50],[318,53,259,51],[318,54,259,52],[318,55,259,53,"toString"],[318,63,259,61],[318,64,259,62],[318,66,259,64],[318,67,259,65],[318,68,259,66,"substr"],[318,74,259,72],[318,75,259,73],[318,76,259,74],[318,78,259,76],[318,79,259,77],[318,80,259,78],[319,4,260,2],[319,5,260,3],[321,4,262,2],[322,4,263,2],[322,8,263,6],[322,9,263,7,"isOnline"],[322,17,263,15],[322,19,263,17],[323,6,264,4],[323,12,264,10,"addToSyncQueue"],[323,26,264,24],[323,27,264,25],[324,8,265,6,"type"],[324,12,265,10],[324,14,265,12],[324,24,265,22],[325,8,266,6,"data"],[325,12,266,10],[325,14,266,12,"presence"],[325,22,266,20],[326,8,267,6,"attempts"],[326,16,267,14],[326,18,267,16],[326,19,267,17],[327,8,268,6,"created_at"],[327,18,268,16],[327,20,268,18],[327,24,268,22,"Date"],[327,28,268,26],[327,29,268,27],[327,30,268,28],[327,31,268,29,"toISOString"],[327,42,268,40],[327,43,268,41],[328,6,269,4],[328,7,269,5],[328,8,269,6],[329,6,270,4],[329,13,270,11],[330,8,270,13,"success"],[330,15,270,20],[330,17,270,22],[330,21,270,26],[331,8,270,28,"offline"],[331,15,270,35],[331,17,270,37],[332,6,270,42],[332,7,270,43],[333,4,271,2],[335,4,273,2],[336,4,274,2],[337,4,275,2],[337,11,275,9],[338,6,275,11,"success"],[338,13,275,18],[338,15,275,20],[338,19,275,24],[339,6,275,26,"offline"],[339,13,275,33],[339,15,275,35],[340,4,275,41],[340,5,275,42],[341,2,276,0],[341,3,276,1],[343,2,278,0],[344,0,279,0],[345,0,280,0],[346,2,281,7],[346,8,281,13,"recordUniformInspection"],[346,31,281,36],[346,34,281,39],[346,40,281,39,"recordUniformInspection"],[346,41,282,2,"cadetId"],[346,48,282,17],[346,50,283,2,"date"],[346,54,283,14],[346,56,284,2,"uniformType"],[346,67,284,21],[346,69,285,2,"criteriaScores"],[346,83,285,49],[346,85,286,2,"commentaire"],[346,96,286,22],[346,101,287,54],[347,4,288,2],[347,10,288,8,"inspection"],[347,20,288,37],[347,23,288,40],[348,6,289,4,"cadet_id"],[348,14,289,12],[348,16,289,14,"cadetId"],[348,23,289,21],[349,6,290,4,"date"],[349,10,290,8],[350,6,291,4,"uniform_type"],[350,18,291,16],[350,20,291,18,"uniformType"],[350,31,291,29],[351,6,292,4,"criteria_scores"],[351,21,292,19],[351,23,292,21,"criteriaScores"],[351,37,292,35],[352,6,293,4,"commentaire"],[352,17,293,15],[353,6,294,4,"timestamp"],[353,15,294,13],[353,17,294,15],[353,21,294,19,"Date"],[353,25,294,23],[353,26,294,24],[353,27,294,25],[353,28,294,26,"toISOString"],[353,39,294,37],[353,40,294,38],[353,41,294,39],[354,6,295,4,"temp_id"],[354,13,295,11],[354,15,295,13],[354,29,295,27,"Date"],[354,33,295,31],[354,34,295,32,"now"],[354,37,295,35],[354,38,295,36],[354,39,295,37],[354,43,295,41,"Math"],[354,47,295,45],[354,48,295,46,"random"],[354,54,295,52],[354,55,295,53],[354,56,295,54],[354,57,295,55,"toString"],[354,65,295,63],[354,66,295,64],[354,68,295,66],[354,69,295,67],[354,70,295,68,"substr"],[354,76,295,74],[354,77,295,75],[354,78,295,76],[354,80,295,78],[354,81,295,79],[354,82,295,80],[355,4,296,2],[355,5,296,3],[356,4,298,2,"console"],[356,11,298,9],[356,12,298,10,"log"],[356,15,298,13],[356,16,298,14],[356,52,298,50],[356,54,298,52,"isOnline"],[356,62,298,60],[356,65,298,63],[356,75,298,73],[356,78,298,76],[356,90,298,88],[356,91,298,89],[358,4,300,2],[359,4,301,2],[359,8,301,6],[359,9,301,7,"isOnline"],[359,17,301,15],[359,19,301,17],[360,6,302,4],[360,12,302,10,"addToSyncQueue"],[360,26,302,24],[360,27,302,25],[361,8,303,6,"type"],[361,12,303,10],[361,14,303,12],[361,26,303,24],[362,8,304,6,"data"],[362,12,304,10],[362,14,304,12,"inspection"],[362,24,304,22],[363,8,305,6,"attempts"],[363,16,305,14],[363,18,305,16],[363,19,305,17],[364,8,306,6,"created_at"],[364,18,306,16],[364,20,306,18],[364,24,306,22,"Date"],[364,28,306,26],[364,29,306,27],[364,30,306,28],[364,31,306,29,"toISOString"],[364,42,306,40],[364,43,306,41],[365,6,307,4],[365,7,307,5],[365,8,307,6],[366,6,308,4,"console"],[366,13,308,11],[366,14,308,12,"log"],[366,17,308,15],[366,18,308,16],[366,71,308,69],[366,72,308,70],[367,6,309,4],[367,13,309,11],[368,8,309,13,"success"],[368,15,309,20],[368,17,309,22],[368,21,309,26],[369,8,309,28,"offline"],[369,15,309,35],[369,17,309,37],[370,6,309,42],[370,7,309,43],[371,4,310,2],[373,4,312,2],[374,4,313,2],[374,11,313,9],[375,6,313,11,"success"],[375,13,313,18],[375,15,313,20],[375,19,313,24],[376,6,313,26,"offline"],[376,13,313,33],[376,15,313,35],[377,4,313,41],[377,5,313,42],[378,2,314,0],[378,3,314,1],[380,2,316,0],[381,2,317,0],[382,2,318,0],[384,2,320,0],[385,0,321,0],[386,0,322,0],[387,2,323,7],[387,8,323,13,"syncQueue"],[387,17,323,22],[387,20,323,25],[387,26,323,25,"syncQueue"],[387,27,324,2,"apiUrl"],[387,33,324,16],[387,35,325,2,"token"],[387,40,325,15],[387,42,326,2,"onProgress"],[387,52,326,55],[387,57,327,90],[388,4,328,2],[388,8,328,6],[389,6,329,4],[390,6,330,4],[390,12,330,10,"isSyncing"],[390,21,330,19],[390,24,330,22],[390,30,330,28,"AsyncStorage"],[390,42,330,40],[390,43,330,40,"default"],[390,50,330,40],[390,51,330,41,"getItem"],[390,58,330,48],[390,59,330,49,"STORAGE_KEYS"],[390,71,330,61],[390,72,330,62,"IS_SYNCING"],[390,82,330,72],[390,83,330,73],[391,6,331,4],[391,10,331,8,"isSyncing"],[391,19,331,17],[391,24,331,22],[391,30,331,28],[391,32,331,30],[392,8,332,6,"console"],[392,15,332,13],[392,16,332,14,"log"],[392,19,332,17],[392,20,332,18],[392,54,332,52],[392,55,332,53],[393,8,333,6],[393,15,333,13],[394,10,333,15,"success"],[394,17,333,22],[394,19,333,24],[394,24,333,29],[395,10,333,31,"synced"],[395,16,333,37],[395,18,333,39],[395,19,333,40],[396,10,333,42,"errors"],[396,16,333,48],[396,18,333,50],[397,8,333,52],[397,9,333,53],[398,6,334,4],[400,6,336,4],[401,6,337,4],[401,12,337,10,"AsyncStorage"],[401,24,337,22],[401,25,337,22,"default"],[401,32,337,22],[401,33,337,23,"setItem"],[401,40,337,30],[401,41,337,31,"STORAGE_KEYS"],[401,53,337,43],[401,54,337,44,"IS_SYNCING"],[401,64,337,54],[401,66,337,56],[401,72,337,62],[401,73,337,63],[402,6,339,4],[402,12,339,10,"queue"],[402,17,339,15],[402,20,339,18],[402,26,339,24,"getSyncQueue"],[402,38,339,36],[402,39,339,37],[402,40,339,38],[403,6,341,4],[403,10,341,8,"queue"],[403,15,341,13],[403,16,341,14,"length"],[403,22,341,20],[403,27,341,25],[403,28,341,26],[403,30,341,28],[404,8,342,6],[404,14,342,12,"AsyncStorage"],[404,26,342,24],[404,27,342,24,"default"],[404,34,342,24],[404,35,342,25,"setItem"],[404,42,342,32],[404,43,342,33,"STORAGE_KEYS"],[404,55,342,45],[404,56,342,46,"IS_SYNCING"],[404,66,342,56],[404,68,342,58],[404,75,342,65],[404,76,342,66],[405,8,343,6],[405,15,343,13],[406,10,343,15,"success"],[406,17,343,22],[406,19,343,24],[406,23,343,28],[407,10,343,30,"synced"],[407,16,343,36],[407,18,343,38],[407,19,343,39],[408,10,343,41,"errors"],[408,16,343,47],[408,18,343,49],[409,8,343,51],[409,9,343,52],[410,6,344,4],[411,6,346,4,"console"],[411,13,346,11],[411,14,346,12,"log"],[411,17,346,15],[411,18,346,16],[411,43,346,41,"queue"],[411,48,346,46],[411,49,346,47,"length"],[411,55,346,53],[411,69,346,67],[411,70,346,68],[413,6,348,4],[414,6,349,4],[414,12,349,10,"presences"],[414,21,349,38],[414,24,349,41],[414,26,349,43],[415,6,350,4],[415,12,350,10,"inspections"],[415,23,350,42],[415,26,350,45],[415,28,350,47],[416,6,352,4,"queue"],[416,11,352,9],[416,12,352,10,"forEach"],[416,19,352,17],[416,20,352,18,"item"],[416,24,352,22],[416,28,352,26],[417,8,353,6],[417,12,353,10,"item"],[417,16,353,14],[417,17,353,15,"type"],[417,21,353,19],[417,26,353,24],[417,36,353,34],[417,38,353,36],[418,10,354,8,"presences"],[418,19,354,17],[418,20,354,18,"push"],[418,24,354,22],[418,25,354,23,"item"],[418,29,354,27],[418,30,354,28,"data"],[418,34,354,51],[418,35,354,52],[419,8,355,6],[419,9,355,7],[419,15,355,13],[419,19,355,17,"item"],[419,23,355,21],[419,24,355,22,"type"],[419,28,355,26],[419,33,355,31],[419,45,355,43],[419,47,355,45],[420,10,356,8,"inspections"],[420,21,356,19],[420,22,356,20,"push"],[420,26,356,24],[420,27,356,25,"item"],[420,31,356,29],[420,32,356,30,"data"],[420,36,356,55],[420,37,356,56],[421,8,357,6],[422,6,358,4],[422,7,358,5],[422,8,358,6],[424,6,360,4],[425,6,361,4],[425,12,361,10,"response"],[425,20,361,18],[425,23,361,21],[425,29,361,27,"fetch"],[425,34,361,32],[425,35,361,33],[425,38,361,36,"apiUrl"],[425,44,361,42],[425,61,361,59],[425,63,361,61],[426,8,362,6,"method"],[426,14,362,12],[426,16,362,14],[426,22,362,20],[427,8,363,6,"headers"],[427,15,363,13],[427,17,363,15],[428,10,364,8],[428,24,364,22],[428,26,364,24],[428,44,364,42],[429,10,365,8],[429,25,365,23],[429,27,365,25],[429,37,365,35,"token"],[429,42,365,40],[430,8,366,6],[430,9,366,7],[431,8,367,6,"body"],[431,12,367,10],[431,14,367,12,"JSON"],[431,18,367,16],[431,19,367,17,"stringify"],[431,28,367,26],[431,29,367,27],[432,10,367,29,"presences"],[432,19,367,38],[433,10,367,40,"inspections"],[434,8,367,52],[434,9,367,53],[435,6,368,4],[435,7,368,5],[435,8,368,6],[436,6,370,4],[436,10,370,8],[436,11,370,9,"response"],[436,19,370,17],[436,20,370,18,"ok"],[436,22,370,20],[436,24,370,22],[437,8,371,6],[437,14,371,12],[437,18,371,16,"Error"],[437,23,371,21],[437,24,371,22],[437,47,371,45],[437,48,371,46],[438,6,372,4],[439,6,374,4],[439,12,374,10,"result"],[439,18,374,16],[439,21,374,19],[439,27,374,25,"response"],[439,35,374,33],[439,36,374,34,"json"],[439,40,374,38],[439,41,374,39],[439,42,374,40],[441,6,376,4],[442,6,377,4],[442,12,377,10,"errors"],[442,18,377,16],[442,21,377,19],[442,22,378,6],[442,25,378,9,"result"],[442,31,378,15],[442,32,378,16,"presence_results"],[442,48,378,32],[442,49,378,33,"filter"],[442,55,378,39],[442,56,378,41,"r"],[442,57,378,47],[442,61,378,52],[442,62,378,53,"r"],[442,63,378,54],[442,64,378,55,"success"],[442,71,378,62],[442,72,378,63],[442,74,379,6],[442,77,379,9,"result"],[442,83,379,15],[442,84,379,16,"inspection_results"],[442,102,379,34],[442,103,379,35,"filter"],[442,109,379,41],[442,110,379,43,"r"],[442,111,379,49],[442,115,379,54],[442,116,379,55,"r"],[442,117,379,56],[442,118,379,57,"success"],[442,125,379,64],[442,126,379,65],[442,127,380,5],[443,6,381,4],[443,10,381,8,"errors"],[443,16,381,14],[443,17,381,15,"length"],[443,23,381,21],[443,26,381,24],[443,27,381,25],[443,29,381,27],[444,8,382,6,"console"],[444,15,382,13],[444,16,382,14,"log"],[444,19,382,17],[444,20,382,18],[444,51,382,49],[444,53,382,51,"JSON"],[444,57,382,55],[444,58,382,56,"stringify"],[444,67,382,65],[444,68,382,66,"errors"],[444,74,382,72],[444,76,382,74],[444,80,382,78],[444,82,382,80],[444,83,382,81],[444,84,382,82],[444,85,382,83],[445,6,383,4],[447,6,385,4],[448,6,386,4],[448,12,386,10,"successTempIds"],[448,26,386,24],[448,29,386,27],[448,30,387,6],[448,33,387,9,"result"],[448,39,387,15],[448,40,387,16,"presence_results"],[448,56,387,32],[448,57,387,33,"filter"],[448,63,387,39],[448,64,387,41,"r"],[448,65,387,47],[448,69,387,52,"r"],[448,70,387,53],[448,71,387,54,"success"],[448,78,387,61],[448,79,387,62],[448,80,387,63,"map"],[448,83,387,66],[448,84,387,68,"r"],[448,85,387,74],[448,89,387,79,"r"],[448,90,387,80],[448,91,387,81,"temp_id"],[448,98,387,88],[448,99,387,89],[448,101,388,6],[448,104,388,9,"result"],[448,110,388,15],[448,111,388,16,"inspection_results"],[448,129,388,34],[448,130,388,35,"filter"],[448,136,388,41],[448,137,388,43,"r"],[448,138,388,49],[448,142,388,54,"r"],[448,143,388,55],[448,144,388,56,"success"],[448,151,388,63],[448,152,388,64],[448,153,388,65,"map"],[448,156,388,68],[448,157,388,70,"r"],[448,158,388,76],[448,162,388,81,"r"],[448,163,388,82],[448,164,388,83,"temp_id"],[448,171,388,90],[448,172,388,91],[448,173,389,5],[449,6,391,4],[449,12,391,10,"removeFromSyncQueue"],[449,31,391,29],[449,32,391,30,"successTempIds"],[449,46,391,44],[449,47,391,45],[451,6,393,4],[452,6,394,4],[452,12,394,10,"downloadCacheData"],[452,29,394,27],[452,30,394,28,"apiUrl"],[452,36,394,34],[452,38,394,36,"token"],[452,43,394,41],[452,44,394,42],[453,6,396,4],[453,12,396,10,"AsyncStorage"],[453,24,396,22],[453,25,396,22,"default"],[453,32,396,22],[453,33,396,23,"setItem"],[453,40,396,30],[453,41,396,31,"STORAGE_KEYS"],[453,53,396,43],[453,54,396,44,"IS_SYNCING"],[453,64,396,54],[453,66,396,56],[453,73,396,63],[453,74,396,64],[454,6,398,4,"console"],[454,13,398,11],[454,14,398,12,"log"],[454,17,398,15],[454,18,398,16],[454,49,398,47,"result"],[454,55,398,53],[454,56,398,54,"total_synced"],[454,68,398,66],[454,86,398,84,"result"],[454,92,398,90],[454,93,398,91,"total_errors"],[454,105,398,103],[454,115,398,113],[454,116,398,114],[455,6,400,4],[455,13,400,11],[456,8,401,6,"success"],[456,15,401,13],[456,17,401,15],[456,21,401,19],[457,8,402,6,"synced"],[457,14,402,12],[457,16,402,14,"result"],[457,22,402,20],[457,23,402,21,"total_synced"],[457,35,402,33],[458,8,403,6,"errors"],[458,14,403,12],[458,16,403,14,"result"],[458,22,403,20],[458,23,403,21,"total_errors"],[458,35,403,33],[459,8,404,6,"errorDetails"],[459,20,404,18],[459,22,404,20,"errors"],[459,28,404,26],[459,29,404,27,"length"],[459,35,404,33],[459,38,404,36],[459,39,404,37],[459,42,404,40,"errors"],[459,48,404,46],[459,51,404,49,"undefined"],[460,6,405,4],[460,7,405,5],[461,4,406,2],[461,5,406,3],[461,6,406,4],[461,13,406,11,"error"],[461,18,406,16],[461,20,406,18],[462,6,407,4,"console"],[462,13,407,11],[462,14,407,12,"error"],[462,19,407,17],[462,20,407,18],[462,47,407,45],[462,49,407,47,"error"],[462,54,407,52],[462,55,407,53],[463,6,408,4],[463,12,408,10,"AsyncStorage"],[463,24,408,22],[463,25,408,22,"default"],[463,32,408,22],[463,33,408,23,"setItem"],[463,40,408,30],[463,41,408,31,"STORAGE_KEYS"],[463,53,408,43],[463,54,408,44,"IS_SYNCING"],[463,64,408,54],[463,66,408,56],[463,73,408,63],[463,74,408,64],[464,6,409,4],[464,13,409,11],[465,8,409,13,"success"],[465,15,409,20],[465,17,409,22],[465,22,409,27],[466,8,409,29,"synced"],[466,14,409,35],[466,16,409,37],[466,17,409,38],[467,8,409,40,"errors"],[467,14,409,46],[467,16,409,48],[468,6,409,50],[468,7,409,51],[469,4,410,2],[470,2,411,0],[470,3,411,1],[472,2,413,0],[473,0,414,0],[474,0,415,0],[475,2,416,0],[475,8,416,6,"syncQueueAutomatically"],[475,30,416,28],[475,33,416,31],[475,39,416,31,"syncQueueAutomatically"],[475,40,416,31],[475,45,416,43],[476,4,417,2],[477,4,418,2,"console"],[477,11,418,9],[477,12,418,10,"log"],[477,15,418,13],[477,16,418,14],[477,59,418,57],[477,60,418,58],[478,2,419,0],[478,3,419,1],[480,2,421,0],[481,0,422,0],[482,0,423,0],[483,2,424,7],[483,8,424,13,"triggerAutoSync"],[483,23,424,28],[483,26,424,31],[483,32,424,31,"triggerAutoSync"],[483,33,424,38,"apiUrl"],[483,39,424,52],[483,41,424,54,"token"],[483,46,424,67],[483,51,424,72],[484,4,425,2],[484,8,425,6,"isOnline"],[484,16,425,14],[484,18,425,16],[485,6,426,4],[485,12,426,10,"syncQueue"],[485,21,426,19],[485,22,426,20,"apiUrl"],[485,28,426,26],[485,30,426,28,"token"],[485,35,426,33],[485,36,426,34],[486,4,427,2],[487,2,428,0],[487,3,428,1],[488,0,428,2],[488,3]],"functionMap":{"names":["<global>","initNetworkListener","NetInfo.addEventListener$argument_0","connectionListeners.forEach$argument_0","NetInfo.fetch.then$argument_0","addConnectionListener","removeConnectionListener","connectionListeners.filter$argument_0","getConnectionStatus","saveCacheData","getCacheData","downloadCacheData","addToSyncQueue","getSyncQueue","clearSyncQueue","removeFromSyncQueue","queue.filter$argument_0","recordPresence","recordUniformInspection","syncQueue","queue.forEach$argument_0","result.presence_results.filter$argument_0","result.inspection_results.filter$argument_0","result.presence_results.filter.map$argument_0","result.inspection_results.filter.map$argument_0","syncQueueAutomatically","triggerAutoSync"],"mappings":"AAA;mCCiE;2BCC;kCCO,0BD;kCCK,2BD;GDE;uBGG;GHG;CDC;qCKK;CLE;wCMK;mDCC,mBD;CNC;mCQK;CRE;6BSS;CTU;4BUK;CVqB;iCWK;CXmB;8BYS;CZY;4BaK;CbQ;8BcK;CdO;mCeK;kCCG,4CD;CfM;8BiBS;CjB6B;uCkBK;ClBiC;yBmBS;kBC6B;KDM;wCEoB,sBF;0CGC,sBH;wCEQ,qBF,MI,qBJ;0CGC,qBH,MK,qBL;CnBuB;+ByBK;CzBG;+B0BK;C1BI"},"hasCjsExports":false},"type":"js/module"}]}