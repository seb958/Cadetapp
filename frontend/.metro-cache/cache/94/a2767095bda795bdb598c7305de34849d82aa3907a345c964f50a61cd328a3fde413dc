{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":204},"end":{"line":10,"column":55,"index":259}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":260},"end":{"line":11,"column":38,"index":298}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./internal/defaultConfiguration","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":299},"end":{"line":12,"column":68,"index":367}}],"key":"G1uCgDScaM3S5X00e27Zr8lG1Vk=","exportNames":["*"],"imports":1}},{"name":"./internal/nativeInterface","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":368},"end":{"line":13,"column":57,"index":425}}],"key":"Sp4VfNT4MoXGzcKDwaXut8oRUXA=","exportNames":["*"],"imports":1}},{"name":"./internal/state","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":426},"end":{"line":14,"column":37,"index":463}}],"key":"AJQfTgXn0K20r74TcE/30yPPOOA=","exportNames":["*"],"imports":1}},{"name":"./internal/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":464},"end":{"line":15,"column":42,"index":506}}],"key":"uIQB1mLKV8iOTHySJkPsqOCQMhM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.configure = configure;\n  exports.fetch = fetch;\n  exports.refresh = refresh;\n  exports.addEventListener = addEventListener;\n  exports.useNetInfo = useNetInfo;\n  exports.useNetInfoInstance = useNetInfoInstance;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _internalDefaultConfiguration = require(_dependencyMap[3], \"./internal/defaultConfiguration\");\n  var DEFAULT_CONFIGURATION = _interopDefault(_internalDefaultConfiguration);\n  var _internalNativeInterface = require(_dependencyMap[4], \"./internal/nativeInterface\");\n  var NativeInterface = _interopDefault(_internalNativeInterface);\n  var _internalState = require(_dependencyMap[5], \"./internal/state\");\n  var State = _interopDefault(_internalState);\n  var _internalTypes = require(_dependencyMap[6], \"./internal/types\");\n  Object.keys(_internalTypes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _internalTypes[k];\n        }\n      });\n    }\n  });\n  var Types = _interopNamespace(_internalTypes);\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // Stores the currently used configuration\n  var _configuration = DEFAULT_CONFIGURATION.default;\n\n  // Stores the singleton reference to the state manager\n  var _state = null;\n  var createState = () => {\n    return new State.default(_configuration);\n  };\n\n  // Track ongoing requests\n  var isRequestInProgress = false;\n  var requestQueue = [];\n\n  /**\n   * Configures the library with the given configuration. Note that calling this will stop all\n   * previously added listeners from being called again. It is best to call this right when your\n   * application is started to avoid issues. The configuration sets up a global singleton instance.\n   *\n   * @param configuration The new configuration to set.\n   */\n  function configure(configuration) {\n    _configuration = {\n      ...DEFAULT_CONFIGURATION.default,\n      ...configuration\n    };\n    if (_state) {\n      _state.tearDown();\n      _state = createState();\n    }\n    if (_reactNative.Platform.OS === 'ios') {\n      NativeInterface.default.configure(configuration);\n    }\n  }\n\n  /**\n   * Returns a `Promise` that resolves to a `NetInfoState` object.\n   * This function operates on the global singleton instance configured using `configure()`\n   *\n   * @param [requestedInterface] interface from which to obtain the information\n   *\n   * @returns A Promise which contains the current connection state.\n   */\n  function fetch(requestedInterface) {\n    if (!_state) {\n      _state = createState();\n    }\n    return _state.latest(requestedInterface);\n  }\n\n  /**\n   * Force-refreshes the internal state of the global singleton managed by this library.\n   *\n   * @returns A Promise which contains the updated connection state.\n   */\n  function refresh() {\n    if (!_state) {\n      _state = createState();\n    }\n\n    // If a request is already in progress, return a promise that will resolve when the current request finishes\n    if (isRequestInProgress) {\n      return new Promise(resolve => {\n        requestQueue.push(resolve);\n      });\n    }\n    isRequestInProgress = true;\n    return _state._fetchCurrentState().then(result => {\n      requestQueue.forEach(resolve => resolve(result));\n      requestQueue = [];\n      return result;\n    }).finally(() => {\n      isRequestInProgress = false;\n    });\n  }\n\n  /**\n   * Subscribe to the global singleton's connection information. The callback is called with a parameter of type\n   * [`NetInfoState`](README.md#netinfostate) whenever the connection state changes. Your listener\n   * will be called with the latest information soon after you subscribe and then with any\n   * subsequent changes afterwards. You should not assume that the listener is called in the same\n   * way across devices or platforms.\n   *\n   * @param listener The listener which is called when the network state changes.\n   *\n   * @returns A function which can be called to unsubscribe.\n   */\n  function addEventListener(listener) {\n    if (!_state) {\n      _state = createState();\n    }\n    _state.add(listener);\n    return () => {\n      _state && _state.remove(listener);\n    };\n  }\n\n  /**\n   * A React Hook into this library's singleton which updates when the connection state changes.\n   *\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns The connection state.\n   */\n  function useNetInfo(configuration) {\n    if (configuration) {\n      configure(configuration);\n    }\n    var _useState = (0, _react.useState)({\n        type: Types.NetInfoStateType.unknown,\n        isConnected: null,\n        isInternetReachable: null,\n        details: null\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      netInfo = _useState2[0],\n      setNetInfo = _useState2[1];\n    (0, _react.useEffect)(() => {\n      var unsubscribe = addEventListener(setNetInfo);\n      return () => unsubscribe();\n    }, []);\n    return netInfo;\n  }\n\n  /**\n   * A React Hook which manages an isolated instance of the network info manager.\n   * This is not a hook into a singleton shared state. NetInfo.configure, NetInfo.addEventListener,\n   * NetInfo.fetch, NetInfo.refresh are performed on a global singleton and have no affect on this hook.\n   * @param {boolean} isPaused - Pause the internal network checks.\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns the netInfo state and a refresh function\n   */\n  function useNetInfoInstance() {\n    var isPaused = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var configuration = arguments.length > 1 ? arguments[1] : undefined;\n    var _useState3 = (0, _react.useState)(),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      networkInfoManager = _useState4[0],\n      setNetworkInfoManager = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        type: Types.NetInfoStateType.unknown,\n        isConnected: null,\n        isInternetReachable: null,\n        details: null\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      netInfo = _useState6[0],\n      setNetInfo = _useState6[1];\n    (0, _react.useEffect)(() => {\n      if (isPaused) {\n        return;\n      }\n      var config = {\n        ...DEFAULT_CONFIGURATION.default,\n        ...configuration\n      };\n      var state = new State.default(config);\n      setNetworkInfoManager(state);\n      state.add(setNetInfo);\n      return state.tearDown;\n    }, [isPaused, configuration]);\n    var refresh = (0, _react.useCallback)(() => {\n      if (networkInfoManager && !isRequestInProgress) {\n        isRequestInProgress = true;\n        networkInfoManager._fetchCurrentState().finally(() => {\n          isRequestInProgress = false;\n        });\n      }\n    }, [networkInfoManager]);\n    return {\n      netInfo,\n      refresh\n    };\n  }\n  var _default = {\n    configure,\n    fetch,\n    refresh,\n    addEventListener,\n    useNetInfo,\n    useNetInfoInstance\n  };\n});","lineCount":252,"map":[[27,2,205,0,"Object"],[27,8,205,0],[27,9,205,0,"defineProperty"],[27,23,205,0],[27,24,205,0,"exports"],[27,31,205,0],[28,4,205,0,"enumerable"],[28,14,205,0],[29,4,205,0,"get"],[29,7,205,0],[29,18,205,0,"get"],[29,19,205,0],[30,6,205,0],[30,13,205,0,"_default"],[30,21,205,0],[31,4,205,0],[32,2,205,0],[33,2,37,0,"exports"],[33,9,37,0],[33,10,37,0,"configure"],[33,19,37,0],[33,22,37,0,"configure"],[33,31,37,0],[34,2,63,0,"exports"],[34,9,63,0],[34,10,63,0,"fetch"],[34,15,63,0],[34,18,63,0,"fetch"],[34,23,63,0],[35,2,77,0,"exports"],[35,9,77,0],[35,10,77,0,"refresh"],[35,17,77,0],[35,20,77,0,"refresh"],[35,27,77,0],[36,2,111,0,"exports"],[36,9,111,0],[36,10,111,0,"addEventListener"],[36,26,111,0],[36,29,111,0,"addEventListener"],[36,45,111,0],[37,2,131,0,"exports"],[37,9,131,0],[37,10,131,0,"useNetInfo"],[37,20,131,0],[37,23,131,0,"useNetInfo"],[37,33,131,0],[38,2,162,0,"exports"],[38,9,162,0],[38,10,162,0,"useNetInfoInstance"],[38,28,162,0],[38,31,162,0,"useNetInfoInstance"],[38,49,162,0],[39,2,201,1],[39,6,201,1,"_babelRuntimeHelpersSlicedToArray"],[39,39,201,1],[39,42,201,1,"require"],[39,49,201,1],[39,50,201,1,"_dependencyMap"],[39,64,201,1],[40,2,201,1],[40,6,201,1,"_slicedToArray"],[40,20,201,1],[40,23,201,1,"_interopDefault"],[40,38,201,1],[40,39,201,1,"_babelRuntimeHelpersSlicedToArray"],[40,72,201,1],[41,2,10,0],[41,6,10,0,"_react"],[41,12,10,0],[41,15,10,0,"require"],[41,22,10,0],[41,23,10,0,"_dependencyMap"],[41,37,10,0],[42,2,11,0],[42,6,11,0,"_reactNative"],[42,18,11,0],[42,21,11,0,"require"],[42,28,11,0],[42,29,11,0,"_dependencyMap"],[42,43,11,0],[43,2,12,0],[43,6,12,0,"_internalDefaultConfiguration"],[43,35,12,0],[43,38,12,0,"require"],[43,45,12,0],[43,46,12,0,"_dependencyMap"],[43,60,12,0],[44,2,12,0],[44,6,12,0,"DEFAULT_CONFIGURATION"],[44,27,12,0],[44,30,12,0,"_interopDefault"],[44,45,12,0],[44,46,12,0,"_internalDefaultConfiguration"],[44,75,12,0],[45,2,13,0],[45,6,13,0,"_internalNativeInterface"],[45,30,13,0],[45,33,13,0,"require"],[45,40,13,0],[45,41,13,0,"_dependencyMap"],[45,55,13,0],[46,2,13,0],[46,6,13,0,"NativeInterface"],[46,21,13,0],[46,24,13,0,"_interopDefault"],[46,39,13,0],[46,40,13,0,"_internalNativeInterface"],[46,64,13,0],[47,2,14,0],[47,6,14,0,"_internalState"],[47,20,14,0],[47,23,14,0,"require"],[47,30,14,0],[47,31,14,0,"_dependencyMap"],[47,45,14,0],[48,2,14,0],[48,6,14,0,"State"],[48,11,14,0],[48,14,14,0,"_interopDefault"],[48,29,14,0],[48,30,14,0,"_internalState"],[48,44,14,0],[49,2,15,0],[49,6,15,0,"_internalTypes"],[49,20,15,0],[49,23,15,0,"require"],[49,30,15,0],[49,31,15,0,"_dependencyMap"],[49,45,15,0],[50,2,203,0,"Object"],[50,8,203,0],[50,9,203,0,"keys"],[50,13,203,0],[50,14,203,0,"_internalTypes"],[50,28,203,0],[50,30,203,0,"forEach"],[50,37,203,0],[50,48,203,0,"k"],[50,49,203,0],[51,4,203,0],[51,8,203,0,"k"],[51,9,203,0],[51,28,203,0,"Object"],[51,34,203,0],[51,35,203,0,"prototype"],[51,44,203,0],[51,45,203,0,"hasOwnProperty"],[51,59,203,0],[51,60,203,0,"call"],[51,64,203,0],[51,65,203,0,"exports"],[51,72,203,0],[51,74,203,0,"k"],[51,75,203,0],[52,6,203,0,"Object"],[52,12,203,0],[52,13,203,0,"defineProperty"],[52,27,203,0],[52,28,203,0,"exports"],[52,35,203,0],[52,37,203,0,"k"],[52,38,203,0],[53,8,203,0,"enumerable"],[53,18,203,0],[54,8,203,0,"get"],[54,11,203,0],[54,22,203,0,"get"],[54,23,203,0],[55,10,203,0],[55,17,203,0,"_internalTypes"],[55,31,203,0],[55,32,203,0,"k"],[55,33,203,0],[56,8,203,0],[57,6,203,0],[58,4,203,0],[59,2,203,0],[60,2,15,0],[60,6,15,0,"Types"],[60,11,15,0],[60,14,15,0,"_interopNamespace"],[60,31,15,0],[60,32,15,0,"_internalTypes"],[60,46,15,0],[61,2,1,0],[62,0,2,0],[63,0,3,0],[64,0,4,0],[65,0,5,0],[66,0,6,0],[67,0,7,0],[68,0,8,0],[70,2,17,0],[71,2,18,0],[71,6,18,4,"_configuration"],[71,20,18,18],[71,23,18,21,"DEFAULT_CONFIGURATION"],[71,44,18,42],[71,45,18,42,"default"],[71,52,18,42],[73,2,20,0],[74,2,21,0],[74,6,21,4,"_state"],[74,12,21,24],[74,15,21,27],[74,19,21,31],[75,2,22,0],[75,6,22,6,"createState"],[75,17,22,17],[75,20,22,20,"createState"],[75,21,22,20],[75,26,22,33],[76,4,23,2],[76,11,23,9],[76,15,23,13,"State"],[76,20,23,18],[76,21,23,18,"default"],[76,28,23,18],[76,29,23,19,"_configuration"],[76,43,23,33],[76,44,23,34],[77,2,24,0],[77,3,24,1],[79,2,26,0],[80,2,27,0],[80,6,27,4,"isRequestInProgress"],[80,25,27,23],[80,28,27,26],[80,33,27,31],[81,2,28,0],[81,6,28,4,"requestQueue"],[81,18,28,57],[81,21,28,60],[81,23,28,62],[83,2,30,0],[84,0,31,0],[85,0,32,0],[86,0,33,0],[87,0,34,0],[88,0,35,0],[89,0,36,0],[90,2,37,7],[90,11,37,16,"configure"],[90,20,37,25,"configure"],[90,21,38,2,"configuration"],[90,34,38,52],[90,36,39,8],[91,4,40,2,"_configuration"],[91,18,40,16],[91,21,40,19],[92,6,41,4],[92,9,41,7,"DEFAULT_CONFIGURATION"],[92,30,41,28],[92,31,41,28,"default"],[92,38,41,28],[93,6,42,4],[93,9,42,7,"configuration"],[94,4,43,2],[94,5,43,3],[95,4,45,2],[95,8,45,6,"_state"],[95,14,45,12],[95,16,45,14],[96,6,46,4,"_state"],[96,12,46,10],[96,13,46,11,"tearDown"],[96,21,46,19],[96,22,46,20],[96,23,46,21],[97,6,47,4,"_state"],[97,12,47,10],[97,15,47,13,"createState"],[97,26,47,24],[97,27,47,25],[97,28,47,26],[98,4,48,2],[99,4,50,2],[99,8,50,6,"Platform"],[99,20,50,14],[99,21,50,14,"Platform"],[99,29,50,14],[99,30,50,15,"OS"],[99,32,50,17],[99,37,50,22],[99,42,50,27],[99,44,50,29],[100,6,51,4,"NativeInterface"],[100,21,51,19],[100,22,51,19,"default"],[100,29,51,19],[100,30,51,20,"configure"],[100,39,51,29],[100,40,51,30,"configuration"],[100,53,51,43],[100,54,51,44],[101,4,52,2],[102,2,53,0],[104,2,55,0],[105,0,56,0],[106,0,57,0],[107,0,58,0],[108,0,59,0],[109,0,60,0],[110,0,61,0],[111,0,62,0],[112,2,63,7],[112,11,63,16,"fetch"],[112,16,63,21,"fetch"],[112,17,64,2,"requestedInterface"],[112,35,64,29],[112,37,65,31],[113,4,66,2],[113,8,66,6],[113,9,66,7,"_state"],[113,15,66,13],[113,17,66,15],[114,6,67,4,"_state"],[114,12,67,10],[114,15,67,13,"createState"],[114,26,67,24],[114,27,67,25],[114,28,67,26],[115,4,68,2],[116,4,69,2],[116,11,69,9,"_state"],[116,17,69,15],[116,18,69,16,"latest"],[116,24,69,22],[116,25,69,23,"requestedInterface"],[116,43,69,41],[116,44,69,42],[117,2,70,0],[119,2,72,0],[120,0,73,0],[121,0,74,0],[122,0,75,0],[123,0,76,0],[124,2,77,7],[124,11,77,16,"refresh"],[124,18,77,23,"refresh"],[124,19,77,23],[124,21,77,55],[125,4,78,2],[125,8,78,6],[125,9,78,7,"_state"],[125,15,78,13],[125,17,78,15],[126,6,79,4,"_state"],[126,12,79,10],[126,15,79,13,"createState"],[126,26,79,24],[126,27,79,25],[126,28,79,26],[127,4,80,2],[129,4,82,1],[130,4,83,2],[130,8,83,6,"isRequestInProgress"],[130,27,83,25],[130,29,83,27],[131,6,84,4],[131,13,84,11],[131,17,84,15,"Promise"],[131,24,84,22],[131,25,84,24,"resolve"],[131,32,84,31],[131,36,84,36],[132,8,85,6,"requestQueue"],[132,20,85,18],[132,21,85,19,"push"],[132,25,85,23],[132,26,85,24,"resolve"],[132,33,85,31],[132,34,85,32],[133,6,86,4],[133,7,86,5],[133,8,86,6],[134,4,87,2],[135,4,89,2,"isRequestInProgress"],[135,23,89,21],[135,26,89,24],[135,30,89,28],[136,4,91,2],[136,11,91,9,"_state"],[136,17,91,15],[136,18,91,16,"_fetchCurrentState"],[136,36,91,34],[136,37,91,35],[136,38,91,36],[136,39,91,37,"then"],[136,43,91,41],[136,44,91,43,"result"],[136,50,91,49],[136,54,91,54],[137,6,92,4,"requestQueue"],[137,18,92,16],[137,19,92,17,"forEach"],[137,26,92,24],[137,27,92,26,"resolve"],[137,34,92,33],[137,38,92,38,"resolve"],[137,45,92,45],[137,46,92,46,"result"],[137,52,92,52],[137,53,92,53],[137,54,92,54],[138,6,93,4,"requestQueue"],[138,18,93,16],[138,21,93,19],[138,23,93,21],[139,6,94,4],[139,13,94,11,"result"],[139,19,94,17],[140,4,95,2],[140,5,95,3],[140,6,95,4],[140,7,95,5,"finally"],[140,14,95,12],[140,15,95,13],[140,21,95,19],[141,6,96,4,"isRequestInProgress"],[141,25,96,23],[141,28,96,26],[141,33,96,31],[142,4,97,2],[142,5,97,3],[142,6,97,4],[143,2,98,0],[145,2,100,0],[146,0,101,0],[147,0,102,0],[148,0,103,0],[149,0,104,0],[150,0,105,0],[151,0,106,0],[152,0,107,0],[153,0,108,0],[154,0,109,0],[155,0,110,0],[156,2,111,7],[156,11,111,16,"addEventListener"],[156,27,111,32,"addEventListener"],[156,28,112,2,"listener"],[156,36,112,38],[156,38,113,29],[157,4,114,2],[157,8,114,6],[157,9,114,7,"_state"],[157,15,114,13],[157,17,114,15],[158,6,115,4,"_state"],[158,12,115,10],[158,15,115,13,"createState"],[158,26,115,24],[158,27,115,25],[158,28,115,26],[159,4,116,2],[160,4,118,2,"_state"],[160,10,118,8],[160,11,118,9,"add"],[160,14,118,12],[160,15,118,13,"listener"],[160,23,118,21],[160,24,118,22],[161,4,119,2],[161,11,119,9],[161,17,119,21],[162,6,120,4,"_state"],[162,12,120,10],[162,16,120,14,"_state"],[162,22,120,20],[162,23,120,21,"remove"],[162,29,120,27],[162,30,120,28,"listener"],[162,38,120,36],[162,39,120,37],[163,4,121,2],[163,5,121,3],[164,2,122,0],[166,2,124,0],[167,0,125,0],[168,0,126,0],[169,0,127,0],[170,0,128,0],[171,0,129,0],[172,0,130,0],[173,2,131,7],[173,11,131,16,"useNetInfo"],[173,21,131,26,"useNetInfo"],[173,22,132,2,"configuration"],[173,35,132,53],[173,37,133,22],[174,4,134,2],[174,8,134,6,"configuration"],[174,21,134,19],[174,23,134,21],[175,6,135,4,"configure"],[175,15,135,13],[175,16,135,14,"configuration"],[175,29,135,27],[175,30,135,28],[176,4,136,2],[177,4,138,2],[177,8,138,2,"_useState"],[177,17,138,2],[177,20,138,32],[177,24,138,32,"useState"],[177,30,138,40],[177,31,138,40,"useState"],[177,39,138,40],[177,41,138,61],[178,8,139,4,"type"],[178,12,139,8],[178,14,139,10,"Types"],[178,19,139,15],[178,20,139,16,"NetInfoStateType"],[178,36,139,32],[178,37,139,33,"unknown"],[178,44,139,40],[179,8,140,4,"isConnected"],[179,19,140,15],[179,21,140,17],[179,25,140,21],[180,8,141,4,"isInternetReachable"],[180,27,141,23],[180,29,141,25],[180,33,141,29],[181,8,142,4,"details"],[181,15,142,11],[181,17,142,13],[182,6,143,2],[182,7,143,3],[182,8,143,4],[183,6,143,4,"_useState2"],[183,16,143,4],[183,23,143,4,"_slicedToArray"],[183,37,143,4],[183,38,143,4,"default"],[183,45,143,4],[183,47,143,4,"_useState"],[183,56,143,4],[184,6,138,9,"netInfo"],[184,13,138,16],[184,16,138,16,"_useState2"],[184,26,138,16],[185,6,138,18,"setNetInfo"],[185,16,138,28],[185,19,138,28,"_useState2"],[185,29,138,28],[186,4,145,2],[186,8,145,2,"useEffect"],[186,14,145,11],[186,15,145,11,"useEffect"],[186,24,145,11],[186,26,145,12],[186,32,145,32],[187,6,146,4],[187,10,146,10,"unsubscribe"],[187,21,146,21],[187,24,146,24,"addEventListener"],[187,40,146,40],[187,41,146,41,"setNetInfo"],[187,51,146,51],[187,52,146,52],[188,6,147,4],[188,13,147,11],[188,19,147,17,"unsubscribe"],[188,30,147,28],[188,31,147,29],[188,32,147,30],[189,4,148,2],[189,5,148,3],[189,7,148,5],[189,9,148,7],[189,10,148,8],[190,4,150,2],[190,11,150,9,"netInfo"],[190,18,150,16],[191,2,151,0],[193,2,153,0],[194,0,154,0],[195,0,155,0],[196,0,156,0],[197,0,157,0],[198,0,158,0],[199,0,159,0],[200,0,160,0],[201,0,161,0],[202,2,162,7],[202,11,162,16,"useNetInfoInstance"],[202,29,162,34,"useNetInfoInstance"],[202,30,162,34],[202,32,165,2],[203,4,165,2],[203,8,163,2,"isPaused"],[203,16,163,10],[203,19,163,10,"arguments"],[203,28,163,10],[203,29,163,10,"length"],[203,35,163,10],[203,43,163,10,"arguments"],[203,52,163,10],[203,60,163,10,"undefined"],[203,69,163,10],[203,72,163,10,"arguments"],[203,81,163,10],[203,87,163,13],[203,92,163,18],[204,4,163,18],[204,8,164,2,"configuration"],[204,21,164,53],[204,24,164,53,"arguments"],[204,33,164,53],[204,34,164,53,"length"],[204,40,164,53],[204,47,164,53,"arguments"],[204,56,164,53],[204,62,164,53,"undefined"],[204,71,164,53],[205,4,166,2],[205,8,166,2,"_useState3"],[205,18,166,2],[205,21,166,54],[205,25,166,54,"useState"],[205,31,166,62],[205,32,166,62,"useState"],[205,40,166,62],[205,42,166,70],[205,43,166,71],[206,6,166,71,"_useState4"],[206,16,166,71],[206,23,166,71,"_slicedToArray"],[206,37,166,71],[206,38,166,71,"default"],[206,45,166,71],[206,47,166,71,"_useState3"],[206,57,166,71],[207,6,166,9,"networkInfoManager"],[207,24,166,27],[207,27,166,27,"_useState4"],[207,37,166,27],[208,6,166,29,"setNetworkInfoManager"],[208,27,166,50],[208,30,166,50,"_useState4"],[208,40,166,50],[209,4,167,2],[209,8,167,2,"_useState5"],[209,18,167,2],[209,21,167,32],[209,25,167,32,"useState"],[209,31,167,40],[209,32,167,40,"useState"],[209,40,167,40],[209,42,167,61],[210,8,168,4,"type"],[210,12,168,8],[210,14,168,10,"Types"],[210,19,168,15],[210,20,168,16,"NetInfoStateType"],[210,36,168,32],[210,37,168,33,"unknown"],[210,44,168,40],[211,8,169,4,"isConnected"],[211,19,169,15],[211,21,169,17],[211,25,169,21],[212,8,170,4,"isInternetReachable"],[212,27,170,23],[212,29,170,25],[212,33,170,29],[213,8,171,4,"details"],[213,15,171,11],[213,17,171,13],[214,6,172,2],[214,7,172,3],[214,8,172,4],[215,6,172,4,"_useState6"],[215,16,172,4],[215,23,172,4,"_slicedToArray"],[215,37,172,4],[215,38,172,4,"default"],[215,45,172,4],[215,47,172,4,"_useState5"],[215,57,172,4],[216,6,167,9,"netInfo"],[216,13,167,16],[216,16,167,16,"_useState6"],[216,26,167,16],[217,6,167,18,"setNetInfo"],[217,16,167,28],[217,19,167,28,"_useState6"],[217,29,167,28],[218,4,174,2],[218,8,174,2,"useEffect"],[218,14,174,11],[218,15,174,11,"useEffect"],[218,24,174,11],[218,26,174,12],[218,32,174,18],[219,6,175,4],[219,10,175,8,"isPaused"],[219,18,175,16],[219,20,175,18],[220,8,176,6],[221,6,177,4],[222,6,178,4],[222,10,178,10,"config"],[222,16,178,16],[222,19,178,19],[223,8,179,6],[223,11,179,9,"DEFAULT_CONFIGURATION"],[223,32,179,30],[223,33,179,30,"default"],[223,40,179,30],[224,8,180,6],[224,11,180,9,"configuration"],[225,6,181,4],[225,7,181,5],[226,6,182,4],[226,10,182,10,"state"],[226,15,182,15],[226,18,182,18],[226,22,182,22,"State"],[226,27,182,27],[226,28,182,27,"default"],[226,35,182,27],[226,36,182,28,"config"],[226,42,182,34],[226,43,182,35],[227,6,183,4,"setNetworkInfoManager"],[227,27,183,25],[227,28,183,26,"state"],[227,33,183,31],[227,34,183,32],[228,6,184,4,"state"],[228,11,184,9],[228,12,184,10,"add"],[228,15,184,13],[228,16,184,14,"setNetInfo"],[228,26,184,24],[228,27,184,25],[229,6,185,4],[229,13,185,11,"state"],[229,18,185,16],[229,19,185,17,"tearDown"],[229,27,185,25],[230,4,186,2],[230,5,186,3],[230,7,186,5],[230,8,186,6,"isPaused"],[230,16,186,14],[230,18,186,16,"configuration"],[230,31,186,29],[230,32,186,30],[230,33,186,31],[231,4,188,2],[231,8,188,8,"refresh"],[231,15,188,15],[231,18,188,18],[231,22,188,18,"useCallback"],[231,28,188,29],[231,29,188,29,"useCallback"],[231,40,188,29],[231,42,188,30],[231,48,188,36],[232,6,189,4],[232,10,189,8,"networkInfoManager"],[232,28,189,26],[232,32,189,30],[232,33,189,31,"isRequestInProgress"],[232,52,189,50],[232,54,189,52],[233,8,190,6,"isRequestInProgress"],[233,27,190,25],[233,30,190,28],[233,34,190,32],[234,8,191,6,"networkInfoManager"],[234,26,191,24],[234,27,191,25,"_fetchCurrentState"],[234,45,191,43],[234,46,191,44],[234,47,191,45],[234,48,191,46,"finally"],[234,55,191,53],[234,56,191,54],[234,62,191,60],[235,10,192,8,"isRequestInProgress"],[235,29,192,27],[235,32,192,30],[235,37,192,35],[236,8,193,6],[236,9,193,7],[236,10,193,8],[237,6,194,4],[238,4,195,2],[238,5,195,3],[238,7,195,5],[238,8,195,6,"networkInfoManager"],[238,26,195,24],[238,27,195,25],[238,28,195,26],[239,4,197,2],[239,11,197,9],[240,6,198,4,"netInfo"],[240,13,198,11],[241,6,199,4,"refresh"],[242,4,200,2],[242,5,200,3],[243,2,201,0],[244,2,205,0],[244,6,205,0,"_default"],[244,14,205,0],[244,17,205,15],[245,4,206,2,"configure"],[245,13,206,11],[246,4,207,2,"fetch"],[246,9,207,7],[247,4,208,2,"refresh"],[247,11,208,9],[248,4,209,2,"addEventListener"],[248,20,209,18],[249,4,210,2,"useNetInfo"],[249,14,210,12],[250,4,211,2,"useNetInfoInstance"],[251,2,212,0],[251,3,212,1],[252,0,212,2],[252,3]],"functionMap":{"names":["<global>","createState","configure","fetch","refresh","Promise$argument_0","_state._fetchCurrentState.then$argument_0","requestQueue.forEach$argument_0","_state._fetchCurrentState.then._finally$argument_0","addEventListener","<anonymous>","useNetInfo","useEffect$argument_0","useNetInfoInstance","networkInfoManager._fetchCurrentState._finally$argument_0"],"mappings":"AAA;oBCqB;CDE;OEa;CFgB;OGU;CHO;OIO;uBCO;KDE;0CEK;yBCC,4BD;GFG,UI;GJE;CJC;OSa;SCQ;GDE;CTC;OWS;YCc;WFE,mBE;GDC;CXG;OaW;YDY;GCY;8BTE;sDUG;OVE;GSE;CbM"},"hasCjsExports":false},"type":"js/module"}]}