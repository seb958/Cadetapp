{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":49,"index":260}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"ComposedGesture\", {\n    enumerable: true,\n    get: function () {\n      return ComposedGesture;\n    }\n  });\n  Object.defineProperty(exports, \"SimultaneousGesture\", {\n    enumerable: true,\n    get: function () {\n      return SimultaneousGesture;\n    }\n  });\n  Object.defineProperty(exports, \"ExclusiveGesture\", {\n    enumerable: true,\n    get: function () {\n      return ExclusiveGesture;\n    }\n  });\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function extendRelation(currentRelation, extendWith) {\n    if (currentRelation === undefined) {\n      return [...extendWith];\n    } else {\n      return [...currentRelation, ...extendWith];\n    }\n  }\n  class ComposedGesture extends _gesture.Gesture {\n    constructor(...gestures) {\n      super();\n      _defineProperty(this, \"gestures\", []);\n      _defineProperty(this, \"simultaneousGestures\", []);\n      _defineProperty(this, \"requireGesturesToFail\", []);\n      this.gestures = gestures;\n    }\n    prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        const newConfig = {\n          ...gesture.config\n        }; // No need to extend `blocksHandlers` here, because it's not changed in composition.\n        // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n    prepare() {\n      for (const gesture of this.gestures) {\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n    initialize() {\n      for (const gesture of this.gestures) {\n        gesture.initialize();\n      }\n    }\n    toGestureArray() {\n      return this.gestures.flatMap(gesture => gesture.toGestureArray());\n    }\n  }\n  class SimultaneousGesture extends ComposedGesture {\n    prepare() {\n      // This piece of magic works something like this:\n      // for every gesture in the array\n      const simultaneousArrays = this.gestures.map(gesture =>\n      // we take the array it's in\n      this.gestures // and make a copy without it\n      .filter(x => x !== gesture) // then we flatmap the result to get list of raw (not composed) gestures\n      // this way we don't make the gestures simultaneous with themselves, which is\n      // important when the gesture is `ExclusiveGesture` - we don't want to make\n      // exclusive gestures simultaneous\n      .flatMap(x => x.toGestureArray()));\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n      }\n    }\n  }\n  class ExclusiveGesture extends ComposedGesture {\n    prepare() {\n      // Transforms the array of gestures into array of grouped raw (not composed) gestures\n      // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n      const gestureArrays = this.gestures.map(gesture => gesture.toGestureArray());\n      let requireToFail = [];\n      for (let i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail)); // Every group gets to wait for all groups before it\n\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }\n});","lineCount":114,"map":[[7,2,13,0,"Object"],[7,8,13,0],[7,9,13,0,"defineProperty"],[7,23,13,0],[7,24,13,0,"exports"],[7,31,13,0],[8,4,13,0,"enumerable"],[8,14,13,0],[9,4,13,0,"get"],[9,7,13,0],[9,18,13,0,"get"],[9,19,13,0],[10,6,13,0],[10,13,13,0,"ComposedGesture"],[10,28,13,0],[11,4,13,0],[12,2,13,0],[13,2,59,0,"Object"],[13,8,59,0],[13,9,59,0,"defineProperty"],[13,23,59,0],[13,24,59,0,"exports"],[13,31,59,0],[14,4,59,0,"enumerable"],[14,14,59,0],[15,4,59,0,"get"],[15,7,59,0],[15,18,59,0,"get"],[15,19,59,0],[16,6,59,0],[16,13,59,0,"SimultaneousGesture"],[16,32,59,0],[17,4,59,0],[18,2,59,0],[19,2,77,0,"Object"],[19,8,77,0],[19,9,77,0,"defineProperty"],[19,23,77,0],[19,24,77,0,"exports"],[19,31,77,0],[20,4,77,0,"enumerable"],[20,14,77,0],[21,4,77,0,"get"],[21,7,77,0],[21,18,77,0,"get"],[21,19,77,0],[22,6,77,0],[22,13,77,0,"ExclusiveGesture"],[22,29,77,0],[23,4,77,0],[24,2,77,0],[25,2,3,0],[25,6,3,0,"_gesture"],[25,14,3,0],[25,17,3,0,"require"],[25,24,3,0],[25,25,3,0,"_dependencyMap"],[25,39,3,0],[26,2,1,0],[26,11,1,9,"_defineProperty"],[26,26,1,24,"_defineProperty"],[26,27,1,25,"obj"],[26,30,1,28],[26,32,1,30,"key"],[26,35,1,33],[26,37,1,35,"value"],[26,42,1,40],[26,44,1,42],[27,4,1,44],[27,8,1,48,"key"],[27,11,1,51],[27,15,1,55,"obj"],[27,18,1,58],[27,20,1,60],[28,6,1,62,"Object"],[28,12,1,68],[28,13,1,69,"defineProperty"],[28,27,1,83],[28,28,1,84,"obj"],[28,31,1,87],[28,33,1,89,"key"],[28,36,1,92],[28,38,1,94],[29,8,1,96,"value"],[29,13,1,101],[29,15,1,103,"value"],[29,20,1,108],[30,8,1,110,"enumerable"],[30,18,1,120],[30,20,1,122],[30,24,1,126],[31,8,1,128,"configurable"],[31,20,1,140],[31,22,1,142],[31,26,1,146],[32,8,1,148,"writable"],[32,16,1,156],[32,18,1,158],[33,6,1,163],[33,7,1,164],[33,8,1,165],[34,4,1,167],[34,5,1,168],[34,11,1,174],[35,6,1,176,"obj"],[35,9,1,179],[35,10,1,180,"key"],[35,13,1,183],[35,14,1,184],[35,17,1,187,"value"],[35,22,1,192],[36,4,1,194],[37,4,1,196],[37,11,1,203,"obj"],[37,14,1,206],[38,2,1,208],[39,2,5,0],[39,11,5,9,"extendRelation"],[39,25,5,23,"extendRelation"],[39,26,5,24,"currentRelation"],[39,41,5,39],[39,43,5,41,"extendWith"],[39,53,5,51],[39,55,5,53],[40,4,6,2],[40,8,6,6,"currentRelation"],[40,23,6,21],[40,28,6,26,"undefined"],[40,37,6,35],[40,39,6,37],[41,6,7,4],[41,13,7,11],[41,14,7,12],[41,17,7,15,"extendWith"],[41,27,7,25],[41,28,7,26],[42,4,8,2],[42,5,8,3],[42,11,8,9],[43,6,9,4],[43,13,9,11],[43,14,9,12],[43,17,9,15,"currentRelation"],[43,32,9,30],[43,34,9,32],[43,37,9,35,"extendWith"],[43,47,9,45],[43,48,9,46],[44,4,10,2],[45,2,11,0],[46,2,13,7],[46,8,13,13,"ComposedGesture"],[46,23,13,28],[46,32,13,37,"Gesture"],[46,40,13,44],[46,41,13,44,"Gesture"],[46,48,13,44],[46,49,13,45],[47,4,14,2,"constructor"],[47,15,14,13,"constructor"],[47,16,14,14],[47,19,14,17,"gestures"],[47,27,14,25],[47,29,14,27],[48,6,15,4],[48,11,15,9],[48,12,15,10],[48,13,15,11],[49,6,17,4,"_defineProperty"],[49,21,17,19],[49,22,17,20],[49,26,17,24],[49,28,17,26],[49,38,17,36],[49,40,17,38],[49,42,17,40],[49,43,17,41],[50,6,19,4,"_defineProperty"],[50,21,19,19],[50,22,19,20],[50,26,19,24],[50,28,19,26],[50,50,19,48],[50,52,19,50],[50,54,19,52],[50,55,19,53],[51,6,21,4,"_defineProperty"],[51,21,21,19],[51,22,21,20],[51,26,21,24],[51,28,21,26],[51,51,21,49],[51,53,21,51],[51,55,21,53],[51,56,21,54],[52,6,23,4],[52,10,23,8],[52,11,23,9,"gestures"],[52,19,23,17],[52,22,23,20,"gestures"],[52,30,23,28],[53,4,24,2],[54,4,26,2,"prepareSingleGesture"],[54,24,26,22,"prepareSingleGesture"],[54,25,26,23,"gesture"],[54,32,26,30],[54,34,26,32,"simultaneousGestures"],[54,54,26,52],[54,56,26,54,"requireGesturesToFail"],[54,77,26,75],[54,79,26,77],[55,6,27,4],[55,10,27,8,"gesture"],[55,17,27,15],[55,29,27,27,"BaseGesture"],[55,37,27,38],[55,38,27,38,"BaseGesture"],[55,49,27,38],[55,51,27,40],[56,8,28,6],[56,14,28,12,"newConfig"],[56,23,28,21],[56,26,28,24],[57,10,28,26],[57,13,28,29,"gesture"],[57,20,28,36],[57,21,28,37,"config"],[58,8,29,6],[58,9,29,7],[58,10,29,8],[58,11,29,9],[59,8,30,6],[61,8,32,6,"newConfig"],[61,17,32,15],[61,18,32,16,"simultaneousWith"],[61,34,32,32],[61,37,32,35,"extendRelation"],[61,51,32,49],[61,52,32,50,"newConfig"],[61,61,32,59],[61,62,32,60,"simultaneousWith"],[61,78,32,76],[61,80,32,78,"simultaneousGestures"],[61,100,32,98],[61,101,32,99],[62,8,33,6,"newConfig"],[62,17,33,15],[62,18,33,16,"requireToFail"],[62,31,33,29],[62,34,33,32,"extendRelation"],[62,48,33,46],[62,49,33,47,"newConfig"],[62,58,33,56],[62,59,33,57,"requireToFail"],[62,72,33,70],[62,74,33,72,"requireGesturesToFail"],[62,95,33,93],[62,96,33,94],[63,8,34,6,"gesture"],[63,15,34,13],[63,16,34,14,"config"],[63,22,34,20],[63,25,34,23,"newConfig"],[63,34,34,32],[64,6,35,4],[64,7,35,5],[64,13,35,11],[64,17,35,15,"gesture"],[64,24,35,22],[64,36,35,34,"ComposedGesture"],[64,51,35,49],[64,53,35,51],[65,8,36,6,"gesture"],[65,15,36,13],[65,16,36,14,"simultaneousGestures"],[65,36,36,34],[65,39,36,37,"simultaneousGestures"],[65,59,36,57],[66,8,37,6,"gesture"],[66,15,37,13],[66,16,37,14,"requireGesturesToFail"],[66,37,37,35],[66,40,37,38,"requireGesturesToFail"],[66,61,37,59],[67,8,38,6,"gesture"],[67,15,38,13],[67,16,38,14,"prepare"],[67,23,38,21],[67,24,38,22],[67,25,38,23],[68,6,39,4],[69,4,40,2],[70,4,42,2,"prepare"],[70,11,42,9,"prepare"],[70,12,42,9],[70,14,42,12],[71,6,43,4],[71,11,43,9],[71,17,43,15,"gesture"],[71,24,43,22],[71,28,43,26],[71,32,43,30],[71,33,43,31,"gestures"],[71,41,43,39],[71,43,43,41],[72,8,44,6],[72,12,44,10],[72,13,44,11,"prepareSingleGesture"],[72,33,44,31],[72,34,44,32,"gesture"],[72,41,44,39],[72,43,44,41],[72,47,44,45],[72,48,44,46,"simultaneousGestures"],[72,68,44,66],[72,70,44,68],[72,74,44,72],[72,75,44,73,"requireGesturesToFail"],[72,96,44,94],[72,97,44,95],[73,6,45,4],[74,4,46,2],[75,4,48,2,"initialize"],[75,14,48,12,"initialize"],[75,15,48,12],[75,17,48,15],[76,6,49,4],[76,11,49,9],[76,17,49,15,"gesture"],[76,24,49,22],[76,28,49,26],[76,32,49,30],[76,33,49,31,"gestures"],[76,41,49,39],[76,43,49,41],[77,8,50,6,"gesture"],[77,15,50,13],[77,16,50,14,"initialize"],[77,26,50,24],[77,27,50,25],[77,28,50,26],[78,6,51,4],[79,4,52,2],[80,4,54,2,"toGestureArray"],[80,18,54,16,"toGestureArray"],[80,19,54,16],[80,21,54,19],[81,6,55,4],[81,13,55,11],[81,17,55,15],[81,18,55,16,"gestures"],[81,26,55,24],[81,27,55,25,"flatMap"],[81,34,55,32],[81,35,55,33,"gesture"],[81,42,55,40],[81,46,55,44,"gesture"],[81,53,55,51],[81,54,55,52,"toGestureArray"],[81,68,55,66],[81,69,55,67],[81,70,55,68],[81,71,55,69],[82,4,56,2],[83,2,58,0],[84,2,59,7],[84,8,59,13,"SimultaneousGesture"],[84,27,59,32],[84,36,59,41,"ComposedGesture"],[84,51,59,56],[84,52,59,57],[85,4,60,2,"prepare"],[85,11,60,9,"prepare"],[85,12,60,9],[85,14,60,12],[86,6,61,4],[87,6,62,4],[88,6,63,4],[88,12,63,10,"simultaneousArrays"],[88,30,63,28],[88,33,63,31],[88,37,63,35],[88,38,63,36,"gestures"],[88,46,63,44],[88,47,63,45,"map"],[88,50,63,48],[88,51,63,49,"gesture"],[88,58,63,56],[89,6,63,60],[90,6,64,4],[90,10,64,8],[90,11,64,9,"gestures"],[90,19,64,17],[90,20,64,18],[91,6,64,18],[91,7,65,5,"filter"],[91,13,65,11],[91,14,65,12,"x"],[91,15,65,13],[91,19,65,17,"x"],[91,20,65,18],[91,25,65,23,"gesture"],[91,32,65,30],[91,33,65,31],[91,34,65,32],[92,6,66,4],[93,6,67,4],[94,6,68,4],[95,6,68,4],[95,7,69,5,"flatMap"],[95,14,69,12],[95,15,69,13,"x"],[95,16,69,14],[95,20,69,18,"x"],[95,21,69,19],[95,22,69,20,"toGestureArray"],[95,36,69,34],[95,37,69,35],[95,38,69,36],[95,39,69,37],[95,40,69,38],[96,6,71,4],[96,11,71,9],[96,15,71,13,"i"],[96,16,71,14],[96,19,71,17],[96,20,71,18],[96,22,71,20,"i"],[96,23,71,21],[96,26,71,24],[96,30,71,28],[96,31,71,29,"gestures"],[96,39,71,37],[96,40,71,38,"length"],[96,46,71,44],[96,48,71,46,"i"],[96,49,71,47],[96,51,71,49],[96,53,71,51],[97,8,72,6],[97,12,72,10],[97,13,72,11,"prepareSingleGesture"],[97,33,72,31],[97,34,72,32],[97,38,72,36],[97,39,72,37,"gestures"],[97,47,72,45],[97,48,72,46,"i"],[97,49,72,47],[97,50,72,48],[97,52,72,50,"simultaneousArrays"],[97,70,72,68],[97,71,72,69,"i"],[97,72,72,70],[97,73,72,71],[97,75,72,73],[97,79,72,77],[97,80,72,78,"requireGesturesToFail"],[97,101,72,99],[97,102,72,100],[98,6,73,4],[99,4,74,2],[100,2,76,0],[101,2,77,7],[101,8,77,13,"ExclusiveGesture"],[101,24,77,29],[101,33,77,38,"ComposedGesture"],[101,48,77,53],[101,49,77,54],[102,4,78,2,"prepare"],[102,11,78,9,"prepare"],[102,12,78,9],[102,14,78,12],[103,6,79,4],[104,6,80,4],[105,6,81,4],[105,12,81,10,"gestureArrays"],[105,25,81,23],[105,28,81,26],[105,32,81,30],[105,33,81,31,"gestures"],[105,41,81,39],[105,42,81,40,"map"],[105,45,81,43],[105,46,81,44,"gesture"],[105,53,81,51],[105,57,81,55,"gesture"],[105,64,81,62],[105,65,81,63,"toGestureArray"],[105,79,81,77],[105,80,81,78],[105,81,81,79],[105,82,81,80],[106,6,82,4],[106,10,82,8,"requireToFail"],[106,23,82,21],[106,26,82,24],[106,28,82,26],[107,6,84,4],[107,11,84,9],[107,15,84,13,"i"],[107,16,84,14],[107,19,84,17],[107,20,84,18],[107,22,84,20,"i"],[107,23,84,21],[107,26,84,24],[107,30,84,28],[107,31,84,29,"gestures"],[107,39,84,37],[107,40,84,38,"length"],[107,46,84,44],[107,48,84,46,"i"],[107,49,84,47],[107,51,84,49],[107,53,84,51],[108,8,85,6],[108,12,85,10],[108,13,85,11,"prepareSingleGesture"],[108,33,85,31],[108,34,85,32],[108,38,85,36],[108,39,85,37,"gestures"],[108,47,85,45],[108,48,85,46,"i"],[108,49,85,47],[108,50,85,48],[108,52,85,50],[108,56,85,54],[108,57,85,55,"simultaneousGestures"],[108,77,85,75],[108,79,85,77],[108,83,85,81],[108,84,85,82,"requireGesturesToFail"],[108,105,85,103],[108,106,85,104,"concat"],[108,112,85,110],[108,113,85,111,"requireToFail"],[108,126,85,124],[108,127,85,125],[108,128,85,126],[108,129,85,127],[108,130,85,128],[110,8,87,6,"requireToFail"],[110,21,87,19],[110,24,87,22,"requireToFail"],[110,37,87,35],[110,38,87,36,"concat"],[110,44,87,42],[110,45,87,43,"gestureArrays"],[110,58,87,56],[110,59,87,57,"i"],[110,60,87,58],[110,61,87,59],[110,62,87,60],[111,6,88,4],[112,4,89,2],[113,2,91,0],[114,0,91,1],[114,3]],"functionMap":{"names":["_defineProperty","<global>","extendRelation","ComposedGesture","ComposedGesture#constructor","ComposedGesture#prepareSingleGesture","ComposedGesture#prepare","ComposedGesture#initialize","ComposedGesture#toGestureArray","gestures.flatMap$argument_0","SimultaneousGesture","SimultaneousGesture#prepare","gestures.map$argument_0","gestures.filter$argument_0","gestures.filter.flatMap$argument_0","ExclusiveGesture","ExclusiveGesture#prepare"],"mappings":"AAA,iNC;ACI;CDM;OEE;ECC;GDU;EEE;GFc;EGE;GHI;EIE;GJI;EKE;iCCC,mCD;GLC;CFE;OSC;ECC;iDCG;YCE,kBD;aEI,uBF,CD;GDK;CTE;OcC;ECC;4CJG,mCI;GDQ;CdE"},"hasCjsExports":false},"type":"js/module"}]}