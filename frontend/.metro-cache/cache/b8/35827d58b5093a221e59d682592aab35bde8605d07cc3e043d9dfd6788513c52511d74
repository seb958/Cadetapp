{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":36,"index":247}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":248},"end":{"line":4,"column":33,"index":281}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":282},"end":{"line":5,"column":89,"index":371}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":372},"end":{"line":6,"column":62,"index":434}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":435},"end":{"line":7,"column":66,"index":501}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _egjsHammerjs = require(_dependencyMap[1], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _State = require(_dependencyMap[2], \"../State\");\n  var _constants = require(_dependencyMap[3], \"./constants\");\n  var _DiscreteGestureHandler = require(_dependencyMap[4], \"./DiscreteGestureHandler\");\n  var DiscreteGestureHandler = _interopDefault(_DiscreteGestureHandler);\n  var _utils = require(_dependencyMap[5], \"./utils\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class PressGestureHandler extends DiscreteGestureHandler.default {\n    constructor(...args) {\n      super(...args);\n      _defineProperty(this, \"visualFeedbackTimer\", void 0);\n      _defineProperty(this, \"initialEvent\", null);\n      _defineProperty(this, \"shouldDelayTouches\", true);\n    }\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Press;\n    }\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [Hammer.default.INPUT_START]: _State.State.BEGAN,\n        [Hammer.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [Hammer.default.INPUT_END]: _State.State.END,\n        [Hammer.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      });\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(Object.assign({}, ev, {\n        eventType: Hammer.default.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent(Object.assign({}, ev, {\n              eventType: Hammer.default.INPUT_END,\n              isFinal: true\n            })); // @ts-ignore -- this should explicitly support undefined\n\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent(Object.assign({}, ev, {\n            eventType: Hammer.default.INPUT_MOVE,\n            isFinal: false\n          }));\n        }\n      }\n    }\n    updateGestureConfig(_ref) {\n      let {\n          shouldActivateOnStart = false,\n          disallowInterruption = false,\n          shouldCancelWhenOutside = true,\n          minDurationMs = Number.NaN,\n          maxDist = Number.NaN,\n          minPointers = 1,\n          maxPointers = 1\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      return super.updateGestureConfig(Object.assign({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers\n      }, props));\n    }\n  }\n  var _default = PressGestureHandler;\n});","lineCount":181,"map":[[13,2,173,0,"Object"],[13,8,173,0],[13,9,173,0,"defineProperty"],[13,23,173,0],[13,24,173,0,"exports"],[13,31,173,0],[14,4,173,0,"enumerable"],[14,14,173,0],[15,4,173,0,"get"],[15,7,173,0],[15,18,173,0,"get"],[15,19,173,0],[16,6,173,0],[16,13,173,0,"_default"],[16,21,173,0],[17,4,173,0],[18,2,173,0],[19,2,173,35],[19,6,173,35,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[19,54,173,35],[19,57,173,35,"require"],[19,64,173,35],[19,65,173,35,"_dependencyMap"],[19,79,173,35],[20,2,173,35],[20,6,173,35,"_objectWithoutPropertiesLoose"],[20,35,173,35],[20,38,173,35,"_interopDefault"],[20,53,173,35],[20,54,173,35,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[20,102,173,35],[21,2,3,0],[21,6,3,0,"_egjsHammerjs"],[21,19,3,0],[21,22,3,0,"require"],[21,29,3,0],[21,30,3,0,"_dependencyMap"],[21,44,3,0],[22,2,3,0],[22,6,3,0,"Hammer"],[22,12,3,0],[22,15,3,0,"_interopDefault"],[22,30,3,0],[22,31,3,0,"_egjsHammerjs"],[22,44,3,0],[23,2,4,0],[23,6,4,0,"_State"],[23,12,4,0],[23,15,4,0,"require"],[23,22,4,0],[23,23,4,0,"_dependencyMap"],[23,37,4,0],[24,2,5,0],[24,6,5,0,"_constants"],[24,16,5,0],[24,19,5,0,"require"],[24,26,5,0],[24,27,5,0,"_dependencyMap"],[24,41,5,0],[25,2,6,0],[25,6,6,0,"_DiscreteGestureHandler"],[25,29,6,0],[25,32,6,0,"require"],[25,39,6,0],[25,40,6,0,"_dependencyMap"],[25,54,6,0],[26,2,6,0],[26,6,6,0,"DiscreteGestureHandler"],[26,28,6,0],[26,31,6,0,"_interopDefault"],[26,46,6,0],[26,47,6,0,"_DiscreteGestureHandler"],[26,70,6,0],[27,2,7,0],[27,6,7,0,"_utils"],[27,12,7,0],[27,15,7,0,"require"],[27,22,7,0],[27,23,7,0,"_dependencyMap"],[27,37,7,0],[28,2,1,0],[28,11,1,9,"_defineProperty"],[28,26,1,24,"_defineProperty"],[28,27,1,25,"obj"],[28,30,1,28],[28,32,1,30,"key"],[28,35,1,33],[28,37,1,35,"value"],[28,42,1,40],[28,44,1,42],[29,4,1,44],[29,8,1,48,"key"],[29,11,1,51],[29,15,1,55,"obj"],[29,18,1,58],[29,20,1,60],[30,6,1,62,"Object"],[30,12,1,68],[30,13,1,69,"defineProperty"],[30,27,1,83],[30,28,1,84,"obj"],[30,31,1,87],[30,33,1,89,"key"],[30,36,1,92],[30,38,1,94],[31,8,1,96,"value"],[31,13,1,101],[31,15,1,103,"value"],[31,20,1,108],[32,8,1,110,"enumerable"],[32,18,1,120],[32,20,1,122],[32,24,1,126],[33,8,1,128,"configurable"],[33,20,1,140],[33,22,1,142],[33,26,1,146],[34,8,1,148,"writable"],[34,16,1,156],[34,18,1,158],[35,6,1,163],[35,7,1,164],[35,8,1,165],[36,4,1,167],[36,5,1,168],[36,11,1,174],[37,6,1,176,"obj"],[37,9,1,179],[37,10,1,180,"key"],[37,13,1,183],[37,14,1,184],[37,17,1,187,"value"],[37,22,1,192],[38,4,1,194],[39,4,1,196],[39,11,1,203,"obj"],[39,14,1,206],[40,2,1,208],[41,2,9,0],[41,8,9,6,"PressGestureHandler"],[41,27,9,25],[41,36,9,34,"DiscreteGestureHandler"],[41,58,9,56],[41,59,9,56,"default"],[41,66,9,56],[41,67,9,57],[42,4,10,2,"constructor"],[42,15,10,13,"constructor"],[42,16,10,14],[42,19,10,17,"args"],[42,23,10,21],[42,25,10,23],[43,6,11,4],[43,11,11,9],[43,12,11,10],[43,15,11,13,"args"],[43,19,11,17],[43,20,11,18],[44,6,13,4,"_defineProperty"],[44,21,13,19],[44,22,13,20],[44,26,13,24],[44,28,13,26],[44,49,13,47],[44,51,13,49],[44,56,13,54],[44,57,13,55],[44,58,13,56],[45,6,15,4,"_defineProperty"],[45,21,15,19],[45,22,15,20],[45,26,15,24],[45,28,15,26],[45,42,15,40],[45,44,15,42],[45,48,15,46],[45,49,15,47],[46,6,17,4,"_defineProperty"],[46,21,17,19],[46,22,17,20],[46,26,17,24],[46,28,17,26],[46,48,17,46],[46,50,17,48],[46,54,17,52],[46,55,17,53],[47,4,18,2],[48,4,20,2],[48,8,20,6,"name"],[48,12,20,10,"name"],[48,13,20,10],[48,15,20,13],[49,6,21,4],[49,13,21,11],[49,20,21,18],[50,4,22,2],[51,4,24,2],[51,8,24,6,"minDurationMs"],[51,21,24,19,"minDurationMs"],[51,22,24,19],[51,24,24,22],[52,6,25,4],[53,6,26,4],[53,13,26,11],[53,17,26,11,"isnan"],[53,23,26,16],[53,24,26,16,"isnan"],[53,29,26,16],[53,31,26,17],[53,35,26,21],[53,36,26,22,"config"],[53,42,26,28],[53,43,26,29,"minDurationMs"],[53,56,26,42],[53,57,26,43],[53,60,26,46],[53,61,26,47],[53,64,26,50],[53,68,26,54],[53,69,26,55,"config"],[53,75,26,61],[53,76,26,62,"minDurationMs"],[53,89,26,75],[54,4,27,2],[55,4,29,2],[55,8,29,6,"maxDist"],[55,15,29,13,"maxDist"],[55,16,29,13],[55,18,29,16],[56,6,30,4],[56,13,30,11],[56,17,30,11,"isnan"],[56,23,30,16],[56,24,30,16,"isnan"],[56,29,30,16],[56,31,30,17],[56,35,30,21],[56,36,30,22,"config"],[56,42,30,28],[56,43,30,29,"maxDist"],[56,50,30,36],[56,51,30,37],[56,54,30,40],[56,55,30,41],[56,58,30,44],[56,62,30,48],[56,63,30,49,"config"],[56,69,30,55],[56,70,30,56,"maxDist"],[56,77,30,63],[57,4,31,2],[58,4,33,2],[58,8,33,6,"NativeGestureClass"],[58,26,33,24,"NativeGestureClass"],[58,27,33,24],[58,29,33,27],[59,6,34,4],[59,13,34,11,"Hammer"],[59,19,34,17],[59,20,34,17,"default"],[59,27,34,17],[59,28,34,18,"Press"],[59,33,34,23],[60,4,35,2],[61,4,37,2,"simulateCancelEvent"],[61,23,37,21,"simulateCancelEvent"],[61,24,37,22,"inputData"],[61,33,37,31],[61,35,37,33],[62,6,38,4],[63,6,39,4],[63,10,39,8],[63,11,39,9,"hasGestureFailed"],[63,27,39,25],[63,30,39,28],[63,34,39,32],[64,6,40,4],[64,10,40,8],[64,11,40,9,"cancelEvent"],[64,22,40,20],[64,23,40,21,"inputData"],[64,32,40,30],[64,33,40,31],[65,4,41,2],[66,4,43,2,"updateHasCustomActivationCriteria"],[66,37,43,35,"updateHasCustomActivationCriteria"],[66,38,43,36],[67,6,44,4,"shouldCancelWhenOutside"],[67,29,44,27],[68,6,45,4,"maxDistSq"],[69,4,46,2],[69,5,46,3],[69,7,46,5],[70,6,47,4],[70,13,47,11,"shouldCancelWhenOutside"],[70,36,47,34],[70,40,47,38],[70,41,47,39],[70,45,47,39,"isValidNumber"],[70,51,47,52],[70,52,47,52,"isValidNumber"],[70,65,47,52],[70,67,47,53,"maxDistSq"],[70,76,47,62],[70,77,47,63],[71,4,48,2],[72,4,50,2,"getState"],[72,12,50,10,"getState"],[72,13,50,11,"type"],[72,17,50,15],[72,19,50,17],[73,6,51,4],[73,13,51,11],[74,8,52,6],[74,9,52,7,"Hammer"],[74,15,52,13],[74,16,52,13,"default"],[74,23,52,13],[74,24,52,14,"INPUT_START"],[74,35,52,25],[74,38,52,28,"State"],[74,44,52,33],[74,45,52,33,"State"],[74,50,52,33],[74,51,52,34,"BEGAN"],[74,56,52,39],[75,8,53,6],[75,9,53,7,"Hammer"],[75,15,53,13],[75,16,53,13,"default"],[75,23,53,13],[75,24,53,14,"INPUT_MOVE"],[75,34,53,24],[75,37,53,27,"State"],[75,43,53,32],[75,44,53,32,"State"],[75,49,53,32],[75,50,53,33,"ACTIVE"],[75,56,53,39],[76,8,54,6],[76,9,54,7,"Hammer"],[76,15,54,13],[76,16,54,13,"default"],[76,23,54,13],[76,24,54,14,"INPUT_END"],[76,33,54,23],[76,36,54,26,"State"],[76,42,54,31],[76,43,54,31,"State"],[76,48,54,31],[76,49,54,32,"END"],[76,52,54,35],[77,8,55,6],[77,9,55,7,"Hammer"],[77,15,55,13],[77,16,55,13,"default"],[77,23,55,13],[77,24,55,14,"INPUT_CANCEL"],[77,36,55,26],[77,39,55,29,"State"],[77,45,55,34],[77,46,55,34,"State"],[77,51,55,34],[77,52,55,35,"CANCELLED"],[78,6,56,4],[78,7,56,5],[78,8,56,6,"type"],[78,12,56,10],[78,13,56,11],[79,4,57,2],[80,4,59,2,"getConfig"],[80,13,59,11,"getConfig"],[80,14,59,11],[80,16,59,14],[81,6,60,4],[81,10,60,8],[81,11,60,9],[81,15,60,13],[81,16,60,14,"hasCustomActivationCriteria"],[81,43,60,41],[81,45,60,43],[82,8,61,6],[83,8,62,6],[84,8,63,6],[84,15,63,13],[85,10,64,8,"shouldCancelWhenOutside"],[85,33,64,31],[85,35,64,33],[85,39,64,37],[86,10,65,8,"maxDistSq"],[86,19,65,17],[86,21,65,19],[87,8,66,6],[87,9,66,7],[88,6,67,4],[89,6,69,4],[89,13,69,11],[89,17,69,15],[89,18,69,16,"config"],[89,24,69,22],[90,4,70,2],[91,4,72,2,"getHammerConfig"],[91,19,72,17,"getHammerConfig"],[91,20,72,17],[91,22,72,20],[92,6,73,4],[92,13,73,4,"Object"],[92,19,73,4],[92,20,73,4,"assign"],[92,26,73,4],[92,31,73,16],[92,36,73,21],[92,37,73,22,"getHammerConfig"],[92,52,73,37],[92,53,73,38],[92,54,73,39],[93,8,74,6],[94,8,75,6,"time"],[94,12,75,10],[94,14,75,12],[94,18,75,16],[94,19,75,17,"minDurationMs"],[95,6,75,30],[96,4,77,2],[97,4,79,2,"onGestureActivated"],[97,22,79,20,"onGestureActivated"],[97,23,79,21,"ev"],[97,25,79,23],[97,27,79,25],[98,6,80,4],[98,10,80,8],[98,11,80,9,"onGestureStart"],[98,25,80,23],[98,26,80,24,"ev"],[98,28,80,26],[98,29,80,27],[99,4,81,2],[100,4,83,2,"shouldDelayTouchForEvent"],[100,28,83,26,"shouldDelayTouchForEvent"],[100,29,83,27],[101,6,84,4,"pointerType"],[102,4,85,2],[102,5,85,3],[102,7,85,5],[103,6,86,4],[104,6,87,4],[104,13,87,11],[104,17,87,15],[104,18,87,16,"shouldDelayTouches"],[104,36,87,34],[104,40,87,38,"pointerType"],[104,51,87,49],[104,56,87,54],[104,63,87,61],[105,4,88,2],[106,4,90,2,"onGestureStart"],[106,18,90,16,"onGestureStart"],[106,19,90,17,"ev"],[106,21,90,19],[106,23,90,21],[107,6,91,4],[107,10,91,8],[107,11,91,9,"isGestureRunning"],[107,27,91,25],[107,30,91,28],[107,34,91,32],[108,6,92,4,"clearTimeout"],[108,18,92,16],[108,19,92,17],[108,23,92,21],[108,24,92,22,"visualFeedbackTimer"],[108,43,92,41],[108,44,92,42],[109,6,93,4],[109,10,93,8],[109,11,93,9,"initialEvent"],[109,23,93,21],[109,26,93,24,"ev"],[109,28,93,26],[110,6,94,4],[110,10,94,8],[110,11,94,9,"visualFeedbackTimer"],[110,30,94,28],[110,33,94,31],[110,37,94,31,"fireAfterInterval"],[110,43,94,48],[110,44,94,48,"fireAfterInterval"],[110,61,94,48],[110,63,94,49],[110,69,94,55],[111,8,95,6],[111,12,95,10],[111,13,95,11,"sendGestureStartedEvent"],[111,36,95,34],[111,37,95,35],[111,41,95,39],[111,42,95,40,"initialEvent"],[111,54,95,52],[111,55,95,53],[112,8,96,6],[112,12,96,10],[112,13,96,11,"initialEvent"],[112,25,96,23],[112,28,96,26],[112,32,96,30],[113,6,97,4],[113,7,97,5],[113,9,97,7],[113,13,97,11],[113,14,97,12,"shouldDelayTouchForEvent"],[113,38,97,36],[113,39,97,37,"ev"],[113,41,97,39],[113,42,97,40],[113,46,97,44,"CONTENT_TOUCHES_DELAY"],[113,56,97,65],[113,57,97,65,"CONTENT_TOUCHES_DELAY"],[113,78,97,65],[113,79,97,66],[114,4,98,2],[115,4,100,2,"sendGestureStartedEvent"],[115,27,100,25,"sendGestureStartedEvent"],[115,28,100,26,"ev"],[115,30,100,28],[115,32,100,30],[116,6,101,4,"clearTimeout"],[116,18,101,16],[116,19,101,17],[116,23,101,21],[116,24,101,22,"visualFeedbackTimer"],[116,43,101,41],[116,44,101,42],[117,6,102,4],[117,10,102,8],[117,11,102,9,"visualFeedbackTimer"],[117,30,102,28],[117,33,102,31],[117,37,102,35],[118,6,103,4],[118,10,103,8],[118,11,103,9,"sendEvent"],[118,20,103,18],[118,21,103,18,"Object"],[118,27,103,18],[118,28,103,18,"assign"],[118,34,103,18],[118,39,103,24,"ev"],[118,41,103,26],[119,8,104,6,"eventType"],[119,17,104,15],[119,19,104,17,"Hammer"],[119,25,104,23],[119,26,104,23,"default"],[119,33,104,23],[119,34,104,24,"INPUT_MOVE"],[119,44,104,34],[120,8,105,6,"isFirst"],[120,15,105,13],[120,17,105,15],[121,6,105,19],[121,8,106,5],[121,9,106,6],[122,4,107,2],[123,4,109,2,"forceInvalidate"],[123,19,109,17,"forceInvalidate"],[123,20,109,18,"event"],[123,25,109,23],[123,27,109,25],[124,6,110,4],[124,11,110,9],[124,12,110,10,"forceInvalidate"],[124,27,110,25],[124,28,110,26,"event"],[124,33,110,31],[124,34,110,32],[125,6,111,4,"clearTimeout"],[125,18,111,16],[125,19,111,17],[125,23,111,21],[125,24,111,22,"visualFeedbackTimer"],[125,43,111,41],[125,44,111,42],[126,6,112,4],[126,10,112,8],[126,11,112,9,"visualFeedbackTimer"],[126,30,112,28],[126,33,112,31],[126,37,112,35],[127,6,113,4],[127,10,113,8],[127,11,113,9,"initialEvent"],[127,23,113,21],[127,26,113,24],[127,30,113,28],[128,4,114,2],[129,4,116,2,"onRawEvent"],[129,14,116,12,"onRawEvent"],[129,15,116,13,"ev"],[129,17,116,15],[129,19,116,17],[130,6,117,4],[130,11,117,9],[130,12,117,10,"onRawEvent"],[130,22,117,20],[130,23,117,21,"ev"],[130,25,117,23],[130,26,117,24],[131,6,119,4],[131,10,119,8],[131,14,119,12],[131,15,119,13,"isGestureRunning"],[131,31,119,29],[131,33,119,31],[132,8,120,6],[132,12,120,10,"ev"],[132,14,120,12],[132,15,120,13,"isFinal"],[132,22,120,20],[132,24,120,22],[133,10,121,8],[133,14,121,12,"timeout"],[133,21,121,19],[134,10,123,8],[134,14,123,12],[134,18,123,16],[134,19,123,17,"visualFeedbackTimer"],[134,38,123,36],[134,40,123,38],[135,12,124,10],[136,12,125,10],[137,12,126,10],[138,12,127,10,"timeout"],[138,19,127,17],[138,22,127,20,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[138,32,127,55],[138,33,127,55,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[138,68,127,55],[139,12,128,10],[139,16,128,14],[139,17,128,15,"sendGestureStartedEvent"],[139,40,128,38],[139,41,128,39],[139,45,128,43],[139,46,128,44,"initialEvent"],[139,58,128,56],[139,59,128,57],[140,12,129,10],[140,16,129,14],[140,17,129,15,"initialEvent"],[140,29,129,27],[140,32,129,30],[140,36,129,34],[141,10,130,8],[142,10,132,8],[142,14,132,8,"fireAfterInterval"],[142,20,132,25],[142,21,132,25,"fireAfterInterval"],[142,38,132,25],[142,40,132,26],[142,46,132,32],[143,12,133,10],[143,16,133,14],[143,17,133,15,"sendEvent"],[143,26,133,24],[143,27,133,24,"Object"],[143,33,133,24],[143,34,133,24,"assign"],[143,40,133,24],[143,45,133,30,"ev"],[143,47,133,32],[144,14,134,12,"eventType"],[144,23,134,21],[144,25,134,23,"Hammer"],[144,31,134,29],[144,32,134,29,"default"],[144,39,134,29],[144,40,134,30,"INPUT_END"],[144,49,134,39],[145,14,135,12,"isFinal"],[145,21,135,19],[145,23,135,21],[146,12,135,25],[146,14,136,11],[146,15,136,12],[146,16,136,13],[146,17,136,14],[148,12,138,10],[148,16,138,14],[148,17,138,15,"onGestureEnded"],[148,31,138,29],[148,32,138,30],[148,33,138,31],[149,10,139,8],[149,11,139,9],[149,13,139,11,"timeout"],[149,20,139,18],[149,21,139,19],[150,8,140,6],[150,9,140,7],[150,15,140,13],[151,10,141,8],[151,14,141,12],[151,15,141,13,"sendEvent"],[151,24,141,22],[151,25,141,22,"Object"],[151,31,141,22],[151,32,141,22,"assign"],[151,38,141,22],[151,43,141,28,"ev"],[151,45,141,30],[152,12,142,10,"eventType"],[152,21,142,19],[152,23,142,21,"Hammer"],[152,29,142,27],[152,30,142,27,"default"],[152,37,142,27],[152,38,142,28,"INPUT_MOVE"],[152,48,142,38],[153,12,143,10,"isFinal"],[153,19,143,17],[153,21,143,19],[154,10,143,24],[154,12,144,9],[154,13,144,10],[155,8,145,6],[156,6,146,4],[157,4,147,2],[158,4,149,2,"updateGestureConfig"],[158,23,149,21,"updateGestureConfig"],[158,24,149,21,"_ref"],[158,28,149,21],[158,30,158,5],[159,6,158,5],[159,10,149,22],[160,10,150,4,"shouldActivateOnStart"],[160,31,150,25],[160,34,150,28],[160,39,150,33],[161,10,151,4,"disallowInterruption"],[161,30,151,24],[161,33,151,27],[161,38,151,32],[162,10,152,4,"shouldCancelWhenOutside"],[162,33,152,27],[162,36,152,30],[162,40,152,34],[163,10,153,4,"minDurationMs"],[163,23,153,17],[163,26,153,20,"Number"],[163,32,153,26],[163,33,153,27,"NaN"],[163,36,153,30],[164,10,154,4,"maxDist"],[164,17,154,11],[164,20,154,14,"Number"],[164,26,154,20],[164,27,154,21,"NaN"],[164,30,154,24],[165,10,155,4,"minPointers"],[165,21,155,15],[165,24,155,18],[165,25,155,19],[166,10,156,4,"maxPointers"],[166,21,156,15],[166,24,156,18],[167,8,158,2],[167,9,158,3],[167,12,158,3,"_ref"],[167,16,158,3],[168,8,157,7,"props"],[168,13,157,12],[168,20,157,12,"_objectWithoutPropertiesLoose"],[168,49,157,12],[168,50,157,12,"default"],[168,57,157,12],[168,59,157,12,"_ref"],[168,63,157,12],[168,65,157,12,"_excluded"],[168,74,157,12],[169,6,159,4],[169,13,159,11],[169,18,159,16],[169,19,159,17,"updateGestureConfig"],[169,38,159,36],[169,39,159,36,"Object"],[169,45,159,36],[169,46,159,36,"assign"],[169,52,159,36],[170,8,160,6,"shouldActivateOnStart"],[170,29,160,27],[171,8,161,6,"disallowInterruption"],[171,28,161,26],[172,8,162,6,"shouldCancelWhenOutside"],[172,31,162,29],[173,8,163,6,"minDurationMs"],[173,21,163,19],[174,8,164,6,"maxDist"],[174,15,164,13],[175,8,165,6,"minPointers"],[175,19,165,17],[176,8,166,6,"maxPointers"],[177,6,166,17],[177,9,167,9,"props"],[177,14,167,14],[177,15,168,5],[177,16,168,6],[178,4,169,2],[179,2,171,0],[180,2,173,0],[180,6,173,0,"_default"],[180,14,173,0],[180,17,173,15,"PressGestureHandler"],[180,36,173,34],[181,0,173,35],[181,3]],"functionMap":{"names":["_defineProperty","<global>","PressGestureHandler","constructor","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","fireAfterInterval$argument_0","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA,iNC;ACQ;ECC;GDQ;EEE;GFE;EGE;GHG;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPK;EQE;GRO;ESE;GTW;EUE;GVK;EWE;GXE;EYE;GZK;EaE;iDCI;KDG;GbC;EeE;GfO;EgBE;GhBK;EiBE;0BHgB;SGO;GjBQ;EkBE;GlBoB;CDE"},"hasCjsExports":false},"type":"js/module"}]}