{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":60},"end":{"line":5,"column":44,"index":104}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../services/offlineService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":105},"end":{"line":16,"column":36,"index":332}}],"key":"yXb3FTGrqBdyUFR0jGGYB9WZcrQ=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":333},"end":{"line":17,"column":69,"index":402}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":403},"end":{"line":18,"column":39,"index":442}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  /**\n   * Hook personnalisé pour gérer le mode hors ligne\n   */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useOfflineMode\", {\n    enumerable: true,\n    get: function () {\n      return useOfflineMode;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _servicesOfflineService = require(_dependencyMap[2], \"../services/offlineService\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  const useOfflineMode = () => {\n    _s();\n    const [isOnline, setIsOnline] = (0, _react.useState)(true);\n    const [isSyncing, setIsSyncing] = (0, _react.useState)(false);\n    const [syncQueueCount, setSyncQueueCount] = (0, _react.useState)(0);\n    const [lastSyncTime, setLastSyncTime] = (0, _react.useState)(null);\n    (0, _react.useEffect)(() => {\n      // Initialiser le listener de connexion\n      (0, _servicesOfflineService.initNetworkListener)();\n\n      // Vérifier l'état initial\n      setIsOnline((0, _servicesOfflineService.getConnectionStatus)());\n\n      // Ajouter un listener pour les changements\n      const listener = online => {\n        setIsOnline(online);\n        if (online) {\n          // Synchroniser automatiquement quand connexion restaurée\n          handleAutoSync();\n        }\n      };\n      (0, _servicesOfflineService.addConnectionListener)(listener);\n\n      // Charger le nombre d'éléments en attente\n      loadSyncQueueCount();\n\n      // Vérifier périodiquement la queue\n      const interval = setInterval(loadSyncQueueCount, 5000);\n      return () => {\n        (0, _servicesOfflineService.removeConnectionListener)(listener);\n        clearInterval(interval);\n      };\n    }, []);\n    const loadSyncQueueCount = async () => {\n      try {\n        const queue = await (0, _servicesOfflineService.getSyncQueue)();\n        setSyncQueueCount(queue.length);\n      } catch (error) {\n        console.error('Erreur chargement queue:', error);\n      }\n    };\n    const handleAutoSync = async () => {\n      try {\n        const token = await AsyncStorage.default.getItem('access_token');\n        const backendUrl = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n        if (token && backendUrl) {\n          await handleManualSync();\n        }\n      } catch (error) {\n        console.error('Erreur auto-sync:', error);\n      }\n    };\n    const handleManualSync = async () => {\n      if (isSyncing) {\n        return {\n          success: false,\n          message: 'Synchronisation déjà en cours'\n        };\n      }\n      if (!isOnline) {\n        return {\n          success: false,\n          message: 'Pas de connexion internet'\n        };\n      }\n      try {\n        setIsSyncing(true);\n        const token = await AsyncStorage.default.getItem('access_token');\n        const backendUrl = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n        if (!token) {\n          return {\n            success: false,\n            message: 'Non authentifié'\n          };\n        }\n        const result = await (0, _servicesOfflineService.syncQueue)(backendUrl, token);\n        if (result.success) {\n          await loadSyncQueueCount();\n          setLastSyncTime(new Date().toISOString());\n          if (result.synced === 0 && result.errors === 0) {\n            return {\n              success: true,\n              message: 'Aucune donnée à synchroniser'\n            };\n          }\n          return {\n            success: true,\n            message: `${result.synced} élément(s) synchronisé(s)${result.errors > 0 ? `, ${result.errors} erreur(s)` : ''}`\n          };\n        }\n        return {\n          success: false,\n          message: 'Échec de la synchronisation'\n        };\n      } catch (error) {\n        console.error('Erreur sync manuelle:', error);\n        return {\n          success: false,\n          message: error.message || 'Erreur de synchronisation'\n        };\n      } finally {\n        setIsSyncing(false);\n      }\n    };\n    const refreshCache = async () => {\n      try {\n        const token = await AsyncStorage.default.getItem('access_token');\n        const backendUrl = Constants.default.expoConfig?.extra?.EXPO_PUBLIC_BACKEND_URL || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || '';\n        if (!token || !backendUrl) {\n          return false;\n        }\n        return await (0, _servicesOfflineService.downloadCacheData)(backendUrl, token);\n      } catch (error) {\n        console.error('Erreur refresh cache:', error);\n        return false;\n      }\n    };\n    return {\n      isOnline,\n      isSyncing,\n      syncQueueCount,\n      lastSyncTime,\n      handleManualSync,\n      refreshCache,\n      loadSyncQueueCount\n    };\n  };\n  _s(useOfflineMode, \"cf+uYuhwFlWhPrBNRsrPkGMef78=\");\n});","lineCount":157,"map":[[5,2,1,0],[6,0,2,0],[7,0,3,0],[8,2,1,0,"Object"],[8,8,1,0],[8,9,1,0,"defineProperty"],[8,23,1,0],[8,24,1,0,"exports"],[8,31,1,0],[9,4,1,0,"value"],[9,9,1,0],[10,2,1,0],[11,2,1,0],[11,11,1,0,"_interopDefault"],[11,27,1,0,"e"],[11,28,1,0],[12,4,1,0],[12,11,1,0,"e"],[12,12,1,0],[12,16,1,0,"e"],[12,17,1,0],[12,18,1,0,"__esModule"],[12,28,1,0],[12,31,1,0,"e"],[12,32,1,0],[13,6,1,0,"default"],[13,13,1,0],[13,15,1,0,"e"],[14,4,1,0],[15,2,1,0],[16,2,20,0,"Object"],[16,8,20,0],[16,9,20,0,"defineProperty"],[16,23,20,0],[16,24,20,0,"exports"],[16,31,20,0],[17,4,20,0,"enumerable"],[17,14,20,0],[18,4,20,0,"get"],[18,7,20,0],[18,18,20,0,"get"],[18,19,20,0],[19,6,20,0],[19,13,20,0,"useOfflineMode"],[19,27,20,0],[20,4,20,0],[21,2,20,0],[22,2,147,2],[22,6,147,2,"_expoVirtualEnv"],[22,21,147,2],[22,24,147,2,"require"],[22,31,147,2],[22,32,147,2,"_dependencyMap"],[22,46,147,2],[23,2,5,0],[23,6,5,0,"_react"],[23,12,5,0],[23,15,5,0,"require"],[23,22,5,0],[23,23,5,0,"_dependencyMap"],[23,37,5,0],[24,2,6,0],[24,6,6,0,"_servicesOfflineService"],[24,29,6,0],[24,32,6,0,"require"],[24,39,6,0],[24,40,6,0,"_dependencyMap"],[24,54,6,0],[25,2,17,0],[25,6,17,0,"_reactNativeAsyncStorageAsyncStorage"],[25,42,17,0],[25,45,17,0,"require"],[25,52,17,0],[25,53,17,0,"_dependencyMap"],[25,67,17,0],[26,2,17,0],[26,6,17,0,"AsyncStorage"],[26,18,17,0],[26,21,17,0,"_interopDefault"],[26,36,17,0],[26,37,17,0,"_reactNativeAsyncStorageAsyncStorage"],[26,73,17,0],[27,2,18,0],[27,6,18,0,"_expoConstants"],[27,20,18,0],[27,23,18,0,"require"],[27,30,18,0],[27,31,18,0,"_dependencyMap"],[27,45,18,0],[28,2,18,0],[28,6,18,0,"Constants"],[28,15,18,0],[28,18,18,0,"_interopDefault"],[28,33,18,0],[28,34,18,0,"_expoConstants"],[28,48,18,0],[29,2,20,7],[29,8,20,13,"useOfflineMode"],[29,22,20,27],[29,25,20,30,"useOfflineMode"],[29,26,20,30],[29,31,20,36],[30,4,20,36,"_s"],[30,6,20,36],[31,4,21,2],[31,10,21,8],[31,11,21,9,"isOnline"],[31,19,21,17],[31,21,21,19,"setIsOnline"],[31,32,21,30],[31,33,21,31],[31,36,21,34],[31,40,21,34,"useState"],[31,46,21,42],[31,47,21,42,"useState"],[31,55,21,42],[31,57,21,43],[31,61,21,47],[31,62,21,48],[32,4,22,2],[32,10,22,8],[32,11,22,9,"isSyncing"],[32,20,22,18],[32,22,22,20,"setIsSyncing"],[32,34,22,32],[32,35,22,33],[32,38,22,36],[32,42,22,36,"useState"],[32,48,22,44],[32,49,22,44,"useState"],[32,57,22,44],[32,59,22,45],[32,64,22,50],[32,65,22,51],[33,4,23,2],[33,10,23,8],[33,11,23,9,"syncQueueCount"],[33,25,23,23],[33,27,23,25,"setSyncQueueCount"],[33,44,23,42],[33,45,23,43],[33,48,23,46],[33,52,23,46,"useState"],[33,58,23,54],[33,59,23,54,"useState"],[33,67,23,54],[33,69,23,55],[33,70,23,56],[33,71,23,57],[34,4,24,2],[34,10,24,8],[34,11,24,9,"lastSyncTime"],[34,23,24,21],[34,25,24,23,"setLastSyncTime"],[34,40,24,38],[34,41,24,39],[34,44,24,42],[34,48,24,42,"useState"],[34,54,24,50],[34,55,24,50,"useState"],[34,63,24,50],[34,65,24,66],[34,69,24,70],[34,70,24,71],[35,4,26,2],[35,8,26,2,"useEffect"],[35,14,26,11],[35,15,26,11,"useEffect"],[35,24,26,11],[35,26,26,12],[35,32,26,18],[36,6,27,4],[37,6,28,4],[37,10,28,4,"initNetworkListener"],[37,33,28,23],[37,34,28,23,"initNetworkListener"],[37,53,28,23],[37,55,28,24],[37,56,28,25],[39,6,30,4],[40,6,31,4,"setIsOnline"],[40,17,31,15],[40,18,31,16],[40,22,31,16,"getConnectionStatus"],[40,45,31,35],[40,46,31,35,"getConnectionStatus"],[40,65,31,35],[40,67,31,36],[40,68,31,37],[40,69,31,38],[42,6,33,4],[43,6,34,4],[43,12,34,10,"listener"],[43,20,34,18],[43,23,34,22,"online"],[43,29,34,37],[43,33,34,42],[44,8,35,6,"setIsOnline"],[44,19,35,17],[44,20,35,18,"online"],[44,26,35,24],[44,27,35,25],[45,8,36,6],[45,12,36,10,"online"],[45,18,36,16],[45,20,36,18],[46,10,37,8],[47,10,38,8,"handleAutoSync"],[47,24,38,22],[47,25,38,23],[47,26,38,24],[48,8,39,6],[49,6,40,4],[49,7,40,5],[50,6,42,4],[50,10,42,4,"addConnectionListener"],[50,33,42,25],[50,34,42,25,"addConnectionListener"],[50,55,42,25],[50,57,42,26,"listener"],[50,65,42,34],[50,66,42,35],[52,6,44,4],[53,6,45,4,"loadSyncQueueCount"],[53,24,45,22],[53,25,45,23],[53,26,45,24],[55,6,47,4],[56,6,48,4],[56,12,48,10,"interval"],[56,20,48,18],[56,23,48,21,"setInterval"],[56,34,48,32],[56,35,48,33,"loadSyncQueueCount"],[56,53,48,51],[56,55,48,53],[56,59,48,57],[56,60,48,58],[57,6,50,4],[57,13,50,11],[57,19,50,17],[58,8,51,6],[58,12,51,6,"removeConnectionListener"],[58,35,51,30],[58,36,51,30,"removeConnectionListener"],[58,60,51,30],[58,62,51,31,"listener"],[58,70,51,39],[58,71,51,40],[59,8,52,6,"clearInterval"],[59,21,52,19],[59,22,52,20,"interval"],[59,30,52,28],[59,31,52,29],[60,6,53,4],[60,7,53,5],[61,4,54,2],[61,5,54,3],[61,7,54,5],[61,9,54,7],[61,10,54,8],[62,4,56,2],[62,10,56,8,"loadSyncQueueCount"],[62,28,56,26],[62,31,56,29],[62,37,56,29,"loadSyncQueueCount"],[62,38,56,29],[62,43,56,41],[63,6,57,4],[63,10,57,8],[64,8,58,6],[64,14,58,12,"queue"],[64,19,58,17],[64,22,58,20],[64,28,58,26],[64,32,58,26,"getSyncQueue"],[64,55,58,38],[64,56,58,38,"getSyncQueue"],[64,68,58,38],[64,70,58,39],[64,71,58,40],[65,8,59,6,"setSyncQueueCount"],[65,25,59,23],[65,26,59,24,"queue"],[65,31,59,29],[65,32,59,30,"length"],[65,38,59,36],[65,39,59,37],[66,6,60,4],[66,7,60,5],[66,8,60,6],[66,15,60,13,"error"],[66,20,60,18],[66,22,60,20],[67,8,61,6,"console"],[67,15,61,13],[67,16,61,14,"error"],[67,21,61,19],[67,22,61,20],[67,48,61,46],[67,50,61,48,"error"],[67,55,61,53],[67,56,61,54],[68,6,62,4],[69,4,63,2],[69,5,63,3],[70,4,65,2],[70,10,65,8,"handleAutoSync"],[70,24,65,22],[70,27,65,25],[70,33,65,25,"handleAutoSync"],[70,34,65,25],[70,39,65,37],[71,6,66,4],[71,10,66,8],[72,8,67,6],[72,14,67,12,"token"],[72,19,67,17],[72,22,67,20],[72,28,67,26,"AsyncStorage"],[72,40,67,38],[72,41,67,38,"default"],[72,48,67,38],[72,49,67,39,"getItem"],[72,56,67,46],[72,57,67,47],[72,71,67,61],[72,72,67,62],[73,8,68,6],[73,14,68,12,"backendUrl"],[73,24,68,22],[73,27,68,25,"Constants"],[73,36,68,34],[73,37,68,34,"default"],[73,44,68,34],[73,45,68,35,"expoConfig"],[73,55,68,45],[73,57,68,47,"extra"],[73,62,68,52],[73,64,68,54,"EXPO_PUBLIC_BACKEND_URL"],[73,87,68,77],[73,91,68,77,"_expoVirtualEnv"],[73,106,68,77],[73,107,68,77,"env"],[73,110,68,77],[73,111,68,77,"EXPO_PUBLIC_BACKEND_URL"],[73,134,68,116],[73,138,68,120],[73,140,68,122],[74,8,70,6],[74,12,70,10,"token"],[74,17,70,15],[74,21,70,19,"backendUrl"],[74,31,70,29],[74,33,70,31],[75,10,71,8],[75,16,71,14,"handleManualSync"],[75,32,71,30],[75,33,71,31],[75,34,71,32],[76,8,72,6],[77,6,73,4],[77,7,73,5],[77,8,73,6],[77,15,73,13,"error"],[77,20,73,18],[77,22,73,20],[78,8,74,6,"console"],[78,15,74,13],[78,16,74,14,"error"],[78,21,74,19],[78,22,74,20],[78,41,74,39],[78,43,74,41,"error"],[78,48,74,46],[78,49,74,47],[79,6,75,4],[80,4,76,2],[80,5,76,3],[81,4,78,2],[81,10,78,8,"handleManualSync"],[81,26,78,24],[81,29,78,27],[81,35,78,27,"handleManualSync"],[81,36,78,27],[81,41,78,87],[82,6,79,4],[82,10,79,8,"isSyncing"],[82,19,79,17],[82,21,79,19],[83,8,80,6],[83,15,80,13],[84,10,80,15,"success"],[84,17,80,22],[84,19,80,24],[84,24,80,29],[85,10,80,31,"message"],[85,17,80,38],[85,19,80,40],[86,8,80,72],[86,9,80,73],[87,6,81,4],[88,6,83,4],[88,10,83,8],[88,11,83,9,"isOnline"],[88,19,83,17],[88,21,83,19],[89,8,84,6],[89,15,84,13],[90,10,84,15,"success"],[90,17,84,22],[90,19,84,24],[90,24,84,29],[91,10,84,31,"message"],[91,17,84,38],[91,19,84,40],[92,8,84,68],[92,9,84,69],[93,6,85,4],[94,6,87,4],[94,10,87,8],[95,8,88,6,"setIsSyncing"],[95,20,88,18],[95,21,88,19],[95,25,88,23],[95,26,88,24],[96,8,90,6],[96,14,90,12,"token"],[96,19,90,17],[96,22,90,20],[96,28,90,26,"AsyncStorage"],[96,40,90,38],[96,41,90,38,"default"],[96,48,90,38],[96,49,90,39,"getItem"],[96,56,90,46],[96,57,90,47],[96,71,90,61],[96,72,90,62],[97,8,91,6],[97,14,91,12,"backendUrl"],[97,24,91,22],[97,27,91,25,"Constants"],[97,36,91,34],[97,37,91,34,"default"],[97,44,91,34],[97,45,91,35,"expoConfig"],[97,55,91,45],[97,57,91,47,"extra"],[97,62,91,52],[97,64,91,54,"EXPO_PUBLIC_BACKEND_URL"],[97,87,91,77],[97,91,91,77,"_expoVirtualEnv"],[97,106,91,77],[97,107,91,77,"env"],[97,110,91,77],[97,111,91,77,"EXPO_PUBLIC_BACKEND_URL"],[97,134,91,116],[97,138,91,120],[97,140,91,122],[98,8,93,6],[98,12,93,10],[98,13,93,11,"token"],[98,18,93,16],[98,20,93,18],[99,10,94,8],[99,17,94,15],[100,12,94,17,"success"],[100,19,94,24],[100,21,94,26],[100,26,94,31],[101,12,94,33,"message"],[101,19,94,40],[101,21,94,42],[102,10,94,60],[102,11,94,61],[103,8,95,6],[104,8,97,6],[104,14,97,12,"result"],[104,20,97,18],[104,23,97,21],[104,29,97,27],[104,33,97,27,"syncQueue"],[104,56,97,36],[104,57,97,36,"syncQueue"],[104,66,97,36],[104,68,97,37,"backendUrl"],[104,78,97,47],[104,80,97,49,"token"],[104,85,97,54],[104,86,97,55],[105,8,99,6],[105,12,99,10,"result"],[105,18,99,16],[105,19,99,17,"success"],[105,26,99,24],[105,28,99,26],[106,10,100,8],[106,16,100,14,"loadSyncQueueCount"],[106,34,100,32],[106,35,100,33],[106,36,100,34],[107,10,101,8,"setLastSyncTime"],[107,25,101,23],[107,26,101,24],[107,30,101,28,"Date"],[107,34,101,32],[107,35,101,33],[107,36,101,34],[107,37,101,35,"toISOString"],[107,48,101,46],[107,49,101,47],[107,50,101,48],[107,51,101,49],[108,10,103,8],[108,14,103,12,"result"],[108,20,103,18],[108,21,103,19,"synced"],[108,27,103,25],[108,32,103,30],[108,33,103,31],[108,37,103,35,"result"],[108,43,103,41],[108,44,103,42,"errors"],[108,50,103,48],[108,55,103,53],[108,56,103,54],[108,58,103,56],[109,12,104,10],[109,19,104,17],[110,14,104,19,"success"],[110,21,104,26],[110,23,104,28],[110,27,104,32],[111,14,104,34,"message"],[111,21,104,41],[111,23,104,43],[112,12,104,74],[112,13,104,75],[113,10,105,8],[114,10,107,8],[114,17,107,15],[115,12,108,10,"success"],[115,19,108,17],[115,21,108,19],[115,25,108,23],[116,12,109,10,"message"],[116,19,109,17],[116,21,109,19],[116,24,109,22,"result"],[116,30,109,28],[116,31,109,29,"synced"],[116,37,109,35],[116,66,109,64,"result"],[116,72,109,70],[116,73,109,71,"errors"],[116,79,109,77],[116,82,109,80],[116,83,109,81],[116,86,109,84],[116,91,109,89,"result"],[116,97,109,95],[116,98,109,96,"errors"],[116,104,109,102],[116,116,109,114],[116,119,109,117],[116,121,109,119],[117,10,110,8],[117,11,110,9],[118,8,111,6],[119,8,113,6],[119,15,113,13],[120,10,113,15,"success"],[120,17,113,22],[120,19,113,24],[120,24,113,29],[121,10,113,31,"message"],[121,17,113,38],[121,19,113,40],[122,8,113,70],[122,9,113,71],[123,6,114,4],[123,7,114,5],[123,8,114,6],[123,15,114,13,"error"],[123,20,114,23],[123,22,114,25],[124,8,115,6,"console"],[124,15,115,13],[124,16,115,14,"error"],[124,21,115,19],[124,22,115,20],[124,45,115,43],[124,47,115,45,"error"],[124,52,115,50],[124,53,115,51],[125,8,116,6],[125,15,116,13],[126,10,116,15,"success"],[126,17,116,22],[126,19,116,24],[126,24,116,29],[127,10,116,31,"message"],[127,17,116,38],[127,19,116,40,"error"],[127,24,116,45],[127,25,116,46,"message"],[127,32,116,53],[127,36,116,57],[128,8,116,85],[128,9,116,86],[129,6,117,4],[129,7,117,5],[129,16,117,14],[130,8,118,6,"setIsSyncing"],[130,20,118,18],[130,21,118,19],[130,26,118,24],[130,27,118,25],[131,6,119,4],[132,4,120,2],[132,5,120,3],[133,4,122,2],[133,10,122,8,"refreshCache"],[133,22,122,20],[133,25,122,23],[133,31,122,23,"refreshCache"],[133,32,122,23],[133,37,122,53],[134,6,123,4],[134,10,123,8],[135,8,124,6],[135,14,124,12,"token"],[135,19,124,17],[135,22,124,20],[135,28,124,26,"AsyncStorage"],[135,40,124,38],[135,41,124,38,"default"],[135,48,124,38],[135,49,124,39,"getItem"],[135,56,124,46],[135,57,124,47],[135,71,124,61],[135,72,124,62],[136,8,125,6],[136,14,125,12,"backendUrl"],[136,24,125,22],[136,27,125,25,"Constants"],[136,36,125,34],[136,37,125,34,"default"],[136,44,125,34],[136,45,125,35,"expoConfig"],[136,55,125,45],[136,57,125,47,"extra"],[136,62,125,52],[136,64,125,54,"EXPO_PUBLIC_BACKEND_URL"],[136,87,125,77],[136,91,125,77,"_expoVirtualEnv"],[136,106,125,77],[136,107,125,77,"env"],[136,110,125,77],[136,111,125,77,"EXPO_PUBLIC_BACKEND_URL"],[136,134,125,116],[136,138,125,120],[136,140,125,122],[137,8,127,6],[137,12,127,10],[137,13,127,11,"token"],[137,18,127,16],[137,22,127,20],[137,23,127,21,"backendUrl"],[137,33,127,31],[137,35,127,33],[138,10,128,8],[138,17,128,15],[138,22,128,20],[139,8,129,6],[140,8,131,6],[140,15,131,13],[140,21,131,19],[140,25,131,19,"downloadCacheData"],[140,48,131,36],[140,49,131,36,"downloadCacheData"],[140,66,131,36],[140,68,131,37,"backendUrl"],[140,78,131,47],[140,80,131,49,"token"],[140,85,131,54],[140,86,131,55],[141,6,132,4],[141,7,132,5],[141,8,132,6],[141,15,132,13,"error"],[141,20,132,18],[141,22,132,20],[142,8,133,6,"console"],[142,15,133,13],[142,16,133,14,"error"],[142,21,133,19],[142,22,133,20],[142,45,133,43],[142,47,133,45,"error"],[142,52,133,50],[142,53,133,51],[143,8,134,6],[143,15,134,13],[143,20,134,18],[144,6,135,4],[145,4,136,2],[145,5,136,3],[146,4,138,2],[146,11,138,9],[147,6,139,4,"isOnline"],[147,14,139,12],[148,6,140,4,"isSyncing"],[148,15,140,13],[149,6,141,4,"syncQueueCount"],[149,20,141,18],[150,6,142,4,"lastSyncTime"],[150,18,142,16],[151,6,143,4,"handleManualSync"],[151,22,143,20],[152,6,144,4,"refreshCache"],[152,18,144,16],[153,6,145,4,"loadSyncQueueCount"],[154,4,146,2],[154,5,146,3],[155,2,147,0],[155,3,147,1],[156,2,147,2,"_s"],[156,4,147,2],[156,5,20,13,"useOfflineMode"],[156,19,20,27],[157,0,20,27],[157,3]],"functionMap":{"names":["<global>","useOfflineMode","useEffect$argument_0","listener","<anonymous>","loadSyncQueueCount","handleAutoSync","handleManualSync","refreshCache"],"mappings":"AAA;8BCmB;YCM;qBCQ;KDM;WEU;KFG;GDC;6BIE;GJO;yBKE;GLW;2BME;GN0C;uBOE;GPc;CDW"},"hasCjsExports":false},"type":"js/module"}]}