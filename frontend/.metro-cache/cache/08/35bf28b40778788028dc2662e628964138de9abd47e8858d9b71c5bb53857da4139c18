{"dependencies":[{"name":"./createHandler","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":44,"index":312},"end":{"line":9,"column":70,"index":338}}],"key":"vnZeNpfk4dR5beIf4m7dBdxoBiA=","exportNames":["*"],"imports":1}},{"name":"./gestureHandlerCommon","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":28,"index":369},"end":{"line":10,"column":61,"index":402}}],"key":"Wt1LH6Eq2kUsnfwZ0fWI3c/lrJE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGestureHandler = void 0;\n  exports.managePanProps = managePanProps;\n  exports.panHandlerName = exports.panGestureHandlerProps = exports.panGestureHandlerCustomNativeProps = void 0;\n  var _createHandler = _interopRequireDefault(require(_dependencyMap[0], \"./createHandler\"));\n  var _gestureHandlerCommon = require(_dependencyMap[1], \"./gestureHandlerCommon\");\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  const panGestureHandlerProps = exports.panGestureHandlerProps = ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture', 'activateAfterLongPress'];\n  const panGestureHandlerCustomNativeProps = exports.panGestureHandlerCustomNativeProps = ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd'];\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  const panHandlerName = exports.panHandlerName = 'PanGestureHandler';\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n\n  /**\n   * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\n  const PanGestureHandler = exports.PanGestureHandler = (0, _createHandler.default)({\n    name: panHandlerName,\n    allowedProps: [..._gestureHandlerCommon.baseGestureHandlerProps, ...panGestureHandlerProps],\n    config: {},\n    transformProps: managePanProps,\n    customNativeProps: panGestureHandlerCustomNativeProps\n  });\n  function validatePanGestureHandlerProps(props) {\n    if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n      throw new Error(`First element of activeOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n      throw new Error(`First element of activeOffsetY should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n      throw new Error(`First element of failOffsetX should be negative, a the second one should be positive`);\n    }\n    if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n      throw new Error(`First element of failOffsetY should be negative, a the second one should be positive`);\n    }\n    if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n      throw new Error(`It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead`);\n    }\n    if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n      throw new Error(`It is not supported to use minDist with activeOffsetX or activeOffsetY`);\n    }\n  }\n  function transformPanGestureHandlerProps(props) {\n    const res = {\n      ...props\n    };\n    if (props.activeOffsetX !== undefined) {\n      delete res.activeOffsetX;\n      if (Array.isArray(props.activeOffsetX)) {\n        res.activeOffsetXStart = props.activeOffsetX[0];\n        res.activeOffsetXEnd = props.activeOffsetX[1];\n      } else if (props.activeOffsetX < 0) {\n        res.activeOffsetXStart = props.activeOffsetX;\n      } else {\n        res.activeOffsetXEnd = props.activeOffsetX;\n      }\n    }\n    if (props.activeOffsetY !== undefined) {\n      delete res.activeOffsetY;\n      if (Array.isArray(props.activeOffsetY)) {\n        res.activeOffsetYStart = props.activeOffsetY[0];\n        res.activeOffsetYEnd = props.activeOffsetY[1];\n      } else if (props.activeOffsetY < 0) {\n        res.activeOffsetYStart = props.activeOffsetY;\n      } else {\n        res.activeOffsetYEnd = props.activeOffsetY;\n      }\n    }\n    if (props.failOffsetX !== undefined) {\n      delete res.failOffsetX;\n      if (Array.isArray(props.failOffsetX)) {\n        res.failOffsetXStart = props.failOffsetX[0];\n        res.failOffsetXEnd = props.failOffsetX[1];\n      } else if (props.failOffsetX < 0) {\n        res.failOffsetXStart = props.failOffsetX;\n      } else {\n        res.failOffsetXEnd = props.failOffsetX;\n      }\n    }\n    if (props.failOffsetY !== undefined) {\n      delete res.failOffsetY;\n      if (Array.isArray(props.failOffsetY)) {\n        res.failOffsetYStart = props.failOffsetY[0];\n        res.failOffsetYEnd = props.failOffsetY[1];\n      } else if (props.failOffsetY < 0) {\n        res.failOffsetYStart = props.failOffsetY;\n      } else {\n        res.failOffsetYEnd = props.failOffsetY;\n      }\n    }\n    return res;\n  }\n  function managePanProps(props) {\n    if (__DEV__) {\n      validatePanGestureHandlerProps(props);\n    }\n    return transformPanGestureHandlerProps(props);\n  }\n});","lineCount":117,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"PanGestureHandler"],[7,27,6,25],[7,30,6,28],[7,35,6,33],[7,36,6,34],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"managePanProps"],[8,24,7,22],[8,27,7,25,"managePanProps"],[8,41,7,39],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"panHandlerName"],[9,24,8,22],[9,27,8,25,"exports"],[9,34,8,32],[9,35,8,33,"panGestureHandlerProps"],[9,57,8,55],[9,60,8,58,"exports"],[9,67,8,65],[9,68,8,66,"panGestureHandlerCustomNativeProps"],[9,102,8,100],[9,105,8,103],[9,110,8,108],[9,111,8,109],[10,2,9,0],[10,6,9,4,"_createHandler"],[10,20,9,18],[10,23,9,21,"_interopRequireDefault"],[10,45,9,43],[10,46,9,44,"require"],[10,53,9,51],[10,54,9,51,"_dependencyMap"],[10,68,9,51],[10,90,9,69],[10,91,9,70],[10,92,9,71],[11,2,10,0],[11,6,10,4,"_gestureHandlerCommon"],[11,27,10,25],[11,30,10,28,"require"],[11,37,10,35],[11,38,10,35,"_dependencyMap"],[11,52,10,35],[11,81,10,60],[11,82,10,61],[12,2,11,0],[12,11,11,9,"_interopRequireDefault"],[12,33,11,31,"_interopRequireDefault"],[12,34,11,32,"e"],[12,35,11,33],[12,37,11,35],[13,4,11,37],[13,11,11,44,"e"],[13,12,11,45],[13,16,11,49,"e"],[13,17,11,50],[13,18,11,51,"__esModule"],[13,28,11,61],[13,31,11,64,"e"],[13,32,11,65],[13,35,11,68],[14,6,11,70,"default"],[14,13,11,77],[14,15,11,79,"e"],[15,4,11,81],[15,5,11,82],[16,2,11,84],[17,2,12,0],[17,8,12,6,"panGestureHandlerProps"],[17,30,12,28],[17,33,12,31,"exports"],[17,40,12,38],[17,41,12,39,"panGestureHandlerProps"],[17,63,12,61],[17,66,12,64],[17,67,12,65],[17,82,12,80],[17,84,12,82],[17,99,12,97],[17,101,12,99],[17,114,12,112],[17,116,12,114],[17,129,12,127],[17,131,12,129],[17,140,12,138],[17,142,12,140],[17,155,12,153],[17,157,12,155],[17,171,12,169],[17,173,12,171],[17,187,12,185],[17,189,12,187],[17,202,12,200],[17,204,12,202],[17,217,12,215],[17,219,12,217],[17,231,12,229],[17,233,12,231],[17,265,12,263],[17,267,12,265],[17,291,12,289],[17,292,12,290],[18,2,13,0],[18,8,13,6,"panGestureHandlerCustomNativeProps"],[18,42,13,40],[18,45,13,43,"exports"],[18,52,13,50],[18,53,13,51,"panGestureHandlerCustomNativeProps"],[18,87,13,85],[18,90,13,88],[18,91,13,89],[18,111,13,109],[18,113,13,111],[18,131,13,129],[18,133,13,131],[18,153,13,151],[18,155,13,153],[18,173,13,171],[18,175,13,173],[18,193,13,191],[18,195,13,193],[18,211,13,209],[18,213,13,211],[18,231,13,229],[18,233,13,231],[18,249,13,247],[18,250,13,248],[20,2,15,0],[21,0,16,0],[22,0,17,0],[24,2,19,0],[24,8,19,6,"panHandlerName"],[24,22,19,20],[24,25,19,23,"exports"],[24,32,19,30],[24,33,19,31,"panHandlerName"],[24,47,19,45],[24,50,19,48],[24,69,19,67],[26,2,21,0],[27,0,22,0],[28,0,23,0],[30,2,25,0],[31,0,26,0],[32,0,27,0],[33,2,28,0],[34,2,29,0],[34,8,29,6,"PanGestureHandler"],[34,25,29,23],[34,28,29,26,"exports"],[34,35,29,33],[34,36,29,34,"PanGestureHandler"],[34,53,29,51],[34,56,29,54],[34,57,29,55],[34,58,29,56],[34,60,29,58,"_createHandler"],[34,74,29,72],[34,75,29,73,"default"],[34,82,29,80],[34,84,29,82],[35,4,30,2,"name"],[35,8,30,6],[35,10,30,8,"panHandlerName"],[35,24,30,22],[36,4,31,2,"allowedProps"],[36,16,31,14],[36,18,31,16],[36,19,31,17],[36,22,31,20,"_gestureHandlerCommon"],[36,43,31,41],[36,44,31,42,"baseGestureHandlerProps"],[36,67,31,65],[36,69,31,67],[36,72,31,70,"panGestureHandlerProps"],[36,94,31,92],[36,95,31,93],[37,4,32,2,"config"],[37,10,32,8],[37,12,32,10],[37,13,32,11],[37,14,32,12],[38,4,33,2,"transformProps"],[38,18,33,16],[38,20,33,18,"managePanProps"],[38,34,33,32],[39,4,34,2,"customNativeProps"],[39,21,34,19],[39,23,34,21,"panGestureHandlerCustomNativeProps"],[40,2,35,0],[40,3,35,1],[40,4,35,2],[41,2,36,0],[41,11,36,9,"validatePanGestureHandlerProps"],[41,41,36,39,"validatePanGestureHandlerProps"],[41,42,36,40,"props"],[41,47,36,45],[41,49,36,47],[42,4,37,2],[42,8,37,6,"Array"],[42,13,37,11],[42,14,37,12,"isArray"],[42,21,37,19],[42,22,37,20,"props"],[42,27,37,25],[42,28,37,26,"activeOffsetX"],[42,41,37,39],[42,42,37,40],[42,47,37,45,"props"],[42,52,37,50],[42,53,37,51,"activeOffsetX"],[42,66,37,64],[42,67,37,65],[42,68,37,66],[42,69,37,67],[42,72,37,70],[42,73,37,71],[42,77,37,75,"props"],[42,82,37,80],[42,83,37,81,"activeOffsetX"],[42,96,37,94],[42,97,37,95],[42,98,37,96],[42,99,37,97],[42,102,37,100],[42,103,37,101],[42,104,37,102],[42,106,37,104],[43,6,38,4],[43,12,38,10],[43,16,38,14,"Error"],[43,21,38,19],[43,22,38,20],[43,110,38,108],[43,111,38,109],[44,4,39,2],[45,4,40,2],[45,8,40,6,"Array"],[45,13,40,11],[45,14,40,12,"isArray"],[45,21,40,19],[45,22,40,20,"props"],[45,27,40,25],[45,28,40,26,"activeOffsetY"],[45,41,40,39],[45,42,40,40],[45,47,40,45,"props"],[45,52,40,50],[45,53,40,51,"activeOffsetY"],[45,66,40,64],[45,67,40,65],[45,68,40,66],[45,69,40,67],[45,72,40,70],[45,73,40,71],[45,77,40,75,"props"],[45,82,40,80],[45,83,40,81,"activeOffsetY"],[45,96,40,94],[45,97,40,95],[45,98,40,96],[45,99,40,97],[45,102,40,100],[45,103,40,101],[45,104,40,102],[45,106,40,104],[46,6,41,4],[46,12,41,10],[46,16,41,14,"Error"],[46,21,41,19],[46,22,41,20],[46,110,41,108],[46,111,41,109],[47,4,42,2],[48,4,43,2],[48,8,43,6,"Array"],[48,13,43,11],[48,14,43,12,"isArray"],[48,21,43,19],[48,22,43,20,"props"],[48,27,43,25],[48,28,43,26,"failOffsetX"],[48,39,43,37],[48,40,43,38],[48,45,43,43,"props"],[48,50,43,48],[48,51,43,49,"failOffsetX"],[48,62,43,60],[48,63,43,61],[48,64,43,62],[48,65,43,63],[48,68,43,66],[48,69,43,67],[48,73,43,71,"props"],[48,78,43,76],[48,79,43,77,"failOffsetX"],[48,90,43,88],[48,91,43,89],[48,92,43,90],[48,93,43,91],[48,96,43,94],[48,97,43,95],[48,98,43,96],[48,100,43,98],[49,6,44,4],[49,12,44,10],[49,16,44,14,"Error"],[49,21,44,19],[49,22,44,20],[49,108,44,106],[49,109,44,107],[50,4,45,2],[51,4,46,2],[51,8,46,6,"Array"],[51,13,46,11],[51,14,46,12,"isArray"],[51,21,46,19],[51,22,46,20,"props"],[51,27,46,25],[51,28,46,26,"failOffsetY"],[51,39,46,37],[51,40,46,38],[51,45,46,43,"props"],[51,50,46,48],[51,51,46,49,"failOffsetY"],[51,62,46,60],[51,63,46,61],[51,64,46,62],[51,65,46,63],[51,68,46,66],[51,69,46,67],[51,73,46,71,"props"],[51,78,46,76],[51,79,46,77,"failOffsetY"],[51,90,46,88],[51,91,46,89],[51,92,46,90],[51,93,46,91],[51,96,46,94],[51,97,46,95],[51,98,46,96],[51,100,46,98],[52,6,47,4],[52,12,47,10],[52,16,47,14,"Error"],[52,21,47,19],[52,22,47,20],[52,108,47,106],[52,109,47,107],[53,4,48,2],[54,4,49,2],[54,8,49,6,"props"],[54,13,49,11],[54,14,49,12,"minDist"],[54,21,49,19],[54,26,49,24,"props"],[54,31,49,29],[54,32,49,30,"failOffsetX"],[54,43,49,41],[54,47,49,45,"props"],[54,52,49,50],[54,53,49,51,"failOffsetY"],[54,64,49,62],[54,65,49,63],[54,67,49,65],[55,6,50,4],[55,12,50,10],[55,16,50,14,"Error"],[55,21,50,19],[55,22,50,20],[55,135,50,133],[55,136,50,134],[56,4,51,2],[57,4,52,2],[57,8,52,6,"props"],[57,13,52,11],[57,14,52,12,"minDist"],[57,21,52,19],[57,26,52,24,"props"],[57,31,52,29],[57,32,52,30,"activeOffsetX"],[57,45,52,43],[57,49,52,47,"props"],[57,54,52,52],[57,55,52,53,"activeOffsetY"],[57,68,52,66],[57,69,52,67],[57,71,52,69],[58,6,53,4],[58,12,53,10],[58,16,53,14,"Error"],[58,21,53,19],[58,22,53,20],[58,94,53,92],[58,95,53,93],[59,4,54,2],[60,2,55,0],[61,2,56,0],[61,11,56,9,"transformPanGestureHandlerProps"],[61,42,56,40,"transformPanGestureHandlerProps"],[61,43,56,41,"props"],[61,48,56,46],[61,50,56,48],[62,4,57,2],[62,10,57,8,"res"],[62,13,57,11],[62,16,57,14],[63,6,58,4],[63,9,58,7,"props"],[64,4,59,2],[64,5,59,3],[65,4,60,2],[65,8,60,6,"props"],[65,13,60,11],[65,14,60,12,"activeOffsetX"],[65,27,60,25],[65,32,60,30,"undefined"],[65,41,60,39],[65,43,60,41],[66,6,61,4],[66,13,61,11,"res"],[66,16,61,14],[66,17,61,15,"activeOffsetX"],[66,30,61,28],[67,6,62,4],[67,10,62,8,"Array"],[67,15,62,13],[67,16,62,14,"isArray"],[67,23,62,21],[67,24,62,22,"props"],[67,29,62,27],[67,30,62,28,"activeOffsetX"],[67,43,62,41],[67,44,62,42],[67,46,62,44],[68,8,63,6,"res"],[68,11,63,9],[68,12,63,10,"activeOffsetXStart"],[68,30,63,28],[68,33,63,31,"props"],[68,38,63,36],[68,39,63,37,"activeOffsetX"],[68,52,63,50],[68,53,63,51],[68,54,63,52],[68,55,63,53],[69,8,64,6,"res"],[69,11,64,9],[69,12,64,10,"activeOffsetXEnd"],[69,28,64,26],[69,31,64,29,"props"],[69,36,64,34],[69,37,64,35,"activeOffsetX"],[69,50,64,48],[69,51,64,49],[69,52,64,50],[69,53,64,51],[70,6,65,4],[70,7,65,5],[70,13,65,11],[70,17,65,15,"props"],[70,22,65,20],[70,23,65,21,"activeOffsetX"],[70,36,65,34],[70,39,65,37],[70,40,65,38],[70,42,65,40],[71,8,66,6,"res"],[71,11,66,9],[71,12,66,10,"activeOffsetXStart"],[71,30,66,28],[71,33,66,31,"props"],[71,38,66,36],[71,39,66,37,"activeOffsetX"],[71,52,66,50],[72,6,67,4],[72,7,67,5],[72,13,67,11],[73,8,68,6,"res"],[73,11,68,9],[73,12,68,10,"activeOffsetXEnd"],[73,28,68,26],[73,31,68,29,"props"],[73,36,68,34],[73,37,68,35,"activeOffsetX"],[73,50,68,48],[74,6,69,4],[75,4,70,2],[76,4,71,2],[76,8,71,6,"props"],[76,13,71,11],[76,14,71,12,"activeOffsetY"],[76,27,71,25],[76,32,71,30,"undefined"],[76,41,71,39],[76,43,71,41],[77,6,72,4],[77,13,72,11,"res"],[77,16,72,14],[77,17,72,15,"activeOffsetY"],[77,30,72,28],[78,6,73,4],[78,10,73,8,"Array"],[78,15,73,13],[78,16,73,14,"isArray"],[78,23,73,21],[78,24,73,22,"props"],[78,29,73,27],[78,30,73,28,"activeOffsetY"],[78,43,73,41],[78,44,73,42],[78,46,73,44],[79,8,74,6,"res"],[79,11,74,9],[79,12,74,10,"activeOffsetYStart"],[79,30,74,28],[79,33,74,31,"props"],[79,38,74,36],[79,39,74,37,"activeOffsetY"],[79,52,74,50],[79,53,74,51],[79,54,74,52],[79,55,74,53],[80,8,75,6,"res"],[80,11,75,9],[80,12,75,10,"activeOffsetYEnd"],[80,28,75,26],[80,31,75,29,"props"],[80,36,75,34],[80,37,75,35,"activeOffsetY"],[80,50,75,48],[80,51,75,49],[80,52,75,50],[80,53,75,51],[81,6,76,4],[81,7,76,5],[81,13,76,11],[81,17,76,15,"props"],[81,22,76,20],[81,23,76,21,"activeOffsetY"],[81,36,76,34],[81,39,76,37],[81,40,76,38],[81,42,76,40],[82,8,77,6,"res"],[82,11,77,9],[82,12,77,10,"activeOffsetYStart"],[82,30,77,28],[82,33,77,31,"props"],[82,38,77,36],[82,39,77,37,"activeOffsetY"],[82,52,77,50],[83,6,78,4],[83,7,78,5],[83,13,78,11],[84,8,79,6,"res"],[84,11,79,9],[84,12,79,10,"activeOffsetYEnd"],[84,28,79,26],[84,31,79,29,"props"],[84,36,79,34],[84,37,79,35,"activeOffsetY"],[84,50,79,48],[85,6,80,4],[86,4,81,2],[87,4,82,2],[87,8,82,6,"props"],[87,13,82,11],[87,14,82,12,"failOffsetX"],[87,25,82,23],[87,30,82,28,"undefined"],[87,39,82,37],[87,41,82,39],[88,6,83,4],[88,13,83,11,"res"],[88,16,83,14],[88,17,83,15,"failOffsetX"],[88,28,83,26],[89,6,84,4],[89,10,84,8,"Array"],[89,15,84,13],[89,16,84,14,"isArray"],[89,23,84,21],[89,24,84,22,"props"],[89,29,84,27],[89,30,84,28,"failOffsetX"],[89,41,84,39],[89,42,84,40],[89,44,84,42],[90,8,85,6,"res"],[90,11,85,9],[90,12,85,10,"failOffsetXStart"],[90,28,85,26],[90,31,85,29,"props"],[90,36,85,34],[90,37,85,35,"failOffsetX"],[90,48,85,46],[90,49,85,47],[90,50,85,48],[90,51,85,49],[91,8,86,6,"res"],[91,11,86,9],[91,12,86,10,"failOffsetXEnd"],[91,26,86,24],[91,29,86,27,"props"],[91,34,86,32],[91,35,86,33,"failOffsetX"],[91,46,86,44],[91,47,86,45],[91,48,86,46],[91,49,86,47],[92,6,87,4],[92,7,87,5],[92,13,87,11],[92,17,87,15,"props"],[92,22,87,20],[92,23,87,21,"failOffsetX"],[92,34,87,32],[92,37,87,35],[92,38,87,36],[92,40,87,38],[93,8,88,6,"res"],[93,11,88,9],[93,12,88,10,"failOffsetXStart"],[93,28,88,26],[93,31,88,29,"props"],[93,36,88,34],[93,37,88,35,"failOffsetX"],[93,48,88,46],[94,6,89,4],[94,7,89,5],[94,13,89,11],[95,8,90,6,"res"],[95,11,90,9],[95,12,90,10,"failOffsetXEnd"],[95,26,90,24],[95,29,90,27,"props"],[95,34,90,32],[95,35,90,33,"failOffsetX"],[95,46,90,44],[96,6,91,4],[97,4,92,2],[98,4,93,2],[98,8,93,6,"props"],[98,13,93,11],[98,14,93,12,"failOffsetY"],[98,25,93,23],[98,30,93,28,"undefined"],[98,39,93,37],[98,41,93,39],[99,6,94,4],[99,13,94,11,"res"],[99,16,94,14],[99,17,94,15,"failOffsetY"],[99,28,94,26],[100,6,95,4],[100,10,95,8,"Array"],[100,15,95,13],[100,16,95,14,"isArray"],[100,23,95,21],[100,24,95,22,"props"],[100,29,95,27],[100,30,95,28,"failOffsetY"],[100,41,95,39],[100,42,95,40],[100,44,95,42],[101,8,96,6,"res"],[101,11,96,9],[101,12,96,10,"failOffsetYStart"],[101,28,96,26],[101,31,96,29,"props"],[101,36,96,34],[101,37,96,35,"failOffsetY"],[101,48,96,46],[101,49,96,47],[101,50,96,48],[101,51,96,49],[102,8,97,6,"res"],[102,11,97,9],[102,12,97,10,"failOffsetYEnd"],[102,26,97,24],[102,29,97,27,"props"],[102,34,97,32],[102,35,97,33,"failOffsetY"],[102,46,97,44],[102,47,97,45],[102,48,97,46],[102,49,97,47],[103,6,98,4],[103,7,98,5],[103,13,98,11],[103,17,98,15,"props"],[103,22,98,20],[103,23,98,21,"failOffsetY"],[103,34,98,32],[103,37,98,35],[103,38,98,36],[103,40,98,38],[104,8,99,6,"res"],[104,11,99,9],[104,12,99,10,"failOffsetYStart"],[104,28,99,26],[104,31,99,29,"props"],[104,36,99,34],[104,37,99,35,"failOffsetY"],[104,48,99,46],[105,6,100,4],[105,7,100,5],[105,13,100,11],[106,8,101,6,"res"],[106,11,101,9],[106,12,101,10,"failOffsetYEnd"],[106,26,101,24],[106,29,101,27,"props"],[106,34,101,32],[106,35,101,33,"failOffsetY"],[106,46,101,44],[107,6,102,4],[108,4,103,2],[109,4,104,2],[109,11,104,9,"res"],[109,14,104,12],[110,2,105,0],[111,2,106,0],[111,11,106,9,"managePanProps"],[111,25,106,23,"managePanProps"],[111,26,106,24,"props"],[111,31,106,29],[111,33,106,31],[112,4,107,2],[112,8,107,6,"__DEV__"],[112,15,107,13],[112,17,107,15],[113,6,108,4,"validatePanGestureHandlerProps"],[113,36,108,34],[113,37,108,35,"props"],[113,42,108,40],[113,43,108,41],[114,4,109,2],[115,4,110,2],[115,11,110,9,"transformPanGestureHandlerProps"],[115,42,110,40],[115,43,110,41,"props"],[115,48,110,46],[115,49,110,47],[116,2,111,0],[117,0,111,1],[117,3]],"functionMap":{"names":["<global>","_interopRequireDefault","validatePanGestureHandlerProps","transformPanGestureHandlerProps","managePanProps"],"mappings":"AAA;ACU,qFD;AEyB;CFmB;AGC;CHiD;AIC;CJK"},"hasCjsExports":true},"type":"js/module"}]}