{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":203},"end":{"line":9,"column":57,"index":260}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./internal/defaultConfiguration","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":302},"end":{"line":11,"column":68,"index":370}}],"key":"G1uCgDScaM3S5X00e27Zr8lG1Vk=","exportNames":["*"],"imports":1}},{"name":"./internal/nativeInterface","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":371},"end":{"line":12,"column":57,"index":428}}],"key":"Sp4VfNT4MoXGzcKDwaXut8oRUXA=","exportNames":["*"],"imports":1}},{"name":"./internal/state","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":429},"end":{"line":13,"column":37,"index":466}}],"key":"AJQfTgXn0K20r74TcE/30yPPOOA=","exportNames":["*"],"imports":1}},{"name":"./internal/types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":467},"end":{"line":14,"column":42,"index":509}}],"key":"uIQB1mLKV8iOTHySJkPsqOCQMhM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.configure = configure;\n  exports.fetch = fetch;\n  exports.refresh = refresh;\n  exports.addEventListener = addEventListener;\n  exports.useNetInfo = useNetInfo;\n  exports.useNetInfoInstance = useNetInfoInstance;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _internalDefaultConfiguration = require(_dependencyMap[2], \"./internal/defaultConfiguration\");\n  var DEFAULT_CONFIGURATION = _interopDefault(_internalDefaultConfiguration);\n  var _internalNativeInterface = require(_dependencyMap[3], \"./internal/nativeInterface\");\n  var NativeInterface = _interopDefault(_internalNativeInterface);\n  var _internalState = require(_dependencyMap[4], \"./internal/state\");\n  var State = _interopDefault(_internalState);\n  var _internalTypes = require(_dependencyMap[5], \"./internal/types\");\n  Object.keys(_internalTypes).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) {\n      Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () {\n          return _internalTypes[k];\n        }\n      });\n    }\n  });\n  var Types = _interopNamespace(_internalTypes);\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // Stores the currently used configuration\n\n  let _configuration = DEFAULT_CONFIGURATION.default; // Stores the singleton reference to the state manager\n\n  let _state = null;\n  const createState = () => {\n    return new State.default(_configuration);\n  }; // Track ongoing requests\n\n  let isRequestInProgress = false;\n  let requestQueue = [];\n  /**\n   * Configures the library with the given configuration. Note that calling this will stop all\n   * previously added listeners from being called again. It is best to call this right when your\n   * application is started to avoid issues. The configuration sets up a global singleton instance.\n   *\n   * @param configuration The new configuration to set.\n   */\n\n  function configure(configuration) {\n    _configuration = Object.assign({}, DEFAULT_CONFIGURATION.default, configuration);\n    if (_state) {\n      _state.tearDown();\n      _state = createState();\n    }\n    if (Platform.default.OS === 'ios') {\n      NativeInterface.default.configure(configuration);\n    }\n  }\n  /**\n   * Returns a `Promise` that resolves to a `NetInfoState` object.\n   * This function operates on the global singleton instance configured using `configure()`\n   *\n   * @param [requestedInterface] interface from which to obtain the information\n   *\n   * @returns A Promise which contains the current connection state.\n   */\n\n  function fetch(requestedInterface) {\n    if (!_state) {\n      _state = createState();\n    }\n    return _state.latest(requestedInterface);\n  }\n  /**\n   * Force-refreshes the internal state of the global singleton managed by this library.\n   *\n   * @returns A Promise which contains the updated connection state.\n   */\n\n  function refresh() {\n    if (!_state) {\n      _state = createState();\n    } // If a request is already in progress, return a promise that will resolve when the current request finishes\n\n    if (isRequestInProgress) {\n      return new Promise(resolve => {\n        requestQueue.push(resolve);\n      });\n    }\n    isRequestInProgress = true;\n    return _state._fetchCurrentState().then(result => {\n      requestQueue.forEach(resolve => resolve(result));\n      requestQueue = [];\n      return result;\n    }).finally(() => {\n      isRequestInProgress = false;\n    });\n  }\n  /**\n   * Subscribe to the global singleton's connection information. The callback is called with a parameter of type\n   * [`NetInfoState`](README.md#netinfostate) whenever the connection state changes. Your listener\n   * will be called with the latest information soon after you subscribe and then with any\n   * subsequent changes afterwards. You should not assume that the listener is called in the same\n   * way across devices or platforms.\n   *\n   * @param listener The listener which is called when the network state changes.\n   *\n   * @returns A function which can be called to unsubscribe.\n   */\n\n  function addEventListener(listener) {\n    if (!_state) {\n      _state = createState();\n    }\n    _state.add(listener);\n    return () => {\n      _state && _state.remove(listener);\n    };\n  }\n  /**\n   * A React Hook into this library's singleton which updates when the connection state changes.\n   *\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns The connection state.\n   */\n\n  function useNetInfo(configuration) {\n    if (configuration) {\n      configure(configuration);\n    }\n    const [netInfo, setNetInfo] = (0, _react.useState)({\n      type: Types.NetInfoStateType.unknown,\n      isConnected: null,\n      isInternetReachable: null,\n      details: null\n    });\n    (0, _react.useEffect)(() => {\n      const unsubscribe = addEventListener(setNetInfo);\n      return () => unsubscribe();\n    }, []);\n    return netInfo;\n  }\n  /**\n   * A React Hook which manages an isolated instance of the network info manager.\n   * This is not a hook into a singleton shared state. NetInfo.configure, NetInfo.addEventListener,\n   * NetInfo.fetch, NetInfo.refresh are performed on a global singleton and have no affect on this hook.\n   * @param {boolean} isPaused - Pause the internal network checks.\n   * @param {Partial<Types.NetInfoConfiguration>} configuration - Configure the isolated network checker managed by this hook\n   *\n   * @returns the netInfo state and a refresh function\n   */\n\n  function useNetInfoInstance(isPaused = false, configuration) {\n    const [networkInfoManager, setNetworkInfoManager] = (0, _react.useState)();\n    const [netInfo, setNetInfo] = (0, _react.useState)({\n      type: Types.NetInfoStateType.unknown,\n      isConnected: null,\n      isInternetReachable: null,\n      details: null\n    });\n    (0, _react.useEffect)(() => {\n      if (isPaused) {\n        return;\n      }\n      const config = Object.assign({}, DEFAULT_CONFIGURATION.default, configuration);\n      const state = new State.default(config);\n      setNetworkInfoManager(state);\n      state.add(setNetInfo);\n      return state.tearDown;\n    }, [isPaused, configuration]);\n    const refresh = (0, _react.useCallback)(() => {\n      if (networkInfoManager && !isRequestInProgress) {\n        isRequestInProgress = true;\n        networkInfoManager._fetchCurrentState().finally(() => {\n          isRequestInProgress = false;\n        });\n      }\n    }, [networkInfoManager]);\n    return {\n      netInfo,\n      refresh\n    };\n  }\n  var _default = {\n    configure,\n    fetch,\n    refresh,\n    addEventListener,\n    useNetInfo,\n    useNetInfoInstance\n  };\n});","lineCount":232,"map":[[27,2,187,0,"Object"],[27,8,187,0],[27,9,187,0,"defineProperty"],[27,23,187,0],[27,24,187,0,"exports"],[27,31,187,0],[28,4,187,0,"enumerable"],[28,14,187,0],[29,4,187,0,"get"],[29,7,187,0],[29,18,187,0,"get"],[29,19,187,0],[30,6,187,0],[30,13,187,0,"_default"],[30,21,187,0],[31,4,187,0],[32,2,187,0],[33,2,35,0,"exports"],[33,9,35,0],[33,10,35,0,"configure"],[33,19,35,0],[33,22,35,0,"configure"],[33,31,35,0],[34,2,59,0,"exports"],[34,9,59,0],[34,10,59,0,"fetch"],[34,15,59,0],[34,18,59,0,"fetch"],[34,23,59,0],[35,2,72,0,"exports"],[35,9,72,0],[35,10,72,0,"refresh"],[35,17,72,0],[35,20,72,0,"refresh"],[35,27,72,0],[36,2,105,0,"exports"],[36,9,105,0],[36,10,105,0,"addEventListener"],[36,26,105,0],[36,29,105,0,"addEventListener"],[36,45,105,0],[37,2,124,0,"exports"],[37,9,124,0],[37,10,124,0,"useNetInfo"],[37,20,124,0],[37,23,124,0,"useNetInfo"],[37,33,124,0],[38,2,151,0,"exports"],[38,9,151,0],[38,10,151,0,"useNetInfoInstance"],[38,28,151,0],[38,31,151,0,"useNetInfoInstance"],[38,49,151,0],[39,2,9,0],[39,6,9,0,"_react"],[39,12,9,0],[39,15,9,0,"require"],[39,22,9,0],[39,23,9,0,"_dependencyMap"],[39,37,9,0],[40,2,9,57],[40,6,9,57,"_reactNativeWebDistExportsPlatform"],[40,40,9,57],[40,43,9,57,"require"],[40,50,9,57],[40,51,9,57,"_dependencyMap"],[40,65,9,57],[41,2,9,57],[41,6,9,57,"Platform"],[41,14,9,57],[41,17,9,57,"_interopDefault"],[41,32,9,57],[41,33,9,57,"_reactNativeWebDistExportsPlatform"],[41,67,9,57],[42,2,11,0],[42,6,11,0,"_internalDefaultConfiguration"],[42,35,11,0],[42,38,11,0,"require"],[42,45,11,0],[42,46,11,0,"_dependencyMap"],[42,60,11,0],[43,2,11,0],[43,6,11,0,"DEFAULT_CONFIGURATION"],[43,27,11,0],[43,30,11,0,"_interopDefault"],[43,45,11,0],[43,46,11,0,"_internalDefaultConfiguration"],[43,75,11,0],[44,2,12,0],[44,6,12,0,"_internalNativeInterface"],[44,30,12,0],[44,33,12,0,"require"],[44,40,12,0],[44,41,12,0,"_dependencyMap"],[44,55,12,0],[45,2,12,0],[45,6,12,0,"NativeInterface"],[45,21,12,0],[45,24,12,0,"_interopDefault"],[45,39,12,0],[45,40,12,0,"_internalNativeInterface"],[45,64,12,0],[46,2,13,0],[46,6,13,0,"_internalState"],[46,20,13,0],[46,23,13,0,"require"],[46,30,13,0],[46,31,13,0,"_dependencyMap"],[46,45,13,0],[47,2,13,0],[47,6,13,0,"State"],[47,11,13,0],[47,14,13,0,"_interopDefault"],[47,29,13,0],[47,30,13,0,"_internalState"],[47,44,13,0],[48,2,14,0],[48,6,14,0,"_internalTypes"],[48,20,14,0],[48,23,14,0,"require"],[48,30,14,0],[48,31,14,0,"_dependencyMap"],[48,45,14,0],[49,2,186,0,"Object"],[49,8,186,0],[49,9,186,0,"keys"],[49,13,186,0],[49,14,186,0,"_internalTypes"],[49,28,186,0],[49,30,186,0,"forEach"],[49,37,186,0],[49,48,186,0,"k"],[49,49,186,0],[50,4,186,0],[50,8,186,0,"k"],[50,9,186,0],[50,28,186,0,"Object"],[50,34,186,0],[50,35,186,0,"prototype"],[50,44,186,0],[50,45,186,0,"hasOwnProperty"],[50,59,186,0],[50,60,186,0,"call"],[50,64,186,0],[50,65,186,0,"exports"],[50,72,186,0],[50,74,186,0,"k"],[50,75,186,0],[51,6,186,0,"Object"],[51,12,186,0],[51,13,186,0,"defineProperty"],[51,27,186,0],[51,28,186,0,"exports"],[51,35,186,0],[51,37,186,0,"k"],[51,38,186,0],[52,8,186,0,"enumerable"],[52,18,186,0],[53,8,186,0,"get"],[53,11,186,0],[53,22,186,0,"get"],[53,23,186,0],[54,10,186,0],[54,17,186,0,"_internalTypes"],[54,31,186,0],[54,32,186,0,"k"],[54,33,186,0],[55,8,186,0],[56,6,186,0],[57,4,186,0],[58,2,186,0],[59,2,14,0],[59,6,14,0,"Types"],[59,11,14,0],[59,14,14,0,"_interopNamespace"],[59,31,14,0],[59,32,14,0,"_internalTypes"],[59,46,14,0],[60,2,1,0],[61,0,2,0],[62,0,3,0],[63,0,4,0],[64,0,5,0],[65,0,6,0],[66,0,7,0],[67,0,8,0],[69,2,14,43],[71,2,16,0],[71,6,16,4,"_configuration"],[71,20,16,18],[71,23,16,21,"DEFAULT_CONFIGURATION"],[71,44,16,42],[71,45,16,42,"default"],[71,52,16,42],[71,53,16,43],[71,54,16,44],[73,2,18,0],[73,6,18,4,"_state"],[73,12,18,10],[73,15,18,13],[73,19,18,17],[74,2,20,0],[74,8,20,6,"createState"],[74,19,20,17],[74,22,20,20,"createState"],[74,23,20,20],[74,28,20,26],[75,4,21,2],[75,11,21,9],[75,15,21,13,"State"],[75,20,21,18],[75,21,21,18,"default"],[75,28,21,18],[75,29,21,19,"_configuration"],[75,43,21,33],[75,44,21,34],[76,2,22,0],[76,3,22,1],[76,4,22,2],[76,5,22,3],[78,2,25,0],[78,6,25,4,"isRequestInProgress"],[78,25,25,23],[78,28,25,26],[78,33,25,31],[79,2,26,0],[79,6,26,4,"requestQueue"],[79,18,26,16],[79,21,26,19],[79,23,26,21],[80,2,27,0],[81,0,28,0],[82,0,29,0],[83,0,30,0],[84,0,31,0],[85,0,32,0],[86,0,33,0],[88,2,35,7],[88,11,35,16,"configure"],[88,20,35,25,"configure"],[88,21,35,26,"configuration"],[88,34,35,39],[88,36,35,41],[89,4,36,2,"_configuration"],[89,18,36,16],[89,21,36,16,"Object"],[89,27,36,16],[89,28,36,16,"assign"],[89,34,36,16],[89,39,36,24,"DEFAULT_CONFIGURATION"],[89,60,36,45],[89,61,36,45,"default"],[89,68,36,45],[89,70,37,7,"configuration"],[89,83,37,20],[89,84,38,3],[90,4,40,2],[90,8,40,6,"_state"],[90,14,40,12],[90,16,40,14],[91,6,41,4,"_state"],[91,12,41,10],[91,13,41,11,"tearDown"],[91,21,41,19],[91,22,41,20],[91,23,41,21],[92,6,43,4,"_state"],[92,12,43,10],[92,15,43,13,"createState"],[92,26,43,24],[92,27,43,25],[92,28,43,26],[93,4,44,2],[94,4,46,2],[94,8,46,6,"Platform"],[94,16,46,14],[94,17,46,14,"default"],[94,24,46,14],[94,25,46,15,"OS"],[94,27,46,17],[94,32,46,22],[94,37,46,27],[94,39,46,29],[95,6,47,4,"NativeInterface"],[95,21,47,19],[95,22,47,19,"default"],[95,29,47,19],[95,30,47,20,"configure"],[95,39,47,29],[95,40,47,30,"configuration"],[95,53,47,43],[95,54,47,44],[96,4,48,2],[97,2,49,0],[98,2,50,0],[99,0,51,0],[100,0,52,0],[101,0,53,0],[102,0,54,0],[103,0,55,0],[104,0,56,0],[105,0,57,0],[107,2,59,7],[107,11,59,16,"fetch"],[107,16,59,21,"fetch"],[107,17,59,22,"requestedInterface"],[107,35,59,40],[107,37,59,42],[108,4,60,2],[108,8,60,6],[108,9,60,7,"_state"],[108,15,60,13],[108,17,60,15],[109,6,61,4,"_state"],[109,12,61,10],[109,15,61,13,"createState"],[109,26,61,24],[109,27,61,25],[109,28,61,26],[110,4,62,2],[111,4,64,2],[111,11,64,9,"_state"],[111,17,64,15],[111,18,64,16,"latest"],[111,24,64,22],[111,25,64,23,"requestedInterface"],[111,43,64,41],[111,44,64,42],[112,2,65,0],[113,2,66,0],[114,0,67,0],[115,0,68,0],[116,0,69,0],[117,0,70,0],[119,2,72,7],[119,11,72,16,"refresh"],[119,18,72,23,"refresh"],[119,19,72,23],[119,21,72,26],[120,4,73,2],[120,8,73,6],[120,9,73,7,"_state"],[120,15,73,13],[120,17,73,15],[121,6,74,4,"_state"],[121,12,74,10],[121,15,74,13,"createState"],[121,26,74,24],[121,27,74,25],[121,28,74,26],[122,4,75,2],[122,5,75,3],[122,6,75,4],[124,4,78,2],[124,8,78,6,"isRequestInProgress"],[124,27,78,25],[124,29,78,27],[125,6,79,4],[125,13,79,11],[125,17,79,15,"Promise"],[125,24,79,22],[125,25,79,23,"resolve"],[125,32,79,30],[125,36,79,34],[126,8,80,6,"requestQueue"],[126,20,80,18],[126,21,80,19,"push"],[126,25,80,23],[126,26,80,24,"resolve"],[126,33,80,31],[126,34,80,32],[127,6,81,4],[127,7,81,5],[127,8,81,6],[128,4,82,2],[129,4,84,2,"isRequestInProgress"],[129,23,84,21],[129,26,84,24],[129,30,84,28],[130,4,85,2],[130,11,85,9,"_state"],[130,17,85,15],[130,18,85,16,"_fetchCurrentState"],[130,36,85,34],[130,37,85,35],[130,38,85,36],[130,39,85,37,"then"],[130,43,85,41],[130,44,85,42,"result"],[130,50,85,48],[130,54,85,52],[131,6,86,4,"requestQueue"],[131,18,86,16],[131,19,86,17,"forEach"],[131,26,86,24],[131,27,86,25,"resolve"],[131,34,86,32],[131,38,86,36,"resolve"],[131,45,86,43],[131,46,86,44,"result"],[131,52,86,50],[131,53,86,51],[131,54,86,52],[132,6,87,4,"requestQueue"],[132,18,87,16],[132,21,87,19],[132,23,87,21],[133,6,88,4],[133,13,88,11,"result"],[133,19,88,17],[134,4,89,2],[134,5,89,3],[134,6,89,4],[134,7,89,5,"finally"],[134,14,89,12],[134,15,89,13],[134,21,89,19],[135,6,90,4,"isRequestInProgress"],[135,25,90,23],[135,28,90,26],[135,33,90,31],[136,4,91,2],[136,5,91,3],[136,6,91,4],[137,2,92,0],[138,2,93,0],[139,0,94,0],[140,0,95,0],[141,0,96,0],[142,0,97,0],[143,0,98,0],[144,0,99,0],[145,0,100,0],[146,0,101,0],[147,0,102,0],[148,0,103,0],[150,2,105,7],[150,11,105,16,"addEventListener"],[150,27,105,32,"addEventListener"],[150,28,105,33,"listener"],[150,36,105,41],[150,38,105,43],[151,4,106,2],[151,8,106,6],[151,9,106,7,"_state"],[151,15,106,13],[151,17,106,15],[152,6,107,4,"_state"],[152,12,107,10],[152,15,107,13,"createState"],[152,26,107,24],[152,27,107,25],[152,28,107,26],[153,4,108,2],[154,4,110,2,"_state"],[154,10,110,8],[154,11,110,9,"add"],[154,14,110,12],[154,15,110,13,"listener"],[154,23,110,21],[154,24,110,22],[155,4,112,2],[155,11,112,9],[155,17,112,15],[156,6,113,4,"_state"],[156,12,113,10],[156,16,113,14,"_state"],[156,22,113,20],[156,23,113,21,"remove"],[156,29,113,27],[156,30,113,28,"listener"],[156,38,113,36],[156,39,113,37],[157,4,114,2],[157,5,114,3],[158,2,115,0],[159,2,116,0],[160,0,117,0],[161,0,118,0],[162,0,119,0],[163,0,120,0],[164,0,121,0],[165,0,122,0],[167,2,124,7],[167,11,124,16,"useNetInfo"],[167,21,124,26,"useNetInfo"],[167,22,124,27,"configuration"],[167,35,124,40],[167,37,124,42],[168,4,125,2],[168,8,125,6,"configuration"],[168,21,125,19],[168,23,125,21],[169,6,126,4,"configure"],[169,15,126,13],[169,16,126,14,"configuration"],[169,29,126,27],[169,30,126,28],[170,4,127,2],[171,4,129,2],[171,10,129,8],[171,11,129,9,"netInfo"],[171,18,129,16],[171,20,129,18,"setNetInfo"],[171,30,129,28],[171,31,129,29],[171,34,129,32],[171,38,129,32,"useState"],[171,44,129,40],[171,45,129,40,"useState"],[171,53,129,40],[171,55,129,41],[172,6,130,4,"type"],[172,10,130,8],[172,12,130,10,"Types"],[172,17,130,15],[172,18,130,16,"NetInfoStateType"],[172,34,130,32],[172,35,130,33,"unknown"],[172,42,130,40],[173,6,131,4,"isConnected"],[173,17,131,15],[173,19,131,17],[173,23,131,21],[174,6,132,4,"isInternetReachable"],[174,25,132,23],[174,27,132,25],[174,31,132,29],[175,6,133,4,"details"],[175,13,133,11],[175,15,133,13],[176,4,134,2],[176,5,134,3],[176,6,134,4],[177,4,135,2],[177,8,135,2,"useEffect"],[177,14,135,11],[177,15,135,11,"useEffect"],[177,24,135,11],[177,26,135,12],[177,32,135,18],[178,6,136,4],[178,12,136,10,"unsubscribe"],[178,23,136,21],[178,26,136,24,"addEventListener"],[178,42,136,40],[178,43,136,41,"setNetInfo"],[178,53,136,51],[178,54,136,52],[179,6,137,4],[179,13,137,11],[179,19,137,17,"unsubscribe"],[179,30,137,28],[179,31,137,29],[179,32,137,30],[180,4,138,2],[180,5,138,3],[180,7,138,5],[180,9,138,7],[180,10,138,8],[181,4,139,2],[181,11,139,9,"netInfo"],[181,18,139,16],[182,2,140,0],[183,2,141,0],[184,0,142,0],[185,0,143,0],[186,0,144,0],[187,0,145,0],[188,0,146,0],[189,0,147,0],[190,0,148,0],[191,0,149,0],[193,2,151,7],[193,11,151,16,"useNetInfoInstance"],[193,29,151,34,"useNetInfoInstance"],[193,30,151,35,"isPaused"],[193,38,151,43],[193,41,151,46],[193,46,151,51],[193,48,151,53,"configuration"],[193,61,151,66],[193,63,151,68],[194,4,152,2],[194,10,152,8],[194,11,152,9,"networkInfoManager"],[194,29,152,27],[194,31,152,29,"setNetworkInfoManager"],[194,52,152,50],[194,53,152,51],[194,56,152,54],[194,60,152,54,"useState"],[194,66,152,62],[194,67,152,62,"useState"],[194,75,152,62],[194,77,152,63],[194,78,152,64],[195,4,153,2],[195,10,153,8],[195,11,153,9,"netInfo"],[195,18,153,16],[195,20,153,18,"setNetInfo"],[195,30,153,28],[195,31,153,29],[195,34,153,32],[195,38,153,32,"useState"],[195,44,153,40],[195,45,153,40,"useState"],[195,53,153,40],[195,55,153,41],[196,6,154,4,"type"],[196,10,154,8],[196,12,154,10,"Types"],[196,17,154,15],[196,18,154,16,"NetInfoStateType"],[196,34,154,32],[196,35,154,33,"unknown"],[196,42,154,40],[197,6,155,4,"isConnected"],[197,17,155,15],[197,19,155,17],[197,23,155,21],[198,6,156,4,"isInternetReachable"],[198,25,156,23],[198,27,156,25],[198,31,156,29],[199,6,157,4,"details"],[199,13,157,11],[199,15,157,13],[200,4,158,2],[200,5,158,3],[200,6,158,4],[201,4,159,2],[201,8,159,2,"useEffect"],[201,14,159,11],[201,15,159,11,"useEffect"],[201,24,159,11],[201,26,159,12],[201,32,159,18],[202,6,160,4],[202,10,160,8,"isPaused"],[202,18,160,16],[202,20,160,18],[203,8,161,6],[204,6,162,4],[205,6,164,4],[205,12,164,10,"config"],[205,18,164,16],[205,21,164,16,"Object"],[205,27,164,16],[205,28,164,16,"assign"],[205,34,164,16],[205,39,164,24,"DEFAULT_CONFIGURATION"],[205,60,164,45],[205,61,164,45,"default"],[205,68,164,45],[205,70,165,9,"configuration"],[205,83,165,22],[205,84,166,5],[206,6,167,4],[206,12,167,10,"state"],[206,17,167,15],[206,20,167,18],[206,24,167,22,"State"],[206,29,167,27],[206,30,167,27,"default"],[206,37,167,27],[206,38,167,28,"config"],[206,44,167,34],[206,45,167,35],[207,6,168,4,"setNetworkInfoManager"],[207,27,168,25],[207,28,168,26,"state"],[207,33,168,31],[207,34,168,32],[208,6,169,4,"state"],[208,11,169,9],[208,12,169,10,"add"],[208,15,169,13],[208,16,169,14,"setNetInfo"],[208,26,169,24],[208,27,169,25],[209,6,170,4],[209,13,170,11,"state"],[209,18,170,16],[209,19,170,17,"tearDown"],[209,27,170,25],[210,4,171,2],[210,5,171,3],[210,7,171,5],[210,8,171,6,"isPaused"],[210,16,171,14],[210,18,171,16,"configuration"],[210,31,171,29],[210,32,171,30],[210,33,171,31],[211,4,172,2],[211,10,172,8,"refresh"],[211,17,172,15],[211,20,172,18],[211,24,172,18,"useCallback"],[211,30,172,29],[211,31,172,29,"useCallback"],[211,42,172,29],[211,44,172,30],[211,50,172,36],[212,6,173,4],[212,10,173,8,"networkInfoManager"],[212,28,173,26],[212,32,173,30],[212,33,173,31,"isRequestInProgress"],[212,52,173,50],[212,54,173,52],[213,8,174,6,"isRequestInProgress"],[213,27,174,25],[213,30,174,28],[213,34,174,32],[214,8,176,6,"networkInfoManager"],[214,26,176,24],[214,27,176,25,"_fetchCurrentState"],[214,45,176,43],[214,46,176,44],[214,47,176,45],[214,48,176,46,"finally"],[214,55,176,53],[214,56,176,54],[214,62,176,60],[215,10,177,8,"isRequestInProgress"],[215,29,177,27],[215,32,177,30],[215,37,177,35],[216,8,178,6],[216,9,178,7],[216,10,178,8],[217,6,179,4],[218,4,180,2],[218,5,180,3],[218,7,180,5],[218,8,180,6,"networkInfoManager"],[218,26,180,24],[218,27,180,25],[218,28,180,26],[219,4,181,2],[219,11,181,9],[220,6,182,4,"netInfo"],[220,13,182,11],[221,6,183,4,"refresh"],[222,4,184,2],[222,5,184,3],[223,2,185,0],[224,2,187,0],[224,6,187,0,"_default"],[224,14,187,0],[224,17,187,15],[225,4,188,2,"configure"],[225,13,188,11],[226,4,189,2,"fetch"],[226,9,189,7],[227,4,190,2,"refresh"],[227,11,190,9],[228,4,191,2,"addEventListener"],[228,20,191,18],[229,4,192,2,"useNetInfo"],[229,14,192,12],[230,4,193,2,"useNetInfoInstance"],[231,2,194,0],[231,3,194,1],[232,0,194,2],[232,3]],"functionMap":{"names":["<global>","createState","configure","fetch","refresh","Promise$argument_0","_state._fetchCurrentState.then$argument_0","requestQueue.forEach$argument_0","_state._fetchCurrentState.then._finally$argument_0","addEventListener","<anonymous>","useNetInfo","useEffect$argument_0","useNetInfoInstance","networkInfoManager._fetchCurrentState._finally$argument_0"],"mappings":"AAA;oBCmB;CDE;OEa;CFc;OGU;CHM;OIO;uBCO;KDE;0CEI;yBCC,0BD;GFG,UI;GJE;CJC;OSa;SCO;GDE;CTC;OWS;YCW;WFE,mBE;GDC;CXE;OaW;YDQ;GCY;8BTC;sDUI;OVE;GSE;CbK"},"hasCjsExports":false},"type":"js/module"}]}