{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":119},"end":{"line":5,"column":66,"index":185}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":186},"end":{"line":6,"column":63,"index":249}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":250},"end":{"line":7,"column":33,"index":283}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":284},"end":{"line":8,"column":108,"index":392}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":393},"end":{"line":9,"column":56,"index":449}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":450},"end":{"line":10,"column":64,"index":514}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":515},"end":{"line":11,"column":47,"index":562}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":563},"end":{"line":12,"column":81,"index":644}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":645},"end":{"line":13,"column":43,"index":688}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":689},"end":{"line":14,"column":64,"index":753}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":754},"end":{"line":15,"column":77,"index":831}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":832},"end":{"line":16,"column":55,"index":887}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":888},"end":{"line":17,"column":49,"index":937}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":938},"end":{"line":18,"column":48,"index":986}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsUIManager = require(_dependencyMap[2], \"react-native-web/dist/exports/UIManager\");\n  var UIManager = _interopDefault(_reactNativeWebDistExportsUIManager);\n  var _reactNativeWebDistExportsDeviceEventEmitter = require(_dependencyMap[3], \"react-native-web/dist/exports/DeviceEventEmitter\");\n  var DeviceEventEmitter = _interopDefault(_reactNativeWebDistExportsDeviceEventEmitter);\n  var _customDirectEventTypes = require(_dependencyMap[4], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = require(_dependencyMap[5], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[6], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[7], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[8], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[9], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[10], \"../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[11], \"../utils\");\n  var _ActionType = require(_dependencyMap[12], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[13], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[14], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[15], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[16], \"../mountRegistry\");\n  var _reactJsxRuntime = require(_dependencyMap[17], \"react/jsx-runtime\");\n  const UIManagerAny = UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  const UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  const {\n    setJSResponder: oldSetJSResponder = () => {\n      // no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {\n      // no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && Platform.default.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      static displayName = name;\n      static contextType = GestureHandlerRootViewContext.default;\n      handlerTag = -1;\n      constructor(props) {\n        super(props);\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        this.inspectorToggleListener?.remove();\n        this.isMountedRef.current = false;\n        if (Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)();\n        // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      onGestureHandlerEvent = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onGestureEvent === 'function') {\n            this.props.onGestureEvent?.(event);\n          }\n        } else {\n          this.props.onGestureHandlerEvent?.(event);\n        }\n      };\n\n      // TODO(TS) - make sure this is right type for event\n      onGestureHandlerStateChange = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onHandlerStateChange === 'function') {\n            this.props.onHandlerStateChange?.(event);\n          }\n          const state = event.nativeEvent.state;\n          const stateEventName = stateToPropMappings[state];\n          const eventHandler = stateEventName && this.props[stateEventName];\n          if (eventHandler && typeof eventHandler === 'function') {\n            eventHandler(event);\n          }\n        } else {\n          this.props.onGestureHandlerStateChange?.(event);\n        }\n      };\n      refHandler = node => {\n        this.viewNode = node;\n        const child = React.Children.only(this.props.children);\n        // @ts-ignore Since React 19 ref is accessible as standard prop\n        // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n        const ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n        if (!ref) {\n          return;\n        }\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      };\n      createGestureHandler = newConfig => {\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = newConfig;\n        RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n      };\n      attachGestureHandler = newViewTag => {\n        this.viewTag = newViewTag;\n        if (Platform.default.OS === 'web') {\n          // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n          RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n          // ignored on web\n          this.propsRef);\n        } else {\n          (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n            onGestureEvent: this.onGestureHandlerEvent,\n            onGestureStateChange: this.onGestureHandlerStateChange\n          });\n          const actionType = (() => {\n            const onGestureEvent = this.props?.onGestureEvent;\n            const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n            const onHandlerStateChange = this.props?.onHandlerStateChange;\n            const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n            const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n            if (isReanimatedHandler) {\n              // Reanimated worklet\n              return _ActionType.ActionType.REANIMATED_WORKLET;\n            } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n              // Animated.event with useNativeDriver: true\n              return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n            } else {\n              // JS callback or Animated.event with useNativeDriver: false\n              return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n            }\n          })();\n          RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n        }\n        (0, _utils.scheduleFlushOperations)();\n        (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n          _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n        });\n      };\n      updateGestureHandler = newConfig => {\n        this.config = newConfig;\n        RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n        (0, _utils.scheduleFlushOperations)();\n      };\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props;\n\n        // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n\n      // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      setNativeProps(updates) {\n        const mergedProps = {\n          ...this.props,\n          ...updates\n        };\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/(0, _reactJsxRuntime.jsx)(_PressabilityDebugView.PressabilityDebugView, {\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }, \"pressabilityDebugView\"));\n        }\n        return /*#__PURE__*/React.cloneElement(child, {\n          ref: this.refHandler,\n          collapsable: false,\n          ...((0, _utils2.isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}),\n          testID: this.props.testID ?? child.props.testID,\n          ...events\n        }, grandChildren);\n      }\n    }\n    return Handler;\n  }\n});","lineCount":426,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13],[11,10,1,13,"d"],[11,11,1,13],[11,14,1,13,"Object"],[11,20,1,13],[11,21,1,13,"getOwnPropertyDescriptor"],[11,45,1,13],[11,46,1,13,"e"],[11,47,1,13],[11,49,1,13,"k"],[11,50,1,13],[12,6,1,13,"Object"],[12,12,1,13],[12,13,1,13,"defineProperty"],[12,27,1,13],[12,28,1,13,"n"],[12,29,1,13],[12,31,1,13,"k"],[12,32,1,13],[12,34,1,13,"d"],[12,35,1,13],[12,36,1,13,"get"],[12,39,1,13],[12,42,1,13,"d"],[12,43,1,13],[13,8,1,13,"enumerable"],[13,18,1,13],[14,8,1,13,"get"],[14,11,1,13],[14,22,1,13,"get"],[14,23,1,13],[15,10,1,13],[15,17,1,13,"e"],[15,18,1,13],[15,19,1,13,"k"],[15,20,1,13],[16,8,1,13],[17,6,1,13],[18,4,1,13],[19,4,1,13,"n"],[19,5,1,13],[19,6,1,13,"default"],[19,13,1,13],[19,16,1,13,"e"],[19,17,1,13],[20,4,1,13],[20,11,1,13,"n"],[20,12,1,13],[21,2,1,13],[22,2,1,13],[22,11,1,13,"_interopDefault"],[22,27,1,13,"e"],[22,28,1,13],[23,4,1,13],[23,11,1,13,"e"],[23,12,1,13],[23,16,1,13,"e"],[23,17,1,13],[23,18,1,13,"__esModule"],[23,28,1,13],[23,31,1,13,"e"],[23,32,1,13],[24,6,1,13,"default"],[24,13,1,13],[24,15,1,13,"e"],[25,4,1,13],[26,2,1,13],[27,2,115,15,"Object"],[27,8,115,15],[27,9,115,15,"defineProperty"],[27,23,115,15],[27,24,115,15,"exports"],[27,31,115,15],[28,4,115,15,"enumerable"],[28,14,115,15],[29,4,115,15,"get"],[29,7,115,15],[29,18,115,15,"get"],[29,19,115,15],[30,6,115,15],[30,13,115,15,"createHandler"],[30,26,115,15],[31,4,115,15],[32,2,115,15],[33,2,3,0],[33,6,3,0,"_react"],[33,12,3,0],[33,15,3,0,"require"],[33,22,3,0],[33,23,3,0,"_dependencyMap"],[33,37,3,0],[34,2,3,0],[34,6,3,0,"React"],[34,11,3,0],[34,14,3,0,"_interopNamespace"],[34,31,3,0],[34,32,3,0,"_react"],[34,38,3,0],[35,2,3,31],[35,6,3,31,"_reactNativeWebDistExportsPlatform"],[35,40,3,31],[35,43,3,31,"require"],[35,50,3,31],[35,51,3,31,"_dependencyMap"],[35,65,3,31],[36,2,3,31],[36,6,3,31,"Platform"],[36,14,3,31],[36,17,3,31,"_interopDefault"],[36,32,3,31],[36,33,3,31,"_reactNativeWebDistExportsPlatform"],[36,67,3,31],[37,2,3,31],[37,6,3,31,"_reactNativeWebDistExportsUIManager"],[37,41,3,31],[37,44,3,31,"require"],[37,51,3,31],[37,52,3,31,"_dependencyMap"],[37,66,3,31],[38,2,3,31],[38,6,3,31,"UIManager"],[38,15,3,31],[38,18,3,31,"_interopDefault"],[38,33,3,31],[38,34,3,31,"_reactNativeWebDistExportsUIManager"],[38,69,3,31],[39,2,3,31],[39,6,3,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[39,50,3,31],[39,53,3,31,"require"],[39,60,3,31],[39,61,3,31,"_dependencyMap"],[39,75,3,31],[40,2,3,31],[40,6,3,31,"DeviceEventEmitter"],[40,24,3,31],[40,27,3,31,"_interopDefault"],[40,42,3,31],[40,43,3,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[40,87,3,31],[41,2,5,0],[41,6,5,0,"_customDirectEventTypes"],[41,29,5,0],[41,32,5,0,"require"],[41,39,5,0],[41,40,5,0,"_dependencyMap"],[41,54,5,0],[42,2,6,0],[42,6,6,0,"_RNGestureHandlerModule"],[42,29,6,0],[42,32,6,0,"require"],[42,39,6,0],[42,40,6,0,"_dependencyMap"],[42,54,6,0],[43,2,6,0],[43,6,6,0,"RNGestureHandlerModule"],[43,28,6,0],[43,31,6,0,"_interopDefault"],[43,46,6,0],[43,47,6,0,"_RNGestureHandlerModule"],[43,70,6,0],[44,2,7,0],[44,6,7,0,"_State"],[44,12,7,0],[44,15,7,0,"require"],[44,22,7,0],[44,23,7,0,"_dependencyMap"],[44,37,7,0],[45,2,8,0],[45,6,8,0,"_handlersRegistry"],[45,23,8,0],[45,26,8,0,"require"],[45,33,8,0],[45,34,8,0,"_dependencyMap"],[45,48,8,0],[46,2,9,0],[46,6,9,0,"_getNextHandlerTag"],[46,24,9,0],[46,27,9,0,"require"],[46,34,9,0],[46,35,9,0,"_dependencyMap"],[46,49,9,0],[47,2,10,0],[47,6,10,0,"_utils"],[47,12,10,0],[47,15,10,0,"require"],[47,22,10,0],[47,23,10,0,"_dependencyMap"],[47,37,10,0],[48,2,11,0],[48,6,11,0,"_findNodeHandle"],[48,21,11,0],[48,24,11,0,"require"],[48,31,11,0],[48,32,11,0,"_dependencyMap"],[48,46,11,0],[49,2,11,0],[49,6,11,0,"findNodeHandle"],[49,20,11,0],[49,23,11,0,"_interopDefault"],[49,38,11,0],[49,39,11,0,"_findNodeHandle"],[49,54,11,0],[50,2,12,0],[50,6,12,0,"_utils2"],[50,13,12,0],[50,16,12,0,"require"],[50,23,12,0],[50,24,12,0,"_dependencyMap"],[50,38,12,0],[51,2,13,0],[51,6,13,0,"_ActionType"],[51,17,13,0],[51,20,13,0,"require"],[51,27,13,0],[51,28,13,0,"_dependencyMap"],[51,42,13,0],[52,2,14,0],[52,6,14,0,"_PressabilityDebugView"],[52,28,14,0],[52,31,14,0,"require"],[52,38,14,0],[52,39,14,0,"_dependencyMap"],[52,53,14,0],[53,2,15,0],[53,6,15,0,"_GestureHandlerRootViewContext"],[53,36,15,0],[53,39,15,0,"require"],[53,46,15,0],[53,47,15,0,"_dependencyMap"],[53,61,15,0],[54,2,15,0],[54,6,15,0,"GestureHandlerRootViewContext"],[54,35,15,0],[54,38,15,0,"_interopDefault"],[54,53,15,0],[54,54,15,0,"_GestureHandlerRootViewContext"],[54,84,15,0],[55,2,16,0],[55,6,16,0,"_ghQueueMicrotask"],[55,23,16,0],[55,26,16,0,"require"],[55,33,16,0],[55,34,16,0,"_dependencyMap"],[55,48,16,0],[56,2,17,0],[56,6,17,0,"_mountRegistry"],[56,20,17,0],[56,23,17,0,"require"],[56,30,17,0],[56,31,17,0,"_dependencyMap"],[56,45,17,0],[57,2,18,0],[57,6,18,0,"_reactJsxRuntime"],[57,22,18,0],[57,25,18,0,"require"],[57,32,18,0],[57,33,18,0,"_dependencyMap"],[57,47,18,0],[58,2,19,0],[58,8,19,6,"UIManagerAny"],[58,20,19,18],[58,23,19,21,"UIManager"],[58,32,19,30],[58,33,19,30,"default"],[58,40,19,30],[59,2,20,0,"customDirectEventTypes"],[59,25,20,22],[59,26,20,22,"customDirectEventTypes"],[59,48,20,22],[59,49,20,23,"topGestureHandlerEvent"],[59,71,20,45],[59,74,20,48],[60,4,21,2,"registrationName"],[60,20,21,18],[60,22,21,20],[61,2,22,0],[61,3,22,1],[62,2,23,0],[62,8,23,6,"customGHEventsConfigFabricAndroid"],[62,41,23,39],[62,44,23,42],[63,4,24,2,"topOnGestureHandlerEvent"],[63,28,24,26],[63,30,24,28],[64,6,25,4,"registrationName"],[64,22,25,20],[64,24,25,22],[65,4,26,2],[65,5,26,3],[66,4,27,2,"topOnGestureHandlerStateChange"],[66,34,27,32],[66,36,27,34],[67,6,28,4,"registrationName"],[67,22,28,20],[67,24,28,22],[68,4,29,2],[69,2,30,0],[69,3,30,1],[70,2,31,0],[70,8,31,6,"customGHEventsConfig"],[70,28,31,26],[70,31,31,29],[71,4,32,2,"onGestureHandlerEvent"],[71,25,32,23],[71,27,32,25],[72,6,33,4,"registrationName"],[72,22,33,20],[72,24,33,22],[73,4,34,2],[73,5,34,3],[74,4,35,2,"onGestureHandlerStateChange"],[74,31,35,29],[74,33,35,31],[75,6,36,4,"registrationName"],[75,22,36,20],[75,24,36,22],[76,4,37,2],[76,5,37,3],[77,4,38,2],[78,4,39,2],[79,4,40,2],[80,4,41,2],[81,4,42,2],[82,4,43,2],[83,4,44,2],[84,4,45,2],[85,4,46,2],[85,8,46,6],[85,12,46,6,"isFabric"],[85,19,46,14],[85,20,46,14,"isFabric"],[85,28,46,14],[85,30,46,15],[85,31,46,16],[85,35,46,20,"Platform"],[85,43,46,28],[85,44,46,28,"default"],[85,51,46,28],[85,52,46,29,"OS"],[85,54,46,31],[85,59,46,36],[85,68,46,45],[85,72,46,49,"customGHEventsConfigFabricAndroid"],[85,105,46,82],[86,2,47,0],[86,3,47,1],[88,2,49,0],[89,2,50,0],[90,2,51,0],[91,2,52,0],[92,2,53,0,"UIManagerAny"],[92,14,53,12],[92,15,53,13,"genericDirectEventTypes"],[92,38,53,36],[92,41,53,39],[93,4,54,2],[93,7,54,5,"UIManagerAny"],[93,19,54,17],[93,20,54,18,"genericDirectEventTypes"],[93,43,54,41],[94,4,55,2],[94,7,55,5,"customGHEventsConfig"],[95,2,56,0],[95,3,56,1],[96,2,57,0],[96,8,57,6,"UIManagerConstants"],[96,26,57,24],[96,29,57,27,"UIManagerAny"],[96,41,57,39],[96,42,57,40,"getViewManagerConfig"],[96,62,57,60],[96,65,57,63],[96,79,57,77],[96,80,57,78],[97,2,58,0],[97,6,58,4,"UIManagerConstants"],[97,24,58,22],[97,26,58,24],[98,4,59,2,"UIManagerConstants"],[98,22,59,20],[98,23,59,21,"genericDirectEventTypes"],[98,46,59,44],[98,49,59,47],[99,6,60,4],[99,9,60,7,"UIManagerConstants"],[99,27,60,25],[99,28,60,26,"genericDirectEventTypes"],[99,51,60,49],[100,6,61,4],[100,9,61,7,"customGHEventsConfig"],[101,4,62,2],[101,5,62,3],[102,2,63,0],[104,2,65,0],[105,2,66,0],[105,8,66,6],[106,4,67,2,"setJSResponder"],[106,18,67,16],[106,20,67,18,"oldSetJSResponder"],[106,37,67,35],[106,40,67,38,"oldSetJSResponder"],[106,41,67,38],[106,46,67,44],[107,6,68,4],[108,4,68,4],[108,5,69,3],[109,4,70,2,"clearJSResponder"],[109,20,70,18],[109,22,70,20,"oldClearJSResponder"],[109,41,70,39],[109,44,70,42,"oldClearJSResponder"],[109,45,70,42],[109,50,70,48],[110,6,71,4],[111,4,71,4],[112,2,73,0],[112,3,73,1],[112,6,73,4,"UIManagerAny"],[112,18,73,16],[113,2,74,0,"UIManagerAny"],[113,14,74,12],[113,15,74,13,"setJSResponder"],[113,29,74,27],[113,32,74,30],[113,33,74,31,"tag"],[113,36,74,34],[113,38,74,36,"blockNativeResponder"],[113,58,74,56],[113,63,74,61],[114,4,75,2,"RNGestureHandlerModule"],[114,26,75,24],[114,27,75,24,"default"],[114,34,75,24],[114,35,75,25,"handleSetJSResponder"],[114,55,75,45],[114,56,75,46,"tag"],[114,59,75,49],[114,61,75,51,"blockNativeResponder"],[114,81,75,71],[114,82,75,72],[115,4,76,2,"oldSetJSResponder"],[115,21,76,19],[115,22,76,20,"tag"],[115,25,76,23],[115,27,76,25,"blockNativeResponder"],[115,47,76,45],[115,48,76,46],[116,2,77,0],[116,3,77,1],[117,2,78,0,"UIManagerAny"],[117,14,78,12],[117,15,78,13,"clearJSResponder"],[117,31,78,29],[117,34,78,32],[117,40,78,38],[118,4,79,2,"RNGestureHandlerModule"],[118,26,79,24],[118,27,79,24,"default"],[118,34,79,24],[118,35,79,25,"handleClearJSResponder"],[118,57,79,47],[118,58,79,48],[118,59,79,49],[119,4,80,2,"oldClearJSResponder"],[119,23,80,21],[119,24,80,22],[119,25,80,23],[120,2,81,0],[120,3,81,1],[121,2,82,0],[121,6,82,4,"allowTouches"],[121,18,82,16],[121,21,82,19],[121,25,82,23],[122,2,83,0],[122,8,83,6,"DEV_ON_ANDROID"],[122,22,83,20],[122,25,83,23,"__DEV__"],[122,32,83,30],[122,36,83,34,"Platform"],[122,44,83,42],[122,45,83,42,"default"],[122,52,83,42],[122,53,83,43,"OS"],[122,55,83,45],[122,60,83,50],[122,69,83,59],[123,2,84,0],[124,2,85,0],[125,2,86,0],[125,6,86,4,"DEV_ON_ANDROID"],[125,20,86,18],[125,22,86,20],[126,4,87,2,"DeviceEventEmitter"],[126,22,87,20],[126,23,87,20,"default"],[126,30,87,20],[126,31,87,21,"addListener"],[126,42,87,32],[126,43,87,33],[126,67,87,57],[126,69,87,59],[126,75,87,65],[127,6,88,4,"allowTouches"],[127,18,88,16],[127,21,88,19],[127,22,88,20,"allowTouches"],[127,34,88,32],[128,4,89,2],[128,5,89,3],[128,6,89,4],[129,2,90,0],[130,2,91,0],[130,11,91,9,"hasUnresolvedRefs"],[130,28,91,26,"hasUnresolvedRefs"],[130,29,91,27,"props"],[130,34,91,32],[130,36,91,34],[131,4,92,2],[132,4,93,2],[132,10,93,8,"extract"],[132,17,93,15],[132,20,93,18,"refs"],[132,24,93,22],[132,28,93,26],[133,6,94,4],[133,10,94,8],[133,11,94,9,"Array"],[133,16,94,14],[133,17,94,15,"isArray"],[133,24,94,22],[133,25,94,23,"refs"],[133,29,94,27],[133,30,94,28],[133,32,94,30],[134,8,95,6],[134,15,95,13,"refs"],[134,19,95,17],[134,23,95,21,"refs"],[134,27,95,25],[134,28,95,26,"current"],[134,35,95,33],[134,40,95,38],[134,44,95,42],[135,6,96,4],[136,6,97,4],[136,13,97,11,"refs"],[136,17,97,15],[136,18,97,16,"some"],[136,22,97,20],[136,23,97,21,"r"],[136,24,97,22],[136,28,97,26,"r"],[136,29,97,27],[136,33,97,31,"r"],[136,34,97,32],[136,35,97,33,"current"],[136,42,97,40],[136,47,97,45],[136,51,97,49],[136,52,97,50],[137,4,98,2],[137,5,98,3],[138,4,99,2],[138,11,99,9,"extract"],[138,18,99,16],[138,19,99,17,"props"],[138,24,99,22],[138,25,99,23],[138,47,99,45],[138,48,99,46],[138,49,99,47],[138,53,99,51,"extract"],[138,60,99,58],[138,61,99,59,"props"],[138,66,99,64],[138,67,99,65],[138,76,99,74],[138,77,99,75],[138,78,99,76],[139,2,100,0],[140,2,101,0],[140,8,101,6,"stateToPropMappings"],[140,27,101,25],[140,30,101,28],[141,4,102,2],[141,5,102,3,"State"],[141,11,102,8],[141,12,102,8,"State"],[141,17,102,8],[141,18,102,9,"UNDETERMINED"],[141,30,102,21],[141,33,102,24,"undefined"],[141,42,102,33],[142,4,103,2],[142,5,103,3,"State"],[142,11,103,8],[142,12,103,8,"State"],[142,17,103,8],[142,18,103,9,"BEGAN"],[142,23,103,14],[142,26,103,17],[142,35,103,26],[143,4,104,2],[143,5,104,3,"State"],[143,11,104,8],[143,12,104,8,"State"],[143,17,104,8],[143,18,104,9,"FAILED"],[143,24,104,15],[143,27,104,18],[143,37,104,28],[144,4,105,2],[144,5,105,3,"State"],[144,11,105,8],[144,12,105,8,"State"],[144,17,105,8],[144,18,105,9,"CANCELLED"],[144,27,105,18],[144,30,105,21],[144,43,105,34],[145,4,106,2],[145,5,106,3,"State"],[145,11,106,8],[145,12,106,8,"State"],[145,17,106,8],[145,18,106,9,"ACTIVE"],[145,24,106,15],[145,27,106,18],[145,40,106,31],[146,4,107,2],[146,5,107,3,"State"],[146,11,107,8],[146,12,107,8,"State"],[146,17,107,8],[146,18,107,9,"END"],[146,21,107,12],[146,24,107,15],[147,2,108,0],[147,3,108,1],[149,2,110,0],[151,2,112,0],[151,8,112,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[151,35,112,33],[151,38,112,36],[151,39,112,37],[153,2,114,0],[154,2,115,15],[154,11,115,24,"createHandler"],[154,24,115,37,"createHandler"],[154,25,115,38],[155,4,116,2,"name"],[155,8,116,6],[156,4,117,2,"allowedProps"],[156,16,117,14],[156,19,117,17],[156,21,117,19],[157,4,118,2,"config"],[157,10,118,8],[157,13,118,11],[157,14,118,12],[157,15,118,13],[158,4,119,2,"transformProps"],[158,18,119,16],[159,4,120,2,"customNativeProps"],[159,21,120,19],[159,24,120,22],[160,2,121,0],[160,3,121,1],[160,5,121,3],[161,4,122,2],[161,10,122,8,"Handler"],[161,17,122,15],[161,26,122,24,"React"],[161,31,122,29],[161,32,122,30,"Component"],[161,41,122,39],[161,42,122,40],[162,6,123,4],[162,13,123,11,"displayName"],[162,24,123,22],[162,27,123,25,"name"],[162,31,123,29],[163,6,124,4],[163,13,124,11,"contextType"],[163,24,124,22],[163,27,124,25,"GestureHandlerRootViewContext"],[163,56,124,54],[163,57,124,54,"default"],[163,64,124,54],[164,6,125,4,"handlerTag"],[164,16,125,14],[164,19,125,17],[164,20,125,18],[164,21,125,19],[165,6,126,4,"constructor"],[165,17,126,15,"constructor"],[165,18,126,16,"props"],[165,23,126,21],[165,25,126,23],[166,8,127,6],[166,13,127,11],[166,14,127,12,"props"],[166,19,127,17],[166,20,127,18],[167,8,128,6],[167,12,128,10],[167,13,128,11,"config"],[167,19,128,17],[167,22,128,20],[167,23,128,21],[167,24,128,22],[168,8,129,6],[168,12,129,10],[168,13,129,11,"propsRef"],[168,21,129,19],[168,24,129,22],[168,37,129,35,"React"],[168,42,129,40],[168,43,129,41,"createRef"],[168,52,129,50],[168,53,129,51],[168,54,129,52],[169,8,130,6],[169,12,130,10],[169,13,130,11,"isMountedRef"],[169,25,130,23],[169,28,130,26],[169,41,130,39,"React"],[169,46,130,44],[169,47,130,45,"createRef"],[169,56,130,54],[169,57,130,55],[169,58,130,56],[170,8,131,6],[170,12,131,10],[170,13,131,11,"state"],[170,18,131,16],[170,21,131,19],[171,10,132,8,"allowTouches"],[172,8,133,6],[172,9,133,7],[173,8,134,6],[173,12,134,10,"props"],[173,17,134,15],[173,18,134,16,"id"],[173,20,134,18],[173,22,134,20],[174,10,135,8],[174,14,135,12,"handlerIDToTag"],[174,31,135,26],[174,32,135,26,"handlerIDToTag"],[174,46,135,26],[174,47,135,27,"props"],[174,52,135,32],[174,53,135,33,"id"],[174,55,135,35],[174,56,135,36],[174,61,135,41,"undefined"],[174,70,135,50],[174,72,135,52],[175,12,136,10],[175,18,136,16],[175,22,136,20,"Error"],[175,27,136,25],[175,28,136,26],[175,48,136,46,"props"],[175,53,136,51],[175,54,136,52,"id"],[175,56,136,54],[175,78,136,76],[175,79,136,77],[176,10,137,8],[177,10,138,8,"handlerIDToTag"],[177,27,138,22],[177,28,138,22,"handlerIDToTag"],[177,42,138,22],[177,43,138,23,"props"],[177,48,138,28],[177,49,138,29,"id"],[177,51,138,31],[177,52,138,32],[177,55,138,35],[177,59,138,39],[177,60,138,40,"handlerTag"],[177,70,138,50],[178,8,139,6],[179,6,140,4],[180,6,141,4,"componentDidMount"],[180,23,141,21,"componentDidMount"],[180,24,141,21],[180,26,141,24],[181,8,142,6],[181,14,142,12,"props"],[181,19,142,17],[181,22,142,20],[181,26,142,24],[181,27,142,25,"props"],[181,32,142,30],[182,8,143,6],[182,12,143,10],[182,13,143,11,"isMountedRef"],[182,25,143,23],[182,26,143,24,"current"],[182,33,143,31],[182,36,143,34],[182,40,143,38],[183,8,144,6],[183,12,144,10,"DEV_ON_ANDROID"],[183,26,144,24],[183,28,144,26],[184,10,145,8],[184,14,145,12],[184,15,145,13,"inspectorToggleListener"],[184,38,145,36],[184,41,145,39,"DeviceEventEmitter"],[184,59,145,57],[184,60,145,57,"default"],[184,67,145,57],[184,68,145,58,"addListener"],[184,79,145,69],[184,80,145,70],[184,104,145,94],[184,106,145,96],[184,112,145,102],[185,12,146,10],[185,16,146,14],[185,17,146,15,"setState"],[185,25,146,23],[185,26,146,24,"_"],[185,27,146,25],[185,32,146,30],[186,14,147,12,"allowTouches"],[187,12,148,10],[187,13,148,11],[187,14,148,12],[187,15,148,13],[188,12,149,10],[188,16,149,14],[188,17,149,15,"update"],[188,23,149,21],[188,24,149,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[188,51,149,49],[188,52,149,50],[189,10,150,8],[189,11,150,9],[189,12,150,10],[190,8,151,6],[191,8,152,6],[191,12,152,10,"hasUnresolvedRefs"],[191,29,152,27],[191,30,152,28,"props"],[191,35,152,33],[191,36,152,34],[191,38,152,36],[192,10,153,8],[193,10,154,8],[194,10,155,8],[195,10,156,8],[196,10,157,8],[197,10,158,8],[198,10,159,8],[198,14,159,8,"ghQueueMicrotask"],[198,31,159,24],[198,32,159,24,"ghQueueMicrotask"],[198,48,159,24],[198,50,159,25],[198,56,159,31],[199,12,160,10],[199,16,160,14],[199,17,160,15,"update"],[199,23,160,21],[199,24,160,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[199,51,160,49],[199,52,160,50],[200,10,161,8],[200,11,161,9],[200,12,161,10],[201,8,162,6],[202,8,163,6],[202,12,163,10],[202,13,163,11,"createGestureHandler"],[202,33,163,31],[202,34,163,32],[202,38,163,32,"filterConfig"],[202,44,163,44],[202,45,163,44,"filterConfig"],[202,57,163,44],[202,59,163,45,"transformProps"],[202,73,163,59],[202,76,163,62,"transformProps"],[202,90,163,76],[202,91,163,77],[202,95,163,81],[202,96,163,82,"props"],[202,101,163,87],[202,102,163,88],[202,105,163,91],[202,109,163,95],[202,110,163,96,"props"],[202,115,163,101],[202,117,163,103],[202,118,163,104],[202,121,163,107,"allowedProps"],[202,133,163,119],[202,135,163,121],[202,138,163,124,"customNativeProps"],[202,155,163,141],[202,156,163,142],[202,158,163,144,"config"],[202,164,163,150],[202,165,163,151],[202,166,163,152],[203,8,164,6],[203,12,164,10],[203,13,164,11],[203,17,164,15],[203,18,164,16,"viewNode"],[203,26,164,24],[203,28,164,26],[204,10,165,8],[204,16,165,14],[204,20,165,18,"Error"],[204,25,165,23],[204,26,165,24],[204,73,165,71,"Handler"],[204,80,165,78],[204,81,165,79,"displayName"],[204,92,165,90],[204,152,165,150],[204,153,165,151],[205,8,166,6],[206,8,167,6],[206,12,167,10],[206,13,167,11,"attachGestureHandler"],[206,33,167,31],[206,34,167,32],[206,38,167,32,"findNodeHandle"],[206,52,167,46],[206,53,167,46,"default"],[206,60,167,46],[206,62,167,47],[206,66,167,51],[206,67,167,52,"viewNode"],[206,75,167,60],[206,76,167,61],[206,77,167,62],[206,78,167,63],[206,79,167,64],[207,6,168,4],[208,6,169,4,"componentDidUpdate"],[208,24,169,22,"componentDidUpdate"],[208,25,169,22],[208,27,169,25],[209,8,170,6],[209,14,170,12,"viewTag"],[209,21,170,19],[209,24,170,22],[209,28,170,22,"findNodeHandle"],[209,42,170,36],[209,43,170,36,"default"],[209,50,170,36],[209,52,170,37],[209,56,170,41],[209,57,170,42,"viewNode"],[209,65,170,50],[209,66,170,51],[210,8,171,6],[210,12,171,10],[210,16,171,14],[210,17,171,15,"viewTag"],[210,24,171,22],[210,29,171,27,"viewTag"],[210,36,171,34],[210,38,171,36],[211,10,172,8],[211,14,172,12],[211,15,172,13,"attachGestureHandler"],[211,35,172,33],[211,36,172,34,"viewTag"],[211,43,172,41],[211,44,172,42],[211,45,172,43],[211,46,172,44],[212,8,173,6],[213,8,174,6],[213,12,174,10],[213,13,174,11,"update"],[213,19,174,17],[213,20,174,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[213,47,174,45],[213,48,174,46],[214,6,175,4],[215,6,176,4,"componentWillUnmount"],[215,26,176,24,"componentWillUnmount"],[215,27,176,24],[215,29,176,27],[216,8,177,6],[216,12,177,10],[216,13,177,11,"inspectorToggleListener"],[216,36,177,34],[216,38,177,36,"remove"],[216,44,177,42],[216,45,177,43],[216,46,177,44],[217,8,178,6],[217,12,178,10],[217,13,178,11,"isMountedRef"],[217,25,178,23],[217,26,178,24,"current"],[217,33,178,31],[217,36,178,34],[217,41,178,39],[218,8,179,6],[218,12,179,10,"Platform"],[218,20,179,18],[218,21,179,18,"default"],[218,28,179,18],[218,29,179,19,"OS"],[218,31,179,21],[218,36,179,26],[218,41,179,31],[218,43,179,33],[219,10,180,8],[219,14,180,8,"unregisterOldGestureHandler"],[219,31,180,35],[219,32,180,35,"unregisterOldGestureHandler"],[219,59,180,35],[219,61,180,36],[219,65,180,40],[219,66,180,41,"handlerTag"],[219,76,180,51],[219,77,180,52],[220,8,181,6],[221,8,182,6,"RNGestureHandlerModule"],[221,30,182,28],[221,31,182,28,"default"],[221,38,182,28],[221,39,182,29,"dropGestureHandler"],[221,57,182,47],[221,58,182,48],[221,62,182,52],[221,63,182,53,"handlerTag"],[221,73,182,63],[221,74,182,64],[222,8,183,6],[222,12,183,6,"scheduleFlushOperations"],[222,18,183,29],[222,19,183,29,"scheduleFlushOperations"],[222,42,183,29],[222,44,183,30],[222,45,183,31],[223,8,184,6],[224,8,185,6],[224,14,185,12,"handlerID"],[224,23,185,21],[224,26,185,24],[224,30,185,28],[224,31,185,29,"props"],[224,36,185,34],[224,37,185,35,"id"],[224,39,185,37],[225,8,186,6],[225,12,186,10,"handlerID"],[225,21,186,19],[225,23,186,21],[226,10,187,8],[227,10,188,8],[227,17,188,15,"handlerIDToTag"],[227,34,188,29],[227,35,188,29,"handlerIDToTag"],[227,49,188,29],[227,50,188,30,"handlerID"],[227,59,188,39],[227,60,188,40],[228,8,189,6],[229,8,190,6,"MountRegistry"],[229,22,190,19],[229,23,190,19,"MountRegistry"],[229,36,190,19],[229,37,190,20,"gestureHandlerWillUnmount"],[229,62,190,45],[229,63,190,46],[229,67,190,50],[229,68,190,51],[230,6,191,4],[231,6,192,4,"onGestureHandlerEvent"],[231,27,192,25],[231,30,192,28,"event"],[231,35,192,33],[231,39,192,37],[232,8,193,6],[232,12,193,10,"event"],[232,17,193,15],[232,18,193,16,"nativeEvent"],[232,29,193,27],[232,30,193,28,"handlerTag"],[232,40,193,38],[232,45,193,43],[232,49,193,47],[232,50,193,48,"handlerTag"],[232,60,193,58],[232,62,193,60],[233,10,194,8],[233,14,194,12],[233,21,194,19],[233,25,194,23],[233,26,194,24,"props"],[233,31,194,29],[233,32,194,30,"onGestureEvent"],[233,46,194,44],[233,51,194,49],[233,61,194,59],[233,63,194,61],[234,12,195,10],[234,16,195,14],[234,17,195,15,"props"],[234,22,195,20],[234,23,195,21,"onGestureEvent"],[234,37,195,35],[234,40,195,38,"event"],[234,45,195,43],[234,46,195,44],[235,10,196,8],[236,8,197,6],[236,9,197,7],[236,15,197,13],[237,10,198,8],[237,14,198,12],[237,15,198,13,"props"],[237,20,198,18],[237,21,198,19,"onGestureHandlerEvent"],[237,42,198,40],[237,45,198,43,"event"],[237,50,198,48],[237,51,198,49],[238,8,199,6],[239,6,200,4],[239,7,200,5],[241,6,202,4],[242,6,203,4,"onGestureHandlerStateChange"],[242,33,203,31],[242,36,203,34,"event"],[242,41,203,39],[242,45,203,43],[243,8,204,6],[243,12,204,10,"event"],[243,17,204,15],[243,18,204,16,"nativeEvent"],[243,29,204,27],[243,30,204,28,"handlerTag"],[243,40,204,38],[243,45,204,43],[243,49,204,47],[243,50,204,48,"handlerTag"],[243,60,204,58],[243,62,204,60],[244,10,205,8],[244,14,205,12],[244,21,205,19],[244,25,205,23],[244,26,205,24,"props"],[244,31,205,29],[244,32,205,30,"onHandlerStateChange"],[244,52,205,50],[244,57,205,55],[244,67,205,65],[244,69,205,67],[245,12,206,10],[245,16,206,14],[245,17,206,15,"props"],[245,22,206,20],[245,23,206,21,"onHandlerStateChange"],[245,43,206,41],[245,46,206,44,"event"],[245,51,206,49],[245,52,206,50],[246,10,207,8],[247,10,208,8],[247,16,208,14,"state"],[247,21,208,19],[247,24,208,22,"event"],[247,29,208,27],[247,30,208,28,"nativeEvent"],[247,41,208,39],[247,42,208,40,"state"],[247,47,208,45],[248,10,209,8],[248,16,209,14,"stateEventName"],[248,30,209,28],[248,33,209,31,"stateToPropMappings"],[248,52,209,50],[248,53,209,51,"state"],[248,58,209,56],[248,59,209,57],[249,10,210,8],[249,16,210,14,"eventHandler"],[249,28,210,26],[249,31,210,29,"stateEventName"],[249,45,210,43],[249,49,210,47],[249,53,210,51],[249,54,210,52,"props"],[249,59,210,57],[249,60,210,58,"stateEventName"],[249,74,210,72],[249,75,210,73],[250,10,211,8],[250,14,211,12,"eventHandler"],[250,26,211,24],[250,30,211,28],[250,37,211,35,"eventHandler"],[250,49,211,47],[250,54,211,52],[250,64,211,62],[250,66,211,64],[251,12,212,10,"eventHandler"],[251,24,212,22],[251,25,212,23,"event"],[251,30,212,28],[251,31,212,29],[252,10,213,8],[253,8,214,6],[253,9,214,7],[253,15,214,13],[254,10,215,8],[254,14,215,12],[254,15,215,13,"props"],[254,20,215,18],[254,21,215,19,"onGestureHandlerStateChange"],[254,48,215,46],[254,51,215,49,"event"],[254,56,215,54],[254,57,215,55],[255,8,216,6],[256,6,217,4],[256,7,217,5],[257,6,218,4,"refHandler"],[257,16,218,14],[257,19,218,17,"node"],[257,23,218,21],[257,27,218,25],[258,8,219,6],[258,12,219,10],[258,13,219,11,"viewNode"],[258,21,219,19],[258,24,219,22,"node"],[258,28,219,26],[259,8,220,6],[259,14,220,12,"child"],[259,19,220,17],[259,22,220,20,"React"],[259,27,220,25],[259,28,220,26,"Children"],[259,36,220,34],[259,37,220,35,"only"],[259,41,220,39],[259,42,220,40],[259,46,220,44],[259,47,220,45,"props"],[259,52,220,50],[259,53,220,51,"children"],[259,61,220,59],[259,62,220,60],[260,8,221,6],[261,8,222,6],[262,8,223,6],[262,14,223,12,"ref"],[262,17,223,15],[262,20,223,18],[262,24,223,18,"isReact19"],[262,31,223,27],[262,32,223,27,"isReact19"],[262,41,223,27],[262,43,223,28],[262,44,223,29],[262,47,223,32,"child"],[262,52,223,37],[262,53,223,38,"props"],[262,58,223,43],[262,60,223,45,"ref"],[262,63,223,48],[262,66,223,51,"child"],[262,71,223,56],[262,73,223,58,"ref"],[262,76,223,61],[263,8,224,6],[263,12,224,10],[263,13,224,11,"ref"],[263,16,224,14],[263,18,224,16],[264,10,225,8],[265,8,226,6],[266,8,227,6],[266,12,227,10],[266,19,227,17,"ref"],[266,22,227,20],[266,27,227,25],[266,37,227,35],[266,39,227,37],[267,10,228,8,"ref"],[267,13,228,11],[267,14,228,12,"node"],[267,18,228,16],[267,19,228,17],[268,8,229,6],[268,9,229,7],[268,15,229,13],[269,10,230,8,"ref"],[269,13,230,11],[269,14,230,12,"current"],[269,21,230,19],[269,24,230,22,"node"],[269,28,230,26],[270,8,231,6],[271,6,232,4],[271,7,232,5],[272,6,233,4,"createGestureHandler"],[272,26,233,24],[272,29,233,27,"newConfig"],[272,38,233,36],[272,42,233,40],[273,8,234,6],[273,12,234,10],[273,13,234,11,"handlerTag"],[273,23,234,21],[273,26,234,24],[273,30,234,24,"getNextHandlerTag"],[273,48,234,41],[273,49,234,41,"getNextHandlerTag"],[273,66,234,41],[273,68,234,42],[273,69,234,43],[274,8,235,6],[274,12,235,10],[274,13,235,11,"config"],[274,19,235,17],[274,22,235,20,"newConfig"],[274,31,235,29],[275,8,236,6,"RNGestureHandlerModule"],[275,30,236,28],[275,31,236,28,"default"],[275,38,236,28],[275,39,236,29,"createGestureHandler"],[275,59,236,49],[275,60,236,50,"name"],[275,64,236,54],[275,66,236,56],[275,70,236,60],[275,71,236,61,"handlerTag"],[275,81,236,71],[275,83,236,73,"newConfig"],[275,92,236,82],[275,93,236,83],[276,6,237,4],[276,7,237,5],[277,6,238,4,"attachGestureHandler"],[277,26,238,24],[277,29,238,27,"newViewTag"],[277,39,238,37],[277,43,238,41],[278,8,239,6],[278,12,239,10],[278,13,239,11,"viewTag"],[278,20,239,18],[278,23,239,21,"newViewTag"],[278,33,239,31],[279,8,240,6],[279,12,240,10,"Platform"],[279,20,240,18],[279,21,240,18,"default"],[279,28,240,18],[279,29,240,19,"OS"],[279,31,240,21],[279,36,240,26],[279,41,240,31],[279,43,240,33],[280,10,241,8],[281,10,242,8,"RNGestureHandlerModule"],[281,32,242,30],[281,33,242,30,"default"],[281,40,242,30],[281,41,242,31,"attachGestureHandler"],[281,61,242,51],[281,62,242,52],[281,66,242,56],[281,67,242,57,"handlerTag"],[281,77,242,67],[281,79,242,69,"newViewTag"],[281,89,242,79],[281,91,242,81,"ActionType"],[281,102,242,91],[281,103,242,91,"ActionType"],[281,113,242,91],[281,114,242,92,"JS_FUNCTION_OLD_API"],[281,133,242,111],[282,10,243,8],[283,10,244,8],[283,14,244,12],[283,15,244,13,"propsRef"],[283,23,244,21],[283,24,244,22],[284,8,245,6],[284,9,245,7],[284,15,245,13],[285,10,246,8],[285,14,246,8,"registerOldGestureHandler"],[285,31,246,33],[285,32,246,33,"registerOldGestureHandler"],[285,57,246,33],[285,59,246,34],[285,63,246,38],[285,64,246,39,"handlerTag"],[285,74,246,49],[285,76,246,51],[286,12,247,10,"onGestureEvent"],[286,26,247,24],[286,28,247,26],[286,32,247,30],[286,33,247,31,"onGestureHandlerEvent"],[286,54,247,52],[287,12,248,10,"onGestureStateChange"],[287,32,248,30],[287,34,248,32],[287,38,248,36],[287,39,248,37,"onGestureHandlerStateChange"],[288,10,249,8],[288,11,249,9],[288,12,249,10],[289,10,250,8],[289,16,250,14,"actionType"],[289,26,250,24],[289,29,250,27],[289,30,250,28],[289,36,250,34],[290,12,251,10],[290,18,251,16,"onGestureEvent"],[290,32,251,30],[290,35,251,33],[290,39,251,37],[290,40,251,38,"props"],[290,45,251,43],[290,47,251,45,"onGestureEvent"],[290,61,251,59],[291,12,252,10],[291,18,252,16,"isGestureHandlerWorklet"],[291,41,252,39],[291,44,252,42,"onGestureEvent"],[291,58,252,56],[291,63,252,61],[291,72,252,70],[291,76,252,74,"onGestureEvent"],[291,90,252,88],[291,94,252,92],[291,115,252,113],[291,119,252,117,"onGestureEvent"],[291,133,252,131],[291,134,252,132],[292,12,253,10],[292,18,253,16,"onHandlerStateChange"],[292,38,253,36],[292,41,253,39],[292,45,253,43],[292,46,253,44,"props"],[292,51,253,49],[292,53,253,51,"onHandlerStateChange"],[292,73,253,71],[293,12,254,10],[293,18,254,16,"isStateChangeHandlerWorklet"],[293,45,254,43],[293,48,254,46,"onHandlerStateChange"],[293,68,254,66],[293,73,254,71],[293,82,254,80],[293,86,254,84,"onHandlerStateChange"],[293,106,254,104],[293,110,254,108],[293,131,254,129],[293,135,254,133,"onHandlerStateChange"],[293,155,254,153],[293,156,254,154],[294,12,255,10],[294,18,255,16,"isReanimatedHandler"],[294,37,255,35],[294,40,255,38,"isGestureHandlerWorklet"],[294,63,255,61],[294,67,255,65,"isStateChangeHandlerWorklet"],[294,94,255,92],[295,12,256,10],[295,16,256,14,"isReanimatedHandler"],[295,35,256,33],[295,37,256,35],[296,14,257,12],[297,14,258,12],[297,21,258,19,"ActionType"],[297,32,258,29],[297,33,258,29,"ActionType"],[297,43,258,29],[297,44,258,30,"REANIMATED_WORKLET"],[297,62,258,48],[298,12,259,10],[298,13,259,11],[298,19,259,17],[298,23,259,21,"onGestureEvent"],[298,37,259,35],[298,41,259,39],[298,53,259,51],[298,57,259,55,"onGestureEvent"],[298,71,259,69],[298,73,259,71],[299,14,260,12],[300,14,261,12],[300,21,261,19,"ActionType"],[300,32,261,29],[300,33,261,29,"ActionType"],[300,43,261,29],[300,44,261,30,"NATIVE_ANIMATED_EVENT"],[300,65,261,51],[301,12,262,10],[301,13,262,11],[301,19,262,17],[302,14,263,12],[303,14,264,12],[303,21,264,19,"ActionType"],[303,32,264,29],[303,33,264,29,"ActionType"],[303,43,264,29],[303,44,264,30,"JS_FUNCTION_OLD_API"],[303,63,264,49],[304,12,265,10],[305,10,266,8],[305,11,266,9],[305,13,266,11],[305,14,266,12],[306,10,267,8,"RNGestureHandlerModule"],[306,32,267,30],[306,33,267,30,"default"],[306,40,267,30],[306,41,267,31,"attachGestureHandler"],[306,61,267,51],[306,62,267,52],[306,66,267,56],[306,67,267,57,"handlerTag"],[306,77,267,67],[306,79,267,69,"newViewTag"],[306,89,267,79],[306,91,267,81,"actionType"],[306,101,267,91],[306,102,267,92],[307,8,268,6],[308,8,269,6],[308,12,269,6,"scheduleFlushOperations"],[308,18,269,29],[308,19,269,29,"scheduleFlushOperations"],[308,42,269,29],[308,44,269,30],[308,45,269,31],[309,8,270,6],[309,12,270,6,"ghQueueMicrotask"],[309,29,270,22],[309,30,270,22,"ghQueueMicrotask"],[309,46,270,22],[309,48,270,23],[309,54,270,29],[310,10,271,8,"MountRegistry"],[310,24,271,21],[310,25,271,21,"MountRegistry"],[310,38,271,21],[310,39,271,22,"gestureHandlerWillMount"],[310,62,271,45],[310,63,271,46],[310,67,271,50],[310,68,271,51],[311,8,272,6],[311,9,272,7],[311,10,272,8],[312,6,273,4],[312,7,273,5],[313,6,274,4,"updateGestureHandler"],[313,26,274,24],[313,29,274,27,"newConfig"],[313,38,274,36],[313,42,274,40],[314,8,275,6],[314,12,275,10],[314,13,275,11,"config"],[314,19,275,17],[314,22,275,20,"newConfig"],[314,31,275,29],[315,8,276,6,"RNGestureHandlerModule"],[315,30,276,28],[315,31,276,28,"default"],[315,38,276,28],[315,39,276,29,"updateGestureHandler"],[315,59,276,49],[315,60,276,50],[315,64,276,54],[315,65,276,55,"handlerTag"],[315,75,276,65],[315,77,276,67,"newConfig"],[315,86,276,76],[315,87,276,77],[316,8,277,6],[316,12,277,6,"scheduleFlushOperations"],[316,18,277,29],[316,19,277,29,"scheduleFlushOperations"],[316,42,277,29],[316,44,277,30],[316,45,277,31],[317,6,278,4],[317,7,278,5],[318,6,279,4,"update"],[318,12,279,10,"update"],[318,13,279,11,"remainingTries"],[318,27,279,25],[318,29,279,27],[319,8,280,6],[319,12,280,10],[319,13,280,11],[319,17,280,15],[319,18,280,16,"isMountedRef"],[319,30,280,28],[319,31,280,29,"current"],[319,38,280,36],[319,40,280,38],[320,10,281,8],[321,8,282,6],[322,8,283,6],[322,14,283,12,"props"],[322,19,283,17],[322,22,283,20],[322,26,283,24],[322,27,283,25,"props"],[322,32,283,30],[324,8,285,6],[325,8,286,6],[326,8,287,6],[327,8,288,6],[327,12,288,10,"hasUnresolvedRefs"],[327,29,288,27],[327,30,288,28,"props"],[327,35,288,33],[327,36,288,34],[327,40,288,38,"remainingTries"],[327,54,288,52],[327,57,288,55],[327,58,288,56],[327,60,288,58],[328,10,289,8],[328,14,289,8,"ghQueueMicrotask"],[328,31,289,24],[328,32,289,24,"ghQueueMicrotask"],[328,48,289,24],[328,50,289,25],[328,56,289,31],[329,12,290,10],[329,16,290,14],[329,17,290,15,"update"],[329,23,290,21],[329,24,290,22,"remainingTries"],[329,38,290,36],[329,41,290,39],[329,42,290,40],[329,43,290,41],[330,10,291,8],[330,11,291,9],[330,12,291,10],[331,8,292,6],[331,9,292,7],[331,15,292,13],[332,10,293,8],[332,16,293,14,"newConfig"],[332,25,293,23],[332,28,293,26],[332,32,293,26,"filterConfig"],[332,38,293,38],[332,39,293,38,"filterConfig"],[332,51,293,38],[332,53,293,39,"transformProps"],[332,67,293,53],[332,70,293,56,"transformProps"],[332,84,293,70],[332,85,293,71],[332,89,293,75],[332,90,293,76,"props"],[332,95,293,81],[332,96,293,82],[332,99,293,85],[332,103,293,89],[332,104,293,90,"props"],[332,109,293,95],[332,111,293,97],[332,112,293,98],[332,115,293,101,"allowedProps"],[332,127,293,113],[332,129,293,115],[332,132,293,118,"customNativeProps"],[332,149,293,135],[332,150,293,136],[332,152,293,138,"config"],[332,158,293,144],[332,159,293,145],[333,10,294,8],[333,14,294,12],[333,15,294,13],[333,19,294,13,"deepEqual"],[333,26,294,22],[333,27,294,22,"deepEqual"],[333,36,294,22],[333,38,294,23],[333,42,294,27],[333,43,294,28,"config"],[333,49,294,34],[333,51,294,36,"newConfig"],[333,60,294,45],[333,61,294,46],[333,63,294,48],[334,12,295,10],[334,16,295,14],[334,17,295,15,"updateGestureHandler"],[334,37,295,35],[334,38,295,36,"newConfig"],[334,47,295,45],[334,48,295,46],[335,10,296,8],[336,8,297,6],[337,6,298,4],[339,6,300,4],[340,6,301,4,"setNativeProps"],[340,20,301,18,"setNativeProps"],[340,21,301,19,"updates"],[340,28,301,26],[340,30,301,28],[341,8,302,6],[341,14,302,12,"mergedProps"],[341,25,302,23],[341,28,302,26],[342,10,303,8],[342,13,303,11],[342,17,303,15],[342,18,303,16,"props"],[342,23,303,21],[343,10,304,8],[343,13,304,11,"updates"],[344,8,305,6],[344,9,305,7],[345,8,306,6],[345,14,306,12,"newConfig"],[345,23,306,21],[345,26,306,24],[345,30,306,24,"filterConfig"],[345,36,306,36],[345,37,306,36,"filterConfig"],[345,49,306,36],[345,51,306,37,"transformProps"],[345,65,306,51],[345,68,306,54,"transformProps"],[345,82,306,68],[345,83,306,69,"mergedProps"],[345,94,306,80],[345,95,306,81],[345,98,306,84,"mergedProps"],[345,109,306,95],[345,111,306,97],[345,112,306,98],[345,115,306,101,"allowedProps"],[345,127,306,113],[345,129,306,115],[345,132,306,118,"customNativeProps"],[345,149,306,135],[345,150,306,136],[345,152,306,138,"config"],[345,158,306,144],[345,159,306,145],[346,8,307,6],[346,12,307,10],[346,13,307,11,"updateGestureHandler"],[346,33,307,31],[346,34,307,32,"newConfig"],[346,43,307,41],[346,44,307,42],[347,6,308,4],[348,6,309,4,"render"],[348,12,309,10,"render"],[348,13,309,10],[348,15,309,13],[349,8,310,6],[349,12,310,10,"__DEV__"],[349,19,310,17],[349,23,310,21],[349,24,310,22],[349,28,310,26],[349,29,310,27,"context"],[349,36,310,34],[349,40,310,38],[349,41,310,39],[349,45,310,39,"isTestEnv"],[349,52,310,48],[349,53,310,48,"isTestEnv"],[349,62,310,48],[349,64,310,49],[349,65,310,50],[349,69,310,54,"Platform"],[349,77,310,62],[349,78,310,62,"default"],[349,85,310,62],[349,86,310,63,"OS"],[349,88,310,65],[349,93,310,70],[349,98,310,75],[349,100,310,77],[350,10,311,8],[350,16,311,14],[350,20,311,18,"Error"],[350,25,311,23],[350,26,311,24,"name"],[350,30,311,28],[350,33,311,31],[350,247,311,245],[350,248,311,246],[351,8,312,6],[352,8,313,6],[352,12,313,10,"gestureEventHandler"],[352,31,313,29],[352,34,313,32],[352,38,313,36],[352,39,313,37,"onGestureHandlerEvent"],[352,60,313,58],[353,8,314,6],[355,8,316,6],[355,14,316,12],[356,10,317,8,"onGestureEvent"],[356,24,317,22],[357,10,318,8,"onGestureHandlerEvent"],[358,8,319,6],[358,9,319,7],[358,12,319,10],[358,16,319,14],[358,17,319,15,"props"],[358,22,319,20],[359,8,320,6],[359,12,320,10,"onGestureEvent"],[359,26,320,24],[359,30,320,28],[359,37,320,35,"onGestureEvent"],[359,51,320,49],[359,56,320,54],[359,66,320,64],[359,68,320,66],[360,10,321,8],[361,10,322,8],[362,10,323,8],[363,10,324,8],[363,14,324,12,"onGestureHandlerEvent"],[363,35,324,33],[363,37,324,35],[364,12,325,10],[364,18,325,16],[364,22,325,20,"Error"],[364,27,325,25],[364,28,325,26],[364,101,325,99],[364,102,325,100],[365,10,326,8],[366,10,327,8,"gestureEventHandler"],[366,29,327,27],[366,32,327,30,"onGestureEvent"],[366,46,327,44],[367,8,328,6],[367,9,328,7],[367,15,328,13],[368,10,329,8],[368,14,329,12,"onGestureHandlerEvent"],[368,35,329,33],[368,39,329,37],[368,46,329,44,"onGestureHandlerEvent"],[368,67,329,65],[368,72,329,70],[368,82,329,80],[368,84,329,82],[369,12,330,10],[369,18,330,16],[369,22,330,20,"Error"],[369,27,330,25],[369,28,330,26],[369,101,330,99],[369,102,330,100],[370,10,331,8],[371,8,332,6],[372,8,333,6],[372,12,333,10,"gestureStateEventHandler"],[372,36,333,34],[372,39,333,37],[372,43,333,41],[372,44,333,42,"onGestureHandlerStateChange"],[372,71,333,69],[373,8,334,6],[375,8,336,6],[375,14,336,12],[376,10,337,8,"onHandlerStateChange"],[376,30,337,28],[377,10,338,8,"onGestureHandlerStateChange"],[378,8,339,6],[378,9,339,7],[378,12,339,10],[378,16,339,14],[378,17,339,15,"props"],[378,22,339,20],[379,8,340,6],[379,12,340,10,"onHandlerStateChange"],[379,32,340,30],[379,36,340,34],[379,43,340,41,"onHandlerStateChange"],[379,63,340,61],[379,68,340,66],[379,78,340,76],[379,80,340,78],[380,10,341,8],[381,10,342,8],[382,10,343,8],[383,10,344,8],[383,14,344,12,"onGestureHandlerStateChange"],[383,41,344,39],[383,43,344,41],[384,12,345,10],[384,18,345,16],[384,22,345,20,"Error"],[384,27,345,25],[384,28,345,26],[384,101,345,99],[384,102,345,100],[385,10,346,8],[386,10,347,8,"gestureStateEventHandler"],[386,34,347,32],[386,37,347,35,"onHandlerStateChange"],[386,57,347,55],[387,8,348,6],[387,9,348,7],[387,15,348,13],[388,10,349,8],[388,14,349,12,"onGestureHandlerStateChange"],[388,41,349,39],[388,45,349,43],[388,52,349,50,"onGestureHandlerStateChange"],[388,79,349,77],[388,84,349,82],[388,94,349,92],[388,96,349,94],[389,12,350,10],[389,18,350,16],[389,22,350,20,"Error"],[389,27,350,25],[389,28,350,26],[389,101,350,99],[389,102,350,100],[390,10,351,8],[391,8,352,6],[392,8,353,6],[392,14,353,12,"events"],[392,20,353,18],[392,23,353,21],[393,10,354,8,"onGestureHandlerEvent"],[393,31,354,29],[393,33,354,31],[393,37,354,35],[393,38,354,36,"state"],[393,43,354,41],[393,44,354,42,"allowTouches"],[393,56,354,54],[393,59,354,57,"gestureEventHandler"],[393,78,354,76],[393,81,354,79,"undefined"],[393,90,354,88],[394,10,355,8,"onGestureHandlerStateChange"],[394,37,355,35],[394,39,355,37],[394,43,355,41],[394,44,355,42,"state"],[394,49,355,47],[394,50,355,48,"allowTouches"],[394,62,355,60],[394,65,355,63,"gestureStateEventHandler"],[394,89,355,87],[394,92,355,90,"undefined"],[395,8,356,6],[395,9,356,7],[396,8,357,6],[396,12,357,10],[396,13,357,11,"propsRef"],[396,21,357,19],[396,22,357,20,"current"],[396,29,357,27],[396,32,357,30,"events"],[396,38,357,36],[397,8,358,6],[397,12,358,10,"child"],[397,17,358,15],[397,20,358,18],[397,24,358,22],[398,8,359,6],[398,12,359,10],[399,10,360,8,"child"],[399,15,360,13],[399,18,360,16,"React"],[399,23,360,21],[399,24,360,22,"Children"],[399,32,360,30],[399,33,360,31,"only"],[399,37,360,35],[399,38,360,36],[399,42,360,40],[399,43,360,41,"props"],[399,48,360,46],[399,49,360,47,"children"],[399,57,360,55],[399,58,360,56],[400,8,361,6],[400,9,361,7],[400,10,361,8],[400,17,361,15,"e"],[400,18,361,16],[400,20,361,18],[401,10,362,8],[401,16,362,14],[401,20,362,18,"Error"],[401,25,362,23],[401,26,362,24],[401,30,362,24,"tagMessage"],[401,37,362,34],[401,38,362,34,"tagMessage"],[401,48,362,34],[401,50,362,35],[401,53,362,38,"name"],[401,57,362,42],[401,213,362,198],[401,214,362,199],[401,215,362,200],[402,8,363,6],[403,8,364,6],[403,12,364,10,"grandChildren"],[403,25,364,23],[403,28,364,26,"child"],[403,33,364,31],[403,34,364,32,"props"],[403,39,364,37],[403,40,364,38,"children"],[403,48,364,46],[404,8,365,6],[404,12,365,10,"__DEV__"],[404,19,365,17],[404,23,365,21,"child"],[404,28,365,26],[404,29,365,27,"type"],[404,33,365,31],[404,38,365,36,"child"],[404,43,365,41],[404,44,365,42,"type"],[404,48,365,46],[404,53,365,51],[404,77,365,75],[404,81,365,79,"child"],[404,86,365,84],[404,87,365,85,"type"],[404,91,365,89],[404,92,365,90,"name"],[404,96,365,94],[404,101,365,99],[404,107,365,105],[404,111,365,109,"child"],[404,116,365,114],[404,117,365,115,"type"],[404,121,365,119],[404,122,365,120,"displayName"],[404,133,365,131],[404,138,365,136],[404,144,365,142],[404,145,365,143],[404,147,365,145],[405,10,366,8,"grandChildren"],[405,23,366,21],[405,26,366,24,"React"],[405,31,366,29],[405,32,366,30,"Children"],[405,40,366,38],[405,41,366,39,"toArray"],[405,48,366,46],[405,49,366,47,"grandChildren"],[405,62,366,60],[405,63,366,61],[406,10,367,8,"grandChildren"],[406,23,367,21],[406,24,367,22,"push"],[406,28,367,26],[406,29,367,27],[406,42,367,40],[406,46,367,40,"_jsx"],[406,62,367,44],[406,63,367,44,"jsx"],[406,66,367,44],[406,68,367,45,"PressabilityDebugView"],[406,90,367,66],[406,91,367,66,"PressabilityDebugView"],[406,112,367,66],[406,114,367,68],[407,12,368,10,"color"],[407,17,368,15],[407,19,368,17],[407,38,368,36],[408,12,369,10,"hitSlop"],[408,19,369,17],[408,21,369,19,"child"],[408,26,369,24],[408,27,369,25,"props"],[408,32,369,30],[408,33,369,31,"hitSlop"],[409,10,370,8],[409,11,370,9],[409,13,370,11],[409,36,370,34],[409,37,370,35],[409,38,370,36],[410,8,371,6],[411,8,372,6],[411,15,372,13],[411,28,372,26,"React"],[411,33,372,31],[411,34,372,32,"cloneElement"],[411,46,372,44],[411,47,372,45,"child"],[411,52,372,50],[411,54,372,52],[412,10,373,8,"ref"],[412,13,373,11],[412,15,373,13],[412,19,373,17],[412,20,373,18,"refHandler"],[412,30,373,28],[413,10,374,8,"collapsable"],[413,21,374,19],[413,23,374,21],[413,28,374,26],[414,10,375,8],[414,14,375,12],[414,18,375,12,"isTestEnv"],[414,25,375,21],[414,26,375,21,"isTestEnv"],[414,35,375,21],[414,37,375,22],[414,38,375,23],[414,41,375,26],[415,12,376,10,"handlerType"],[415,23,376,21],[415,25,376,23,"name"],[415,29,376,27],[416,12,377,10,"handlerTag"],[416,22,377,20],[416,24,377,22],[416,28,377,26],[416,29,377,27,"handlerTag"],[416,39,377,37],[417,12,378,10,"enabled"],[417,19,378,17],[417,21,378,19],[417,25,378,23],[417,26,378,24,"props"],[417,31,378,29],[417,32,378,30,"enabled"],[418,10,379,8],[418,11,379,9],[418,14,379,12],[418,15,379,13],[418,16,379,14],[418,17,379,15],[419,10,380,8,"testID"],[419,16,380,14],[419,18,380,16],[419,22,380,20],[419,23,380,21,"props"],[419,28,380,26],[419,29,380,27,"testID"],[419,35,380,33],[419,39,380,37,"child"],[419,44,380,42],[419,45,380,43,"props"],[419,50,380,48],[419,51,380,49,"testID"],[419,57,380,55],[420,10,381,8],[420,13,381,11,"events"],[421,8,382,6],[421,9,382,7],[421,11,382,9,"grandChildren"],[421,24,382,22],[421,25,382,23],[422,6,383,4],[423,4,384,2],[424,4,385,2],[424,11,385,9,"Handler"],[424,18,385,16],[425,2,386,0],[426,0,386,1],[426,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCkE;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIM;GJE;AKE;kBCE;qBCI,4BD;GDC;CLE;eQe;ECO;ICI;KDc;IEC;gGPI;wBQC;YRE;SOE;yBES;SFE;KFO;IKC;KLM;IMC;KNe;4BOC;KPQ;kCQG;KRc;iBSC;KTc;2BUC;KVI;2BWC;4BnBY;SmBgB;uBPI;OOE;KXC;2BYC;KZI;IaC;yBTU;SSE;KbO;IcG;KdO;IeC;Kf0E;GDC;CRE"},"hasCjsExports":false},"type":"js/module"}]}