{"dependencies":[{"name":"./errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":46,"index":61}}],"key":"sBFAilsnlkNTfGhyvhhjLjsyBXM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"Bezier\", {\n    enumerable: true,\n    get: function () {\n      return Bezier;\n    }\n  });\n  var _errorsJs = require(_dependencyMap[0], \"./errors.js\");\n  /**\n   * https://github.com/gre/bezier-easing BezierEasing - use bezier curve for\n   * transition easing function by Gaëtan Renaudeau 2014 - 2015 – MIT License\n   */\n\n  // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n  const NEWTON_ITERATIONS = 4;\n  const NEWTON_MIN_SLOPE = 0.001;\n  const SUBDIVISION_PRECISION = 0.0000001;\n  const SUBDIVISION_MAX_ITERATIONS = 10;\n  const kSplineTableSize = 11;\n  const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n  const _worklet_8828646082676_init_data = {\n    code: \"function A_reactNativeReanimated_BezierJs1(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"A_reactNativeReanimated_BezierJs1\\\",\\\"aA1\\\",\\\"aA2\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAiBA,SAAAA,iCAAqBA,CAAAC,GAAA,CAAAC,GAAA,EAGnB,MAAO,IAAG,CAAG,GAAG,CAAGA,GAAG,CAAG,GAAG,CAAGD,GAAG,CACpC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const A = function () {\n    const _e = [new global.Error(), 1, -27];\n    const A = function (aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    };\n    A.__closure = {};\n    A.__workletHash = 8828646082676;\n    A.__initData = _worklet_8828646082676_init_data;\n    A.__stackDetails = _e;\n    return A;\n  }();\n  const _worklet_4203953384949_init_data = {\n    code: \"function B_reactNativeReanimated_BezierJs2(aA1,aA2){return 3.0*aA2-6.0*aA1;}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"B_reactNativeReanimated_BezierJs2\\\",\\\"aA1\\\",\\\"aA2\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAsBA,SAAAA,iCAAqBA,CAAAC,GAAA,CAAAC,GAAA,EAGnB,MAAO,IAAG,CAAGA,GAAG,CAAG,GAAG,CAAGD,GAAG,CAC9B\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const B = function () {\n    const _e = [new global.Error(), 1, -27];\n    const B = function (aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    };\n    B.__closure = {};\n    B.__workletHash = 4203953384949;\n    B.__initData = _worklet_4203953384949_init_data;\n    B.__stackDetails = _e;\n    return B;\n  }();\n  const _worklet_8388140024310_init_data = {\n    code: \"function C_reactNativeReanimated_BezierJs3(aA1){return 3.0*aA1;}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"C_reactNativeReanimated_BezierJs3\\\",\\\"aA1\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA2BA,SAAAA,iCAAgBA,CAAAC,GAAA,EAGd,MAAO,IAAG,CAAGA,GAAG,CAClB\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const C = function () {\n    const _e = [new global.Error(), 1, -27];\n    const C = function (aA1) {\n      return 3.0 * aA1;\n    };\n    C.__closure = {};\n    C.__workletHash = 8388140024310;\n    C.__initData = _worklet_8388140024310_init_data;\n    C.__stackDetails = _e;\n    return C;\n  }(); // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  const _worklet_15740570894910_init_data = {\n    code: \"function calcBezier_reactNativeReanimated_BezierJs4(aT,aA1,aA2){const{A,B,C}=this.__closure;return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"calcBezier_reactNativeReanimated_BezierJs4\\\",\\\"aT\\\",\\\"aA1\\\",\\\"aA2\\\",\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAiCA,SAAAA,2CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,OAAAC,SAAA,SAAAH,CAAA,CAAAF,GAAA,CAAAC,GAAA,EAAAF,EAAA,CAAAI,CAAA,CAAAH,GAAA,CAAAC,GAAA,GAAAF,EAAA,CAAAK,CAAA,CAAAJ,GAAA,GAAAD,EAAA,CACA\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const calcBezier = function () {\n    const _e = [new global.Error(), -4, -27];\n    const calcBezier = function (aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    };\n    calcBezier.__closure = {\n      A,\n      B,\n      C\n    };\n    calcBezier.__workletHash = 15740570894910;\n    calcBezier.__initData = _worklet_15740570894910_init_data;\n    calcBezier.__stackDetails = _e;\n    return calcBezier;\n  }(); // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  const _worklet_4162364291299_init_data = {\n    code: \"function getSlope_reactNativeReanimated_BezierJs5(aT,aA1,aA2){const{A,B,C}=this.__closure;return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getSlope_reactNativeReanimated_BezierJs5\\\",\\\"aT\\\",\\\"aA1\\\",\\\"aA2\\\",\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAwCA,SAAAA,yCAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,OAAAC,SAAA,YAAAH,CAAA,CAAAF,GAAA,CAAAC,GAAA,EAAAF,EAAA,CAAAA,EAAA,KAAAI,CAAA,CAAAH,GAAA,CAAAC,GAAA,EAAAF,EAAA,CAAAK,CAAA,CAAAJ,GAAA,EACA\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const getSlope = function () {\n    const _e = [new global.Error(), -4, -27];\n    const getSlope = function (aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    };\n    getSlope.__closure = {\n      A,\n      B,\n      C\n    };\n    getSlope.__workletHash = 4162364291299;\n    getSlope.__initData = _worklet_4162364291299_init_data;\n    getSlope.__stackDetails = _e;\n    return getSlope;\n  }();\n  const _worklet_9166841024279_init_data = {\n    code: \"function binarySubdivide_reactNativeReanimated_BezierJs6(aX,aA,aB,mX1,mX2){const{calcBezier,SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS}=this.__closure;let currentX;let currentT;let i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"binarySubdivide_reactNativeReanimated_BezierJs6\\\",\\\"aX\\\",\\\"aA\\\",\\\"aB\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"calcBezier\\\",\\\"SUBDIVISION_PRECISION\\\",\\\"SUBDIVISION_MAX_ITERATIONS\\\",\\\"__closure\\\",\\\"currentX\\\",\\\"currentT\\\",\\\"i\\\",\\\"Math\\\",\\\"abs\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA8CA,SAAAA,+CAA+CA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,UAAA,CAAAC,qBAAA,CAAAC,0BAAA,OAAAC,SAAA,CAG7C,GAAI,CAAAC,QAAQ,CACZ,GAAI,CAAAC,QAAQ,CACZ,GAAI,CAAAC,CAAC,CAAG,CAAC,CACT,EAAG,CACDD,QAAQ,CAAGT,EAAE,CAAG,CAACC,EAAE,CAAGD,EAAE,EAAI,GAAG,CAC/BQ,QAAQ,CAAGJ,UAAU,CAACK,QAAQ,CAAEP,GAAG,CAAEC,GAAG,CAAC,CAAGJ,EAAE,CAC9C,GAAIS,QAAQ,CAAG,GAAG,CAAE,CAClBP,EAAE,CAAGQ,QAAQ,CACf,CAAC,IAAM,CACLT,EAAE,CAAGS,QAAQ,CACf,CACF,CAAC,MAAQE,IAAI,CAACC,GAAG,CAACJ,QAAQ,CAAC,CAAGH,qBAAqB,EAAI,EAAEK,CAAC,CAAGJ,0BAA0B,EACvF,MAAO,CAAAG,QAAQ,CACjB\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const binarySubdivide = function () {\n    const _e = [new global.Error(), -4, -27];\n    const binarySubdivide = function (aX, aA, aB, mX1, mX2) {\n      let currentX;\n      let currentT;\n      let i = 0;\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n      return currentT;\n    };\n    binarySubdivide.__closure = {\n      calcBezier,\n      SUBDIVISION_PRECISION,\n      SUBDIVISION_MAX_ITERATIONS\n    };\n    binarySubdivide.__workletHash = 9166841024279;\n    binarySubdivide.__initData = _worklet_9166841024279_init_data;\n    binarySubdivide.__stackDetails = _e;\n    return binarySubdivide;\n  }();\n  const _worklet_13606782449305_init_data = {\n    code: \"function newtonRaphsonIterate_reactNativeReanimated_BezierJs7(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=this.__closure;for(let i=0;i<NEWTON_ITERATIONS;++i){const currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}const currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"newtonRaphsonIterate_reactNativeReanimated_BezierJs7\\\",\\\"aX\\\",\\\"aGuessT\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"NEWTON_ITERATIONS\\\",\\\"getSlope\\\",\\\"calcBezier\\\",\\\"__closure\\\",\\\"i\\\",\\\"currentSlope\\\",\\\"currentX\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA+DA,SAAAA,oDAAqDA,CAAAC,EAAA,CAAAC,OAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,iBAAA,CAAAC,QAAA,CAAAC,UAAA,OAAAC,SAAA,CAGnD,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGJ,iBAAiB,CAAE,EAAEI,CAAC,CAAE,CAC1C,KAAM,CAAAC,YAAY,CAAGJ,QAAQ,CAACJ,OAAO,CAAEC,GAAG,CAAEC,GAAG,CAAC,CAChD,GAAIM,YAAY,GAAK,GAAG,CAAE,CACxB,MAAO,CAAAR,OAAO,CAChB,CACA,KAAM,CAAAS,QAAQ,CAAGJ,UAAU,CAACL,OAAO,CAAEC,GAAG,CAAEC,GAAG,CAAC,CAAGH,EAAE,CACnDC,OAAO,EAAIS,QAAQ,CAAGD,YAAY,CACpC,CACA,MAAO,CAAAR,OAAO,CAChB\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const newtonRaphsonIterate = function () {\n    const _e = [new global.Error(), -4, -27];\n    const newtonRaphsonIterate = function (aX, aGuessT, mX1, mX2) {\n      for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n        const currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n          return aGuessT;\n        }\n        const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n      return aGuessT;\n    };\n    newtonRaphsonIterate.__closure = {\n      NEWTON_ITERATIONS,\n      getSlope,\n      calcBezier\n    };\n    newtonRaphsonIterate.__workletHash = 13606782449305;\n    newtonRaphsonIterate.__initData = _worklet_13606782449305_init_data;\n    newtonRaphsonIterate.__stackDetails = _e;\n    return newtonRaphsonIterate;\n  }();\n  const _worklet_6918608934740_init_data = {\n    code: \"function Bezier_reactNativeReanimated_BezierJs8(mX1,mY1,mX2,mY2){const{kSplineTableSize,calcBezier,kSampleStepSize,getSlope,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=this.__closure;function LinearEasing(x){'worklet';return x;}if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new ReanimatedError('Bezier x values must be in [0, 1] range.');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}const sampleValues=new Array(kSplineTableSize);for(let i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}function getTForX(aX){'worklet';let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}return function Bezier_reactNativeReanimated_BezierJs8(x){'worklet';if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"Bezier_reactNativeReanimated_BezierJs8\\\",\\\"mX1\\\",\\\"mY1\\\",\\\"mX2\\\",\\\"mY2\\\",\\\"kSplineTableSize\\\",\\\"calcBezier\\\",\\\"kSampleStepSize\\\",\\\"getSlope\\\",\\\"NEWTON_MIN_SLOPE\\\",\\\"newtonRaphsonIterate\\\",\\\"binarySubdivide\\\",\\\"__closure\\\",\\\"LinearEasing\\\",\\\"x\\\",\\\"ReanimatedError\\\",\\\"sampleValues\\\",\\\"Array\\\",\\\"i\\\",\\\"getTForX\\\",\\\"aX\\\",\\\"intervalStart\\\",\\\"currentSample\\\",\\\"lastSample\\\",\\\"dist\\\",\\\"guessForT\\\",\\\"initialSlope\\\",\\\"BezierEasing\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA4EO,SAAAA,sCAAoCA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,QAAAC,gBAAA,CAAAC,UAAA,CAAAC,eAAA,CAAAC,QAAA,CAAAC,gBAAA,CAAAC,oBAAA,CAAAC,eAAA,OAAAC,SAAA,CAGzC,QAAS,CAAAC,YAAYA,CAACC,CAAC,CAAE,CACvB,SAAS,CAET,MAAO,CAAAA,CAAC,CACV,CACA,GAAI,EAAEb,GAAG,EAAI,CAAC,EAAIA,GAAG,EAAI,CAAC,EAAIE,GAAG,EAAI,CAAC,EAAIA,GAAG,EAAI,CAAC,CAAC,CAAE,CACnD,KAAM,IAAI,CAAAY,eAAe,CAAC,0CAA0C,CAAC,CACvE,CACA,GAAId,GAAG,GAAKC,GAAG,EAAIC,GAAG,GAAKC,GAAG,CAAE,CAC9B,MAAO,CAAAS,YAAY,CACrB,CACA,KAAM,CAAAG,YAAY,CAAG,GAAI,CAAAC,KAAK,CAACZ,gBAAgB,CAAC,CAGhD,IAAK,GAAI,CAAAa,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGb,gBAAgB,CAAE,EAAEa,CAAC,CAAE,CACzCF,YAAY,CAACE,CAAC,CAAC,CAAGZ,UAAU,CAACY,CAAC,CAAGX,eAAe,CAAEN,GAAG,CAAEE,GAAG,CAAC,CAC7D,CACA,QAAS,CAAAgB,QAAQA,CAACC,EAAE,CAAE,CACpB,SAAS,CAET,GAAI,CAAAC,aAAa,CAAG,GAAG,CACvB,GAAI,CAAAC,aAAa,CAAG,CAAC,CACrB,KAAM,CAAAC,UAAU,CAAGlB,gBAAgB,CAAG,CAAC,CACvC,KAAOiB,aAAa,GAAKC,UAAU,EAAIP,YAAY,CAACM,aAAa,CAAC,EAAIF,EAAE,CAAE,EAAEE,aAAa,CAAE,CACzFD,aAAa,EAAId,eAAe,CAClC,CACA,EAAEe,aAAa,CAGf,KAAM,CAAAE,IAAI,CAAG,CAACJ,EAAE,CAAGJ,YAAY,CAACM,aAAa,CAAC,GAAKN,YAAY,CAACM,aAAa,CAAG,CAAC,CAAC,CAAGN,YAAY,CAACM,aAAa,CAAC,CAAC,CACjH,KAAM,CAAAG,SAAS,CAAGJ,aAAa,CAAGG,IAAI,CAAGjB,eAAe,CACxD,KAAM,CAAAmB,YAAY,CAAGlB,QAAQ,CAACiB,SAAS,CAAExB,GAAG,CAAEE,GAAG,CAAC,CAClD,GAAIuB,YAAY,EAAIjB,gBAAgB,CAAE,CACpC,MAAO,CAAAC,oBAAoB,CAACU,EAAE,CAAEK,SAAS,CAAExB,GAAG,CAAEE,GAAG,CAAC,CACtD,CAAC,IAAM,IAAIuB,YAAY,GAAK,GAAG,CAAE,CAC/B,MAAO,CAAAD,SAAS,CAClB,CAAC,IAAM,CACL,MAAO,CAAAd,eAAe,CAACS,EAAE,CAAEC,aAAa,CAAEA,aAAa,CAAGd,eAAe,CAAEN,GAAG,CAAEE,GAAG,CAAC,CACtF,CACF,CACA,MAAO,SAAS,CAAAH,sCAAgB2B,CAAAb,CAAA,EAC9B,SAAS,CAET,GAAIb,GAAG,GAAKC,GAAG,EAAIC,GAAG,GAAKC,GAAG,CAAE,CAC9B,MAAO,CAAAU,CAAC,CACV,CAEA,GAAIA,CAAC,GAAK,CAAC,CAAE,CACX,MAAO,EAAC,CACV,CACA,GAAIA,CAAC,GAAK,CAAC,CAAE,CACX,MAAO,EAAC,CACV,CACA,MAAO,CAAAR,UAAU,CAACa,QAAQ,CAACL,CAAC,CAAC,CAAEZ,GAAG,CAAEE,GAAG,CAAC,CAC1C,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const _worklet_17244837042130_init_data = {\n    code: \"function LinearEasing_reactNativeReanimated_BezierJs9(x){return x;}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"LinearEasing_reactNativeReanimated_BezierJs9\\\",\\\"x\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AA+EE,SAAAA,4CAAyBA,CAAAC,CAAA,EAGvB,MAAO,CAAAA,CAAC,CACV\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const _worklet_15383647275891_init_data = {\n    code: \"function getTForX_reactNativeReanimated_BezierJs10(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=this.__closure;let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getTForX_reactNativeReanimated_BezierJs10\\\",\\\"aX\\\",\\\"kSplineTableSize\\\",\\\"sampleValues\\\",\\\"kSampleStepSize\\\",\\\"getSlope\\\",\\\"mX1\\\",\\\"mX2\\\",\\\"NEWTON_MIN_SLOPE\\\",\\\"newtonRaphsonIterate\\\",\\\"binarySubdivide\\\",\\\"__closure\\\",\\\"intervalStart\\\",\\\"currentSample\\\",\\\"lastSample\\\",\\\"dist\\\",\\\"guessForT\\\",\\\"initialSlope\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAgGE,SAAAA,yCAAsBA,CAAAC,EAAA,QAAAC,gBAAA,CAAAC,YAAA,CAAAC,eAAA,CAAAC,QAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,gBAAA,CAAAC,oBAAA,CAAAC,eAAA,OAAAC,SAAA,CAGpB,GAAI,CAAAC,aAAa,CAAG,GAAG,CACvB,GAAI,CAAAC,aAAa,CAAG,CAAC,CACrB,KAAM,CAAAC,UAAU,CAAGZ,gBAAgB,CAAG,CAAC,CACvC,KAAOW,aAAa,GAAKC,UAAU,EAAIX,YAAY,CAACU,aAAa,CAAC,EAAIZ,EAAE,CAAE,EAAEY,aAAa,CAAE,CACzFD,aAAa,EAAIR,eAAe,CAClC,CACA,EAAES,aAAa,CAGf,KAAM,CAAAE,IAAI,CAAG,CAACd,EAAE,CAAGE,YAAY,CAACU,aAAa,CAAC,GAAKV,YAAY,CAACU,aAAa,CAAG,CAAC,CAAC,CAAGV,YAAY,CAACU,aAAa,CAAC,CAAC,CACjH,KAAM,CAAAG,SAAS,CAAGJ,aAAa,CAAGG,IAAI,CAAGX,eAAe,CACxD,KAAM,CAAAa,YAAY,CAAGZ,QAAQ,CAACW,SAAS,CAAEV,GAAG,CAAEC,GAAG,CAAC,CAClD,GAAIU,YAAY,EAAIT,gBAAgB,CAAE,CACpC,MAAO,CAAAC,oBAAoB,CAACR,EAAE,CAAEe,SAAS,CAAEV,GAAG,CAAEC,GAAG,CAAC,CACtD,CAAC,IAAM,IAAIU,YAAY,GAAK,GAAG,CAAE,CAC/B,MAAO,CAAAD,SAAS,CAClB,CAAC,IAAM,CACL,MAAO,CAAAN,eAAe,CAACT,EAAE,CAAEW,aAAa,CAAEA,aAAa,CAAGR,eAAe,CAAEE,GAAG,CAAEC,GAAG,CAAC,CACtF,CACF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const _worklet_7919274967463_init_data = {\n    code: \"function BezierEasing_reactNativeReanimated_BezierJs11(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=this.__closure;if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}\",\n    location: \"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"BezierEasing_reactNativeReanimated_BezierJs11\\\",\\\"x\\\",\\\"mX1\\\",\\\"mY1\\\",\\\"mX2\\\",\\\"mY2\\\",\\\"calcBezier\\\",\\\"getTForX\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-reanimated/lib/module/Bezier.js\\\"],\\\"mappings\\\":\\\"AAuHS,SAAAA,6CAAyBA,CAAAC,CAAA,QAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,UAAA,CAAAC,QAAA,OAAAC,SAAA,CAG9B,GAAIN,GAAG,GAAKC,GAAG,EAAIC,GAAG,GAAKC,GAAG,CAAE,CAC9B,MAAO,CAAAJ,CAAC,CACV,CAEA,GAAIA,CAAC,GAAK,CAAC,CAAE,CACX,MAAO,EAAC,CACV,CACA,GAAIA,CAAC,GAAK,CAAC,CAAE,CACX,MAAO,EAAC,CACV,CACA,MAAO,CAAAK,UAAU,CAACC,QAAQ,CAACN,CAAC,CAAC,CAAEE,GAAG,CAAEE,GAAG,CAAC,CAC1C\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const Bezier = function () {\n    const _e = [new global.Error(), -8, -27];\n    const Bezier = function (mX1, mY1, mX2, mY2) {\n      const LinearEasing = function () {\n        const _e = [new global.Error(), 1, -27];\n        const LinearEasing = function (x) {\n          return x;\n        };\n        LinearEasing.__closure = {};\n        LinearEasing.__workletHash = 17244837042130;\n        LinearEasing.__initData = _worklet_17244837042130_init_data;\n        LinearEasing.__stackDetails = _e;\n        return LinearEasing;\n      }();\n      if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n        throw new _errorsJs.ReanimatedError('Bezier x values must be in [0, 1] range.');\n      }\n      if (mX1 === mY1 && mX2 === mY2) {\n        return LinearEasing;\n      }\n      const sampleValues = new Array(kSplineTableSize);\n\n      // Precompute samples table\n      for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n      const getTForX = function () {\n        const _e = [new global.Error(), -10, -27];\n        const getTForX = function (aX) {\n          let intervalStart = 0.0;\n          let currentSample = 1;\n          const lastSample = kSplineTableSize - 1;\n          for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n          }\n          --currentSample;\n\n          // Interpolate to provide an initial guess for t\n          const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n          const guessForT = intervalStart + dist * kSampleStepSize;\n          const initialSlope = getSlope(guessForT, mX1, mX2);\n          if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n          } else if (initialSlope === 0.0) {\n            return guessForT;\n          } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n          }\n        };\n        getTForX.__closure = {\n          kSplineTableSize,\n          sampleValues,\n          kSampleStepSize,\n          getSlope,\n          mX1,\n          mX2,\n          NEWTON_MIN_SLOPE,\n          newtonRaphsonIterate,\n          binarySubdivide\n        };\n        getTForX.__workletHash = 15383647275891;\n        getTForX.__initData = _worklet_15383647275891_init_data;\n        getTForX.__stackDetails = _e;\n        return getTForX;\n      }();\n      return function () {\n        const _e = [new global.Error(), -7, -27];\n        const BezierEasing = function (x) {\n          if (mX1 === mY1 && mX2 === mY2) {\n            return x; // linear\n          }\n          // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n          if (x === 0) {\n            return 0;\n          }\n          if (x === 1) {\n            return 1;\n          }\n          return calcBezier(getTForX(x), mY1, mY2);\n        };\n        BezierEasing.__closure = {\n          mX1,\n          mY1,\n          mX2,\n          mY2,\n          calcBezier,\n          getTForX\n        };\n        BezierEasing.__workletHash = 7919274967463;\n        BezierEasing.__initData = _worklet_7919274967463_init_data;\n        BezierEasing.__stackDetails = _e;\n        return BezierEasing;\n      }();\n    };\n    Bezier.__closure = {\n      kSplineTableSize,\n      calcBezier,\n      kSampleStepSize,\n      getSlope,\n      NEWTON_MIN_SLOPE,\n      newtonRaphsonIterate,\n      binarySubdivide\n    };\n    Bezier.__workletHash = 6918608934740;\n    Bezier.__initData = _worklet_6918608934740_init_data;\n    Bezier.__stackDetails = _e;\n    return Bezier;\n  }();\n});","lineCount":314,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,77,0,"Object"],[7,8,77,0],[7,9,77,0,"defineProperty"],[7,23,77,0],[7,24,77,0,"exports"],[7,31,77,0],[8,4,77,0,"enumerable"],[8,14,77,0],[9,4,77,0,"get"],[9,7,77,0],[9,18,77,0,"get"],[9,19,77,0],[10,6,77,0],[10,13,77,0,"Bezier"],[10,19,77,0],[11,4,77,0],[12,2,77,0],[13,2,3,0],[13,6,3,0,"_errorsJs"],[13,15,3,0],[13,18,3,0,"require"],[13,25,3,0],[13,26,3,0,"_dependencyMap"],[13,40,3,0],[14,2,5,0],[15,0,6,0],[16,0,7,0],[17,0,8,0],[19,2,10,0],[21,2,12,0],[21,8,12,6,"NEWTON_ITERATIONS"],[21,25,12,23],[21,28,12,26],[21,29,12,27],[22,2,13,0],[22,8,13,6,"NEWTON_MIN_SLOPE"],[22,24,13,22],[22,27,13,25],[22,32,13,30],[23,2,14,0],[23,8,14,6,"SUBDIVISION_PRECISION"],[23,29,14,27],[23,32,14,30],[23,41,14,39],[24,2,15,0],[24,8,15,6,"SUBDIVISION_MAX_ITERATIONS"],[24,34,15,32],[24,37,15,35],[24,39,15,37],[25,2,16,0],[25,8,16,6,"kSplineTableSize"],[25,24,16,22],[25,27,16,25],[25,29,16,27],[26,2,17,0],[26,8,17,6,"kSampleStepSize"],[26,23,17,21],[26,26,17,24],[26,29,17,27],[26,33,17,31,"kSplineTableSize"],[26,49,17,47],[26,52,17,50],[26,55,17,53],[26,56,17,54],[27,2,17,55],[27,8,17,55,"_worklet_8828646082676_init_data"],[27,40,17,55],[28,4,17,55,"code"],[28,8,17,55],[29,4,17,55,"location"],[29,12,17,55],[30,4,17,55,"sourceMap"],[30,13,17,55],[31,4,17,55,"version"],[31,11,17,55],[32,2,17,55],[33,2,17,55],[33,8,17,55,"A"],[33,9,17,55],[33,12,18,0],[34,4,18,0],[34,10,18,0,"_e"],[34,12,18,0],[34,20,18,0,"global"],[34,26,18,0],[34,27,18,0,"Error"],[34,32,18,0],[35,4,18,0],[35,10,18,0,"A"],[35,11,18,0],[35,23,18,0,"A"],[35,24,18,11,"aA1"],[35,27,18,14],[35,29,18,16,"aA2"],[35,32,18,19],[35,34,18,21],[36,6,21,2],[36,13,21,9],[36,16,21,12],[36,19,21,15],[36,22,21,18],[36,25,21,21,"aA2"],[36,28,21,24],[36,31,21,27],[36,34,21,30],[36,37,21,33,"aA1"],[36,40,21,36],[37,4,22,0],[37,5,22,1],[38,4,22,1,"A"],[38,5,22,1],[38,6,22,1,"__closure"],[38,15,22,1],[39,4,22,1,"A"],[39,5,22,1],[39,6,22,1,"__workletHash"],[39,19,22,1],[40,4,22,1,"A"],[40,5,22,1],[40,6,22,1,"__initData"],[40,16,22,1],[40,19,22,1,"_worklet_8828646082676_init_data"],[40,51,22,1],[41,4,22,1,"A"],[41,5,22,1],[41,6,22,1,"__stackDetails"],[41,20,22,1],[41,23,22,1,"_e"],[41,25,22,1],[42,4,22,1],[42,11,22,1,"A"],[42,12,22,1],[43,2,22,1],[43,3,18,0],[44,2,18,0],[44,8,18,0,"_worklet_4203953384949_init_data"],[44,40,18,0],[45,4,18,0,"code"],[45,8,18,0],[46,4,18,0,"location"],[46,12,18,0],[47,4,18,0,"sourceMap"],[47,13,18,0],[48,4,18,0,"version"],[48,11,18,0],[49,2,18,0],[50,2,18,0],[50,8,18,0,"B"],[50,9,18,0],[50,12,23,0],[51,4,23,0],[51,10,23,0,"_e"],[51,12,23,0],[51,20,23,0,"global"],[51,26,23,0],[51,27,23,0,"Error"],[51,32,23,0],[52,4,23,0],[52,10,23,0,"B"],[52,11,23,0],[52,23,23,0,"B"],[52,24,23,11,"aA1"],[52,27,23,14],[52,29,23,16,"aA2"],[52,32,23,19],[52,34,23,21],[53,6,26,2],[53,13,26,9],[53,16,26,12],[53,19,26,15,"aA2"],[53,22,26,18],[53,25,26,21],[53,28,26,24],[53,31,26,27,"aA1"],[53,34,26,30],[54,4,27,0],[54,5,27,1],[55,4,27,1,"B"],[55,5,27,1],[55,6,27,1,"__closure"],[55,15,27,1],[56,4,27,1,"B"],[56,5,27,1],[56,6,27,1,"__workletHash"],[56,19,27,1],[57,4,27,1,"B"],[57,5,27,1],[57,6,27,1,"__initData"],[57,16,27,1],[57,19,27,1,"_worklet_4203953384949_init_data"],[57,51,27,1],[58,4,27,1,"B"],[58,5,27,1],[58,6,27,1,"__stackDetails"],[58,20,27,1],[58,23,27,1,"_e"],[58,25,27,1],[59,4,27,1],[59,11,27,1,"B"],[59,12,27,1],[60,2,27,1],[60,3,23,0],[61,2,23,0],[61,8,23,0,"_worklet_8388140024310_init_data"],[61,40,23,0],[62,4,23,0,"code"],[62,8,23,0],[63,4,23,0,"location"],[63,12,23,0],[64,4,23,0,"sourceMap"],[64,13,23,0],[65,4,23,0,"version"],[65,11,23,0],[66,2,23,0],[67,2,23,0],[67,8,23,0,"C"],[67,9,23,0],[67,12,28,0],[68,4,28,0],[68,10,28,0,"_e"],[68,12,28,0],[68,20,28,0,"global"],[68,26,28,0],[68,27,28,0,"Error"],[68,32,28,0],[69,4,28,0],[69,10,28,0,"C"],[69,11,28,0],[69,23,28,0,"C"],[69,24,28,11,"aA1"],[69,27,28,14],[69,29,28,16],[70,6,31,2],[70,13,31,9],[70,16,31,12],[70,19,31,15,"aA1"],[70,22,31,18],[71,4,32,0],[71,5,32,1],[72,4,32,1,"C"],[72,5,32,1],[72,6,32,1,"__closure"],[72,15,32,1],[73,4,32,1,"C"],[73,5,32,1],[73,6,32,1,"__workletHash"],[73,19,32,1],[74,4,32,1,"C"],[74,5,32,1],[74,6,32,1,"__initData"],[74,16,32,1],[74,19,32,1,"_worklet_8388140024310_init_data"],[74,51,32,1],[75,4,32,1,"C"],[75,5,32,1],[75,6,32,1,"__stackDetails"],[75,20,32,1],[75,23,32,1,"_e"],[75,25,32,1],[76,4,32,1],[76,11,32,1,"C"],[76,12,32,1],[77,2,32,1],[77,3,28,0],[77,7,34,0],[78,2,34,0],[78,8,34,0,"_worklet_15740570894910_init_data"],[78,41,34,0],[79,4,34,0,"code"],[79,8,34,0],[80,4,34,0,"location"],[80,12,34,0],[81,4,34,0,"sourceMap"],[81,13,34,0],[82,4,34,0,"version"],[82,11,34,0],[83,2,34,0],[84,2,34,0],[84,8,34,0,"calcBezier"],[84,18,34,0],[84,21,35,0],[85,4,35,0],[85,10,35,0,"_e"],[85,12,35,0],[85,20,35,0,"global"],[85,26,35,0],[85,27,35,0,"Error"],[85,32,35,0],[86,4,35,0],[86,10,35,0,"calcBezier"],[86,20,35,0],[86,32,35,0,"calcBezier"],[86,33,35,20,"aT"],[86,35,35,22],[86,37,35,24,"aA1"],[86,40,35,27],[86,42,35,29,"aA2"],[86,45,35,32],[86,47,35,34],[87,6,38,2],[87,13,38,9],[87,14,38,10],[87,15,38,11,"A"],[87,16,38,12],[87,17,38,13,"aA1"],[87,20,38,16],[87,22,38,18,"aA2"],[87,25,38,21],[87,26,38,22],[87,29,38,25,"aT"],[87,31,38,27],[87,34,38,30,"B"],[87,35,38,31],[87,36,38,32,"aA1"],[87,39,38,35],[87,41,38,37,"aA2"],[87,44,38,40],[87,45,38,41],[87,49,38,45,"aT"],[87,51,38,47],[87,54,38,50,"C"],[87,55,38,51],[87,56,38,52,"aA1"],[87,59,38,55],[87,60,38,56],[87,64,38,60,"aT"],[87,66,38,62],[88,4,39,0],[88,5,39,1],[89,4,39,1,"calcBezier"],[89,14,39,1],[89,15,39,1,"__closure"],[89,24,39,1],[90,6,39,1,"A"],[90,7,39,1],[91,6,39,1,"B"],[91,7,39,1],[92,6,39,1,"C"],[93,4,39,1],[94,4,39,1,"calcBezier"],[94,14,39,1],[94,15,39,1,"__workletHash"],[94,28,39,1],[95,4,39,1,"calcBezier"],[95,14,39,1],[95,15,39,1,"__initData"],[95,25,39,1],[95,28,39,1,"_worklet_15740570894910_init_data"],[95,61,39,1],[96,4,39,1,"calcBezier"],[96,14,39,1],[96,15,39,1,"__stackDetails"],[96,29,39,1],[96,32,39,1,"_e"],[96,34,39,1],[97,4,39,1],[97,11,39,1,"calcBezier"],[97,21,39,1],[98,2,39,1],[98,3,35,0],[98,7,41,0],[99,2,41,0],[99,8,41,0,"_worklet_4162364291299_init_data"],[99,40,41,0],[100,4,41,0,"code"],[100,8,41,0],[101,4,41,0,"location"],[101,12,41,0],[102,4,41,0,"sourceMap"],[102,13,41,0],[103,4,41,0,"version"],[103,11,41,0],[104,2,41,0],[105,2,41,0],[105,8,41,0,"getSlope"],[105,16,41,0],[105,19,42,0],[106,4,42,0],[106,10,42,0,"_e"],[106,12,42,0],[106,20,42,0,"global"],[106,26,42,0],[106,27,42,0,"Error"],[106,32,42,0],[107,4,42,0],[107,10,42,0,"getSlope"],[107,18,42,0],[107,30,42,0,"getSlope"],[107,31,42,18,"aT"],[107,33,42,20],[107,35,42,22,"aA1"],[107,38,42,25],[107,40,42,27,"aA2"],[107,43,42,30],[107,45,42,32],[108,6,45,2],[108,13,45,9],[108,16,45,12],[108,19,45,15,"A"],[108,20,45,16],[108,21,45,17,"aA1"],[108,24,45,20],[108,26,45,22,"aA2"],[108,29,45,25],[108,30,45,26],[108,33,45,29,"aT"],[108,35,45,31],[108,38,45,34,"aT"],[108,40,45,36],[108,43,45,39],[108,46,45,42],[108,49,45,45,"B"],[108,50,45,46],[108,51,45,47,"aA1"],[108,54,45,50],[108,56,45,52,"aA2"],[108,59,45,55],[108,60,45,56],[108,63,45,59,"aT"],[108,65,45,61],[108,68,45,64,"C"],[108,69,45,65],[108,70,45,66,"aA1"],[108,73,45,69],[108,74,45,70],[109,4,46,0],[109,5,46,1],[110,4,46,1,"getSlope"],[110,12,46,1],[110,13,46,1,"__closure"],[110,22,46,1],[111,6,46,1,"A"],[111,7,46,1],[112,6,46,1,"B"],[112,7,46,1],[113,6,46,1,"C"],[114,4,46,1],[115,4,46,1,"getSlope"],[115,12,46,1],[115,13,46,1,"__workletHash"],[115,26,46,1],[116,4,46,1,"getSlope"],[116,12,46,1],[116,13,46,1,"__initData"],[116,23,46,1],[116,26,46,1,"_worklet_4162364291299_init_data"],[116,58,46,1],[117,4,46,1,"getSlope"],[117,12,46,1],[117,13,46,1,"__stackDetails"],[117,27,46,1],[117,30,46,1,"_e"],[117,32,46,1],[118,4,46,1],[118,11,46,1,"getSlope"],[118,19,46,1],[119,2,46,1],[119,3,42,0],[120,2,42,0],[120,8,42,0,"_worklet_9166841024279_init_data"],[120,40,42,0],[121,4,42,0,"code"],[121,8,42,0],[122,4,42,0,"location"],[122,12,42,0],[123,4,42,0,"sourceMap"],[123,13,42,0],[124,4,42,0,"version"],[124,11,42,0],[125,2,42,0],[126,2,42,0],[126,8,42,0,"binarySubdivide"],[126,23,42,0],[126,26,47,0],[127,4,47,0],[127,10,47,0,"_e"],[127,12,47,0],[127,20,47,0,"global"],[127,26,47,0],[127,27,47,0,"Error"],[127,32,47,0],[128,4,47,0],[128,10,47,0,"binarySubdivide"],[128,25,47,0],[128,37,47,0,"binarySubdivide"],[128,38,47,25,"aX"],[128,40,47,27],[128,42,47,29,"aA"],[128,44,47,31],[128,46,47,33,"aB"],[128,48,47,35],[128,50,47,37,"mX1"],[128,53,47,40],[128,55,47,42,"mX2"],[128,58,47,45],[128,60,47,47],[129,6,50,2],[129,10,50,6,"currentX"],[129,18,50,14],[130,6,51,2],[130,10,51,6,"currentT"],[130,18,51,14],[131,6,52,2],[131,10,52,6,"i"],[131,11,52,7],[131,14,52,10],[131,15,52,11],[132,6,53,2],[132,9,53,5],[133,8,54,4,"currentT"],[133,16,54,12],[133,19,54,15,"aA"],[133,21,54,17],[133,24,54,20],[133,25,54,21,"aB"],[133,27,54,23],[133,30,54,26,"aA"],[133,32,54,28],[133,36,54,32],[133,39,54,35],[134,8,55,4,"currentX"],[134,16,55,12],[134,19,55,15,"calcBezier"],[134,29,55,25],[134,30,55,26,"currentT"],[134,38,55,34],[134,40,55,36,"mX1"],[134,43,55,39],[134,45,55,41,"mX2"],[134,48,55,44],[134,49,55,45],[134,52,55,48,"aX"],[134,54,55,50],[135,8,56,4],[135,12,56,8,"currentX"],[135,20,56,16],[135,23,56,19],[135,26,56,22],[135,28,56,24],[136,10,57,6,"aB"],[136,12,57,8],[136,15,57,11,"currentT"],[136,23,57,19],[137,8,58,4],[137,9,58,5],[137,15,58,11],[138,10,59,6,"aA"],[138,12,59,8],[138,15,59,11,"currentT"],[138,23,59,19],[139,8,60,4],[140,6,61,2],[140,7,61,3],[140,15,61,11,"Math"],[140,19,61,15],[140,20,61,16,"abs"],[140,23,61,19],[140,24,61,20,"currentX"],[140,32,61,28],[140,33,61,29],[140,36,61,32,"SUBDIVISION_PRECISION"],[140,57,61,53],[140,61,61,57],[140,63,61,59,"i"],[140,64,61,60],[140,67,61,63,"SUBDIVISION_MAX_ITERATIONS"],[140,93,61,89],[141,6,62,2],[141,13,62,9,"currentT"],[141,21,62,17],[142,4,63,0],[142,5,63,1],[143,4,63,1,"binarySubdivide"],[143,19,63,1],[143,20,63,1,"__closure"],[143,29,63,1],[144,6,63,1,"calcBezier"],[144,16,63,1],[145,6,63,1,"SUBDIVISION_PRECISION"],[145,27,63,1],[146,6,63,1,"SUBDIVISION_MAX_ITERATIONS"],[147,4,63,1],[148,4,63,1,"binarySubdivide"],[148,19,63,1],[148,20,63,1,"__workletHash"],[148,33,63,1],[149,4,63,1,"binarySubdivide"],[149,19,63,1],[149,20,63,1,"__initData"],[149,30,63,1],[149,33,63,1,"_worklet_9166841024279_init_data"],[149,65,63,1],[150,4,63,1,"binarySubdivide"],[150,19,63,1],[150,20,63,1,"__stackDetails"],[150,34,63,1],[150,37,63,1,"_e"],[150,39,63,1],[151,4,63,1],[151,11,63,1,"binarySubdivide"],[151,26,63,1],[152,2,63,1],[152,3,47,0],[153,2,47,0],[153,8,47,0,"_worklet_13606782449305_init_data"],[153,41,47,0],[154,4,47,0,"code"],[154,8,47,0],[155,4,47,0,"location"],[155,12,47,0],[156,4,47,0,"sourceMap"],[156,13,47,0],[157,4,47,0,"version"],[157,11,47,0],[158,2,47,0],[159,2,47,0],[159,8,47,0,"newtonRaphsonIterate"],[159,28,47,0],[159,31,64,0],[160,4,64,0],[160,10,64,0,"_e"],[160,12,64,0],[160,20,64,0,"global"],[160,26,64,0],[160,27,64,0,"Error"],[160,32,64,0],[161,4,64,0],[161,10,64,0,"newtonRaphsonIterate"],[161,30,64,0],[161,42,64,0,"newtonRaphsonIterate"],[161,43,64,30,"aX"],[161,45,64,32],[161,47,64,34,"aGuessT"],[161,54,64,41],[161,56,64,43,"mX1"],[161,59,64,46],[161,61,64,48,"mX2"],[161,64,64,51],[161,66,64,53],[162,6,67,2],[162,11,67,7],[162,15,67,11,"i"],[162,16,67,12],[162,19,67,15],[162,20,67,16],[162,22,67,18,"i"],[162,23,67,19],[162,26,67,22,"NEWTON_ITERATIONS"],[162,43,67,39],[162,45,67,41],[162,47,67,43,"i"],[162,48,67,44],[162,50,67,46],[163,8,68,4],[163,14,68,10,"currentSlope"],[163,26,68,22],[163,29,68,25,"getSlope"],[163,37,68,33],[163,38,68,34,"aGuessT"],[163,45,68,41],[163,47,68,43,"mX1"],[163,50,68,46],[163,52,68,48,"mX2"],[163,55,68,51],[163,56,68,52],[164,8,69,4],[164,12,69,8,"currentSlope"],[164,24,69,20],[164,29,69,25],[164,32,69,28],[164,34,69,30],[165,10,70,6],[165,17,70,13,"aGuessT"],[165,24,70,20],[166,8,71,4],[167,8,72,4],[167,14,72,10,"currentX"],[167,22,72,18],[167,25,72,21,"calcBezier"],[167,35,72,31],[167,36,72,32,"aGuessT"],[167,43,72,39],[167,45,72,41,"mX1"],[167,48,72,44],[167,50,72,46,"mX2"],[167,53,72,49],[167,54,72,50],[167,57,72,53,"aX"],[167,59,72,55],[168,8,73,4,"aGuessT"],[168,15,73,11],[168,19,73,15,"currentX"],[168,27,73,23],[168,30,73,26,"currentSlope"],[168,42,73,38],[169,6,74,2],[170,6,75,2],[170,13,75,9,"aGuessT"],[170,20,75,16],[171,4,76,0],[171,5,76,1],[172,4,76,1,"newtonRaphsonIterate"],[172,24,76,1],[172,25,76,1,"__closure"],[172,34,76,1],[173,6,76,1,"NEWTON_ITERATIONS"],[173,23,76,1],[174,6,76,1,"getSlope"],[174,14,76,1],[175,6,76,1,"calcBezier"],[176,4,76,1],[177,4,76,1,"newtonRaphsonIterate"],[177,24,76,1],[177,25,76,1,"__workletHash"],[177,38,76,1],[178,4,76,1,"newtonRaphsonIterate"],[178,24,76,1],[178,25,76,1,"__initData"],[178,35,76,1],[178,38,76,1,"_worklet_13606782449305_init_data"],[178,71,76,1],[179,4,76,1,"newtonRaphsonIterate"],[179,24,76,1],[179,25,76,1,"__stackDetails"],[179,39,76,1],[179,42,76,1,"_e"],[179,44,76,1],[180,4,76,1],[180,11,76,1,"newtonRaphsonIterate"],[180,31,76,1],[181,2,76,1],[181,3,64,0],[182,2,64,0],[182,8,64,0,"_worklet_6918608934740_init_data"],[182,40,64,0],[183,4,64,0,"code"],[183,8,64,0],[184,4,64,0,"location"],[184,12,64,0],[185,4,64,0,"sourceMap"],[185,13,64,0],[186,4,64,0,"version"],[186,11,64,0],[187,2,64,0],[188,2,64,0],[188,8,64,0,"_worklet_17244837042130_init_data"],[188,41,64,0],[189,4,64,0,"code"],[189,8,64,0],[190,4,64,0,"location"],[190,12,64,0],[191,4,64,0,"sourceMap"],[191,13,64,0],[192,4,64,0,"version"],[192,11,64,0],[193,2,64,0],[194,2,64,0],[194,8,64,0,"_worklet_15383647275891_init_data"],[194,41,64,0],[195,4,64,0,"code"],[195,8,64,0],[196,4,64,0,"location"],[196,12,64,0],[197,4,64,0,"sourceMap"],[197,13,64,0],[198,4,64,0,"version"],[198,11,64,0],[199,2,64,0],[200,2,64,0],[200,8,64,0,"_worklet_7919274967463_init_data"],[200,40,64,0],[201,4,64,0,"code"],[201,8,64,0],[202,4,64,0,"location"],[202,12,64,0],[203,4,64,0,"sourceMap"],[203,13,64,0],[204,4,64,0,"version"],[204,11,64,0],[205,2,64,0],[206,2,64,0],[206,8,64,0,"Bezier"],[206,14,64,0],[206,17,77,7],[207,4,77,7],[207,10,77,7,"_e"],[207,12,77,7],[207,20,77,7,"global"],[207,26,77,7],[207,27,77,7,"Error"],[207,32,77,7],[208,4,77,7],[208,10,77,7,"Bezier"],[208,16,77,7],[208,28,77,7,"Bezier"],[208,29,77,23,"mX1"],[208,32,77,26],[208,34,77,28,"mY1"],[208,37,77,31],[208,39,77,33,"mX2"],[208,42,77,36],[208,44,77,38,"mY2"],[208,47,77,41],[208,49,77,43],[209,6,77,43],[209,12,77,43,"LinearEasing"],[209,24,77,43],[209,27,80,2],[210,8,80,2],[210,14,80,2,"_e"],[210,16,80,2],[210,24,80,2,"global"],[210,30,80,2],[210,31,80,2,"Error"],[210,36,80,2],[211,8,80,2],[211,14,80,2,"LinearEasing"],[211,26,80,2],[211,38,80,2,"LinearEasing"],[211,39,80,24,"x"],[211,40,80,25],[211,42,80,27],[212,10,83,4],[212,17,83,11,"x"],[212,18,83,12],[213,8,84,2],[213,9,84,3],[214,8,84,3,"LinearEasing"],[214,20,84,3],[214,21,84,3,"__closure"],[214,30,84,3],[215,8,84,3,"LinearEasing"],[215,20,84,3],[215,21,84,3,"__workletHash"],[215,34,84,3],[216,8,84,3,"LinearEasing"],[216,20,84,3],[216,21,84,3,"__initData"],[216,31,84,3],[216,34,84,3,"_worklet_17244837042130_init_data"],[216,67,84,3],[217,8,84,3,"LinearEasing"],[217,20,84,3],[217,21,84,3,"__stackDetails"],[217,35,84,3],[217,38,84,3,"_e"],[217,40,84,3],[218,8,84,3],[218,15,84,3,"LinearEasing"],[218,27,84,3],[219,6,84,3],[219,7,80,2],[220,6,85,2],[220,10,85,6],[220,12,85,8,"mX1"],[220,15,85,11],[220,19,85,15],[220,20,85,16],[220,24,85,20,"mX1"],[220,27,85,23],[220,31,85,27],[220,32,85,28],[220,36,85,32,"mX2"],[220,39,85,35],[220,43,85,39],[220,44,85,40],[220,48,85,44,"mX2"],[220,51,85,47],[220,55,85,51],[220,56,85,52],[220,57,85,53],[220,59,85,55],[221,8,86,4],[221,14,86,10],[221,18,86,14,"ReanimatedError"],[221,27,86,29],[221,28,86,29,"ReanimatedError"],[221,43,86,29],[221,44,86,30],[221,86,86,72],[221,87,86,73],[222,6,87,2],[223,6,88,2],[223,10,88,6,"mX1"],[223,13,88,9],[223,18,88,14,"mY1"],[223,21,88,17],[223,25,88,21,"mX2"],[223,28,88,24],[223,33,88,29,"mY2"],[223,36,88,32],[223,38,88,34],[224,8,89,4],[224,15,89,11,"LinearEasing"],[224,27,89,23],[225,6,90,2],[226,6,91,2],[226,12,91,8,"sampleValues"],[226,24,91,20],[226,27,91,23],[226,31,91,27,"Array"],[226,36,91,32],[226,37,91,33,"kSplineTableSize"],[226,53,91,49],[226,54,91,50],[228,6,93,2],[229,6,94,2],[229,11,94,7],[229,15,94,11,"i"],[229,16,94,12],[229,19,94,15],[229,20,94,16],[229,22,94,18,"i"],[229,23,94,19],[229,26,94,22,"kSplineTableSize"],[229,42,94,38],[229,44,94,40],[229,46,94,42,"i"],[229,47,94,43],[229,49,94,45],[230,8,95,4,"sampleValues"],[230,20,95,16],[230,21,95,17,"i"],[230,22,95,18],[230,23,95,19],[230,26,95,22,"calcBezier"],[230,36,95,32],[230,37,95,33,"i"],[230,38,95,34],[230,41,95,37,"kSampleStepSize"],[230,56,95,52],[230,58,95,54,"mX1"],[230,61,95,57],[230,63,95,59,"mX2"],[230,66,95,62],[230,67,95,63],[231,6,96,2],[232,6,96,3],[232,12,96,3,"getTForX"],[232,20,96,3],[232,23,97,2],[233,8,97,2],[233,14,97,2,"_e"],[233,16,97,2],[233,24,97,2,"global"],[233,30,97,2],[233,31,97,2,"Error"],[233,36,97,2],[234,8,97,2],[234,14,97,2,"getTForX"],[234,22,97,2],[234,34,97,2,"getTForX"],[234,35,97,20,"aX"],[234,37,97,22],[234,39,97,24],[235,10,100,4],[235,14,100,8,"intervalStart"],[235,27,100,21],[235,30,100,24],[235,33,100,27],[236,10,101,4],[236,14,101,8,"currentSample"],[236,27,101,21],[236,30,101,24],[236,31,101,25],[237,10,102,4],[237,16,102,10,"lastSample"],[237,26,102,20],[237,29,102,23,"kSplineTableSize"],[237,45,102,39],[237,48,102,42],[237,49,102,43],[238,10,103,4],[238,17,103,11,"currentSample"],[238,30,103,24],[238,35,103,29,"lastSample"],[238,45,103,39],[238,49,103,43,"sampleValues"],[238,61,103,55],[238,62,103,56,"currentSample"],[238,75,103,69],[238,76,103,70],[238,80,103,74,"aX"],[238,82,103,76],[238,84,103,78],[238,86,103,80,"currentSample"],[238,99,103,93],[238,101,103,95],[239,12,104,6,"intervalStart"],[239,25,104,19],[239,29,104,23,"kSampleStepSize"],[239,44,104,38],[240,10,105,4],[241,10,106,4],[241,12,106,6,"currentSample"],[241,25,106,19],[243,10,108,4],[244,10,109,4],[244,16,109,10,"dist"],[244,20,109,14],[244,23,109,17],[244,24,109,18,"aX"],[244,26,109,20],[244,29,109,23,"sampleValues"],[244,41,109,35],[244,42,109,36,"currentSample"],[244,55,109,49],[244,56,109,50],[244,61,109,55,"sampleValues"],[244,73,109,67],[244,74,109,68,"currentSample"],[244,87,109,81],[244,90,109,84],[244,91,109,85],[244,92,109,86],[244,95,109,89,"sampleValues"],[244,107,109,101],[244,108,109,102,"currentSample"],[244,121,109,115],[244,122,109,116],[244,123,109,117],[245,10,110,4],[245,16,110,10,"guessForT"],[245,25,110,19],[245,28,110,22,"intervalStart"],[245,41,110,35],[245,44,110,38,"dist"],[245,48,110,42],[245,51,110,45,"kSampleStepSize"],[245,66,110,60],[246,10,111,4],[246,16,111,10,"initialSlope"],[246,28,111,22],[246,31,111,25,"getSlope"],[246,39,111,33],[246,40,111,34,"guessForT"],[246,49,111,43],[246,51,111,45,"mX1"],[246,54,111,48],[246,56,111,50,"mX2"],[246,59,111,53],[246,60,111,54],[247,10,112,4],[247,14,112,8,"initialSlope"],[247,26,112,20],[247,30,112,24,"NEWTON_MIN_SLOPE"],[247,46,112,40],[247,48,112,42],[248,12,113,6],[248,19,113,13,"newtonRaphsonIterate"],[248,39,113,33],[248,40,113,34,"aX"],[248,42,113,36],[248,44,113,38,"guessForT"],[248,53,113,47],[248,55,113,49,"mX1"],[248,58,113,52],[248,60,113,54,"mX2"],[248,63,113,57],[248,64,113,58],[249,10,114,4],[249,11,114,5],[249,17,114,11],[249,21,114,15,"initialSlope"],[249,33,114,27],[249,38,114,32],[249,41,114,35],[249,43,114,37],[250,12,115,6],[250,19,115,13,"guessForT"],[250,28,115,22],[251,10,116,4],[251,11,116,5],[251,17,116,11],[252,12,117,6],[252,19,117,13,"binarySubdivide"],[252,34,117,28],[252,35,117,29,"aX"],[252,37,117,31],[252,39,117,33,"intervalStart"],[252,52,117,46],[252,54,117,48,"intervalStart"],[252,67,117,61],[252,70,117,64,"kSampleStepSize"],[252,85,117,79],[252,87,117,81,"mX1"],[252,90,117,84],[252,92,117,86,"mX2"],[252,95,117,89],[252,96,117,90],[253,10,118,4],[254,8,119,2],[254,9,119,3],[255,8,119,3,"getTForX"],[255,16,119,3],[255,17,119,3,"__closure"],[255,26,119,3],[256,10,119,3,"kSplineTableSize"],[256,26,119,3],[257,10,119,3,"sampleValues"],[257,22,119,3],[258,10,119,3,"kSampleStepSize"],[258,25,119,3],[259,10,119,3,"getSlope"],[259,18,119,3],[260,10,119,3,"mX1"],[260,13,119,3],[261,10,119,3,"mX2"],[261,13,119,3],[262,10,119,3,"NEWTON_MIN_SLOPE"],[262,26,119,3],[263,10,119,3,"newtonRaphsonIterate"],[263,30,119,3],[264,10,119,3,"binarySubdivide"],[265,8,119,3],[266,8,119,3,"getTForX"],[266,16,119,3],[266,17,119,3,"__workletHash"],[266,30,119,3],[267,8,119,3,"getTForX"],[267,16,119,3],[267,17,119,3,"__initData"],[267,27,119,3],[267,30,119,3,"_worklet_15383647275891_init_data"],[267,63,119,3],[268,8,119,3,"getTForX"],[268,16,119,3],[268,17,119,3,"__stackDetails"],[268,31,119,3],[268,34,119,3,"_e"],[268,36,119,3],[269,8,119,3],[269,15,119,3,"getTForX"],[269,23,119,3],[270,6,119,3],[270,7,97,2],[271,6,120,2],[271,13,120,9],[272,8,120,9],[272,14,120,9,"_e"],[272,16,120,9],[272,24,120,9,"global"],[272,30,120,9],[272,31,120,9,"Error"],[272,36,120,9],[273,8,120,9],[273,14,120,9,"BezierEasing"],[273,26,120,9],[273,38,120,9,"BezierEasing"],[273,39,120,31,"x"],[273,40,120,32],[273,42,120,34],[274,10,123,4],[274,14,123,8,"mX1"],[274,17,123,11],[274,22,123,16,"mY1"],[274,25,123,19],[274,29,123,23,"mX2"],[274,32,123,26],[274,37,123,31,"mY2"],[274,40,123,34],[274,42,123,36],[275,12,124,6],[275,19,124,13,"x"],[275,20,124,14],[275,21,124,15],[275,22,124,16],[276,10,125,4],[277,10,126,4],[278,10,127,4],[278,14,127,8,"x"],[278,15,127,9],[278,20,127,14],[278,21,127,15],[278,23,127,17],[279,12,128,6],[279,19,128,13],[279,20,128,14],[280,10,129,4],[281,10,130,4],[281,14,130,8,"x"],[281,15,130,9],[281,20,130,14],[281,21,130,15],[281,23,130,17],[282,12,131,6],[282,19,131,13],[282,20,131,14],[283,10,132,4],[284,10,133,4],[284,17,133,11,"calcBezier"],[284,27,133,21],[284,28,133,22,"getTForX"],[284,36,133,30],[284,37,133,31,"x"],[284,38,133,32],[284,39,133,33],[284,41,133,35,"mY1"],[284,44,133,38],[284,46,133,40,"mY2"],[284,49,133,43],[284,50,133,44],[285,8,134,2],[285,9,134,3],[286,8,134,3,"BezierEasing"],[286,20,134,3],[286,21,134,3,"__closure"],[286,30,134,3],[287,10,134,3,"mX1"],[287,13,134,3],[288,10,134,3,"mY1"],[288,13,134,3],[289,10,134,3,"mX2"],[289,13,134,3],[290,10,134,3,"mY2"],[290,13,134,3],[291,10,134,3,"calcBezier"],[291,20,134,3],[292,10,134,3,"getTForX"],[293,8,134,3],[294,8,134,3,"BezierEasing"],[294,20,134,3],[294,21,134,3,"__workletHash"],[294,34,134,3],[295,8,134,3,"BezierEasing"],[295,20,134,3],[295,21,134,3,"__initData"],[295,31,134,3],[295,34,134,3,"_worklet_7919274967463_init_data"],[295,66,134,3],[296,8,134,3,"BezierEasing"],[296,20,134,3],[296,21,134,3,"__stackDetails"],[296,35,134,3],[296,38,134,3,"_e"],[296,40,134,3],[297,8,134,3],[297,15,134,3,"BezierEasing"],[297,27,134,3],[298,6,134,3],[298,7,120,9],[299,4,135,0],[299,5,135,1],[300,4,135,1,"Bezier"],[300,10,135,1],[300,11,135,1,"__closure"],[300,20,135,1],[301,6,135,1,"kSplineTableSize"],[301,22,135,1],[302,6,135,1,"calcBezier"],[302,16,135,1],[303,6,135,1,"kSampleStepSize"],[303,21,135,1],[304,6,135,1,"getSlope"],[304,14,135,1],[305,6,135,1,"NEWTON_MIN_SLOPE"],[305,22,135,1],[306,6,135,1,"newtonRaphsonIterate"],[306,26,135,1],[307,6,135,1,"binarySubdivide"],[308,4,135,1],[309,4,135,1,"Bezier"],[309,10,135,1],[309,11,135,1,"__workletHash"],[309,24,135,1],[310,4,135,1,"Bezier"],[310,10,135,1],[310,11,135,1,"__initData"],[310,21,135,1],[310,24,135,1,"_worklet_6918608934740_init_data"],[310,56,135,1],[311,4,135,1,"Bezier"],[311,10,135,1],[311,11,135,1,"__stackDetails"],[311,25,135,1],[311,28,135,1,"_e"],[311,30,135,1],[312,4,135,1],[312,11,135,1,"Bezier"],[312,17,135,1],[313,2,135,1],[313,3,77,7],[314,0,77,7],[314,3]],"functionMap":{"names":["<global>","A","B","C","calcBezier","getSlope","binarySubdivide","newtonRaphsonIterate","Bezier","LinearEasing","getTForX","BezierEasing"],"mappings":"AAA;ACiB;CDI;AEC;CFI;AGC;CHI;AIG;CJI;AKG;CLI;AMC;CNgB;AOC;CPY;OQC;ECG;GDI;EEa;GFsB;SGC;GHc;CRC"},"hasCjsExports":false},"type":"js/module"}]}