{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":26,"index":41}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  exports.hasProperty = hasProperty;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.deepEqual = deepEqual;\n  Object.defineProperty(exports, \"INT32_MAX\", {\n    enumerable: true,\n    get: function () {\n      return INT32_MAX;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    const previousArr = [null];\n    const currentArr = [...array];\n    const transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const previous = previousArr[i];\n      const transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  }\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  }\n\n  // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n  function isFabric() {\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!global?.nativeFabricUIManager;\n  }\n  function isReact19() {\n    return React.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    const localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const INT32_MAX = 2 ** 31 - 1;\n});","lineCount":106,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,4,0,"exports"],[12,9,4,0],[12,10,4,0,"toArray"],[12,17,4,0],[12,20,4,0,"toArray"],[12,27,4,0],[13,2,10,0,"exports"],[13,9,10,0],[13,10,10,0,"withPrevAndCurrent"],[13,28,10,0],[13,31,10,0,"withPrevAndCurrent"],[13,49,10,0],[14,2,25,0,"exports"],[14,9,25,0],[14,10,25,0,"hasProperty"],[14,21,25,0],[14,24,25,0,"hasProperty"],[14,35,25,0],[15,2,28,0,"exports"],[15,9,28,0],[15,10,28,0,"isTestEnv"],[15,19,28,0],[15,22,28,0,"isTestEnv"],[15,31,28,0],[16,2,32,0,"exports"],[16,9,32,0],[16,10,32,0,"tagMessage"],[16,20,32,0],[16,23,32,0,"tagMessage"],[16,33,32,0],[17,2,38,0,"exports"],[17,9,38,0],[17,10,38,0,"isFabric"],[17,18,38,0],[17,21,38,0,"isFabric"],[17,29,38,0],[18,2,42,0,"exports"],[18,9,42,0],[18,10,42,0,"isReact19"],[18,19,42,0],[18,22,42,0,"isReact19"],[18,31,42,0],[19,2,45,0,"exports"],[19,9,45,0],[19,10,45,0,"isRemoteDebuggingEnabled"],[19,34,45,0],[19,37,45,0,"isRemoteDebuggingEnabled"],[19,61,45,0],[20,2,61,0,"exports"],[20,9,61,0],[20,10,61,0,"deepEqual"],[20,19,61,0],[20,22,61,0,"deepEqual"],[20,31,61,0],[21,2,80,0,"Object"],[21,8,80,0],[21,9,80,0,"defineProperty"],[21,23,80,0],[21,24,80,0,"exports"],[21,31,80,0],[22,4,80,0,"enumerable"],[22,14,80,0],[23,4,80,0,"get"],[23,7,80,0],[23,18,80,0,"get"],[23,19,80,0],[24,6,80,0],[24,13,80,0,"INT32_MAX"],[24,22,80,0],[25,4,80,0],[26,2,80,0],[27,2,3,0],[27,6,3,0,"_react"],[27,12,3,0],[27,15,3,0,"require"],[27,22,3,0],[27,23,3,0,"_dependencyMap"],[27,37,3,0],[28,2,3,0],[28,6,3,0,"React"],[28,11,3,0],[28,14,3,0,"_interopDefault"],[28,29,3,0],[28,30,3,0,"_react"],[28,36,3,0],[29,2,4,7],[29,11,4,16,"toArray"],[29,18,4,23,"toArray"],[29,19,4,24,"object"],[29,25,4,30],[29,27,4,32],[30,4,5,2],[30,8,5,6],[30,9,5,7,"Array"],[30,14,5,12],[30,15,5,13,"isArray"],[30,22,5,20],[30,23,5,21,"object"],[30,29,5,27],[30,30,5,28],[30,32,5,30],[31,6,6,4],[31,13,6,11],[31,14,6,12,"object"],[31,20,6,18],[31,21,6,19],[32,4,7,2],[33,4,8,2],[33,11,8,9,"object"],[33,17,8,15],[34,2,9,0],[35,2,10,7],[35,11,10,16,"withPrevAndCurrent"],[35,29,10,34,"withPrevAndCurrent"],[35,30,10,35,"array"],[35,35,10,40],[35,37,10,42,"mapFn"],[35,42,10,47],[35,44,10,49],[36,4,11,2],[36,10,11,8,"previousArr"],[36,21,11,19],[36,24,11,22],[36,25,11,23],[36,29,11,27],[36,30,11,28],[37,4,12,2],[37,10,12,8,"currentArr"],[37,20,12,18],[37,23,12,21],[37,24,12,22],[37,27,12,25,"array"],[37,32,12,30],[37,33,12,31],[38,4,13,2],[38,10,13,8,"transformedArr"],[38,24,13,22],[38,27,13,25],[38,29,13,27],[39,4,14,2,"currentArr"],[39,14,14,12],[39,15,14,13,"forEach"],[39,22,14,20],[39,23,14,21],[39,24,14,22,"current"],[39,31,14,29],[39,33,14,31,"i"],[39,34,14,32],[39,39,14,37],[40,6,15,4],[41,6,16,4],[42,6,17,4],[43,6,18,4],[43,12,18,10,"previous"],[43,20,18,18],[43,23,18,21,"previousArr"],[43,34,18,32],[43,35,18,33,"i"],[43,36,18,34],[43,37,18,35],[44,6,19,4],[44,12,19,10,"transformed"],[44,23,19,21],[44,26,19,24,"mapFn"],[44,31,19,29],[44,32,19,30,"previous"],[44,40,19,38],[44,42,19,40,"current"],[44,49,19,47],[44,50,19,48],[45,6,20,4,"previousArr"],[45,17,20,15],[45,18,20,16,"push"],[45,22,20,20],[45,23,20,21,"transformed"],[45,34,20,32],[45,35,20,33],[46,6,21,4,"transformedArr"],[46,20,21,18],[46,21,21,19,"push"],[46,25,21,23],[46,26,21,24,"transformed"],[46,37,21,35],[46,38,21,36],[47,4,22,2],[47,5,22,3],[47,6,22,4],[48,4,23,2],[48,11,23,9,"transformedArr"],[48,25,23,23],[49,2,24,0],[50,2,25,7],[50,11,25,16,"hasProperty"],[50,22,25,27,"hasProperty"],[50,23,25,28,"object"],[50,29,25,34],[50,31,25,36,"key"],[50,34,25,39],[50,36,25,41],[51,4,26,2],[51,11,26,9,"Object"],[51,17,26,15],[51,18,26,16,"prototype"],[51,27,26,25],[51,28,26,26,"hasOwnProperty"],[51,42,26,40],[51,43,26,41,"call"],[51,47,26,45],[51,48,26,46,"object"],[51,54,26,52],[51,56,26,54,"key"],[51,59,26,57],[51,60,26,58],[52,2,27,0],[53,2,28,7],[53,11,28,16,"isTestEnv"],[53,20,28,25,"isTestEnv"],[53,21,28,25],[53,23,28,28],[54,4,29,2],[55,4,30,2],[55,11,30,9,"hasProperty"],[55,22,30,20],[55,23,30,21,"global"],[55,29,30,27],[55,31,30,29],[55,40,30,38],[55,41,30,39],[55,45,30,43,"process"],[55,52,30,50],[55,53,30,51,"env"],[55,56,30,54],[55,57,30,55,"NODE_ENV"],[55,65,30,63],[55,70,30,68],[55,76,30,74],[56,2,31,0],[57,2,32,7],[57,11,32,16,"tagMessage"],[57,21,32,26,"tagMessage"],[57,22,32,27,"msg"],[57,25,32,30],[57,27,32,32],[58,4,33,2],[58,11,33,9],[58,45,33,43,"msg"],[58,48,33,46],[58,50,33,48],[59,2,34,0],[61,2,36,0],[62,2,37,0],[63,2,38,7],[63,11,38,16,"isFabric"],[63,19,38,24,"isFabric"],[63,20,38,24],[63,22,38,27],[64,4,39,2],[65,4,40,2],[65,11,40,9],[65,12,40,10],[65,13,40,11,"global"],[65,19,40,17],[65,21,40,19,"nativeFabricUIManager"],[65,42,40,40],[66,2,41,0],[67,2,42,7],[67,11,42,16,"isReact19"],[67,20,42,25,"isReact19"],[67,21,42,25],[67,23,42,28],[68,4,43,2],[68,11,43,9,"React"],[68,16,43,14],[68,17,43,14,"default"],[68,24,43,14],[68,25,43,15,"version"],[68,32,43,22],[68,33,43,23,"startsWith"],[68,43,43,33],[68,44,43,34],[68,49,43,39],[68,50,43,40],[69,2,44,0],[70,2,45,7],[70,11,45,16,"isRemoteDebuggingEnabled"],[70,35,45,40,"isRemoteDebuggingEnabled"],[70,36,45,40],[70,38,45,43],[71,4,46,2],[72,4,47,2],[73,4,48,2],[73,10,48,8,"localGlobal"],[73,21,48,19],[73,24,48,22,"global"],[73,30,48,28],[74,4,49,2],[74,11,49,9],[74,12,49,10],[74,13,49,11,"localGlobal"],[74,24,49,22],[74,25,49,23,"nativeCallSyncHook"],[74,43,49,41],[74,47,49,45],[74,48,49,46],[74,49,49,47,"localGlobal"],[74,60,49,58],[74,61,49,59,"__REMOTEDEV__"],[74,74,49,72],[74,79,49,77],[74,80,49,78,"localGlobal"],[74,91,49,89],[74,92,49,90,"RN$Bridgeless"],[74,105,49,103],[75,2,50,0],[77,2,52,0],[78,0,53,0],[79,0,54,0],[80,0,55,0],[81,0,56,0],[82,0,57,0],[83,0,58,0],[84,0,59,0],[85,0,60,0],[86,2,61,7],[86,11,61,16,"deepEqual"],[86,20,61,25,"deepEqual"],[86,21,61,26,"obj1"],[86,25,61,30],[86,27,61,32,"obj2"],[86,31,61,36],[86,33,61,38],[87,4,62,2],[87,8,62,6,"obj1"],[87,12,62,10],[87,17,62,15,"obj2"],[87,21,62,19],[87,23,62,21],[88,6,63,4],[88,13,63,11],[88,17,63,15],[89,4,64,2],[90,4,65,2],[90,8,65,6],[90,15,65,13,"obj1"],[90,19,65,17],[90,24,65,22],[90,32,65,30],[90,36,65,34],[90,43,65,41,"obj2"],[90,47,65,45],[90,52,65,50],[90,60,65,58],[90,64,65,62,"obj1"],[90,68,65,66],[90,73,65,71],[90,77,65,75],[90,81,65,79,"obj2"],[90,85,65,83],[90,90,65,88],[90,94,65,92],[90,96,65,94],[91,6,66,4],[91,13,66,11],[91,18,66,16],[92,4,67,2],[93,4,68,2],[93,10,68,8,"keys1"],[93,15,68,13],[93,18,68,16,"Object"],[93,24,68,22],[93,25,68,23,"keys"],[93,29,68,27],[93,30,68,28,"obj1"],[93,34,68,32],[93,35,68,33],[94,4,69,2],[94,10,69,8,"keys2"],[94,15,69,13],[94,18,69,16,"Object"],[94,24,69,22],[94,25,69,23,"keys"],[94,29,69,27],[94,30,69,28,"obj2"],[94,34,69,32],[94,35,69,33],[95,4,70,2],[95,8,70,6,"keys1"],[95,13,70,11],[95,14,70,12,"length"],[95,20,70,18],[95,25,70,23,"keys2"],[95,30,70,28],[95,31,70,29,"length"],[95,37,70,35],[95,39,70,37],[96,6,71,4],[96,13,71,11],[96,18,71,16],[97,4,72,2],[98,4,73,2],[98,9,73,7],[98,15,73,13,"key"],[98,18,73,16],[98,22,73,20,"keys1"],[98,27,73,25],[98,29,73,27],[99,6,74,4],[99,10,74,8],[99,11,74,9,"keys2"],[99,16,74,14],[99,17,74,15,"includes"],[99,25,74,23],[99,26,74,24,"key"],[99,29,74,27],[99,30,74,28],[99,34,74,32],[99,35,74,33,"deepEqual"],[99,44,74,42],[99,45,74,43,"obj1"],[99,49,74,47],[99,50,74,48,"key"],[99,53,74,51],[99,54,74,52],[99,56,74,54,"obj2"],[99,60,74,58],[99,61,74,59,"key"],[99,64,74,62],[99,65,74,63],[99,66,74,64],[99,68,74,66],[100,8,75,6],[100,15,75,13],[100,20,75,18],[101,6,76,4],[102,4,77,2],[103,4,78,2],[103,11,78,9],[103,15,78,13],[104,2,79,0],[105,2,80,7],[105,8,80,13,"INT32_MAX"],[105,17,80,22],[105,20,80,25],[105,21,80,26],[105,25,80,30],[105,27,80,32],[105,30,80,35],[105,31,80,36],[106,0,80,37],[106,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;OCG;CDK;OEC;qBCI;GDQ;CFE;OIC;CJE;OKC;CLG;OMC;CNE;OOI;CPG;OQC;CRE;OSC;CTK;OUW;CVkB"},"hasCjsExports":false},"type":"js/module"}]}