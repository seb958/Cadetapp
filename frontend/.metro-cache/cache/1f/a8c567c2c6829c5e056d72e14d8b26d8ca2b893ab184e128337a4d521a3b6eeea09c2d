{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.toArray = toArray;\n  exports.withPrevAndCurrent = withPrevAndCurrent;\n  exports.hasProperty = hasProperty;\n  exports.isTestEnv = isTestEnv;\n  exports.tagMessage = tagMessage;\n  exports.isFabric = isFabric;\n  exports.isReact19 = isReact19;\n  exports.isRemoteDebuggingEnabled = isRemoteDebuggingEnabled;\n  exports.deepEqual = deepEqual;\n  Object.defineProperty(exports, \"INT32_MAX\", {\n    enumerable: true,\n    get: function () {\n      return INT32_MAX;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  function toArray(object) {\n    if (!Array.isArray(object)) {\n      return [object];\n    }\n    return object;\n  }\n  function withPrevAndCurrent(array, mapFn) {\n    const previousArr = [null];\n    const currentArr = [...array];\n    const transformedArr = [];\n    currentArr.forEach((current, i) => {\n      // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n      // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n      const previous = previousArr[i];\n      const transformed = mapFn(previous, current);\n      previousArr.push(transformed);\n      transformedArr.push(transformed);\n    });\n    return transformedArr;\n  } // eslint-disable-next-line @typescript-eslint/ban-types\n\n  function hasProperty(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n  }\n  function isTestEnv() {\n    // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n    return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n  }\n  function tagMessage(msg) {\n    return `[react-native-gesture-handler] ${msg}`;\n  } // Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n  // may not be initialized before the first render\n\n  function isFabric() {\n    var _global;\n\n    // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n    return !!((_global = global) !== null && _global !== void 0 && _global.nativeFabricUIManager);\n  }\n  function isReact19() {\n    return React.default.version.startsWith('19.');\n  }\n  function isRemoteDebuggingEnabled() {\n    // react-native-reanimated checks if in remote debugging in the same way\n    // @ts-ignore global is available but node types are not included\n    const localGlobal = global;\n    return (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) && !localGlobal.RN$Bridgeless;\n  }\n  /**\n   * Recursively compares two objects for deep equality.\n   *\n   * **Note:** This function does not support cyclic references.\n   *\n   * @param obj1 - The first object to compare.\n   * @param obj2 - The second object to compare.\n   * @returns `true` if the objects are deeply equal, `false` otherwise.\n   */\n\n  function deepEqual(obj1, obj2) {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object' || obj1 === null || obj2 === null) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const INT32_MAX = 2 ** 31 - 1;\n});","lineCount":108,"map":[[12,2,2,0,"exports"],[12,9,2,0],[12,10,2,0,"toArray"],[12,17,2,0],[12,20,2,0,"toArray"],[12,27,2,0],[13,2,9,0,"exports"],[13,9,9,0],[13,10,9,0,"withPrevAndCurrent"],[13,28,9,0],[13,31,9,0,"withPrevAndCurrent"],[13,49,9,0],[14,2,25,0,"exports"],[14,9,25,0],[14,10,25,0,"hasProperty"],[14,21,25,0],[14,24,25,0,"hasProperty"],[14,35,25,0],[15,2,28,0,"exports"],[15,9,28,0],[15,10,28,0,"isTestEnv"],[15,19,28,0],[15,22,28,0,"isTestEnv"],[15,31,28,0],[16,2,32,0,"exports"],[16,9,32,0],[16,10,32,0,"tagMessage"],[16,20,32,0],[16,23,32,0,"tagMessage"],[16,33,32,0],[17,2,37,0,"exports"],[17,9,37,0],[17,10,37,0,"isFabric"],[17,18,37,0],[17,21,37,0,"isFabric"],[17,29,37,0],[18,2,43,0,"exports"],[18,9,43,0],[18,10,43,0,"isReact19"],[18,19,43,0],[18,22,43,0,"isReact19"],[18,31,43,0],[19,2,46,0,"exports"],[19,9,46,0],[19,10,46,0,"isRemoteDebuggingEnabled"],[19,34,46,0],[19,37,46,0,"isRemoteDebuggingEnabled"],[19,61,46,0],[20,2,62,0,"exports"],[20,9,62,0],[20,10,62,0,"deepEqual"],[20,19,62,0],[20,22,62,0,"deepEqual"],[20,31,62,0],[21,2,86,0,"Object"],[21,8,86,0],[21,9,86,0,"defineProperty"],[21,23,86,0],[21,24,86,0,"exports"],[21,31,86,0],[22,4,86,0,"enumerable"],[22,14,86,0],[23,4,86,0,"get"],[23,7,86,0],[23,18,86,0,"get"],[23,19,86,0],[24,6,86,0],[24,13,86,0,"INT32_MAX"],[24,22,86,0],[25,4,86,0],[26,2,86,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,2,7],[29,11,2,16,"toArray"],[29,18,2,23,"toArray"],[29,19,2,24,"object"],[29,25,2,30],[29,27,2,32],[30,4,3,2],[30,8,3,6],[30,9,3,7,"Array"],[30,14,3,12],[30,15,3,13,"isArray"],[30,22,3,20],[30,23,3,21,"object"],[30,29,3,27],[30,30,3,28],[30,32,3,30],[31,6,4,4],[31,13,4,11],[31,14,4,12,"object"],[31,20,4,18],[31,21,4,19],[32,4,5,2],[33,4,7,2],[33,11,7,9,"object"],[33,17,7,15],[34,2,8,0],[35,2,9,7],[35,11,9,16,"withPrevAndCurrent"],[35,29,9,34,"withPrevAndCurrent"],[35,30,9,35,"array"],[35,35,9,40],[35,37,9,42,"mapFn"],[35,42,9,47],[35,44,9,49],[36,4,10,2],[36,10,10,8,"previousArr"],[36,21,10,19],[36,24,10,22],[36,25,10,23],[36,29,10,27],[36,30,10,28],[37,4,11,2],[37,10,11,8,"currentArr"],[37,20,11,18],[37,23,11,21],[37,24,11,22],[37,27,11,25,"array"],[37,32,11,30],[37,33,11,31],[38,4,12,2],[38,10,12,8,"transformedArr"],[38,24,12,22],[38,27,12,25],[38,29,12,27],[39,4,13,2,"currentArr"],[39,14,13,12],[39,15,13,13,"forEach"],[39,22,13,20],[39,23,13,21],[39,24,13,22,"current"],[39,31,13,29],[39,33,13,31,"i"],[39,34,13,32],[39,39,13,37],[40,6,14,4],[41,6,15,4],[42,6,16,4],[43,6,17,4],[43,12,17,10,"previous"],[43,20,17,18],[43,23,17,21,"previousArr"],[43,34,17,32],[43,35,17,33,"i"],[43,36,17,34],[43,37,17,35],[44,6,18,4],[44,12,18,10,"transformed"],[44,23,18,21],[44,26,18,24,"mapFn"],[44,31,18,29],[44,32,18,30,"previous"],[44,40,18,38],[44,42,18,40,"current"],[44,49,18,47],[44,50,18,48],[45,6,19,4,"previousArr"],[45,17,19,15],[45,18,19,16,"push"],[45,22,19,20],[45,23,19,21,"transformed"],[45,34,19,32],[45,35,19,33],[46,6,20,4,"transformedArr"],[46,20,20,18],[46,21,20,19,"push"],[46,25,20,23],[46,26,20,24,"transformed"],[46,37,20,35],[46,38,20,36],[47,4,21,2],[47,5,21,3],[47,6,21,4],[48,4,22,2],[48,11,22,9,"transformedArr"],[48,25,22,23],[49,2,23,0],[49,3,23,1],[49,4,23,2],[51,2,25,7],[51,11,25,16,"hasProperty"],[51,22,25,27,"hasProperty"],[51,23,25,28,"object"],[51,29,25,34],[51,31,25,36,"key"],[51,34,25,39],[51,36,25,41],[52,4,26,2],[52,11,26,9,"Object"],[52,17,26,15],[52,18,26,16,"prototype"],[52,27,26,25],[52,28,26,26,"hasOwnProperty"],[52,42,26,40],[52,43,26,41,"call"],[52,47,26,45],[52,48,26,46,"object"],[52,54,26,52],[52,56,26,54,"key"],[52,59,26,57],[52,60,26,58],[53,2,27,0],[54,2,28,7],[54,11,28,16,"isTestEnv"],[54,20,28,25,"isTestEnv"],[54,21,28,25],[54,23,28,28],[55,4,29,2],[56,4,30,2],[56,11,30,9,"hasProperty"],[56,22,30,20],[56,23,30,21,"global"],[56,29,30,27],[56,31,30,29],[56,40,30,38],[56,41,30,39],[56,45,30,43,"process"],[56,52,30,50],[56,53,30,51,"env"],[56,56,30,54],[56,57,30,55,"NODE_ENV"],[56,65,30,63],[56,70,30,68],[56,76,30,74],[57,2,31,0],[58,2,32,7],[58,11,32,16,"tagMessage"],[58,21,32,26,"tagMessage"],[58,22,32,27,"msg"],[58,25,32,30],[58,27,32,32],[59,4,33,2],[59,11,33,9],[59,45,33,43,"msg"],[59,48,33,46],[59,50,33,48],[60,2,34,0],[60,3,34,1],[60,4,34,2],[61,2,35,0],[63,2,37,7],[63,11,37,16,"isFabric"],[63,19,37,24,"isFabric"],[63,20,37,24],[63,22,37,27],[64,4,38,2],[64,8,38,6,"_global"],[64,15,38,13],[66,4,40,2],[67,4,41,2],[67,11,41,9],[67,12,41,10],[67,14,41,12],[67,15,41,13,"_global"],[67,22,41,20],[67,25,41,23,"global"],[67,31,41,29],[67,37,41,35],[67,41,41,39],[67,45,41,43,"_global"],[67,52,41,50],[67,57,41,55],[67,62,41,60],[67,63,41,61],[67,67,41,65,"_global"],[67,74,41,72],[67,75,41,73,"nativeFabricUIManager"],[67,96,41,94],[67,97,41,95],[68,2,42,0],[69,2,43,7],[69,11,43,16,"isReact19"],[69,20,43,25,"isReact19"],[69,21,43,25],[69,23,43,28],[70,4,44,2],[70,11,44,9,"React"],[70,16,44,14],[70,17,44,14,"default"],[70,24,44,14],[70,25,44,15,"version"],[70,32,44,22],[70,33,44,23,"startsWith"],[70,43,44,33],[70,44,44,34],[70,49,44,39],[70,50,44,40],[71,2,45,0],[72,2,46,7],[72,11,46,16,"isRemoteDebuggingEnabled"],[72,35,46,40,"isRemoteDebuggingEnabled"],[72,36,46,40],[72,38,46,43],[73,4,47,2],[74,4,48,2],[75,4,49,2],[75,10,49,8,"localGlobal"],[75,21,49,19],[75,24,49,22,"global"],[75,30,49,28],[76,4,50,2],[76,11,50,9],[76,12,50,10],[76,13,50,11,"localGlobal"],[76,24,50,22],[76,25,50,23,"nativeCallSyncHook"],[76,43,50,41],[76,47,50,45],[76,48,50,46],[76,49,50,47,"localGlobal"],[76,60,50,58],[76,61,50,59,"__REMOTEDEV__"],[76,74,50,72],[76,79,50,77],[76,80,50,78,"localGlobal"],[76,91,50,89],[76,92,50,90,"RN$Bridgeless"],[76,105,50,103],[77,2,51,0],[78,2,52,0],[79,0,53,0],[80,0,54,0],[81,0,55,0],[82,0,56,0],[83,0,57,0],[84,0,58,0],[85,0,59,0],[86,0,60,0],[88,2,62,7],[88,11,62,16,"deepEqual"],[88,20,62,25,"deepEqual"],[88,21,62,26,"obj1"],[88,25,62,30],[88,27,62,32,"obj2"],[88,31,62,36],[88,33,62,38],[89,4,63,2],[89,8,63,6,"obj1"],[89,12,63,10],[89,17,63,15,"obj2"],[89,21,63,19],[89,23,63,21],[90,6,64,4],[90,13,64,11],[90,17,64,15],[91,4,65,2],[92,4,67,2],[92,8,67,6],[92,15,67,13,"obj1"],[92,19,67,17],[92,24,67,22],[92,32,67,30],[92,36,67,34],[92,43,67,41,"obj2"],[92,47,67,45],[92,52,67,50],[92,60,67,58],[92,64,67,62,"obj1"],[92,68,67,66],[92,73,67,71],[92,77,67,75],[92,81,67,79,"obj2"],[92,85,67,83],[92,90,67,88],[92,94,67,92],[92,96,67,94],[93,6,68,4],[93,13,68,11],[93,18,68,16],[94,4,69,2],[95,4,71,2],[95,10,71,8,"keys1"],[95,15,71,13],[95,18,71,16,"Object"],[95,24,71,22],[95,25,71,23,"keys"],[95,29,71,27],[95,30,71,28,"obj1"],[95,34,71,32],[95,35,71,33],[96,4,72,2],[96,10,72,8,"keys2"],[96,15,72,13],[96,18,72,16,"Object"],[96,24,72,22],[96,25,72,23,"keys"],[96,29,72,27],[96,30,72,28,"obj2"],[96,34,72,32],[96,35,72,33],[97,4,74,2],[97,8,74,6,"keys1"],[97,13,74,11],[97,14,74,12,"length"],[97,20,74,18],[97,25,74,23,"keys2"],[97,30,74,28],[97,31,74,29,"length"],[97,37,74,35],[97,39,74,37],[98,6,75,4],[98,13,75,11],[98,18,75,16],[99,4,76,2],[100,4,78,2],[100,9,78,7],[100,15,78,13,"key"],[100,18,78,16],[100,22,78,20,"keys1"],[100,27,78,25],[100,29,78,27],[101,6,79,4],[101,10,79,8],[101,11,79,9,"keys2"],[101,16,79,14],[101,17,79,15,"includes"],[101,25,79,23],[101,26,79,24,"key"],[101,29,79,27],[101,30,79,28],[101,34,79,32],[101,35,79,33,"deepEqual"],[101,44,79,42],[101,45,79,43,"obj1"],[101,49,79,47],[101,50,79,48,"key"],[101,53,79,51],[101,54,79,52],[101,56,79,54,"obj2"],[101,60,79,58],[101,61,79,59,"key"],[101,64,79,62],[101,65,79,63],[101,66,79,64],[101,68,79,66],[102,8,80,6],[102,15,80,13],[102,20,80,18],[103,6,81,4],[104,4,82,2],[105,4,84,2],[105,11,84,9],[105,15,84,13],[106,2,85,0],[107,2,86,7],[107,8,86,13,"INT32_MAX"],[107,17,86,22],[107,20,86,25],[107,21,86,26],[107,25,86,30],[107,27,86,32],[107,30,86,35],[107,31,86,36],[108,0,86,37],[108,3]],"functionMap":{"names":["<global>","toArray","withPrevAndCurrent","currentArr.forEach$argument_0","hasProperty","isTestEnv","tagMessage","isFabric","isReact19","isRemoteDebuggingEnabled","deepEqual"],"mappings":"AAA;OCC;CDM;OEC;qBCI;GDQ;CFE;OIE;CJE;OKC;CLG;OMC;CNE;OOG;CPK;OQC;CRE;OSC;CTK;OUW;CVuB"},"hasCjsExports":false},"type":"js/module"}]}