{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":36,"index":247}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":248},"end":{"line":4,"column":62,"index":310}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":311},"end":{"line":5,"column":32,"index":343}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _DiscreteGestureHandler = require(_dependencyMap[1], \"./DiscreteGestureHandler\");\n  var DiscreteGestureHandler = _interopDefault(_DiscreteGestureHandler);\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class TapGestureHandler extends DiscreteGestureHandler.default {\n    constructor(...args) {\n      super(...args);\n      _defineProperty(this, \"_shouldFireEndEvent\", null);\n      _defineProperty(this, \"_timer\", void 0);\n      _defineProperty(this, \"_multiTapTimer\", void 0);\n      _defineProperty(this, \"onSuccessfulTap\", ev => {\n        if (this._getPendingGestures().length) {\n          this._shouldFireEndEvent = ev;\n          return;\n        }\n        if (ev.eventType === Hammer.default.INPUT_END) {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.default.INPUT_MOVE\n          });\n        } // When handler gets activated it will turn into State.END immediately.\n\n        this.sendEvent({\n          ...ev,\n          isFinal: true\n        });\n        this.onGestureEnded(ev);\n      });\n    }\n\n    // TODO unused?\n    get name() {\n      return 'tap';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Tap;\n    }\n    get maxDelayMs() {\n      // @ts-ignore TODO(TS) trace down config\n      return (0, _utils.isnan)(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n    }\n    simulateCancelEvent(inputData) {\n      if (this.isGestureRunning) {\n        this.cancelEvent(inputData);\n      }\n    }\n    onGestureActivated(ev) {\n      if (this.isGestureRunning) {\n        this.onSuccessfulTap(ev);\n      }\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev); // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n\n      if (!this.hasGestureFailed && !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name); // @ts-ignore TODO(TS) trace down config\n\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n      if (ev.isFinal && ev.maxPointers > 1) {\n        setTimeout(() => {\n          // Handle case where one finger presses slightly\n          // after the first finger on a multi-tap event\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n      if (this.hasGestureFailed) {\n        return;\n      } // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n\n      if (ev.isFinal) {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (ev.maxPointers > 1) {\n          setTimeout(() => {\n            if (this.isGestureRunning) {\n              this.cancelEvent(ev);\n            }\n          });\n        } // Clear last timer\n\n        clearTimeout(this._timer); // Create time out for multi-taps.\n\n        this._timer = setTimeout(() => {\n          this.hasGestureFailed = true;\n          this.cancelEvent(ev);\n        }, this.maxDelayMs);\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name); // @ts-ignore TODO(TS) trace down config\n\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        event: this.name,\n        // @ts-ignore TODO(TS) trace down config\n        taps: (0, _utils.isnan)(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n        interval: this.maxDelayMs,\n        time:\n        // @ts-ignore TODO(TS) trace down config\n        (0, _utils.isnan)(this.config.maxDurationMs) || this.config.maxDurationMs == null ? 250 :\n        // @ts-ignore TODO(TS) trace down config\n        this.config.maxDurationMs\n      };\n    }\n    updateGestureConfig({\n      shouldCancelWhenOutside = true,\n      maxDeltaX = Number.NaN,\n      maxDeltaY = Number.NaN,\n      numberOfTaps = 1,\n      minDurationMs = 525,\n      maxDelayMs = Number.NaN,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n      maxDurationMs = Number.NaN,\n      maxDist = 2,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldCancelWhenOutside,\n        numberOfTaps,\n        maxDeltaX,\n        maxDeltaY,\n        minDurationMs,\n        maxDelayMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n    onGestureEnded(...props) {\n      clearTimeout(this._timer); // @ts-ignore TODO(TS) check how onGestureEnded works\n\n      super.onGestureEnded(...props);\n    }\n    onWaitingEnded(_gesture) {\n      if (this._shouldFireEndEvent) {\n        this.onSuccessfulTap(this._shouldFireEndEvent);\n        this._shouldFireEndEvent = null;\n      }\n    }\n  }\n  var _default = TapGestureHandler;\n});","lineCount":194,"map":[[12,2,179,0,"Object"],[12,8,179,0],[12,9,179,0,"defineProperty"],[12,23,179,0],[12,24,179,0,"exports"],[12,31,179,0],[13,4,179,0,"enumerable"],[13,14,179,0],[14,4,179,0,"get"],[14,7,179,0],[14,18,179,0,"get"],[14,19,179,0],[15,6,179,0],[15,13,179,0,"_default"],[15,21,179,0],[16,4,179,0],[17,2,179,0],[18,2,3,0],[18,6,3,0,"_egjsHammerjs"],[18,19,3,0],[18,22,3,0,"require"],[18,29,3,0],[18,30,3,0,"_dependencyMap"],[18,44,3,0],[19,2,3,0],[19,6,3,0,"Hammer"],[19,12,3,0],[19,15,3,0,"_interopDefault"],[19,30,3,0],[19,31,3,0,"_egjsHammerjs"],[19,44,3,0],[20,2,4,0],[20,6,4,0,"_DiscreteGestureHandler"],[20,29,4,0],[20,32,4,0,"require"],[20,39,4,0],[20,40,4,0,"_dependencyMap"],[20,54,4,0],[21,2,4,0],[21,6,4,0,"DiscreteGestureHandler"],[21,28,4,0],[21,31,4,0,"_interopDefault"],[21,46,4,0],[21,47,4,0,"_DiscreteGestureHandler"],[21,70,4,0],[22,2,5,0],[22,6,5,0,"_utils"],[22,12,5,0],[22,15,5,0,"require"],[22,22,5,0],[22,23,5,0,"_dependencyMap"],[22,37,5,0],[23,2,1,0],[23,11,1,9,"_defineProperty"],[23,26,1,24,"_defineProperty"],[23,27,1,25,"obj"],[23,30,1,28],[23,32,1,30,"key"],[23,35,1,33],[23,37,1,35,"value"],[23,42,1,40],[23,44,1,42],[24,4,1,44],[24,8,1,48,"key"],[24,11,1,51],[24,15,1,55,"obj"],[24,18,1,58],[24,20,1,60],[25,6,1,62,"Object"],[25,12,1,68],[25,13,1,69,"defineProperty"],[25,27,1,83],[25,28,1,84,"obj"],[25,31,1,87],[25,33,1,89,"key"],[25,36,1,92],[25,38,1,94],[26,8,1,96,"value"],[26,13,1,101],[26,15,1,103,"value"],[26,20,1,108],[27,8,1,110,"enumerable"],[27,18,1,120],[27,20,1,122],[27,24,1,126],[28,8,1,128,"configurable"],[28,20,1,140],[28,22,1,142],[28,26,1,146],[29,8,1,148,"writable"],[29,16,1,156],[29,18,1,158],[30,6,1,163],[30,7,1,164],[30,8,1,165],[31,4,1,167],[31,5,1,168],[31,11,1,174],[32,6,1,176,"obj"],[32,9,1,179],[32,10,1,180,"key"],[32,13,1,183],[32,14,1,184],[32,17,1,187,"value"],[32,22,1,192],[33,4,1,194],[34,4,1,196],[34,11,1,203,"obj"],[34,14,1,206],[35,2,1,208],[36,2,7,0],[36,8,7,6,"TapGestureHandler"],[36,25,7,23],[36,34,7,32,"DiscreteGestureHandler"],[36,56,7,54],[36,57,7,54,"default"],[36,64,7,54],[36,65,7,55],[37,4,8,2,"constructor"],[37,15,8,13,"constructor"],[37,16,8,14],[37,19,8,17,"args"],[37,23,8,21],[37,25,8,23],[38,6,9,4],[38,11,9,9],[38,12,9,10],[38,15,9,13,"args"],[38,19,9,17],[38,20,9,18],[39,6,11,4,"_defineProperty"],[39,21,11,19],[39,22,11,20],[39,26,11,24],[39,28,11,26],[39,49,11,47],[39,51,11,49],[39,55,11,53],[39,56,11,54],[40,6,13,4,"_defineProperty"],[40,21,13,19],[40,22,13,20],[40,26,13,24],[40,28,13,26],[40,36,13,34],[40,38,13,36],[40,43,13,41],[40,44,13,42],[40,45,13,43],[41,6,15,4,"_defineProperty"],[41,21,15,19],[41,22,15,20],[41,26,15,24],[41,28,15,26],[41,44,15,42],[41,46,15,44],[41,51,15,49],[41,52,15,50],[41,53,15,51],[42,6,17,4,"_defineProperty"],[42,21,17,19],[42,22,17,20],[42,26,17,24],[42,28,17,26],[42,45,17,43],[42,47,17,45,"ev"],[42,49,17,47],[42,53,17,51],[43,8,18,6],[43,12,18,10],[43,16,18,14],[43,17,18,15,"_getPendingGestures"],[43,36,18,34],[43,37,18,35],[43,38,18,36],[43,39,18,37,"length"],[43,45,18,43],[43,47,18,45],[44,10,19,8],[44,14,19,12],[44,15,19,13,"_shouldFireEndEvent"],[44,34,19,32],[44,37,19,35,"ev"],[44,39,19,37],[45,10,20,8],[46,8,21,6],[47,8,23,6],[47,12,23,10,"ev"],[47,14,23,12],[47,15,23,13,"eventType"],[47,24,23,22],[47,29,23,27,"Hammer"],[47,35,23,33],[47,36,23,33,"default"],[47,43,23,33],[47,44,23,34,"INPUT_END"],[47,53,23,43],[47,55,23,45],[48,10,24,8],[48,14,24,12],[48,15,24,13,"sendEvent"],[48,24,24,22],[48,25,24,23],[49,12,24,25],[49,15,24,28,"ev"],[49,17,24,30],[50,12,25,10,"eventType"],[50,21,25,19],[50,23,25,21,"Hammer"],[50,29,25,27],[50,30,25,27,"default"],[50,37,25,27],[50,38,25,28,"INPUT_MOVE"],[51,10,26,8],[51,11,26,9],[51,12,26,10],[52,8,27,6],[52,9,27,7],[52,10,27,8],[54,8,30,6],[54,12,30,10],[54,13,30,11,"sendEvent"],[54,22,30,20],[54,23,30,21],[55,10,30,23],[55,13,30,26,"ev"],[55,15,30,28],[56,10,31,8,"isFinal"],[56,17,31,15],[56,19,31,17],[57,8,32,6],[57,9,32,7],[57,10,32,8],[58,8,33,6],[58,12,33,10],[58,13,33,11,"onGestureEnded"],[58,27,33,25],[58,28,33,26,"ev"],[58,30,33,28],[58,31,33,29],[59,6,34,4],[59,7,34,5],[59,8,34,6],[60,4,35,2],[62,4,37,2],[63,4,38,2],[63,8,38,6,"name"],[63,12,38,10,"name"],[63,13,38,10],[63,15,38,13],[64,6,39,4],[64,13,39,11],[64,18,39,16],[65,4,40,2],[66,4,42,2],[66,8,42,6,"NativeGestureClass"],[66,26,42,24,"NativeGestureClass"],[66,27,42,24],[66,29,42,27],[67,6,43,4],[67,13,43,11,"Hammer"],[67,19,43,17],[67,20,43,17,"default"],[67,27,43,17],[67,28,43,18,"Tap"],[67,31,43,21],[68,4,44,2],[69,4,46,2],[69,8,46,6,"maxDelayMs"],[69,18,46,16,"maxDelayMs"],[69,19,46,16],[69,21,46,19],[70,6,47,4],[71,6,48,4],[71,13,48,11],[71,17,48,11,"isnan"],[71,23,48,16],[71,24,48,16,"isnan"],[71,29,48,16],[71,31,48,17],[71,35,48,21],[71,36,48,22,"config"],[71,42,48,28],[71,43,48,29,"maxDelayMs"],[71,53,48,39],[71,54,48,40],[71,57,48,43],[71,60,48,46],[71,63,48,49],[71,67,48,53],[71,68,48,54,"config"],[71,74,48,60],[71,75,48,61,"maxDelayMs"],[71,85,48,71],[72,4,49,2],[73,4,51,2,"simulateCancelEvent"],[73,23,51,21,"simulateCancelEvent"],[73,24,51,22,"inputData"],[73,33,51,31],[73,35,51,33],[74,6,52,4],[74,10,52,8],[74,14,52,12],[74,15,52,13,"isGestureRunning"],[74,31,52,29],[74,33,52,31],[75,8,53,6],[75,12,53,10],[75,13,53,11,"cancelEvent"],[75,24,53,22],[75,25,53,23,"inputData"],[75,34,53,32],[75,35,53,33],[76,6,54,4],[77,4,55,2],[78,4,57,2,"onGestureActivated"],[78,22,57,20,"onGestureActivated"],[78,23,57,21,"ev"],[78,25,57,23],[78,27,57,25],[79,6,58,4],[79,10,58,8],[79,14,58,12],[79,15,58,13,"isGestureRunning"],[79,31,58,29],[79,33,58,31],[80,8,59,6],[80,12,59,10],[80,13,59,11,"onSuccessfulTap"],[80,28,59,26],[80,29,59,27,"ev"],[80,31,59,29],[80,32,59,30],[81,6,60,4],[82,4,61,2],[83,4,63,2,"onRawEvent"],[83,14,63,12,"onRawEvent"],[83,15,63,13,"ev"],[83,17,63,15],[83,19,63,17],[84,6,64,4],[84,11,64,9],[84,12,64,10,"onRawEvent"],[84,22,64,20],[84,23,64,21,"ev"],[84,25,64,23],[84,26,64,24],[84,27,64,25],[84,28,64,26],[86,6,66,4],[86,10,66,8],[86,11,66,9],[86,15,66,13],[86,16,66,14,"hasGestureFailed"],[86,32,66,30],[86,36,66,34],[86,37,66,35],[86,41,66,39],[86,42,66,40,"isGestureRunning"],[86,58,66,56],[87,6,66,60],[88,6,67,4],[88,7,67,5,"ev"],[88,9,67,7],[88,10,67,8,"isFinal"],[88,17,67,15],[88,19,67,17],[89,8,68,6],[90,8,69,6],[90,14,69,12,"gesture"],[90,21,69,19],[90,24,69,22],[90,28,69,26],[90,29,69,27,"hammer"],[90,35,69,33],[90,36,69,34,"get"],[90,39,69,37],[90,40,69,38],[90,44,69,42],[90,45,69,43,"name"],[90,49,69,47],[90,50,69,48],[90,51,69,49],[90,52,69,50],[92,8,71,6],[92,12,71,10,"gesture"],[92,19,71,17],[92,20,71,18,"options"],[92,27,71,25],[92,28,71,26,"enable"],[92,34,71,32],[92,35,71,33,"gesture"],[92,42,71,40],[92,44,71,42,"ev"],[92,46,71,44],[92,47,71,45],[92,49,71,47],[93,10,72,8,"clearTimeout"],[93,22,72,20],[93,23,72,21],[93,27,72,25],[93,28,72,26,"_multiTapTimer"],[93,42,72,40],[93,43,72,41],[94,10,73,8],[94,14,73,12],[94,15,73,13,"onStart"],[94,22,73,20],[94,23,73,21,"ev"],[94,25,73,23],[94,26,73,24],[95,10,74,8],[95,14,74,12],[95,15,74,13,"sendEvent"],[95,24,74,22],[95,25,74,23,"ev"],[95,27,74,25],[95,28,74,26],[96,8,75,6],[97,6,76,4],[98,6,78,4],[98,10,78,8,"ev"],[98,12,78,10],[98,13,78,11,"isFinal"],[98,20,78,18],[98,24,78,22,"ev"],[98,26,78,24],[98,27,78,25,"maxPointers"],[98,38,78,36],[98,41,78,39],[98,42,78,40],[98,44,78,42],[99,8,79,6,"setTimeout"],[99,18,79,16],[99,19,79,17],[99,25,79,23],[100,10,80,8],[101,10,81,8],[102,10,82,8],[102,14,82,12],[102,18,82,16],[102,19,82,17,"isGestureRunning"],[102,35,82,33],[102,37,82,35],[103,12,83,10],[103,16,83,14],[103,17,83,15,"cancelEvent"],[103,28,83,26],[103,29,83,27,"ev"],[103,31,83,29],[103,32,83,30],[104,10,84,8],[105,8,85,6],[105,9,85,7],[105,10,85,8],[106,6,86,4],[107,6,88,4],[107,10,88,8],[107,14,88,12],[107,15,88,13,"hasGestureFailed"],[107,31,88,29],[107,33,88,31],[108,8,89,6],[109,6,90,4],[109,7,90,5],[109,8,90,6],[110,6,91,4],[112,6,94,4],[112,10,94,8,"ev"],[112,12,94,10],[112,13,94,11,"isFinal"],[112,20,94,18],[112,22,94,20],[113,8,95,6],[114,8,96,6],[115,8,97,6],[115,12,97,10,"ev"],[115,14,97,12],[115,15,97,13,"maxPointers"],[115,26,97,24],[115,29,97,27],[115,30,97,28],[115,32,97,30],[116,10,98,8,"setTimeout"],[116,20,98,18],[116,21,98,19],[116,27,98,25],[117,12,99,10],[117,16,99,14],[117,20,99,18],[117,21,99,19,"isGestureRunning"],[117,37,99,35],[117,39,99,37],[118,14,100,12],[118,18,100,16],[118,19,100,17,"cancelEvent"],[118,30,100,28],[118,31,100,29,"ev"],[118,33,100,31],[118,34,100,32],[119,12,101,10],[120,10,102,8],[120,11,102,9],[120,12,102,10],[121,8,103,6],[121,9,103,7],[121,10,103,8],[123,8,106,6,"clearTimeout"],[123,20,106,18],[123,21,106,19],[123,25,106,23],[123,26,106,24,"_timer"],[123,32,106,30],[123,33,106,31],[123,34,106,32],[123,35,106,33],[125,8,108,6],[125,12,108,10],[125,13,108,11,"_timer"],[125,19,108,17],[125,22,108,20,"setTimeout"],[125,32,108,30],[125,33,108,31],[125,39,108,37],[126,10,109,8],[126,14,109,12],[126,15,109,13,"hasGestureFailed"],[126,31,109,29],[126,34,109,32],[126,38,109,36],[127,10,110,8],[127,14,110,12],[127,15,110,13,"cancelEvent"],[127,26,110,24],[127,27,110,25,"ev"],[127,29,110,27],[127,30,110,28],[128,8,111,6],[128,9,111,7],[128,11,111,9],[128,15,111,13],[128,16,111,14,"maxDelayMs"],[128,26,111,24],[128,27,111,25],[129,6,112,4],[129,7,112,5],[129,13,112,11],[129,17,112,15],[129,18,112,16],[129,22,112,20],[129,23,112,21,"hasGestureFailed"],[129,39,112,37],[129,43,112,41],[129,44,112,42],[129,48,112,46],[129,49,112,47,"isGestureRunning"],[129,65,112,63],[129,67,112,65],[130,8,113,6],[131,8,114,6],[131,14,114,12,"gesture"],[131,21,114,19],[131,24,114,22],[131,28,114,26],[131,29,114,27,"hammer"],[131,35,114,33],[131,36,114,34,"get"],[131,39,114,37],[131,40,114,38],[131,44,114,42],[131,45,114,43,"name"],[131,49,114,47],[131,50,114,48],[131,51,114,49],[131,52,114,50],[133,8,116,6],[133,12,116,10,"gesture"],[133,19,116,17],[133,20,116,18,"options"],[133,27,116,25],[133,28,116,26,"enable"],[133,34,116,32],[133,35,116,33,"gesture"],[133,42,116,40],[133,44,116,42,"ev"],[133,46,116,44],[133,47,116,45],[133,49,116,47],[134,10,117,8,"clearTimeout"],[134,22,117,20],[134,23,117,21],[134,27,117,25],[134,28,117,26,"_multiTapTimer"],[134,42,117,40],[134,43,117,41],[135,10,118,8],[135,14,118,12],[135,15,118,13,"onStart"],[135,22,118,20],[135,23,118,21,"ev"],[135,25,118,23],[135,26,118,24],[136,10,119,8],[136,14,119,12],[136,15,119,13,"sendEvent"],[136,24,119,22],[136,25,119,23,"ev"],[136,27,119,25],[136,28,119,26],[137,8,120,6],[138,6,121,4],[139,4,122,2],[140,4,124,2,"getHammerConfig"],[140,19,124,17,"getHammerConfig"],[140,20,124,17],[140,22,124,20],[141,6,125,4],[141,13,125,11],[142,8,125,13],[142,11,125,16],[142,16,125,21],[142,17,125,22,"getHammerConfig"],[142,32,125,37],[142,33,125,38],[142,34,125,39],[143,8,126,6,"event"],[143,13,126,11],[143,15,126,13],[143,19,126,17],[143,20,126,18,"name"],[143,24,126,22],[144,8,127,6],[145,8,128,6,"taps"],[145,12,128,10],[145,14,128,12],[145,18,128,12,"isnan"],[145,24,128,17],[145,25,128,17,"isnan"],[145,30,128,17],[145,32,128,18],[145,36,128,22],[145,37,128,23,"config"],[145,43,128,29],[145,44,128,30,"numberOfTaps"],[145,56,128,42],[145,57,128,43],[145,60,128,46],[145,61,128,47],[145,64,128,50],[145,68,128,54],[145,69,128,55,"config"],[145,75,128,61],[145,76,128,62,"numberOfTaps"],[145,88,128,74],[146,8,129,6,"interval"],[146,16,129,14],[146,18,129,16],[146,22,129,20],[146,23,129,21,"maxDelayMs"],[146,33,129,31],[147,8,130,6,"time"],[147,12,130,10],[148,8,130,12],[149,8,131,6],[149,12,131,6,"isnan"],[149,18,131,11],[149,19,131,11,"isnan"],[149,24,131,11],[149,26,131,12],[149,30,131,16],[149,31,131,17,"config"],[149,37,131,23],[149,38,131,24,"maxDurationMs"],[149,51,131,37],[149,52,131,38],[149,56,131,42],[149,60,131,46],[149,61,131,47,"config"],[149,67,131,53],[149,68,131,54,"maxDurationMs"],[149,81,131,67],[149,85,131,71],[149,89,131,75],[149,92,131,78],[149,95,131,81],[150,8,131,84],[151,8,132,6],[151,12,132,10],[151,13,132,11,"config"],[151,19,132,17],[151,20,132,18,"maxDurationMs"],[152,6,133,4],[152,7,133,5],[153,4,134,2],[154,4,136,2,"updateGestureConfig"],[154,23,136,21,"updateGestureConfig"],[154,24,136,22],[155,6,137,4,"shouldCancelWhenOutside"],[155,29,137,27],[155,32,137,30],[155,36,137,34],[156,6,138,4,"maxDeltaX"],[156,15,138,13],[156,18,138,16,"Number"],[156,24,138,22],[156,25,138,23,"NaN"],[156,28,138,26],[157,6,139,4,"maxDeltaY"],[157,15,139,13],[157,18,139,16,"Number"],[157,24,139,22],[157,25,139,23,"NaN"],[157,28,139,26],[158,6,140,4,"numberOfTaps"],[158,18,140,16],[158,21,140,19],[158,22,140,20],[159,6,141,4,"minDurationMs"],[159,19,141,17],[159,22,141,20],[159,25,141,23],[160,6,142,4,"maxDelayMs"],[160,16,142,14],[160,19,142,17,"Number"],[160,25,142,23],[160,26,142,24,"NaN"],[160,29,142,27],[161,6,143,4],[162,6,144,4,"maxDurationMs"],[162,19,144,17],[162,22,144,20,"Number"],[162,28,144,26],[162,29,144,27,"NaN"],[162,32,144,30],[163,6,145,4,"maxDist"],[163,13,145,11],[163,16,145,14],[163,17,145,15],[164,6,146,4,"minPointers"],[164,17,146,15],[164,20,146,18],[164,21,146,19],[165,6,147,4,"maxPointers"],[165,17,147,15],[165,20,147,18],[165,21,147,19],[166,6,148,4],[166,9,148,7,"props"],[167,4,149,2],[167,5,149,3],[167,7,149,5],[168,6,150,4],[168,13,150,11],[168,18,150,16],[168,19,150,17,"updateGestureConfig"],[168,38,150,36],[168,39,150,37],[169,8,151,6,"shouldCancelWhenOutside"],[169,31,151,29],[170,8,152,6,"numberOfTaps"],[170,20,152,18],[171,8,153,6,"maxDeltaX"],[171,17,153,15],[172,8,154,6,"maxDeltaY"],[172,17,154,15],[173,8,155,6,"minDurationMs"],[173,21,155,19],[174,8,156,6,"maxDelayMs"],[174,18,156,16],[175,8,157,6,"maxDist"],[175,15,157,13],[176,8,158,6,"minPointers"],[176,19,158,17],[177,8,159,6,"maxPointers"],[177,19,159,17],[178,8,160,6],[178,11,160,9,"props"],[179,6,161,4],[179,7,161,5],[179,8,161,6],[180,4,162,2],[181,4,164,2,"onGestureEnded"],[181,18,164,16,"onGestureEnded"],[181,19,164,17],[181,22,164,20,"props"],[181,27,164,25],[181,29,164,27],[182,6,165,4,"clearTimeout"],[182,18,165,16],[182,19,165,17],[182,23,165,21],[182,24,165,22,"_timer"],[182,30,165,28],[182,31,165,29],[182,32,165,30],[182,33,165,31],[184,6,167,4],[184,11,167,9],[184,12,167,10,"onGestureEnded"],[184,26,167,24],[184,27,167,25],[184,30,167,28,"props"],[184,35,167,33],[184,36,167,34],[185,4,168,2],[186,4,170,2,"onWaitingEnded"],[186,18,170,16,"onWaitingEnded"],[186,19,170,17,"_gesture"],[186,27,170,25],[186,29,170,27],[187,6,171,4],[187,10,171,8],[187,14,171,12],[187,15,171,13,"_shouldFireEndEvent"],[187,34,171,32],[187,36,171,34],[188,8,172,6],[188,12,172,10],[188,13,172,11,"onSuccessfulTap"],[188,28,172,26],[188,29,172,27],[188,33,172,31],[188,34,172,32,"_shouldFireEndEvent"],[188,53,172,51],[188,54,172,52],[189,8,173,6],[189,12,173,10],[189,13,173,11,"_shouldFireEndEvent"],[189,32,173,30],[189,35,173,33],[189,39,173,37],[190,6,174,4],[191,4,175,2],[192,2,177,0],[193,2,179,0],[193,6,179,0,"_default"],[193,14,179,0],[193,17,179,15,"TapGestureHandler"],[193,34,179,32],[194,0,179,33],[194,3]],"functionMap":{"names":["_defineProperty","<global>","TapGestureHandler","constructor","_defineProperty$argument_2","get__name","get__NativeGestureClass","get__maxDelayMs","simulateCancelEvent","onGestureActivated","onRawEvent","setTimeout$argument_0","getHammerConfig","updateGestureConfig","onGestureEnded","onWaitingEnded"],"mappings":"AAA,iNC;ACM;ECC;6CCS;KDiB;GDC;EGG;GHE;EIE;GJE;EKE;GLG;EME;GNI;EOE;GPI;EQE;iBCgB;ODM;mBCa;SDI;+BCM;ODG;GRW;EUE;GVU;EWE;GX0B;EYE;GZI;EaE;GbK;CDE"},"hasCjsExports":false},"type":"js/module"}]}