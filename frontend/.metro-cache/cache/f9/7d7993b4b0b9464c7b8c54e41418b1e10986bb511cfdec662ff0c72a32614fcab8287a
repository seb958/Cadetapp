{"dependencies":[{"name":"../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"ByXat9lt9duIJLDmSeH0V+tRq1s=","exportNames":["*"],"imports":1}},{"name":"../../../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":56},"end":{"line":2,"column":55,"index":111}}],"key":"ZDu7aL2iuT3Od7iyX13y9sY9XZQ=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":112},"end":{"line":3,"column":34,"index":146}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useMountReactions = useMountReactions;\n  var _utils = require(_dependencyMap[0], \"../../utils\");\n  var _mountRegistry = require(_dependencyMap[1], \"../../../mountRegistry\");\n  var _react = require(_dependencyMap[2], \"react\");\n  function shouldUpdateDetector(relation, gesture) {\n    if (relation === undefined) {\n      return false;\n    }\n    for (const tag of (0, _utils.transformIntoHandlerTags)(relation)) {\n      if (tag === gesture.handlerTag) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function useMountReactions(updateDetector, state) {\n    (0, _react.useEffect)(() => {\n      return _mountRegistry.MountRegistry.addMountListener(gesture => {\n        // At this point the ref in the gesture config should be updated, so we can check if one of the gestures\n        // set in a relation with the gesture got mounted. If so, we need to update the detector to propagate\n        // the changes to the native side.\n        for (const attachedGesture of state.attachedGestures) {\n          const blocksHandlers = attachedGesture.config.blocksHandlers;\n          const requireToFail = attachedGesture.config.requireToFail;\n          const simultaneousWith = attachedGesture.config.simultaneousWith;\n          if (shouldUpdateDetector(blocksHandlers, gesture) || shouldUpdateDetector(requireToFail, gesture) || shouldUpdateDetector(simultaneousWith, gesture)) {\n            updateDetector(); // We can safely return here, if any other gestures should be updated, they will be by the above call\n\n            return;\n          }\n        }\n      });\n    }, [updateDetector, state]);\n  }\n});","lineCount":41,"map":[[7,2,19,0,"exports"],[7,9,19,0],[7,10,19,0,"useMountReactions"],[7,27,19,0],[7,30,19,0,"useMountReactions"],[7,47,19,0],[8,2,1,0],[8,6,1,0,"_utils"],[8,12,1,0],[8,15,1,0,"require"],[8,22,1,0],[8,23,1,0,"_dependencyMap"],[8,37,1,0],[9,2,2,0],[9,6,2,0,"_mountRegistry"],[9,20,2,0],[9,23,2,0,"require"],[9,30,2,0],[9,31,2,0,"_dependencyMap"],[9,45,2,0],[10,2,3,0],[10,6,3,0,"_react"],[10,12,3,0],[10,15,3,0,"require"],[10,22,3,0],[10,23,3,0,"_dependencyMap"],[10,37,3,0],[11,2,5,0],[11,11,5,9,"shouldUpdateDetector"],[11,31,5,29,"shouldUpdateDetector"],[11,32,5,30,"relation"],[11,40,5,38],[11,42,5,40,"gesture"],[11,49,5,47],[11,51,5,49],[12,4,6,2],[12,8,6,6,"relation"],[12,16,6,14],[12,21,6,19,"undefined"],[12,30,6,28],[12,32,6,30],[13,6,7,4],[13,13,7,11],[13,18,7,16],[14,4,8,2],[15,4,10,2],[15,9,10,7],[15,15,10,13,"tag"],[15,18,10,16],[15,22,10,20],[15,26,10,20,"transformIntoHandlerTags"],[15,32,10,44],[15,33,10,44,"transformIntoHandlerTags"],[15,57,10,44],[15,59,10,45,"relation"],[15,67,10,53],[15,68,10,54],[15,70,10,56],[16,6,11,4],[16,10,11,8,"tag"],[16,13,11,11],[16,18,11,16,"gesture"],[16,25,11,23],[16,26,11,24,"handlerTag"],[16,36,11,34],[16,38,11,36],[17,8,12,6],[17,15,12,13],[17,19,12,17],[18,6,13,4],[19,4,14,2],[20,4,16,2],[20,11,16,9],[20,16,16,14],[21,2,17,0],[22,2,19,7],[22,11,19,16,"useMountReactions"],[22,28,19,33,"useMountReactions"],[22,29,19,34,"updateDetector"],[22,43,19,48],[22,45,19,50,"state"],[22,50,19,55],[22,52,19,57],[23,4,20,2],[23,8,20,2,"useEffect"],[23,14,20,11],[23,15,20,11,"useEffect"],[23,24,20,11],[23,26,20,12],[23,32,20,18],[24,6,21,4],[24,13,21,11,"MountRegistry"],[24,27,21,24],[24,28,21,24,"MountRegistry"],[24,41,21,24],[24,42,21,25,"addMountListener"],[24,58,21,41],[24,59,21,42,"gesture"],[24,66,21,49],[24,70,21,53],[25,8,22,6],[26,8,23,6],[27,8,24,6],[28,8,25,6],[28,13,25,11],[28,19,25,17,"attachedGesture"],[28,34,25,32],[28,38,25,36,"state"],[28,43,25,41],[28,44,25,42,"attachedGestures"],[28,60,25,58],[28,62,25,60],[29,10,26,8],[29,16,26,14,"blocksHandlers"],[29,30,26,28],[29,33,26,31,"attachedGesture"],[29,48,26,46],[29,49,26,47,"config"],[29,55,26,53],[29,56,26,54,"blocksHandlers"],[29,70,26,68],[30,10,27,8],[30,16,27,14,"requireToFail"],[30,29,27,27],[30,32,27,30,"attachedGesture"],[30,47,27,45],[30,48,27,46,"config"],[30,54,27,52],[30,55,27,53,"requireToFail"],[30,68,27,66],[31,10,28,8],[31,16,28,14,"simultaneousWith"],[31,32,28,30],[31,35,28,33,"attachedGesture"],[31,50,28,48],[31,51,28,49,"config"],[31,57,28,55],[31,58,28,56,"simultaneousWith"],[31,74,28,72],[32,10,30,8],[32,14,30,12,"shouldUpdateDetector"],[32,34,30,32],[32,35,30,33,"blocksHandlers"],[32,49,30,47],[32,51,30,49,"gesture"],[32,58,30,56],[32,59,30,57],[32,63,30,61,"shouldUpdateDetector"],[32,83,30,81],[32,84,30,82,"requireToFail"],[32,97,30,95],[32,99,30,97,"gesture"],[32,106,30,104],[32,107,30,105],[32,111,30,109,"shouldUpdateDetector"],[32,131,30,129],[32,132,30,130,"simultaneousWith"],[32,148,30,146],[32,150,30,148,"gesture"],[32,157,30,155],[32,158,30,156],[32,160,30,158],[33,12,31,10,"updateDetector"],[33,26,31,24],[33,27,31,25],[33,28,31,26],[33,29,31,27],[33,30,31,28],[35,12,33,10],[36,10,34,8],[37,8,35,6],[38,6,36,4],[38,7,36,5],[38,8,36,6],[39,4,37,2],[39,5,37,3],[39,7,37,5],[39,8,37,6,"updateDetector"],[39,22,37,20],[39,24,37,22,"state"],[39,29,37,27],[39,30,37,28],[39,31,37,29],[40,2,38,0],[41,0,38,1],[41,3]],"functionMap":{"names":["<global>","shouldUpdateDetector","useMountReactions","useEffect$argument_0","MountRegistry.addMountListener$argument_0"],"mappings":"AAA;ACI;CDY;OEE;YCC;0CCC;KDe;GDC;CFC"},"hasCjsExports":false},"type":"js/module"}]}