{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":36,"index":149},"end":{"line":7,"column":52,"index":165}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":30,"index":242},"end":{"line":9,"column":65,"index":277}}],"key":"qGsP2DB/FAcPwZVOqoRhFe7bgFw=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":53,"index":332},"end":{"line":10,"column":89,"index":368}}],"key":"Cb9WZZQ2lYApksw7qyxzfvoO7Ps=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":13,"index":384},"end":{"line":11,"column":32,"index":403}}],"key":"6QJYsgIYyXDoX6Ak1wmI7AHik6U=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":24,"index":429},"end":{"line":12,"column":53,"index":458}}],"key":"hzwNINXctXvFTDWG7F9rRz7wbIk=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":25,"index":485},"end":{"line":13,"column":55,"index":515}}],"key":"JWsDd5L4mi186iaH5kq1fNF7538=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":13,"index":530},"end":{"line":14,"column":31,"index":548}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":45,"index":595},"end":{"line":15,"column":73,"index":623}}],"key":"S3NP4CLEKPYgbYHVs0xz9UO4MnE=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":14,"index":640},"end":{"line":16,"column":33,"index":659}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":18,"index":679},"end":{"line":17,"column":42,"index":703}}],"key":"pcptGSZ/EBr4zzjJ6b0ShmufDmc=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":29,"index":734},"end":{"line":18,"column":63,"index":768}}],"key":"ryxZqOF8C4PFpuF0Tm2CL3vWq+Q=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":60,"index":830},"end":{"line":19,"column":103,"index":873}}],"key":"52cyPM63Ub11B8pf21N8HpiwY8Q=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":24,"index":900},"end":{"line":20,"column":54,"index":930}}],"key":"S1M4JF0i9x6zcvs3ggNUoVkhnZ0=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":21,"index":953},"end":{"line":21,"column":48,"index":980}}],"key":"7t0d5tEsPEj2/ec82G/z5Knq6t4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":18,"index":1000},"end":{"line":22,"column":46,"index":1028}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _reactNative = require(_dependencyMap[1], \"react-native-web/dist/index\");\n  var _customDirectEventTypes = require(_dependencyMap[2], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[3], \"../RNGestureHandlerModule\"));\n  var _State = require(_dependencyMap[4], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[5], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[6], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[7], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[8], \"../findNodeHandle\"));\n  var _utils2 = require(_dependencyMap[9], \"../utils\");\n  var _ActionType = require(_dependencyMap[10], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[11], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[12], \"../GestureHandlerRootViewContext\"));\n  var _ghQueueMicrotask = require(_dependencyMap[13], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[14], \"../mountRegistry\");\n  var _jsxRuntime = require(_dependencyMap[15], \"react/jsx-runtime\");\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopRequireWildcard(e, t) {\n    if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n      n = new WeakMap();\n    return (_interopRequireWildcard = function (e, t) {\n      if (!t && e && e.__esModule) return e;\n      var o,\n        i,\n        f = {\n          __proto__: null,\n          default: e\n        };\n      if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f;\n      if (o = t ? n : r) {\n        if (o.has(e)) return o.get(e);\n        o.set(e, f);\n      }\n      for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]);\n      return f;\n    })(e, t);\n  }\n  const UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  const UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  const {\n    setJSResponder: oldSetJSResponder = () => {\n      // no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {\n      // no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      static displayName = name;\n      static contextType = _GestureHandlerRootViewContext.default;\n      handlerTag = -1;\n      constructor(props) {\n        super(props);\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, _findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        this.inspectorToggleListener?.remove();\n        this.isMountedRef.current = false;\n        if (_reactNative.Platform.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)();\n        // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      onGestureHandlerEvent = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onGestureEvent === 'function') {\n            this.props.onGestureEvent?.(event);\n          }\n        } else {\n          this.props.onGestureHandlerEvent?.(event);\n        }\n      };\n\n      // TODO(TS) - make sure this is right type for event\n      onGestureHandlerStateChange = event => {\n        if (event.nativeEvent.handlerTag === this.handlerTag) {\n          if (typeof this.props.onHandlerStateChange === 'function') {\n            this.props.onHandlerStateChange?.(event);\n          }\n          const state = event.nativeEvent.state;\n          const stateEventName = stateToPropMappings[state];\n          const eventHandler = stateEventName && this.props[stateEventName];\n          if (eventHandler && typeof eventHandler === 'function') {\n            eventHandler(event);\n          }\n        } else {\n          this.props.onGestureHandlerStateChange?.(event);\n        }\n      };\n      refHandler = node => {\n        this.viewNode = node;\n        const child = React.Children.only(this.props.children);\n        // @ts-ignore Since React 19 ref is accessible as standard prop\n        // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n        const ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n        if (!ref) {\n          return;\n        }\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      };\n      createGestureHandler = newConfig => {\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = newConfig;\n        _RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n      };\n      attachGestureHandler = newViewTag => {\n        this.viewTag = newViewTag;\n        if (_reactNative.Platform.OS === 'web') {\n          // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n          _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n          // ignored on web\n          this.propsRef);\n        } else {\n          (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n            onGestureEvent: this.onGestureHandlerEvent,\n            onGestureStateChange: this.onGestureHandlerStateChange\n          });\n          const actionType = (() => {\n            const onGestureEvent = this.props?.onGestureEvent;\n            const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n            const onHandlerStateChange = this.props?.onHandlerStateChange;\n            const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n            const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n            if (isReanimatedHandler) {\n              // Reanimated worklet\n              return _ActionType.ActionType.REANIMATED_WORKLET;\n            } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n              // Animated.event with useNativeDriver: true\n              return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n            } else {\n              // JS callback or Animated.event with useNativeDriver: false\n              return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n            }\n          })();\n          _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n        }\n        (0, _utils.scheduleFlushOperations)();\n        (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n          _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n        });\n      };\n      updateGestureHandler = newConfig => {\n        this.config = newConfig;\n        _RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n        (0, _utils.scheduleFlushOperations)();\n      };\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props;\n\n        // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n\n      // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      setNativeProps(updates) {\n        const mergedProps = {\n          ...this.props,\n          ...updates\n        };\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange;\n        // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_PressabilityDebugView.PressabilityDebugView, {\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }, \"pressabilityDebugView\"));\n        }\n        return /*#__PURE__*/React.cloneElement(child, {\n          ref: this.refHandler,\n          collapsable: false,\n          ...((0, _utils2.isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}),\n          testID: this.props.testID ?? child.props.testID,\n          ...events\n        }, grandChildren);\n      }\n    }\n    return Handler;\n  }\n});","lineCount":417,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"createHandler"],[7,33,6,31],[8,2,7,0],[8,6,7,4,"React"],[8,11,7,9],[8,14,7,12,"_interopRequireWildcard"],[8,37,7,35],[8,38,7,36,"require"],[8,45,7,43],[8,46,7,43,"_dependencyMap"],[8,60,7,43],[8,72,7,51],[8,73,7,52],[8,74,7,53],[9,2,7,54],[9,6,7,54,"_reactNative"],[9,18,7,54],[9,21,7,54,"require"],[9,28,7,54],[9,29,7,54,"_dependencyMap"],[9,43,7,54],[10,2,9,0],[10,6,9,4,"_customDirectEventTypes"],[10,29,9,27],[10,32,9,30,"require"],[10,39,9,37],[10,40,9,37,"_dependencyMap"],[10,54,9,37],[10,85,9,64],[10,86,9,65],[11,2,10,0],[11,6,10,4,"_RNGestureHandlerModule"],[11,29,10,27],[11,32,10,30,"_interopRequireDefault"],[11,54,10,52],[11,55,10,53,"require"],[11,62,10,60],[11,63,10,60,"_dependencyMap"],[11,77,10,60],[11,109,10,88],[11,110,10,89],[11,111,10,90],[12,2,11,0],[12,6,11,4,"_State"],[12,12,11,10],[12,15,11,13,"require"],[12,22,11,20],[12,23,11,20,"_dependencyMap"],[12,37,11,20],[12,52,11,31],[12,53,11,32],[13,2,12,0],[13,6,12,4,"_handlersRegistry"],[13,23,12,21],[13,26,12,24,"require"],[13,33,12,31],[13,34,12,31,"_dependencyMap"],[13,48,12,31],[13,73,12,52],[13,74,12,53],[14,2,13,0],[14,6,13,4,"_getNextHandlerTag"],[14,24,13,22],[14,27,13,25,"require"],[14,34,13,32],[14,35,13,32,"_dependencyMap"],[14,49,13,32],[14,75,13,54],[14,76,13,55],[15,2,14,0],[15,6,14,4,"_utils"],[15,12,14,10],[15,15,14,13,"require"],[15,22,14,20],[15,23,14,20,"_dependencyMap"],[15,37,14,20],[15,51,14,30],[15,52,14,31],[16,2,15,0],[16,6,15,4,"_findNodeHandle"],[16,21,15,19],[16,24,15,22,"_interopRequireDefault"],[16,46,15,44],[16,47,15,45,"require"],[16,54,15,52],[16,55,15,52,"_dependencyMap"],[16,69,15,52],[16,93,15,72],[16,94,15,73],[16,95,15,74],[17,2,16,0],[17,6,16,4,"_utils2"],[17,13,16,11],[17,16,16,14,"require"],[17,23,16,21],[17,24,16,21,"_dependencyMap"],[17,38,16,21],[17,53,16,32],[17,54,16,33],[18,2,17,0],[18,6,17,4,"_ActionType"],[18,17,17,15],[18,20,17,18,"require"],[18,27,17,25],[18,28,17,25,"_dependencyMap"],[18,42,17,25],[18,63,17,41],[18,64,17,42],[19,2,18,0],[19,6,18,4,"_PressabilityDebugView"],[19,28,18,26],[19,31,18,29,"require"],[19,38,18,36],[19,39,18,36,"_dependencyMap"],[19,53,18,36],[19,84,18,62],[19,85,18,63],[20,2,19,0],[20,6,19,4,"_GestureHandlerRootViewContext"],[20,36,19,34],[20,39,19,37,"_interopRequireDefault"],[20,61,19,59],[20,62,19,60,"require"],[20,69,19,67],[20,70,19,67,"_dependencyMap"],[20,84,19,67],[20,124,19,102],[20,125,19,103],[20,126,19,104],[21,2,20,0],[21,6,20,4,"_ghQueueMicrotask"],[21,23,20,21],[21,26,20,24,"require"],[21,33,20,31],[21,34,20,31,"_dependencyMap"],[21,48,20,31],[21,75,20,53],[21,76,20,54],[22,2,21,0],[22,6,21,4,"_mountRegistry"],[22,20,21,18],[22,23,21,21,"require"],[22,30,21,28],[22,31,21,28,"_dependencyMap"],[22,45,21,28],[22,69,21,47],[22,70,21,48],[23,2,22,0],[23,6,22,4,"_jsxRuntime"],[23,17,22,15],[23,20,22,18,"require"],[23,27,22,25],[23,28,22,25,"_dependencyMap"],[23,42,22,25],[23,67,22,45],[23,68,22,46],[24,2,23,0],[24,11,23,9,"_interopRequireDefault"],[24,33,23,31,"_interopRequireDefault"],[24,34,23,32,"e"],[24,35,23,33],[24,37,23,35],[25,4,23,37],[25,11,23,44,"e"],[25,12,23,45],[25,16,23,49,"e"],[25,17,23,50],[25,18,23,51,"__esModule"],[25,28,23,61],[25,31,23,64,"e"],[25,32,23,65],[25,35,23,68],[26,6,23,70,"default"],[26,13,23,77],[26,15,23,79,"e"],[27,4,23,81],[27,5,23,82],[28,2,23,84],[29,2,24,0],[29,11,24,9,"_interopRequireWildcard"],[29,34,24,32,"_interopRequireWildcard"],[29,35,24,33,"e"],[29,36,24,34],[29,38,24,36,"t"],[29,39,24,37],[29,41,24,39],[30,4,24,41],[30,8,24,45],[30,18,24,55],[30,22,24,59],[30,29,24,66,"WeakMap"],[30,36,24,73],[30,38,24,75],[30,42,24,79,"r"],[30,43,24,80],[30,46,24,83],[30,50,24,87,"WeakMap"],[30,57,24,94],[30,58,24,95],[30,59,24,96],[31,6,24,98,"n"],[31,7,24,99],[31,10,24,102],[31,14,24,106,"WeakMap"],[31,21,24,113],[31,22,24,114],[31,23,24,115],[32,4,24,117],[32,11,24,124],[32,12,24,125,"_interopRequireWildcard"],[32,35,24,148],[32,38,24,151],[32,47,24,151,"_interopRequireWildcard"],[32,48,24,161,"e"],[32,49,24,162],[32,51,24,164,"t"],[32,52,24,165],[32,54,24,167],[33,6,24,169],[33,10,24,173],[33,11,24,174,"t"],[33,12,24,175],[33,16,24,179,"e"],[33,17,24,180],[33,21,24,184,"e"],[33,22,24,185],[33,23,24,186,"__esModule"],[33,33,24,196],[33,35,24,198],[33,42,24,205,"e"],[33,43,24,206],[34,6,24,208],[34,10,24,212,"o"],[34,11,24,213],[35,8,24,215,"i"],[35,9,24,216],[36,8,24,218,"f"],[36,9,24,219],[36,12,24,222],[37,10,24,224,"__proto__"],[37,19,24,233],[37,21,24,235],[37,25,24,239],[38,10,24,241,"default"],[38,17,24,248],[38,19,24,250,"e"],[39,8,24,252],[39,9,24,253],[40,6,24,255],[40,10,24,259],[40,14,24,263],[40,19,24,268,"e"],[40,20,24,269],[40,24,24,273],[40,32,24,281],[40,36,24,285],[40,43,24,292,"e"],[40,44,24,293],[40,48,24,297],[40,58,24,307],[40,62,24,311],[40,69,24,318,"e"],[40,70,24,319],[40,72,24,321],[40,79,24,328,"f"],[40,80,24,329],[41,6,24,331],[41,10,24,335,"o"],[41,11,24,336],[41,14,24,339,"t"],[41,15,24,340],[41,18,24,343,"n"],[41,19,24,344],[41,22,24,347,"r"],[41,23,24,348],[41,25,24,350],[42,8,24,352],[42,12,24,356,"o"],[42,13,24,357],[42,14,24,358,"has"],[42,17,24,361],[42,18,24,362,"e"],[42,19,24,363],[42,20,24,364],[42,22,24,366],[42,29,24,373,"o"],[42,30,24,374],[42,31,24,375,"get"],[42,34,24,378],[42,35,24,379,"e"],[42,36,24,380],[42,37,24,381],[43,8,24,383,"o"],[43,9,24,384],[43,10,24,385,"set"],[43,13,24,388],[43,14,24,389,"e"],[43,15,24,390],[43,17,24,392,"f"],[43,18,24,393],[43,19,24,394],[44,6,24,396],[45,6,24,398],[45,11,24,403],[45,17,24,409,"t"],[45,18,24,410],[45,22,24,414,"e"],[45,23,24,415],[45,25,24,417],[45,34,24,426],[45,39,24,431,"t"],[45,40,24,432],[45,44,24,436],[45,45,24,437],[45,46,24,438],[45,47,24,439,"hasOwnProperty"],[45,61,24,453],[45,62,24,454,"call"],[45,66,24,458],[45,67,24,459,"e"],[45,68,24,460],[45,70,24,462,"t"],[45,71,24,463],[45,72,24,464],[45,77,24,469],[45,78,24,470,"i"],[45,79,24,471],[45,82,24,474],[45,83,24,475,"o"],[45,84,24,476],[45,87,24,479,"Object"],[45,93,24,485],[45,94,24,486,"defineProperty"],[45,108,24,500],[45,113,24,505,"Object"],[45,119,24,511],[45,120,24,512,"getOwnPropertyDescriptor"],[45,144,24,536],[45,145,24,537,"e"],[45,146,24,538],[45,148,24,540,"t"],[45,149,24,541],[45,150,24,542],[45,156,24,548,"i"],[45,157,24,549],[45,158,24,550,"get"],[45,161,24,553],[45,165,24,557,"i"],[45,166,24,558],[45,167,24,559,"set"],[45,170,24,562],[45,171,24,563],[45,174,24,566,"o"],[45,175,24,567],[45,176,24,568,"f"],[45,177,24,569],[45,179,24,571,"t"],[45,180,24,572],[45,182,24,574,"i"],[45,183,24,575],[45,184,24,576],[45,187,24,579,"f"],[45,188,24,580],[45,189,24,581,"t"],[45,190,24,582],[45,191,24,583],[45,194,24,586,"e"],[45,195,24,587],[45,196,24,588,"t"],[45,197,24,589],[45,198,24,590],[45,199,24,591],[46,6,24,593],[46,13,24,600,"f"],[46,14,24,601],[47,4,24,603],[47,5,24,604],[47,7,24,606,"e"],[47,8,24,607],[47,10,24,609,"t"],[47,11,24,610],[47,12,24,611],[48,2,24,613],[49,2,25,0],[49,8,25,6,"UIManagerAny"],[49,20,25,18],[49,23,25,21,"_reactNative"],[49,35,25,33],[49,36,25,34,"UIManager"],[49,45,25,43],[50,2,26,0,"_customDirectEventTypes"],[50,25,26,23],[50,26,26,24,"customDirectEventTypes"],[50,48,26,46],[50,49,26,47,"topGestureHandlerEvent"],[50,71,26,69],[50,74,26,72],[51,4,27,2,"registrationName"],[51,20,27,18],[51,22,27,20],[52,2,28,0],[52,3,28,1],[53,2,29,0],[53,8,29,6,"customGHEventsConfigFabricAndroid"],[53,41,29,39],[53,44,29,42],[54,4,30,2,"topOnGestureHandlerEvent"],[54,28,30,26],[54,30,30,28],[55,6,31,4,"registrationName"],[55,22,31,20],[55,24,31,22],[56,4,32,2],[56,5,32,3],[57,4,33,2,"topOnGestureHandlerStateChange"],[57,34,33,32],[57,36,33,34],[58,6,34,4,"registrationName"],[58,22,34,20],[58,24,34,22],[59,4,35,2],[60,2,36,0],[60,3,36,1],[61,2,37,0],[61,8,37,6,"customGHEventsConfig"],[61,28,37,26],[61,31,37,29],[62,4,38,2,"onGestureHandlerEvent"],[62,25,38,23],[62,27,38,25],[63,6,39,4,"registrationName"],[63,22,39,20],[63,24,39,22],[64,4,40,2],[64,5,40,3],[65,4,41,2,"onGestureHandlerStateChange"],[65,31,41,29],[65,33,41,31],[66,6,42,4,"registrationName"],[66,22,42,20],[66,24,42,22],[67,4,43,2],[67,5,43,3],[68,4,44,2],[69,4,45,2],[70,4,46,2],[71,4,47,2],[72,4,48,2],[73,4,49,2],[74,4,50,2],[75,4,51,2],[76,4,52,2],[76,8,52,6],[76,9,52,7],[76,10,52,8],[76,12,52,10,"_utils2"],[76,19,52,17],[76,20,52,18,"isFabric"],[76,28,52,26],[76,30,52,28],[76,31,52,29],[76,35,52,33,"_reactNative"],[76,47,52,45],[76,48,52,46,"Platform"],[76,56,52,54],[76,57,52,55,"OS"],[76,59,52,57],[76,64,52,62],[76,73,52,71],[76,77,52,75,"customGHEventsConfigFabricAndroid"],[76,110,52,108],[77,2,53,0],[77,3,53,1],[79,2,55,0],[80,2,56,0],[81,2,57,0],[82,2,58,0],[83,2,59,0,"UIManagerAny"],[83,14,59,12],[83,15,59,13,"genericDirectEventTypes"],[83,38,59,36],[83,41,59,39],[84,4,60,2],[84,7,60,5,"UIManagerAny"],[84,19,60,17],[84,20,60,18,"genericDirectEventTypes"],[84,43,60,41],[85,4,61,2],[85,7,61,5,"customGHEventsConfig"],[86,2,62,0],[86,3,62,1],[87,2,63,0],[87,8,63,6,"UIManagerConstants"],[87,26,63,24],[87,29,63,27,"UIManagerAny"],[87,41,63,39],[87,42,63,40,"getViewManagerConfig"],[87,62,63,60],[87,65,63,63],[87,79,63,77],[87,80,63,78],[88,2,64,0],[88,6,64,4,"UIManagerConstants"],[88,24,64,22],[88,26,64,24],[89,4,65,2,"UIManagerConstants"],[89,22,65,20],[89,23,65,21,"genericDirectEventTypes"],[89,46,65,44],[89,49,65,47],[90,6,66,4],[90,9,66,7,"UIManagerConstants"],[90,27,66,25],[90,28,66,26,"genericDirectEventTypes"],[90,51,66,49],[91,6,67,4],[91,9,67,7,"customGHEventsConfig"],[92,4,68,2],[92,5,68,3],[93,2,69,0],[95,2,71,0],[96,2,72,0],[96,8,72,6],[97,4,73,2,"setJSResponder"],[97,18,73,16],[97,20,73,18,"oldSetJSResponder"],[97,37,73,35],[97,40,73,38,"oldSetJSResponder"],[97,41,73,38],[97,46,73,44],[98,6,74,4],[99,4,74,4],[99,5,75,3],[100,4,76,2,"clearJSResponder"],[100,20,76,18],[100,22,76,20,"oldClearJSResponder"],[100,41,76,39],[100,44,76,42,"oldClearJSResponder"],[100,45,76,42],[100,50,76,48],[101,6,77,4],[102,4,77,4],[103,2,79,0],[103,3,79,1],[103,6,79,4,"UIManagerAny"],[103,18,79,16],[104,2,80,0,"UIManagerAny"],[104,14,80,12],[104,15,80,13,"setJSResponder"],[104,29,80,27],[104,32,80,30],[104,33,80,31,"tag"],[104,36,80,34],[104,38,80,36,"blockNativeResponder"],[104,58,80,56],[104,63,80,61],[105,4,81,2,"_RNGestureHandlerModule"],[105,27,81,25],[105,28,81,26,"default"],[105,35,81,33],[105,36,81,34,"handleSetJSResponder"],[105,56,81,54],[105,57,81,55,"tag"],[105,60,81,58],[105,62,81,60,"blockNativeResponder"],[105,82,81,80],[105,83,81,81],[106,4,82,2,"oldSetJSResponder"],[106,21,82,19],[106,22,82,20,"tag"],[106,25,82,23],[106,27,82,25,"blockNativeResponder"],[106,47,82,45],[106,48,82,46],[107,2,83,0],[107,3,83,1],[108,2,84,0,"UIManagerAny"],[108,14,84,12],[108,15,84,13,"clearJSResponder"],[108,31,84,29],[108,34,84,32],[108,40,84,38],[109,4,85,2,"_RNGestureHandlerModule"],[109,27,85,25],[109,28,85,26,"default"],[109,35,85,33],[109,36,85,34,"handleClearJSResponder"],[109,58,85,56],[109,59,85,57],[109,60,85,58],[110,4,86,2,"oldClearJSResponder"],[110,23,86,21],[110,24,86,22],[110,25,86,23],[111,2,87,0],[111,3,87,1],[112,2,88,0],[112,6,88,4,"allowTouches"],[112,18,88,16],[112,21,88,19],[112,25,88,23],[113,2,89,0],[113,8,89,6,"DEV_ON_ANDROID"],[113,22,89,20],[113,25,89,23,"__DEV__"],[113,32,89,30],[113,36,89,34,"_reactNative"],[113,48,89,46],[113,49,89,47,"Platform"],[113,57,89,55],[113,58,89,56,"OS"],[113,60,89,58],[113,65,89,63],[113,74,89,72],[114,2,90,0],[115,2,91,0],[116,2,92,0],[116,6,92,4,"DEV_ON_ANDROID"],[116,20,92,18],[116,22,92,20],[117,4,93,2,"_reactNative"],[117,16,93,14],[117,17,93,15,"DeviceEventEmitter"],[117,35,93,33],[117,36,93,34,"addListener"],[117,47,93,45],[117,48,93,46],[117,72,93,70],[117,74,93,72],[117,80,93,78],[118,6,94,4,"allowTouches"],[118,18,94,16],[118,21,94,19],[118,22,94,20,"allowTouches"],[118,34,94,32],[119,4,95,2],[119,5,95,3],[119,6,95,4],[120,2,96,0],[121,2,97,0],[121,11,97,9,"hasUnresolvedRefs"],[121,28,97,26,"hasUnresolvedRefs"],[121,29,97,27,"props"],[121,34,97,32],[121,36,97,34],[122,4,98,2],[123,4,99,2],[123,10,99,8,"extract"],[123,17,99,15],[123,20,99,18,"refs"],[123,24,99,22],[123,28,99,26],[124,6,100,4],[124,10,100,8],[124,11,100,9,"Array"],[124,16,100,14],[124,17,100,15,"isArray"],[124,24,100,22],[124,25,100,23,"refs"],[124,29,100,27],[124,30,100,28],[124,32,100,30],[125,8,101,6],[125,15,101,13,"refs"],[125,19,101,17],[125,23,101,21,"refs"],[125,27,101,25],[125,28,101,26,"current"],[125,35,101,33],[125,40,101,38],[125,44,101,42],[126,6,102,4],[127,6,103,4],[127,13,103,11,"refs"],[127,17,103,15],[127,18,103,16,"some"],[127,22,103,20],[127,23,103,21,"r"],[127,24,103,22],[127,28,103,26,"r"],[127,29,103,27],[127,33,103,31,"r"],[127,34,103,32],[127,35,103,33,"current"],[127,42,103,40],[127,47,103,45],[127,51,103,49],[127,52,103,50],[128,4,104,2],[128,5,104,3],[129,4,105,2],[129,11,105,9,"extract"],[129,18,105,16],[129,19,105,17,"props"],[129,24,105,22],[129,25,105,23],[129,47,105,45],[129,48,105,46],[129,49,105,47],[129,53,105,51,"extract"],[129,60,105,58],[129,61,105,59,"props"],[129,66,105,64],[129,67,105,65],[129,76,105,74],[129,77,105,75],[129,78,105,76],[130,2,106,0],[131,2,107,0],[131,8,107,6,"stateToPropMappings"],[131,27,107,25],[131,30,107,28],[132,4,108,2],[132,5,108,3,"_State"],[132,11,108,9],[132,12,108,10,"State"],[132,17,108,15],[132,18,108,16,"UNDETERMINED"],[132,30,108,28],[132,33,108,31,"undefined"],[132,42,108,40],[133,4,109,2],[133,5,109,3,"_State"],[133,11,109,9],[133,12,109,10,"State"],[133,17,109,15],[133,18,109,16,"BEGAN"],[133,23,109,21],[133,26,109,24],[133,35,109,33],[134,4,110,2],[134,5,110,3,"_State"],[134,11,110,9],[134,12,110,10,"State"],[134,17,110,15],[134,18,110,16,"FAILED"],[134,24,110,22],[134,27,110,25],[134,37,110,35],[135,4,111,2],[135,5,111,3,"_State"],[135,11,111,9],[135,12,111,10,"State"],[135,17,111,15],[135,18,111,16,"CANCELLED"],[135,27,111,25],[135,30,111,28],[135,43,111,41],[136,4,112,2],[136,5,112,3,"_State"],[136,11,112,9],[136,12,112,10,"State"],[136,17,112,15],[136,18,112,16,"ACTIVE"],[136,24,112,22],[136,27,112,25],[136,40,112,38],[137,4,113,2],[137,5,113,3,"_State"],[137,11,113,9],[137,12,113,10,"State"],[137,17,113,15],[137,18,113,16,"END"],[137,21,113,19],[137,24,113,22],[138,2,114,0],[138,3,114,1],[140,2,116,0],[142,2,118,0],[142,8,118,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[142,35,118,33],[142,38,118,36],[142,39,118,37],[144,2,120,0],[145,2,121,0],[145,11,121,9,"createHandler"],[145,24,121,22,"createHandler"],[145,25,121,23],[146,4,122,2,"name"],[146,8,122,6],[147,4,123,2,"allowedProps"],[147,16,123,14],[147,19,123,17],[147,21,123,19],[148,4,124,2,"config"],[148,10,124,8],[148,13,124,11],[148,14,124,12],[148,15,124,13],[149,4,125,2,"transformProps"],[149,18,125,16],[150,4,126,2,"customNativeProps"],[150,21,126,19],[150,24,126,22],[151,2,127,0],[151,3,127,1],[151,5,127,3],[152,4,128,2],[152,10,128,8,"Handler"],[152,17,128,15],[152,26,128,24,"React"],[152,31,128,29],[152,32,128,30,"Component"],[152,41,128,39],[152,42,128,40],[153,6,129,4],[153,13,129,11,"displayName"],[153,24,129,22],[153,27,129,25,"name"],[153,31,129,29],[154,6,130,4],[154,13,130,11,"contextType"],[154,24,130,22],[154,27,130,25,"_GestureHandlerRootViewContext"],[154,57,130,55],[154,58,130,56,"default"],[154,65,130,63],[155,6,131,4,"handlerTag"],[155,16,131,14],[155,19,131,17],[155,20,131,18],[155,21,131,19],[156,6,132,4,"constructor"],[156,17,132,15,"constructor"],[156,18,132,16,"props"],[156,23,132,21],[156,25,132,23],[157,8,133,6],[157,13,133,11],[157,14,133,12,"props"],[157,19,133,17],[157,20,133,18],[158,8,134,6],[158,12,134,10],[158,13,134,11,"config"],[158,19,134,17],[158,22,134,20],[158,23,134,21],[158,24,134,22],[159,8,135,6],[159,12,135,10],[159,13,135,11,"propsRef"],[159,21,135,19],[159,24,135,22],[159,37,135,35,"React"],[159,42,135,40],[159,43,135,41,"createRef"],[159,52,135,50],[159,53,135,51],[159,54,135,52],[160,8,136,6],[160,12,136,10],[160,13,136,11,"isMountedRef"],[160,25,136,23],[160,28,136,26],[160,41,136,39,"React"],[160,46,136,44],[160,47,136,45,"createRef"],[160,56,136,54],[160,57,136,55],[160,58,136,56],[161,8,137,6],[161,12,137,10],[161,13,137,11,"state"],[161,18,137,16],[161,21,137,19],[162,10,138,8,"allowTouches"],[163,8,139,6],[163,9,139,7],[164,8,140,6],[164,12,140,10,"props"],[164,17,140,15],[164,18,140,16,"id"],[164,20,140,18],[164,22,140,20],[165,10,141,8],[165,14,141,12,"_handlersRegistry"],[165,31,141,29],[165,32,141,30,"handlerIDToTag"],[165,46,141,44],[165,47,141,45,"props"],[165,52,141,50],[165,53,141,51,"id"],[165,55,141,53],[165,56,141,54],[165,61,141,59,"undefined"],[165,70,141,68],[165,72,141,70],[166,12,142,10],[166,18,142,16],[166,22,142,20,"Error"],[166,27,142,25],[166,28,142,26],[166,48,142,46,"props"],[166,53,142,51],[166,54,142,52,"id"],[166,56,142,54],[166,78,142,76],[166,79,142,77],[167,10,143,8],[168,10,144,8,"_handlersRegistry"],[168,27,144,25],[168,28,144,26,"handlerIDToTag"],[168,42,144,40],[168,43,144,41,"props"],[168,48,144,46],[168,49,144,47,"id"],[168,51,144,49],[168,52,144,50],[168,55,144,53],[168,59,144,57],[168,60,144,58,"handlerTag"],[168,70,144,68],[169,8,145,6],[170,6,146,4],[171,6,147,4,"componentDidMount"],[171,23,147,21,"componentDidMount"],[171,24,147,21],[171,26,147,24],[172,8,148,6],[172,14,148,12,"props"],[172,19,148,17],[172,22,148,20],[172,26,148,24],[172,27,148,25,"props"],[172,32,148,30],[173,8,149,6],[173,12,149,10],[173,13,149,11,"isMountedRef"],[173,25,149,23],[173,26,149,24,"current"],[173,33,149,31],[173,36,149,34],[173,40,149,38],[174,8,150,6],[174,12,150,10,"DEV_ON_ANDROID"],[174,26,150,24],[174,28,150,26],[175,10,151,8],[175,14,151,12],[175,15,151,13,"inspectorToggleListener"],[175,38,151,36],[175,41,151,39,"_reactNative"],[175,53,151,51],[175,54,151,52,"DeviceEventEmitter"],[175,72,151,70],[175,73,151,71,"addListener"],[175,84,151,82],[175,85,151,83],[175,109,151,107],[175,111,151,109],[175,117,151,115],[176,12,152,10],[176,16,152,14],[176,17,152,15,"setState"],[176,25,152,23],[176,26,152,24,"_"],[176,27,152,25],[176,32,152,30],[177,14,153,12,"allowTouches"],[178,12,154,10],[178,13,154,11],[178,14,154,12],[178,15,154,13],[179,12,155,10],[179,16,155,14],[179,17,155,15,"update"],[179,23,155,21],[179,24,155,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[179,51,155,49],[179,52,155,50],[180,10,156,8],[180,11,156,9],[180,12,156,10],[181,8,157,6],[182,8,158,6],[182,12,158,10,"hasUnresolvedRefs"],[182,29,158,27],[182,30,158,28,"props"],[182,35,158,33],[182,36,158,34],[182,38,158,36],[183,10,159,8],[184,10,160,8],[185,10,161,8],[186,10,162,8],[187,10,163,8],[188,10,164,8],[189,10,165,8],[189,11,165,9],[189,12,165,10],[189,14,165,12,"_ghQueueMicrotask"],[189,31,165,29],[189,32,165,30,"ghQueueMicrotask"],[189,48,165,46],[189,50,165,48],[189,56,165,54],[190,12,166,10],[190,16,166,14],[190,17,166,15,"update"],[190,23,166,21],[190,24,166,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[190,51,166,49],[190,52,166,50],[191,10,167,8],[191,11,167,9],[191,12,167,10],[192,8,168,6],[193,8,169,6],[193,12,169,10],[193,13,169,11,"createGestureHandler"],[193,33,169,31],[193,34,169,32],[193,35,169,33],[193,36,169,34],[193,38,169,36,"_utils"],[193,44,169,42],[193,45,169,43,"filterConfig"],[193,57,169,55],[193,59,169,57,"transformProps"],[193,73,169,71],[193,76,169,74,"transformProps"],[193,90,169,88],[193,91,169,89],[193,95,169,93],[193,96,169,94,"props"],[193,101,169,99],[193,102,169,100],[193,105,169,103],[193,109,169,107],[193,110,169,108,"props"],[193,115,169,113],[193,117,169,115],[193,118,169,116],[193,121,169,119,"allowedProps"],[193,133,169,131],[193,135,169,133],[193,138,169,136,"customNativeProps"],[193,155,169,153],[193,156,169,154],[193,158,169,156,"config"],[193,164,169,162],[193,165,169,163],[193,166,169,164],[194,8,170,6],[194,12,170,10],[194,13,170,11],[194,17,170,15],[194,18,170,16,"viewNode"],[194,26,170,24],[194,28,170,26],[195,10,171,8],[195,16,171,14],[195,20,171,18,"Error"],[195,25,171,23],[195,26,171,24],[195,73,171,71,"Handler"],[195,80,171,78],[195,81,171,79,"displayName"],[195,92,171,90],[195,152,171,150],[195,153,171,151],[196,8,172,6],[197,8,173,6],[197,12,173,10],[197,13,173,11,"attachGestureHandler"],[197,33,173,31],[197,34,173,32],[197,35,173,33],[197,36,173,34],[197,38,173,36,"_findNodeHandle"],[197,53,173,51],[197,54,173,52,"default"],[197,61,173,59],[197,63,173,61],[197,67,173,65],[197,68,173,66,"viewNode"],[197,76,173,74],[197,77,173,75],[197,78,173,76],[197,79,173,77],[197,80,173,78],[198,6,174,4],[199,6,175,4,"componentDidUpdate"],[199,24,175,22,"componentDidUpdate"],[199,25,175,22],[199,27,175,25],[200,8,176,6],[200,14,176,12,"viewTag"],[200,21,176,19],[200,24,176,22],[200,25,176,23],[200,26,176,24],[200,28,176,26,"_findNodeHandle"],[200,43,176,41],[200,44,176,42,"default"],[200,51,176,49],[200,53,176,51],[200,57,176,55],[200,58,176,56,"viewNode"],[200,66,176,64],[200,67,176,65],[201,8,177,6],[201,12,177,10],[201,16,177,14],[201,17,177,15,"viewTag"],[201,24,177,22],[201,29,177,27,"viewTag"],[201,36,177,34],[201,38,177,36],[202,10,178,8],[202,14,178,12],[202,15,178,13,"attachGestureHandler"],[202,35,178,33],[202,36,178,34,"viewTag"],[202,43,178,41],[202,44,178,42],[202,45,178,43],[202,46,178,44],[203,8,179,6],[204,8,180,6],[204,12,180,10],[204,13,180,11,"update"],[204,19,180,17],[204,20,180,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[204,47,180,45],[204,48,180,46],[205,6,181,4],[206,6,182,4,"componentWillUnmount"],[206,26,182,24,"componentWillUnmount"],[206,27,182,24],[206,29,182,27],[207,8,183,6],[207,12,183,10],[207,13,183,11,"inspectorToggleListener"],[207,36,183,34],[207,38,183,36,"remove"],[207,44,183,42],[207,45,183,43],[207,46,183,44],[208,8,184,6],[208,12,184,10],[208,13,184,11,"isMountedRef"],[208,25,184,23],[208,26,184,24,"current"],[208,33,184,31],[208,36,184,34],[208,41,184,39],[209,8,185,6],[209,12,185,10,"_reactNative"],[209,24,185,22],[209,25,185,23,"Platform"],[209,33,185,31],[209,34,185,32,"OS"],[209,36,185,34],[209,41,185,39],[209,46,185,44],[209,48,185,46],[210,10,186,8],[210,11,186,9],[210,12,186,10],[210,14,186,12,"_handlersRegistry"],[210,31,186,29],[210,32,186,30,"unregisterOldGestureHandler"],[210,59,186,57],[210,61,186,59],[210,65,186,63],[210,66,186,64,"handlerTag"],[210,76,186,74],[210,77,186,75],[211,8,187,6],[212,8,188,6,"_RNGestureHandlerModule"],[212,31,188,29],[212,32,188,30,"default"],[212,39,188,37],[212,40,188,38,"dropGestureHandler"],[212,58,188,56],[212,59,188,57],[212,63,188,61],[212,64,188,62,"handlerTag"],[212,74,188,72],[212,75,188,73],[213,8,189,6],[213,9,189,7],[213,10,189,8],[213,12,189,10,"_utils"],[213,18,189,16],[213,19,189,17,"scheduleFlushOperations"],[213,42,189,40],[213,44,189,42],[213,45,189,43],[214,8,190,6],[215,8,191,6],[215,14,191,12,"handlerID"],[215,23,191,21],[215,26,191,24],[215,30,191,28],[215,31,191,29,"props"],[215,36,191,34],[215,37,191,35,"id"],[215,39,191,37],[216,8,192,6],[216,12,192,10,"handlerID"],[216,21,192,19],[216,23,192,21],[217,10,193,8],[218,10,194,8],[218,17,194,15,"_handlersRegistry"],[218,34,194,32],[218,35,194,33,"handlerIDToTag"],[218,49,194,47],[218,50,194,48,"handlerID"],[218,59,194,57],[218,60,194,58],[219,8,195,6],[220,8,196,6,"_mountRegistry"],[220,22,196,20],[220,23,196,21,"MountRegistry"],[220,36,196,34],[220,37,196,35,"gestureHandlerWillUnmount"],[220,62,196,60],[220,63,196,61],[220,67,196,65],[220,68,196,66],[221,6,197,4],[222,6,198,4,"onGestureHandlerEvent"],[222,27,198,25],[222,30,198,28,"event"],[222,35,198,33],[222,39,198,37],[223,8,199,6],[223,12,199,10,"event"],[223,17,199,15],[223,18,199,16,"nativeEvent"],[223,29,199,27],[223,30,199,28,"handlerTag"],[223,40,199,38],[223,45,199,43],[223,49,199,47],[223,50,199,48,"handlerTag"],[223,60,199,58],[223,62,199,60],[224,10,200,8],[224,14,200,12],[224,21,200,19],[224,25,200,23],[224,26,200,24,"props"],[224,31,200,29],[224,32,200,30,"onGestureEvent"],[224,46,200,44],[224,51,200,49],[224,61,200,59],[224,63,200,61],[225,12,201,10],[225,16,201,14],[225,17,201,15,"props"],[225,22,201,20],[225,23,201,21,"onGestureEvent"],[225,37,201,35],[225,40,201,38,"event"],[225,45,201,43],[225,46,201,44],[226,10,202,8],[227,8,203,6],[227,9,203,7],[227,15,203,13],[228,10,204,8],[228,14,204,12],[228,15,204,13,"props"],[228,20,204,18],[228,21,204,19,"onGestureHandlerEvent"],[228,42,204,40],[228,45,204,43,"event"],[228,50,204,48],[228,51,204,49],[229,8,205,6],[230,6,206,4],[230,7,206,5],[232,6,208,4],[233,6,209,4,"onGestureHandlerStateChange"],[233,33,209,31],[233,36,209,34,"event"],[233,41,209,39],[233,45,209,43],[234,8,210,6],[234,12,210,10,"event"],[234,17,210,15],[234,18,210,16,"nativeEvent"],[234,29,210,27],[234,30,210,28,"handlerTag"],[234,40,210,38],[234,45,210,43],[234,49,210,47],[234,50,210,48,"handlerTag"],[234,60,210,58],[234,62,210,60],[235,10,211,8],[235,14,211,12],[235,21,211,19],[235,25,211,23],[235,26,211,24,"props"],[235,31,211,29],[235,32,211,30,"onHandlerStateChange"],[235,52,211,50],[235,57,211,55],[235,67,211,65],[235,69,211,67],[236,12,212,10],[236,16,212,14],[236,17,212,15,"props"],[236,22,212,20],[236,23,212,21,"onHandlerStateChange"],[236,43,212,41],[236,46,212,44,"event"],[236,51,212,49],[236,52,212,50],[237,10,213,8],[238,10,214,8],[238,16,214,14,"state"],[238,21,214,19],[238,24,214,22,"event"],[238,29,214,27],[238,30,214,28,"nativeEvent"],[238,41,214,39],[238,42,214,40,"state"],[238,47,214,45],[239,10,215,8],[239,16,215,14,"stateEventName"],[239,30,215,28],[239,33,215,31,"stateToPropMappings"],[239,52,215,50],[239,53,215,51,"state"],[239,58,215,56],[239,59,215,57],[240,10,216,8],[240,16,216,14,"eventHandler"],[240,28,216,26],[240,31,216,29,"stateEventName"],[240,45,216,43],[240,49,216,47],[240,53,216,51],[240,54,216,52,"props"],[240,59,216,57],[240,60,216,58,"stateEventName"],[240,74,216,72],[240,75,216,73],[241,10,217,8],[241,14,217,12,"eventHandler"],[241,26,217,24],[241,30,217,28],[241,37,217,35,"eventHandler"],[241,49,217,47],[241,54,217,52],[241,64,217,62],[241,66,217,64],[242,12,218,10,"eventHandler"],[242,24,218,22],[242,25,218,23,"event"],[242,30,218,28],[242,31,218,29],[243,10,219,8],[244,8,220,6],[244,9,220,7],[244,15,220,13],[245,10,221,8],[245,14,221,12],[245,15,221,13,"props"],[245,20,221,18],[245,21,221,19,"onGestureHandlerStateChange"],[245,48,221,46],[245,51,221,49,"event"],[245,56,221,54],[245,57,221,55],[246,8,222,6],[247,6,223,4],[247,7,223,5],[248,6,224,4,"refHandler"],[248,16,224,14],[248,19,224,17,"node"],[248,23,224,21],[248,27,224,25],[249,8,225,6],[249,12,225,10],[249,13,225,11,"viewNode"],[249,21,225,19],[249,24,225,22,"node"],[249,28,225,26],[250,8,226,6],[250,14,226,12,"child"],[250,19,226,17],[250,22,226,20,"React"],[250,27,226,25],[250,28,226,26,"Children"],[250,36,226,34],[250,37,226,35,"only"],[250,41,226,39],[250,42,226,40],[250,46,226,44],[250,47,226,45,"props"],[250,52,226,50],[250,53,226,51,"children"],[250,61,226,59],[250,62,226,60],[251,8,227,6],[252,8,228,6],[253,8,229,6],[253,14,229,12,"ref"],[253,17,229,15],[253,20,229,18],[253,21,229,19],[253,22,229,20],[253,24,229,22,"_utils2"],[253,31,229,29],[253,32,229,30,"isReact19"],[253,41,229,39],[253,43,229,41],[253,44,229,42],[253,47,229,45,"child"],[253,52,229,50],[253,53,229,51,"props"],[253,58,229,56],[253,60,229,58,"ref"],[253,63,229,61],[253,66,229,64,"child"],[253,71,229,69],[253,73,229,71,"ref"],[253,76,229,74],[254,8,230,6],[254,12,230,10],[254,13,230,11,"ref"],[254,16,230,14],[254,18,230,16],[255,10,231,8],[256,8,232,6],[257,8,233,6],[257,12,233,10],[257,19,233,17,"ref"],[257,22,233,20],[257,27,233,25],[257,37,233,35],[257,39,233,37],[258,10,234,8,"ref"],[258,13,234,11],[258,14,234,12,"node"],[258,18,234,16],[258,19,234,17],[259,8,235,6],[259,9,235,7],[259,15,235,13],[260,10,236,8,"ref"],[260,13,236,11],[260,14,236,12,"current"],[260,21,236,19],[260,24,236,22,"node"],[260,28,236,26],[261,8,237,6],[262,6,238,4],[262,7,238,5],[263,6,239,4,"createGestureHandler"],[263,26,239,24],[263,29,239,27,"newConfig"],[263,38,239,36],[263,42,239,40],[264,8,240,6],[264,12,240,10],[264,13,240,11,"handlerTag"],[264,23,240,21],[264,26,240,24],[264,27,240,25],[264,28,240,26],[264,30,240,28,"_getNextHandlerTag"],[264,48,240,46],[264,49,240,47,"getNextHandlerTag"],[264,66,240,64],[264,68,240,66],[264,69,240,67],[265,8,241,6],[265,12,241,10],[265,13,241,11,"config"],[265,19,241,17],[265,22,241,20,"newConfig"],[265,31,241,29],[266,8,242,6,"_RNGestureHandlerModule"],[266,31,242,29],[266,32,242,30,"default"],[266,39,242,37],[266,40,242,38,"createGestureHandler"],[266,60,242,58],[266,61,242,59,"name"],[266,65,242,63],[266,67,242,65],[266,71,242,69],[266,72,242,70,"handlerTag"],[266,82,242,80],[266,84,242,82,"newConfig"],[266,93,242,91],[266,94,242,92],[267,6,243,4],[267,7,243,5],[268,6,244,4,"attachGestureHandler"],[268,26,244,24],[268,29,244,27,"newViewTag"],[268,39,244,37],[268,43,244,41],[269,8,245,6],[269,12,245,10],[269,13,245,11,"viewTag"],[269,20,245,18],[269,23,245,21,"newViewTag"],[269,33,245,31],[270,8,246,6],[270,12,246,10,"_reactNative"],[270,24,246,22],[270,25,246,23,"Platform"],[270,33,246,31],[270,34,246,32,"OS"],[270,36,246,34],[270,41,246,39],[270,46,246,44],[270,48,246,46],[271,10,247,8],[272,10,248,8,"_RNGestureHandlerModule"],[272,33,248,31],[272,34,248,32,"default"],[272,41,248,39],[272,42,248,40,"attachGestureHandler"],[272,62,248,60],[272,63,248,61],[272,67,248,65],[272,68,248,66,"handlerTag"],[272,78,248,76],[272,80,248,78,"newViewTag"],[272,90,248,88],[272,92,248,90,"_ActionType"],[272,103,248,101],[272,104,248,102,"ActionType"],[272,114,248,112],[272,115,248,113,"JS_FUNCTION_OLD_API"],[272,134,248,132],[273,10,249,8],[274,10,250,8],[274,14,250,12],[274,15,250,13,"propsRef"],[274,23,250,21],[274,24,250,22],[275,8,251,6],[275,9,251,7],[275,15,251,13],[276,10,252,8],[276,11,252,9],[276,12,252,10],[276,14,252,12,"_handlersRegistry"],[276,31,252,29],[276,32,252,30,"registerOldGestureHandler"],[276,57,252,55],[276,59,252,57],[276,63,252,61],[276,64,252,62,"handlerTag"],[276,74,252,72],[276,76,252,74],[277,12,253,10,"onGestureEvent"],[277,26,253,24],[277,28,253,26],[277,32,253,30],[277,33,253,31,"onGestureHandlerEvent"],[277,54,253,52],[278,12,254,10,"onGestureStateChange"],[278,32,254,30],[278,34,254,32],[278,38,254,36],[278,39,254,37,"onGestureHandlerStateChange"],[279,10,255,8],[279,11,255,9],[279,12,255,10],[280,10,256,8],[280,16,256,14,"actionType"],[280,26,256,24],[280,29,256,27],[280,30,256,28],[280,36,256,34],[281,12,257,10],[281,18,257,16,"onGestureEvent"],[281,32,257,30],[281,35,257,33],[281,39,257,37],[281,40,257,38,"props"],[281,45,257,43],[281,47,257,45,"onGestureEvent"],[281,61,257,59],[282,12,258,10],[282,18,258,16,"isGestureHandlerWorklet"],[282,41,258,39],[282,44,258,42,"onGestureEvent"],[282,58,258,56],[282,63,258,61],[282,72,258,70],[282,76,258,74,"onGestureEvent"],[282,90,258,88],[282,94,258,92],[282,115,258,113],[282,119,258,117,"onGestureEvent"],[282,133,258,131],[282,134,258,132],[283,12,259,10],[283,18,259,16,"onHandlerStateChange"],[283,38,259,36],[283,41,259,39],[283,45,259,43],[283,46,259,44,"props"],[283,51,259,49],[283,53,259,51,"onHandlerStateChange"],[283,73,259,71],[284,12,260,10],[284,18,260,16,"isStateChangeHandlerWorklet"],[284,45,260,43],[284,48,260,46,"onHandlerStateChange"],[284,68,260,66],[284,73,260,71],[284,82,260,80],[284,86,260,84,"onHandlerStateChange"],[284,106,260,104],[284,110,260,108],[284,131,260,129],[284,135,260,133,"onHandlerStateChange"],[284,155,260,153],[284,156,260,154],[285,12,261,10],[285,18,261,16,"isReanimatedHandler"],[285,37,261,35],[285,40,261,38,"isGestureHandlerWorklet"],[285,63,261,61],[285,67,261,65,"isStateChangeHandlerWorklet"],[285,94,261,92],[286,12,262,10],[286,16,262,14,"isReanimatedHandler"],[286,35,262,33],[286,37,262,35],[287,14,263,12],[288,14,264,12],[288,21,264,19,"_ActionType"],[288,32,264,30],[288,33,264,31,"ActionType"],[288,43,264,41],[288,44,264,42,"REANIMATED_WORKLET"],[288,62,264,60],[289,12,265,10],[289,13,265,11],[289,19,265,17],[289,23,265,21,"onGestureEvent"],[289,37,265,35],[289,41,265,39],[289,53,265,51],[289,57,265,55,"onGestureEvent"],[289,71,265,69],[289,73,265,71],[290,14,266,12],[291,14,267,12],[291,21,267,19,"_ActionType"],[291,32,267,30],[291,33,267,31,"ActionType"],[291,43,267,41],[291,44,267,42,"NATIVE_ANIMATED_EVENT"],[291,65,267,63],[292,12,268,10],[292,13,268,11],[292,19,268,17],[293,14,269,12],[294,14,270,12],[294,21,270,19,"_ActionType"],[294,32,270,30],[294,33,270,31,"ActionType"],[294,43,270,41],[294,44,270,42,"JS_FUNCTION_OLD_API"],[294,63,270,61],[295,12,271,10],[296,10,272,8],[296,11,272,9],[296,13,272,11],[296,14,272,12],[297,10,273,8,"_RNGestureHandlerModule"],[297,33,273,31],[297,34,273,32,"default"],[297,41,273,39],[297,42,273,40,"attachGestureHandler"],[297,62,273,60],[297,63,273,61],[297,67,273,65],[297,68,273,66,"handlerTag"],[297,78,273,76],[297,80,273,78,"newViewTag"],[297,90,273,88],[297,92,273,90,"actionType"],[297,102,273,100],[297,103,273,101],[298,8,274,6],[299,8,275,6],[299,9,275,7],[299,10,275,8],[299,12,275,10,"_utils"],[299,18,275,16],[299,19,275,17,"scheduleFlushOperations"],[299,42,275,40],[299,44,275,42],[299,45,275,43],[300,8,276,6],[300,9,276,7],[300,10,276,8],[300,12,276,10,"_ghQueueMicrotask"],[300,29,276,27],[300,30,276,28,"ghQueueMicrotask"],[300,46,276,44],[300,48,276,46],[300,54,276,52],[301,10,277,8,"_mountRegistry"],[301,24,277,22],[301,25,277,23,"MountRegistry"],[301,38,277,36],[301,39,277,37,"gestureHandlerWillMount"],[301,62,277,60],[301,63,277,61],[301,67,277,65],[301,68,277,66],[302,8,278,6],[302,9,278,7],[302,10,278,8],[303,6,279,4],[303,7,279,5],[304,6,280,4,"updateGestureHandler"],[304,26,280,24],[304,29,280,27,"newConfig"],[304,38,280,36],[304,42,280,40],[305,8,281,6],[305,12,281,10],[305,13,281,11,"config"],[305,19,281,17],[305,22,281,20,"newConfig"],[305,31,281,29],[306,8,282,6,"_RNGestureHandlerModule"],[306,31,282,29],[306,32,282,30,"default"],[306,39,282,37],[306,40,282,38,"updateGestureHandler"],[306,60,282,58],[306,61,282,59],[306,65,282,63],[306,66,282,64,"handlerTag"],[306,76,282,74],[306,78,282,76,"newConfig"],[306,87,282,85],[306,88,282,86],[307,8,283,6],[307,9,283,7],[307,10,283,8],[307,12,283,10,"_utils"],[307,18,283,16],[307,19,283,17,"scheduleFlushOperations"],[307,42,283,40],[307,44,283,42],[307,45,283,43],[308,6,284,4],[308,7,284,5],[309,6,285,4,"update"],[309,12,285,10,"update"],[309,13,285,11,"remainingTries"],[309,27,285,25],[309,29,285,27],[310,8,286,6],[310,12,286,10],[310,13,286,11],[310,17,286,15],[310,18,286,16,"isMountedRef"],[310,30,286,28],[310,31,286,29,"current"],[310,38,286,36],[310,40,286,38],[311,10,287,8],[312,8,288,6],[313,8,289,6],[313,14,289,12,"props"],[313,19,289,17],[313,22,289,20],[313,26,289,24],[313,27,289,25,"props"],[313,32,289,30],[315,8,291,6],[316,8,292,6],[317,8,293,6],[318,8,294,6],[318,12,294,10,"hasUnresolvedRefs"],[318,29,294,27],[318,30,294,28,"props"],[318,35,294,33],[318,36,294,34],[318,40,294,38,"remainingTries"],[318,54,294,52],[318,57,294,55],[318,58,294,56],[318,60,294,58],[319,10,295,8],[319,11,295,9],[319,12,295,10],[319,14,295,12,"_ghQueueMicrotask"],[319,31,295,29],[319,32,295,30,"ghQueueMicrotask"],[319,48,295,46],[319,50,295,48],[319,56,295,54],[320,12,296,10],[320,16,296,14],[320,17,296,15,"update"],[320,23,296,21],[320,24,296,22,"remainingTries"],[320,38,296,36],[320,41,296,39],[320,42,296,40],[320,43,296,41],[321,10,297,8],[321,11,297,9],[321,12,297,10],[322,8,298,6],[322,9,298,7],[322,15,298,13],[323,10,299,8],[323,16,299,14,"newConfig"],[323,25,299,23],[323,28,299,26],[323,29,299,27],[323,30,299,28],[323,32,299,30,"_utils"],[323,38,299,36],[323,39,299,37,"filterConfig"],[323,51,299,49],[323,53,299,51,"transformProps"],[323,67,299,65],[323,70,299,68,"transformProps"],[323,84,299,82],[323,85,299,83],[323,89,299,87],[323,90,299,88,"props"],[323,95,299,93],[323,96,299,94],[323,99,299,97],[323,103,299,101],[323,104,299,102,"props"],[323,109,299,107],[323,111,299,109],[323,112,299,110],[323,115,299,113,"allowedProps"],[323,127,299,125],[323,129,299,127],[323,132,299,130,"customNativeProps"],[323,149,299,147],[323,150,299,148],[323,152,299,150,"config"],[323,158,299,156],[323,159,299,157],[324,10,300,8],[324,14,300,12],[324,15,300,13],[324,16,300,14],[324,17,300,15],[324,19,300,17,"_utils2"],[324,26,300,24],[324,27,300,25,"deepEqual"],[324,36,300,34],[324,38,300,36],[324,42,300,40],[324,43,300,41,"config"],[324,49,300,47],[324,51,300,49,"newConfig"],[324,60,300,58],[324,61,300,59],[324,63,300,61],[325,12,301,10],[325,16,301,14],[325,17,301,15,"updateGestureHandler"],[325,37,301,35],[325,38,301,36,"newConfig"],[325,47,301,45],[325,48,301,46],[326,10,302,8],[327,8,303,6],[328,6,304,4],[330,6,306,4],[331,6,307,4,"setNativeProps"],[331,20,307,18,"setNativeProps"],[331,21,307,19,"updates"],[331,28,307,26],[331,30,307,28],[332,8,308,6],[332,14,308,12,"mergedProps"],[332,25,308,23],[332,28,308,26],[333,10,309,8],[333,13,309,11],[333,17,309,15],[333,18,309,16,"props"],[333,23,309,21],[334,10,310,8],[334,13,310,11,"updates"],[335,8,311,6],[335,9,311,7],[336,8,312,6],[336,14,312,12,"newConfig"],[336,23,312,21],[336,26,312,24],[336,27,312,25],[336,28,312,26],[336,30,312,28,"_utils"],[336,36,312,34],[336,37,312,35,"filterConfig"],[336,49,312,47],[336,51,312,49,"transformProps"],[336,65,312,63],[336,68,312,66,"transformProps"],[336,82,312,80],[336,83,312,81,"mergedProps"],[336,94,312,92],[336,95,312,93],[336,98,312,96,"mergedProps"],[336,109,312,107],[336,111,312,109],[336,112,312,110],[336,115,312,113,"allowedProps"],[336,127,312,125],[336,129,312,127],[336,132,312,130,"customNativeProps"],[336,149,312,147],[336,150,312,148],[336,152,312,150,"config"],[336,158,312,156],[336,159,312,157],[337,8,313,6],[337,12,313,10],[337,13,313,11,"updateGestureHandler"],[337,33,313,31],[337,34,313,32,"newConfig"],[337,43,313,41],[337,44,313,42],[338,6,314,4],[339,6,315,4,"render"],[339,12,315,10,"render"],[339,13,315,10],[339,15,315,13],[340,8,316,6],[340,12,316,10,"__DEV__"],[340,19,316,17],[340,23,316,21],[340,24,316,22],[340,28,316,26],[340,29,316,27,"context"],[340,36,316,34],[340,40,316,38],[340,41,316,39],[340,42,316,40],[340,43,316,41],[340,45,316,43,"_utils2"],[340,52,316,50],[340,53,316,51,"isTestEnv"],[340,62,316,60],[340,64,316,62],[340,65,316,63],[340,69,316,67,"_reactNative"],[340,81,316,79],[340,82,316,80,"Platform"],[340,90,316,88],[340,91,316,89,"OS"],[340,93,316,91],[340,98,316,96],[340,103,316,101],[340,105,316,103],[341,10,317,8],[341,16,317,14],[341,20,317,18,"Error"],[341,25,317,23],[341,26,317,24,"name"],[341,30,317,28],[341,33,317,31],[341,247,317,245],[341,248,317,246],[342,8,318,6],[343,8,319,6],[343,12,319,10,"gestureEventHandler"],[343,31,319,29],[343,34,319,32],[343,38,319,36],[343,39,319,37,"onGestureHandlerEvent"],[343,60,319,58],[344,8,320,6],[346,8,322,6],[346,14,322,12],[347,10,323,8,"onGestureEvent"],[347,24,323,22],[348,10,324,8,"onGestureHandlerEvent"],[349,8,325,6],[349,9,325,7],[349,12,325,10],[349,16,325,14],[349,17,325,15,"props"],[349,22,325,20],[350,8,326,6],[350,12,326,10,"onGestureEvent"],[350,26,326,24],[350,30,326,28],[350,37,326,35,"onGestureEvent"],[350,51,326,49],[350,56,326,54],[350,66,326,64],[350,68,326,66],[351,10,327,8],[352,10,328,8],[353,10,329,8],[354,10,330,8],[354,14,330,12,"onGestureHandlerEvent"],[354,35,330,33],[354,37,330,35],[355,12,331,10],[355,18,331,16],[355,22,331,20,"Error"],[355,27,331,25],[355,28,331,26],[355,101,331,99],[355,102,331,100],[356,10,332,8],[357,10,333,8,"gestureEventHandler"],[357,29,333,27],[357,32,333,30,"onGestureEvent"],[357,46,333,44],[358,8,334,6],[358,9,334,7],[358,15,334,13],[359,10,335,8],[359,14,335,12,"onGestureHandlerEvent"],[359,35,335,33],[359,39,335,37],[359,46,335,44,"onGestureHandlerEvent"],[359,67,335,65],[359,72,335,70],[359,82,335,80],[359,84,335,82],[360,12,336,10],[360,18,336,16],[360,22,336,20,"Error"],[360,27,336,25],[360,28,336,26],[360,101,336,99],[360,102,336,100],[361,10,337,8],[362,8,338,6],[363,8,339,6],[363,12,339,10,"gestureStateEventHandler"],[363,36,339,34],[363,39,339,37],[363,43,339,41],[363,44,339,42,"onGestureHandlerStateChange"],[363,71,339,69],[364,8,340,6],[366,8,342,6],[366,14,342,12],[367,10,343,8,"onHandlerStateChange"],[367,30,343,28],[368,10,344,8,"onGestureHandlerStateChange"],[369,8,345,6],[369,9,345,7],[369,12,345,10],[369,16,345,14],[369,17,345,15,"props"],[369,22,345,20],[370,8,346,6],[370,12,346,10,"onHandlerStateChange"],[370,32,346,30],[370,36,346,34],[370,43,346,41,"onHandlerStateChange"],[370,63,346,61],[370,68,346,66],[370,78,346,76],[370,80,346,78],[371,10,347,8],[372,10,348,8],[373,10,349,8],[374,10,350,8],[374,14,350,12,"onGestureHandlerStateChange"],[374,41,350,39],[374,43,350,41],[375,12,351,10],[375,18,351,16],[375,22,351,20,"Error"],[375,27,351,25],[375,28,351,26],[375,101,351,99],[375,102,351,100],[376,10,352,8],[377,10,353,8,"gestureStateEventHandler"],[377,34,353,32],[377,37,353,35,"onHandlerStateChange"],[377,57,353,55],[378,8,354,6],[378,9,354,7],[378,15,354,13],[379,10,355,8],[379,14,355,12,"onGestureHandlerStateChange"],[379,41,355,39],[379,45,355,43],[379,52,355,50,"onGestureHandlerStateChange"],[379,79,355,77],[379,84,355,82],[379,94,355,92],[379,96,355,94],[380,12,356,10],[380,18,356,16],[380,22,356,20,"Error"],[380,27,356,25],[380,28,356,26],[380,101,356,99],[380,102,356,100],[381,10,357,8],[382,8,358,6],[383,8,359,6],[383,14,359,12,"events"],[383,20,359,18],[383,23,359,21],[384,10,360,8,"onGestureHandlerEvent"],[384,31,360,29],[384,33,360,31],[384,37,360,35],[384,38,360,36,"state"],[384,43,360,41],[384,44,360,42,"allowTouches"],[384,56,360,54],[384,59,360,57,"gestureEventHandler"],[384,78,360,76],[384,81,360,79,"undefined"],[384,90,360,88],[385,10,361,8,"onGestureHandlerStateChange"],[385,37,361,35],[385,39,361,37],[385,43,361,41],[385,44,361,42,"state"],[385,49,361,47],[385,50,361,48,"allowTouches"],[385,62,361,60],[385,65,361,63,"gestureStateEventHandler"],[385,89,361,87],[385,92,361,90,"undefined"],[386,8,362,6],[386,9,362,7],[387,8,363,6],[387,12,363,10],[387,13,363,11,"propsRef"],[387,21,363,19],[387,22,363,20,"current"],[387,29,363,27],[387,32,363,30,"events"],[387,38,363,36],[388,8,364,6],[388,12,364,10,"child"],[388,17,364,15],[388,20,364,18],[388,24,364,22],[389,8,365,6],[389,12,365,10],[390,10,366,8,"child"],[390,15,366,13],[390,18,366,16,"React"],[390,23,366,21],[390,24,366,22,"Children"],[390,32,366,30],[390,33,366,31,"only"],[390,37,366,35],[390,38,366,36],[390,42,366,40],[390,43,366,41,"props"],[390,48,366,46],[390,49,366,47,"children"],[390,57,366,55],[390,58,366,56],[391,8,367,6],[391,9,367,7],[391,10,367,8],[391,17,367,15,"e"],[391,18,367,16],[391,20,367,18],[392,10,368,8],[392,16,368,14],[392,20,368,18,"Error"],[392,25,368,23],[392,26,368,24],[392,27,368,25],[392,28,368,26],[392,30,368,28,"_utils2"],[392,37,368,35],[392,38,368,36,"tagMessage"],[392,48,368,46],[392,50,368,48],[392,53,368,51,"name"],[392,57,368,55],[392,213,368,211],[392,214,368,212],[392,215,368,213],[393,8,369,6],[394,8,370,6],[394,12,370,10,"grandChildren"],[394,25,370,23],[394,28,370,26,"child"],[394,33,370,31],[394,34,370,32,"props"],[394,39,370,37],[394,40,370,38,"children"],[394,48,370,46],[395,8,371,6],[395,12,371,10,"__DEV__"],[395,19,371,17],[395,23,371,21,"child"],[395,28,371,26],[395,29,371,27,"type"],[395,33,371,31],[395,38,371,36,"child"],[395,43,371,41],[395,44,371,42,"type"],[395,48,371,46],[395,53,371,51],[395,77,371,75],[395,81,371,79,"child"],[395,86,371,84],[395,87,371,85,"type"],[395,91,371,89],[395,92,371,90,"name"],[395,96,371,94],[395,101,371,99],[395,107,371,105],[395,111,371,109,"child"],[395,116,371,114],[395,117,371,115,"type"],[395,121,371,119],[395,122,371,120,"displayName"],[395,133,371,131],[395,138,371,136],[395,144,371,142],[395,145,371,143],[395,147,371,145],[396,10,372,8,"grandChildren"],[396,23,372,21],[396,26,372,24,"React"],[396,31,372,29],[396,32,372,30,"Children"],[396,40,372,38],[396,41,372,39,"toArray"],[396,48,372,46],[396,49,372,47,"grandChildren"],[396,62,372,60],[396,63,372,61],[397,10,373,8,"grandChildren"],[397,23,373,21],[397,24,373,22,"push"],[397,28,373,26],[397,29,373,27],[397,42,373,40],[397,43,373,41],[397,44,373,42],[397,46,373,44,"_jsxRuntime"],[397,57,373,55],[397,58,373,56,"jsx"],[397,61,373,59],[397,63,373,61,"_PressabilityDebugView"],[397,85,373,83],[397,86,373,84,"PressabilityDebugView"],[397,107,373,105],[397,109,373,107],[398,12,374,10,"color"],[398,17,374,15],[398,19,374,17],[398,38,374,36],[399,12,375,10,"hitSlop"],[399,19,375,17],[399,21,375,19,"child"],[399,26,375,24],[399,27,375,25,"props"],[399,32,375,30],[399,33,375,31,"hitSlop"],[400,10,376,8],[400,11,376,9],[400,13,376,11],[400,36,376,34],[400,37,376,35],[400,38,376,36],[401,8,377,6],[402,8,378,6],[402,15,378,13],[402,28,378,26,"React"],[402,33,378,31],[402,34,378,32,"cloneElement"],[402,46,378,44],[402,47,378,45,"child"],[402,52,378,50],[402,54,378,52],[403,10,379,8,"ref"],[403,13,379,11],[403,15,379,13],[403,19,379,17],[403,20,379,18,"refHandler"],[403,30,379,28],[404,10,380,8,"collapsable"],[404,21,380,19],[404,23,380,21],[404,28,380,26],[405,10,381,8],[405,14,381,12],[405,15,381,13],[405,16,381,14],[405,18,381,16,"_utils2"],[405,25,381,23],[405,26,381,24,"isTestEnv"],[405,35,381,33],[405,37,381,35],[405,38,381,36],[405,41,381,39],[406,12,382,10,"handlerType"],[406,23,382,21],[406,25,382,23,"name"],[406,29,382,27],[407,12,383,10,"handlerTag"],[407,22,383,20],[407,24,383,22],[407,28,383,26],[407,29,383,27,"handlerTag"],[407,39,383,37],[408,12,384,10,"enabled"],[408,19,384,17],[408,21,384,19],[408,25,384,23],[408,26,384,24,"props"],[408,31,384,29],[408,32,384,30,"enabled"],[409,10,385,8],[409,11,385,9],[409,14,385,12],[409,15,385,13],[409,16,385,14],[409,17,385,15],[410,10,386,8,"testID"],[410,16,386,14],[410,18,386,16],[410,22,386,20],[410,23,386,21,"props"],[410,28,386,26],[410,29,386,27,"testID"],[410,35,386,33],[410,39,386,37,"child"],[410,44,386,42],[410,45,386,43,"props"],[410,50,386,48],[410,51,386,49,"testID"],[410,57,386,55],[411,10,387,8],[411,13,387,11,"events"],[412,8,388,6],[412,9,388,7],[412,11,388,9,"grandChildren"],[412,24,388,22],[412,25,388,23],[413,6,389,4],[414,4,390,2],[415,4,391,2],[415,11,391,9,"Handler"],[415,18,391,16],[416,2,392,0],[417,0,392,1],[417,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_interopRequireWildcard","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","_reactNative.DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACsB,qFD;AEC,smBF;sCGiD;GHE;0CGC;GHE;8BIE;CJG;gCKC;CLG;wEMM;GNE;AOE;kBCE;qBCI,4BD;GDC;CPE;AUe;ECO;ICI;KDc;IEC;6GPI;wBQC;YRE;SOE;gDVS;SUE;KFO;IIC;KJM;IKC;KLe;4BMC;KNQ;kCOG;KPc;iBQC;KRc;2BSC;KTI;2BUC;4BlBY;SkBgB;8ClBI;OkBE;KVC;2BWC;KXI;IYC;gDpBU;SoBE;KZO;IaG;KbO;IcC;Kd0E;GDC;CVE"},"hasCjsExports":true},"type":"js/module"}]}