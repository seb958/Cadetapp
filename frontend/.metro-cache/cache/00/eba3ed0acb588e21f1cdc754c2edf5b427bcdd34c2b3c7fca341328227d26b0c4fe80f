{"dependencies":[{"name":"./core.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":73,"index":88}}],"key":"mJVVi7YU3vDVLm6ZethtbJGh1KY=","exportNames":["*"],"imports":1}},{"name":"./PlatformChecker.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":89},"end":{"line":4,"column":54,"index":143}}],"key":"6AA7RQghlqlrd3hVWNoLh/rI420=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"WorkletEventHandler\", {\n    enumerable: true,\n    get: function () {\n      return WorkletEventHandler;\n    }\n  });\n  var _coreJs = require(_dependencyMap[0], \"./core.js\");\n  var _PlatformCheckerJs = require(_dependencyMap[1], \"./PlatformChecker.js\");\n  const SHOULD_BE_USE_WEB = (0, _PlatformCheckerJs.shouldBeUseWeb)();\n  // In JS implementation (e.g. for web) we don't use Reanimated's\n  // event emitter, therefore we have to handle here\n  // the event that came from React Native and convert it.\n  function jsListener(eventName, handler) {\n    return evt => {\n      handler({\n        ...evt.nativeEvent,\n        eventName\n      });\n    };\n  }\n  class WorkletEventHandlerNative {\n    #viewTags;\n    #registrations; // keys are viewTags, values are arrays of registration ID's for each viewTag\n    constructor(worklet, eventNames) {\n      this.worklet = worklet;\n      this.eventNames = eventNames;\n      this.#viewTags = new Set();\n      this.#registrations = new Map();\n    }\n    updateEventHandler(newWorklet, newEvents) {\n      // Update worklet and event names\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n\n      // Detach all events\n      this.#registrations.forEach(registrationIDs => {\n        registrationIDs.forEach(id => (0, _coreJs.unregisterEventHandler)(id));\n        // No need to remove registrationIDs from map, since it gets overwritten when attaching\n      });\n\n      // Attach new events with new worklet\n      Array.from(this.#viewTags).forEach(tag => {\n        const newRegistrations = this.eventNames.map(eventName => (0, _coreJs.registerEventHandler)(this.worklet, eventName, tag));\n        this.#registrations.set(tag, newRegistrations);\n      });\n    }\n    registerForEvents(viewTag, fallbackEventName) {\n      this.#viewTags.add(viewTag);\n      const newRegistrations = this.eventNames.map(eventName => (0, _coreJs.registerEventHandler)(this.worklet, eventName, viewTag));\n      this.#registrations.set(viewTag, newRegistrations);\n      if (this.eventNames.length === 0 && fallbackEventName) {\n        const newRegistration = (0, _coreJs.registerEventHandler)(this.worklet, fallbackEventName, viewTag);\n        this.#registrations.set(viewTag, [newRegistration]);\n      }\n    }\n    unregisterFromEvents(viewTag) {\n      this.#viewTags.delete(viewTag);\n      this.#registrations.get(viewTag)?.forEach(id => {\n        (0, _coreJs.unregisterEventHandler)(id);\n      });\n      this.#registrations.delete(viewTag);\n    }\n  }\n  class WorkletEventHandlerWeb {\n    constructor(worklet, eventNames = []) {\n      this.worklet = worklet;\n      this.eventNames = eventNames;\n      this.listeners = {};\n      this.setupWebListeners();\n    }\n    setupWebListeners() {\n      this.listeners = {};\n      this.eventNames.forEach(eventName => {\n        this.listeners[eventName] = jsListener(eventName, this.worklet);\n      });\n    }\n    updateEventHandler(newWorklet, newEvents) {\n      // Update worklet and event names\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      this.setupWebListeners();\n    }\n    registerForEvents(_viewTag, _fallbackEventName) {\n      // noop\n    }\n    unregisterFromEvents(_viewTag) {\n      // noop\n    }\n  }\n  const WorkletEventHandler = SHOULD_BE_USE_WEB ? WorkletEventHandlerWeb : WorkletEventHandlerNative;\n});","lineCount":97,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,86,0,"Object"],[7,8,86,0],[7,9,86,0,"defineProperty"],[7,23,86,0],[7,24,86,0,"exports"],[7,31,86,0],[8,4,86,0,"enumerable"],[8,14,86,0],[9,4,86,0,"get"],[9,7,86,0],[9,18,86,0,"get"],[9,19,86,0],[10,6,86,0],[10,13,86,0,"WorkletEventHandler"],[10,32,86,0],[11,4,86,0],[12,2,86,0],[13,2,3,0],[13,6,3,0,"_coreJs"],[13,13,3,0],[13,16,3,0,"require"],[13,23,3,0],[13,24,3,0,"_dependencyMap"],[13,38,3,0],[14,2,4,0],[14,6,4,0,"_PlatformCheckerJs"],[14,24,4,0],[14,27,4,0,"require"],[14,34,4,0],[14,35,4,0,"_dependencyMap"],[14,49,4,0],[15,2,5,0],[15,8,5,6,"SHOULD_BE_USE_WEB"],[15,25,5,23],[15,28,5,26],[15,32,5,26,"shouldBeUseWeb"],[15,50,5,40],[15,51,5,40,"shouldBeUseWeb"],[15,65,5,40],[15,67,5,41],[15,68,5,42],[16,2,6,0],[17,2,7,0],[18,2,8,0],[19,2,9,0],[19,11,9,9,"jsListener"],[19,21,9,19,"jsListener"],[19,22,9,20,"eventName"],[19,31,9,29],[19,33,9,31,"handler"],[19,40,9,38],[19,42,9,40],[20,4,10,2],[20,11,10,9,"evt"],[20,14,10,12],[20,18,10,16],[21,6,11,4,"handler"],[21,13,11,11],[21,14,11,12],[22,8,12,6],[22,11,12,9,"evt"],[22,14,12,12],[22,15,12,13,"nativeEvent"],[22,26,12,24],[23,8,13,6,"eventName"],[24,6,14,4],[24,7,14,5],[24,8,14,6],[25,4,15,2],[25,5,15,3],[26,2,16,0],[27,2,17,0],[27,8,17,6,"WorkletEventHandlerNative"],[27,33,17,31],[27,34,17,32],[28,4,18,2],[28,5,18,3,"viewTags"],[28,13,18,11],[29,4,19,2],[29,5,19,3,"registrations"],[29,18,19,16],[29,19,19,17],[29,20,19,18],[30,4,20,2,"constructor"],[30,15,20,13,"constructor"],[30,16,20,14,"worklet"],[30,23,20,21],[30,25,20,23,"eventNames"],[30,35,20,33],[30,37,20,35],[31,6,21,4],[31,10,21,8],[31,11,21,9,"worklet"],[31,18,21,16],[31,21,21,19,"worklet"],[31,28,21,26],[32,6,22,4],[32,10,22,8],[32,11,22,9,"eventNames"],[32,21,22,19],[32,24,22,22,"eventNames"],[32,34,22,32],[33,6,23,4],[33,10,23,8],[33,11,23,9],[33,12,23,10,"viewTags"],[33,20,23,18],[33,23,23,21],[33,27,23,25,"Set"],[33,30,23,28],[33,31,23,29],[33,32,23,30],[34,6,24,4],[34,10,24,8],[34,11,24,9],[34,12,24,10,"registrations"],[34,25,24,23],[34,28,24,26],[34,32,24,30,"Map"],[34,35,24,33],[34,36,24,34],[34,37,24,35],[35,4,25,2],[36,4,26,2,"updateEventHandler"],[36,22,26,20,"updateEventHandler"],[36,23,26,21,"newWorklet"],[36,33,26,31],[36,35,26,33,"newEvents"],[36,44,26,42],[36,46,26,44],[37,6,27,4],[38,6,28,4],[38,10,28,8],[38,11,28,9,"worklet"],[38,18,28,16],[38,21,28,19,"newWorklet"],[38,31,28,29],[39,6,29,4],[39,10,29,8],[39,11,29,9,"eventNames"],[39,21,29,19],[39,24,29,22,"newEvents"],[39,33,29,31],[41,6,31,4],[42,6,32,4],[42,10,32,8],[42,11,32,9],[42,12,32,10,"registrations"],[42,25,32,23],[42,26,32,24,"forEach"],[42,33,32,31],[42,34,32,32,"registrationIDs"],[42,49,32,47],[42,53,32,51],[43,8,33,6,"registrationIDs"],[43,23,33,21],[43,24,33,22,"forEach"],[43,31,33,29],[43,32,33,30,"id"],[43,34,33,32],[43,38,33,36],[43,42,33,36,"unregisterEventHandler"],[43,49,33,58],[43,50,33,58,"unregisterEventHandler"],[43,72,33,58],[43,74,33,59,"id"],[43,76,33,61],[43,77,33,62],[43,78,33,63],[44,8,34,6],[45,6,35,4],[45,7,35,5],[45,8,35,6],[47,6,37,4],[48,6,38,4,"Array"],[48,11,38,9],[48,12,38,10,"from"],[48,16,38,14],[48,17,38,15],[48,21,38,19],[48,22,38,20],[48,23,38,21,"viewTags"],[48,31,38,29],[48,32,38,30],[48,33,38,31,"forEach"],[48,40,38,38],[48,41,38,39,"tag"],[48,44,38,42],[48,48,38,46],[49,8,39,6],[49,14,39,12,"newRegistrations"],[49,30,39,28],[49,33,39,31],[49,37,39,35],[49,38,39,36,"eventNames"],[49,48,39,46],[49,49,39,47,"map"],[49,52,39,50],[49,53,39,51,"eventName"],[49,62,39,60],[49,66,39,64],[49,70,39,64,"registerEventHandler"],[49,77,39,84],[49,78,39,84,"registerEventHandler"],[49,98,39,84],[49,100,39,85],[49,104,39,89],[49,105,39,90,"worklet"],[49,112,39,97],[49,114,39,99,"eventName"],[49,123,39,108],[49,125,39,110,"tag"],[49,128,39,113],[49,129,39,114],[49,130,39,115],[50,8,40,6],[50,12,40,10],[50,13,40,11],[50,14,40,12,"registrations"],[50,27,40,25],[50,28,40,26,"set"],[50,31,40,29],[50,32,40,30,"tag"],[50,35,40,33],[50,37,40,35,"newRegistrations"],[50,53,40,51],[50,54,40,52],[51,6,41,4],[51,7,41,5],[51,8,41,6],[52,4,42,2],[53,4,43,2,"registerForEvents"],[53,21,43,19,"registerForEvents"],[53,22,43,20,"viewTag"],[53,29,43,27],[53,31,43,29,"fallbackEventName"],[53,48,43,46],[53,50,43,48],[54,6,44,4],[54,10,44,8],[54,11,44,9],[54,12,44,10,"viewTags"],[54,20,44,18],[54,21,44,19,"add"],[54,24,44,22],[54,25,44,23,"viewTag"],[54,32,44,30],[54,33,44,31],[55,6,45,4],[55,12,45,10,"newRegistrations"],[55,28,45,26],[55,31,45,29],[55,35,45,33],[55,36,45,34,"eventNames"],[55,46,45,44],[55,47,45,45,"map"],[55,50,45,48],[55,51,45,49,"eventName"],[55,60,45,58],[55,64,45,62],[55,68,45,62,"registerEventHandler"],[55,75,45,82],[55,76,45,82,"registerEventHandler"],[55,96,45,82],[55,98,45,83],[55,102,45,87],[55,103,45,88,"worklet"],[55,110,45,95],[55,112,45,97,"eventName"],[55,121,45,106],[55,123,45,108,"viewTag"],[55,130,45,115],[55,131,45,116],[55,132,45,117],[56,6,46,4],[56,10,46,8],[56,11,46,9],[56,12,46,10,"registrations"],[56,25,46,23],[56,26,46,24,"set"],[56,29,46,27],[56,30,46,28,"viewTag"],[56,37,46,35],[56,39,46,37,"newRegistrations"],[56,55,46,53],[56,56,46,54],[57,6,47,4],[57,10,47,8],[57,14,47,12],[57,15,47,13,"eventNames"],[57,25,47,23],[57,26,47,24,"length"],[57,32,47,30],[57,37,47,35],[57,38,47,36],[57,42,47,40,"fallbackEventName"],[57,59,47,57],[57,61,47,59],[58,8,48,6],[58,14,48,12,"newRegistration"],[58,29,48,27],[58,32,48,30],[58,36,48,30,"registerEventHandler"],[58,43,48,50],[58,44,48,50,"registerEventHandler"],[58,64,48,50],[58,66,48,51],[58,70,48,55],[58,71,48,56,"worklet"],[58,78,48,63],[58,80,48,65,"fallbackEventName"],[58,97,48,82],[58,99,48,84,"viewTag"],[58,106,48,91],[58,107,48,92],[59,8,49,6],[59,12,49,10],[59,13,49,11],[59,14,49,12,"registrations"],[59,27,49,25],[59,28,49,26,"set"],[59,31,49,29],[59,32,49,30,"viewTag"],[59,39,49,37],[59,41,49,39],[59,42,49,40,"newRegistration"],[59,57,49,55],[59,58,49,56],[59,59,49,57],[60,6,50,4],[61,4,51,2],[62,4,52,2,"unregisterFromEvents"],[62,24,52,22,"unregisterFromEvents"],[62,25,52,23,"viewTag"],[62,32,52,30],[62,34,52,32],[63,6,53,4],[63,10,53,8],[63,11,53,9],[63,12,53,10,"viewTags"],[63,20,53,18],[63,21,53,19,"delete"],[63,27,53,25],[63,28,53,26,"viewTag"],[63,35,53,33],[63,36,53,34],[64,6,54,4],[64,10,54,8],[64,11,54,9],[64,12,54,10,"registrations"],[64,25,54,23],[64,26,54,24,"get"],[64,29,54,27],[64,30,54,28,"viewTag"],[64,37,54,35],[64,38,54,36],[64,40,54,38,"forEach"],[64,47,54,45],[64,48,54,46,"id"],[64,50,54,48],[64,54,54,52],[65,8,55,6],[65,12,55,6,"unregisterEventHandler"],[65,19,55,28],[65,20,55,28,"unregisterEventHandler"],[65,42,55,28],[65,44,55,29,"id"],[65,46,55,31],[65,47,55,32],[66,6,56,4],[66,7,56,5],[66,8,56,6],[67,6,57,4],[67,10,57,8],[67,11,57,9],[67,12,57,10,"registrations"],[67,25,57,23],[67,26,57,24,"delete"],[67,32,57,30],[67,33,57,31,"viewTag"],[67,40,57,38],[67,41,57,39],[68,4,58,2],[69,2,59,0],[70,2,60,0],[70,8,60,6,"WorkletEventHandlerWeb"],[70,30,60,28],[70,31,60,29],[71,4,61,2,"constructor"],[71,15,61,13,"constructor"],[71,16,61,14,"worklet"],[71,23,61,21],[71,25,61,23,"eventNames"],[71,35,61,33],[71,38,61,36],[71,40,61,38],[71,42,61,40],[72,6,62,4],[72,10,62,8],[72,11,62,9,"worklet"],[72,18,62,16],[72,21,62,19,"worklet"],[72,28,62,26],[73,6,63,4],[73,10,63,8],[73,11,63,9,"eventNames"],[73,21,63,19],[73,24,63,22,"eventNames"],[73,34,63,32],[74,6,64,4],[74,10,64,8],[74,11,64,9,"listeners"],[74,20,64,18],[74,23,64,21],[74,24,64,22],[74,25,64,23],[75,6,65,4],[75,10,65,8],[75,11,65,9,"setupWebListeners"],[75,28,65,26],[75,29,65,27],[75,30,65,28],[76,4,66,2],[77,4,67,2,"setupWebListeners"],[77,21,67,19,"setupWebListeners"],[77,22,67,19],[77,24,67,22],[78,6,68,4],[78,10,68,8],[78,11,68,9,"listeners"],[78,20,68,18],[78,23,68,21],[78,24,68,22],[78,25,68,23],[79,6,69,4],[79,10,69,8],[79,11,69,9,"eventNames"],[79,21,69,19],[79,22,69,20,"forEach"],[79,29,69,27],[79,30,69,28,"eventName"],[79,39,69,37],[79,43,69,41],[80,8,70,6],[80,12,70,10],[80,13,70,11,"listeners"],[80,22,70,20],[80,23,70,21,"eventName"],[80,32,70,30],[80,33,70,31],[80,36,70,34,"jsListener"],[80,46,70,44],[80,47,70,45,"eventName"],[80,56,70,54],[80,58,70,56],[80,62,70,60],[80,63,70,61,"worklet"],[80,70,70,68],[80,71,70,69],[81,6,71,4],[81,7,71,5],[81,8,71,6],[82,4,72,2],[83,4,73,2,"updateEventHandler"],[83,22,73,20,"updateEventHandler"],[83,23,73,21,"newWorklet"],[83,33,73,31],[83,35,73,33,"newEvents"],[83,44,73,42],[83,46,73,44],[84,6,74,4],[85,6,75,4],[85,10,75,8],[85,11,75,9,"worklet"],[85,18,75,16],[85,21,75,19,"newWorklet"],[85,31,75,29],[86,6,76,4],[86,10,76,8],[86,11,76,9,"eventNames"],[86,21,76,19],[86,24,76,22,"newEvents"],[86,33,76,31],[87,6,77,4],[87,10,77,8],[87,11,77,9,"setupWebListeners"],[87,28,77,26],[87,29,77,27],[87,30,77,28],[88,4,78,2],[89,4,79,2,"registerForEvents"],[89,21,79,19,"registerForEvents"],[89,22,79,20,"_viewTag"],[89,30,79,28],[89,32,79,30,"_fallbackEventName"],[89,50,79,48],[89,52,79,50],[90,6,80,4],[91,4,80,4],[92,4,82,2,"unregisterFromEvents"],[92,24,82,22,"unregisterFromEvents"],[92,25,82,23,"_viewTag"],[92,33,82,31],[92,35,82,33],[93,6,83,4],[94,4,83,4],[95,2,85,0],[96,2,86,7],[96,8,86,13,"WorkletEventHandler"],[96,27,86,32],[96,30,86,35,"SHOULD_BE_USE_WEB"],[96,47,86,52],[96,50,86,55,"WorkletEventHandlerWeb"],[96,72,86,77],[96,75,86,80,"WorkletEventHandlerNative"],[96,100,86,105],[97,0,86,106],[97,3]],"functionMap":{"names":["<global>","jsListener","<anonymous>","WorkletEventHandlerNative","WorkletEventHandlerNative#constructor","WorkletEventHandlerNative#updateEventHandler","forEach$argument_0","registrationIDs.forEach$argument_0","Array.from.forEach$argument_0","eventNames.map$argument_0","WorkletEventHandlerNative#registerForEvents","WorkletEventHandlerNative#unregisterFromEvents","get.forEach$argument_0","WorkletEventHandlerWeb","WorkletEventHandlerWeb#constructor","WorkletEventHandlerWeb#setupWebListeners","eventNames.forEach$argument_0","WorkletEventHandlerWeb#updateEventHandler","WorkletEventHandlerWeb#registerForEvents","WorkletEventHandlerWeb#unregisterFromEvents"],"mappings":"AAA;ACQ;SCC;GDK;CDC;AGC;ECG;GDK;EEC;gCCM;8BCC,gCD;KDE;uCGG;mDCC,+DD;KHE;GFC;EOC;iDDE,mEC;GPM;EQC;8CCE;KDE;GRE;CHC;AaC;ECC;GDK;EEC;4BCE;KDE;GFC;EIC;GJK;EKC;GLE;EMC;GNE;CbC"},"hasCjsExports":false},"type":"js/module"}]}