{"dependencies":[{"name":"../../PointerType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":48,"index":259}}],"key":"PNpP2j+zRZwLQ3w6ZmXPMJNakiU=","exportNames":["*"],"imports":1}},{"name":"../../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":260},"end":{"line":4,"column":36,"index":296}}],"key":"WEWPBXLBFeeryzJLF/iqxrLBTrA=","exportNames":["*"],"imports":1}},{"name":"./PointerTracker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":297},"end":{"line":5,"column":46,"index":343}}],"key":"1iEqYtl129GsycZ0U5VpXvfk4T0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return GestureHandlerOrchestrator;\n    }\n  });\n  var _PointerType = require(_dependencyMap[0], \"../../PointerType\");\n  var _State = require(_dependencyMap[1], \"../../State\");\n  var _PointerTracker = require(_dependencyMap[2], \"./PointerTracker\");\n  var PointerTracker = _interopDefault(_PointerTracker);\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class GestureHandlerOrchestrator {\n    // Private beacuse of Singleton\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    constructor() {\n      _defineProperty(this, \"gestureHandlers\", []);\n      _defineProperty(this, \"awaitingHandlers\", []);\n      _defineProperty(this, \"awaitingHandlersTags\", new Set());\n      _defineProperty(this, \"handlingChangeSemaphore\", 0);\n      _defineProperty(this, \"activationIndex\", 0);\n    }\n    scheduleFinishedHandlersCleanup() {\n      if (this.handlingChangeSemaphore === 0) {\n        this.cleanupFinishedHandlers();\n      }\n    }\n    cleanHandler(handler) {\n      handler.reset();\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_VALUE;\n    }\n    removeHandlerFromOrchestrator(handler) {\n      const indexInGestureHandlers = this.gestureHandlers.indexOf(handler);\n      const indexInAwaitingHandlers = this.awaitingHandlers.indexOf(handler);\n      if (indexInGestureHandlers >= 0) {\n        this.gestureHandlers.splice(indexInGestureHandlers, 1);\n      }\n      if (indexInAwaitingHandlers >= 0) {\n        this.awaitingHandlers.splice(indexInAwaitingHandlers, 1);\n        this.awaitingHandlersTags.delete(handler.handlerTag);\n      }\n    }\n    cleanupFinishedHandlers() {\n      const handlersToRemove = new Set();\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        const handler = this.gestureHandlers[i];\n        if (this.isFinished(handler.state) && !handler.awaiting) {\n          this.cleanHandler(handler);\n          handlersToRemove.add(handler);\n        }\n      }\n      this.gestureHandlers = this.gestureHandlers.filter(handler => !handlersToRemove.has(handler));\n    }\n    hasOtherHandlerToWaitFor(handler) {\n      const hasToWaitFor = otherHandler => {\n        return !this.isFinished(otherHandler.state) && this.shouldHandlerWaitForOther(handler, otherHandler);\n      };\n      return this.gestureHandlers.some(hasToWaitFor);\n    }\n    shouldBeCancelledByFinishedHandler(handler) {\n      const shouldBeCancelled = otherHandler => {\n        return this.shouldHandlerWaitForOther(handler, otherHandler) && otherHandler.state === _State.State.END;\n      };\n      return this.gestureHandlers.some(shouldBeCancelled);\n    }\n    tryActivate(handler) {\n      if (this.shouldBeCancelledByFinishedHandler(handler)) {\n        handler.cancel();\n        return;\n      }\n      if (this.hasOtherHandlerToWaitFor(handler)) {\n        this.addAwaitingHandler(handler);\n        return;\n      }\n      const handlerState = handler.state;\n      if (handlerState === _State.State.CANCELLED || handlerState === _State.State.FAILED) {\n        return;\n      }\n      if (this.shouldActivate(handler)) {\n        this.makeActive(handler);\n        return;\n      }\n      if (handlerState === _State.State.ACTIVE) {\n        handler.fail();\n        return;\n      }\n      if (handlerState === _State.State.BEGAN) {\n        handler.cancel();\n      }\n    }\n    shouldActivate(handler) {\n      const shouldBeCancelledBy = otherHandler => {\n        return this.shouldHandlerBeCancelledBy(handler, otherHandler);\n      };\n      return !this.gestureHandlers.some(shouldBeCancelledBy);\n    }\n    cleanupAwaitingHandlers(handler) {\n      const shouldWait = otherHandler => {\n        return !otherHandler.awaiting && this.shouldHandlerWaitForOther(otherHandler, handler);\n      };\n      for (const otherHandler of this.awaitingHandlers) {\n        if (shouldWait(otherHandler)) {\n          this.cleanHandler(otherHandler);\n          this.awaitingHandlersTags.delete(otherHandler.handlerTag);\n        }\n      }\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => this.awaitingHandlersTags.has(otherHandler.handlerTag));\n    }\n    onHandlerStateChange(handler, newState, oldState, sendIfDisabled) {\n      if (!handler.enabled && !sendIfDisabled) {\n        return;\n      }\n      this.handlingChangeSemaphore += 1;\n      if (this.isFinished(newState)) {\n        for (const otherHandler of this.awaitingHandlers) {\n          if (!this.shouldHandlerWaitForOther(otherHandler, handler) || !this.awaitingHandlersTags.has(otherHandler.handlerTag)) {\n            continue;\n          }\n          if (newState !== _State.State.END) {\n            this.tryActivate(otherHandler);\n            continue;\n          }\n          otherHandler.cancel();\n          if (otherHandler.state === _State.State.END) {\n            // Handle edge case, where discrete gestures end immediately after activation thus\n            // their state is set to END and when the gesture they are waiting for activates they\n            // should be cancelled, however `cancel` was never sent as gestures were already in the END state.\n            // Send synthetic BEGAN -> CANCELLED to properly handle JS logic\n            otherHandler.sendEvent(_State.State.CANCELLED, _State.State.BEGAN);\n          }\n          otherHandler.awaiting = false;\n        }\n      }\n      if (newState === _State.State.ACTIVE) {\n        this.tryActivate(handler);\n      } else if (oldState === _State.State.ACTIVE || oldState === _State.State.END) {\n        if (handler.active) {\n          handler.sendEvent(newState, oldState);\n        } else if (oldState === _State.State.ACTIVE && (newState === _State.State.CANCELLED || newState === _State.State.FAILED)) {\n          handler.sendEvent(newState, _State.State.BEGAN);\n        }\n      } else if (oldState !== _State.State.UNDETERMINED || newState !== _State.State.CANCELLED) {\n        handler.sendEvent(newState, oldState);\n      }\n      this.handlingChangeSemaphore -= 1;\n      this.scheduleFinishedHandlersCleanup();\n      if (!this.awaitingHandlers.includes(handler)) {\n        this.cleanupAwaitingHandlers(handler);\n      }\n    }\n    makeActive(handler) {\n      const currentState = handler.state;\n      handler.active = true;\n      handler.shouldResetProgress = true;\n      handler.activationIndex = this.activationIndex++;\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        if (this.shouldHandlerBeCancelledBy(this.gestureHandlers[i], handler)) {\n          this.gestureHandlers[i].cancel();\n        }\n      }\n      for (const otherHandler of this.awaitingHandlers) {\n        if (this.shouldHandlerBeCancelledBy(otherHandler, handler)) {\n          otherHandler.awaiting = false;\n        }\n      }\n      handler.sendEvent(_State.State.ACTIVE, _State.State.BEGAN);\n      if (currentState !== _State.State.ACTIVE) {\n        handler.sendEvent(_State.State.END, _State.State.ACTIVE);\n        if (currentState !== _State.State.END) {\n          handler.sendEvent(_State.State.UNDETERMINED, _State.State.END);\n        }\n      }\n      if (!handler.awaiting) {\n        return;\n      }\n      handler.awaiting = false;\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => otherHandler !== handler);\n    }\n    addAwaitingHandler(handler) {\n      if (this.awaitingHandlers.includes(handler)) {\n        return;\n      }\n      this.awaitingHandlers.push(handler);\n      this.awaitingHandlersTags.add(handler.handlerTag);\n      handler.awaiting = true;\n      handler.activationIndex = this.activationIndex++;\n    }\n    recordHandlerIfNotPresent(handler) {\n      if (this.gestureHandlers.includes(handler)) {\n        return;\n      }\n      this.gestureHandlers.push(handler);\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_SAFE_INTEGER;\n    }\n    shouldHandlerWaitForOther(handler, otherHandler) {\n      return handler !== otherHandler && (handler.shouldWaitForHandlerFailure(otherHandler) || otherHandler.shouldRequireToWaitForFailure(handler));\n    }\n    canRunSimultaneously(gh1, gh2) {\n      return gh1 === gh2 || gh1.shouldRecognizeSimultaneously(gh2) || gh2.shouldRecognizeSimultaneously(gh1);\n    }\n    shouldHandlerBeCancelledBy(handler, otherHandler) {\n      if (this.canRunSimultaneously(handler, otherHandler)) {\n        return false;\n      }\n      if (handler.awaiting || handler.state === _State.State.ACTIVE) {\n        // For now it always returns false\n        return handler.shouldBeCancelledByOther(otherHandler);\n      }\n      const handlerPointers = handler.getTrackedPointersID();\n      const otherPointers = otherHandler.getTrackedPointersID();\n      if (!PointerTracker.default.shareCommonPointers(handlerPointers, otherPointers) && handler.delegate.view !== otherHandler.delegate.view) {\n        return this.checkOverlap(handler, otherHandler);\n      }\n      return true;\n    }\n    checkOverlap(handler, otherHandler) {\n      // If handlers don't have common pointers, default return value is false.\n      // However, if at least on pointer overlaps with both handlers, we return true\n      // This solves issue in overlapping parents example\n      // TODO: Find better way to handle that issue, for example by activation order and handler cancelling\n      const isPointerWithinBothBounds = pointer => {\n        const point = handler.tracker.getLastAbsoluteCoords(pointer);\n        return handler.delegate.isPointerInBounds(point) && otherHandler.delegate.isPointerInBounds(point);\n      };\n      return handler.getTrackedPointersID().some(isPointerWithinBothBounds);\n    }\n    isFinished(state) {\n      return state === _State.State.END || state === _State.State.FAILED || state === _State.State.CANCELLED;\n    } // This function is called when handler receives touchdown event\n    // If handler is using mouse or pen as a pointer and any handler receives touch event,\n    // mouse/pen event dissappears - it doesn't send onPointerCancel nor onPointerUp (and others)\n    // This became a problem because handler was left at active state without any signal to end or fail\n    // To handle this, when new touch event is received, we loop through active handlers and check which type of\n    // pointer they're using. If there are any handler with mouse/pen as a pointer, we cancel them\n\n    cancelMouseAndPenGestures(currentHandler) {\n      this.gestureHandlers.forEach(handler => {\n        if (handler.pointerType !== _PointerType.PointerType.MOUSE && handler.pointerType !== _PointerType.PointerType.STYLUS) {\n          return;\n        }\n        if (handler !== currentHandler) {\n          handler.cancel();\n        } else {\n          // Handler that received touch event should have its pointer tracker reset\n          // This allows handler to smoothly change from mouse/pen to touch\n          // The drawback is, that when we try to use mouse/pen one more time, it doesn't send onPointerDown at the first time\n          // so it is required to click two times to get handler to work\n          //\n          // However, handler will receive manually created onPointerEnter that is triggered in EventManager in onPointerMove method.\n          // There may be possibility to use that fact to make handler respond properly to first mouse click\n          handler.tracker.resetTracker();\n        }\n      });\n    }\n    static get instance() {\n      if (!GestureHandlerOrchestrator._instance) {\n        GestureHandlerOrchestrator._instance = new GestureHandlerOrchestrator();\n      }\n      return GestureHandlerOrchestrator._instance;\n    }\n  }\n  _defineProperty(GestureHandlerOrchestrator, \"_instance\", void 0);\n});","lineCount":289,"map":[[12,2,6,15,"Object"],[12,8,6,15],[12,9,6,15,"defineProperty"],[12,23,6,15],[12,24,6,15,"exports"],[12,31,6,15],[13,4,6,15,"enumerable"],[13,14,6,15],[14,4,6,15,"get"],[14,7,6,15],[14,18,6,15,"get"],[14,19,6,15],[15,6,6,15],[15,13,6,15,"GestureHandlerOrchestrator"],[15,39,6,15],[16,4,6,15],[17,2,6,15],[18,2,3,0],[18,6,3,0,"_PointerType"],[18,18,3,0],[18,21,3,0,"require"],[18,28,3,0],[18,29,3,0,"_dependencyMap"],[18,43,3,0],[19,2,4,0],[19,6,4,0,"_State"],[19,12,4,0],[19,15,4,0,"require"],[19,22,4,0],[19,23,4,0,"_dependencyMap"],[19,37,4,0],[20,2,5,0],[20,6,5,0,"_PointerTracker"],[20,21,5,0],[20,24,5,0,"require"],[20,31,5,0],[20,32,5,0,"_dependencyMap"],[20,46,5,0],[21,2,5,0],[21,6,5,0,"PointerTracker"],[21,20,5,0],[21,23,5,0,"_interopDefault"],[21,38,5,0],[21,39,5,0,"_PointerTracker"],[21,54,5,0],[22,2,1,0],[22,11,1,9,"_defineProperty"],[22,26,1,24,"_defineProperty"],[22,27,1,25,"obj"],[22,30,1,28],[22,32,1,30,"key"],[22,35,1,33],[22,37,1,35,"value"],[22,42,1,40],[22,44,1,42],[23,4,1,44],[23,8,1,48,"key"],[23,11,1,51],[23,15,1,55,"obj"],[23,18,1,58],[23,20,1,60],[24,6,1,62,"Object"],[24,12,1,68],[24,13,1,69,"defineProperty"],[24,27,1,83],[24,28,1,84,"obj"],[24,31,1,87],[24,33,1,89,"key"],[24,36,1,92],[24,38,1,94],[25,8,1,96,"value"],[25,13,1,101],[25,15,1,103,"value"],[25,20,1,108],[26,8,1,110,"enumerable"],[26,18,1,120],[26,20,1,122],[26,24,1,126],[27,8,1,128,"configurable"],[27,20,1,140],[27,22,1,142],[27,26,1,146],[28,8,1,148,"writable"],[28,16,1,156],[28,18,1,158],[29,6,1,163],[29,7,1,164],[29,8,1,165],[30,4,1,167],[30,5,1,168],[30,11,1,174],[31,6,1,176,"obj"],[31,9,1,179],[31,10,1,180,"key"],[31,13,1,183],[31,14,1,184],[31,17,1,187,"value"],[31,22,1,192],[32,4,1,194],[33,4,1,196],[33,11,1,203,"obj"],[33,14,1,206],[34,2,1,208],[35,2,6,15],[35,8,6,21,"GestureHandlerOrchestrator"],[35,34,6,47],[35,35,6,48],[36,4,7,2],[37,4,8,2],[38,4,9,2,"constructor"],[38,15,9,13,"constructor"],[38,16,9,13],[38,18,9,16],[39,6,10,4,"_defineProperty"],[39,21,10,19],[39,22,10,20],[39,26,10,24],[39,28,10,26],[39,45,10,43],[39,47,10,45],[39,49,10,47],[39,50,10,48],[40,6,12,4,"_defineProperty"],[40,21,12,19],[40,22,12,20],[40,26,12,24],[40,28,12,26],[40,46,12,44],[40,48,12,46],[40,50,12,48],[40,51,12,49],[41,6,14,4,"_defineProperty"],[41,21,14,19],[41,22,14,20],[41,26,14,24],[41,28,14,26],[41,50,14,48],[41,52,14,50],[41,56,14,54,"Set"],[41,59,14,57],[41,60,14,58],[41,61,14,59],[41,62,14,60],[42,6,16,4,"_defineProperty"],[42,21,16,19],[42,22,16,20],[42,26,16,24],[42,28,16,26],[42,53,16,51],[42,55,16,53],[42,56,16,54],[42,57,16,55],[43,6,18,4,"_defineProperty"],[43,21,18,19],[43,22,18,20],[43,26,18,24],[43,28,18,26],[43,45,18,43],[43,47,18,45],[43,48,18,46],[43,49,18,47],[44,4,19,2],[45,4,21,2,"scheduleFinishedHandlersCleanup"],[45,35,21,33,"scheduleFinishedHandlersCleanup"],[45,36,21,33],[45,38,21,36],[46,6,22,4],[46,10,22,8],[46,14,22,12],[46,15,22,13,"handlingChangeSemaphore"],[46,38,22,36],[46,43,22,41],[46,44,22,42],[46,46,22,44],[47,8,23,6],[47,12,23,10],[47,13,23,11,"cleanupFinishedHandlers"],[47,36,23,34],[47,37,23,35],[47,38,23,36],[48,6,24,4],[49,4,25,2],[50,4,27,2,"cleanHandler"],[50,16,27,14,"cleanHandler"],[50,17,27,15,"handler"],[50,24,27,22],[50,26,27,24],[51,6,28,4,"handler"],[51,13,28,11],[51,14,28,12,"reset"],[51,19,28,17],[51,20,28,18],[51,21,28,19],[52,6,29,4,"handler"],[52,13,29,11],[52,14,29,12,"active"],[52,20,29,18],[52,23,29,21],[52,28,29,26],[53,6,30,4,"handler"],[53,13,30,11],[53,14,30,12,"awaiting"],[53,22,30,20],[53,25,30,23],[53,30,30,28],[54,6,31,4,"handler"],[54,13,31,11],[54,14,31,12,"activationIndex"],[54,29,31,27],[54,32,31,30,"Number"],[54,38,31,36],[54,39,31,37,"MAX_VALUE"],[54,48,31,46],[55,4,32,2],[56,4,34,2,"removeHandlerFromOrchestrator"],[56,33,34,31,"removeHandlerFromOrchestrator"],[56,34,34,32,"handler"],[56,41,34,39],[56,43,34,41],[57,6,35,4],[57,12,35,10,"indexInGestureHandlers"],[57,34,35,32],[57,37,35,35],[57,41,35,39],[57,42,35,40,"gestureHandlers"],[57,57,35,55],[57,58,35,56,"indexOf"],[57,65,35,63],[57,66,35,64,"handler"],[57,73,35,71],[57,74,35,72],[58,6,36,4],[58,12,36,10,"indexInAwaitingHandlers"],[58,35,36,33],[58,38,36,36],[58,42,36,40],[58,43,36,41,"awaitingHandlers"],[58,59,36,57],[58,60,36,58,"indexOf"],[58,67,36,65],[58,68,36,66,"handler"],[58,75,36,73],[58,76,36,74],[59,6,38,4],[59,10,38,8,"indexInGestureHandlers"],[59,32,38,30],[59,36,38,34],[59,37,38,35],[59,39,38,37],[60,8,39,6],[60,12,39,10],[60,13,39,11,"gestureHandlers"],[60,28,39,26],[60,29,39,27,"splice"],[60,35,39,33],[60,36,39,34,"indexInGestureHandlers"],[60,58,39,56],[60,60,39,58],[60,61,39,59],[60,62,39,60],[61,6,40,4],[62,6,42,4],[62,10,42,8,"indexInAwaitingHandlers"],[62,33,42,31],[62,37,42,35],[62,38,42,36],[62,40,42,38],[63,8,43,6],[63,12,43,10],[63,13,43,11,"awaitingHandlers"],[63,29,43,27],[63,30,43,28,"splice"],[63,36,43,34],[63,37,43,35,"indexInAwaitingHandlers"],[63,60,43,58],[63,62,43,60],[63,63,43,61],[63,64,43,62],[64,8,44,6],[64,12,44,10],[64,13,44,11,"awaitingHandlersTags"],[64,33,44,31],[64,34,44,32,"delete"],[64,40,44,38],[64,41,44,39,"handler"],[64,48,44,46],[64,49,44,47,"handlerTag"],[64,59,44,57],[64,60,44,58],[65,6,45,4],[66,4,46,2],[67,4,48,2,"cleanupFinishedHandlers"],[67,27,48,25,"cleanupFinishedHandlers"],[67,28,48,25],[67,30,48,28],[68,6,49,4],[68,12,49,10,"handlersToRemove"],[68,28,49,26],[68,31,49,29],[68,35,49,33,"Set"],[68,38,49,36],[68,39,49,37],[68,40,49,38],[69,6,51,4],[69,11,51,9],[69,15,51,13,"i"],[69,16,51,14],[69,19,51,17],[69,23,51,21],[69,24,51,22,"gestureHandlers"],[69,39,51,37],[69,40,51,38,"length"],[69,46,51,44],[69,49,51,47],[69,50,51,48],[69,52,51,50,"i"],[69,53,51,51],[69,57,51,55],[69,58,51,56],[69,60,51,58],[69,62,51,60,"i"],[69,63,51,61],[69,65,51,63],[70,8,52,6],[70,14,52,12,"handler"],[70,21,52,19],[70,24,52,22],[70,28,52,26],[70,29,52,27,"gestureHandlers"],[70,44,52,42],[70,45,52,43,"i"],[70,46,52,44],[70,47,52,45],[71,8,54,6],[71,12,54,10],[71,16,54,14],[71,17,54,15,"isFinished"],[71,27,54,25],[71,28,54,26,"handler"],[71,35,54,33],[71,36,54,34,"state"],[71,41,54,39],[71,42,54,40],[71,46,54,44],[71,47,54,45,"handler"],[71,54,54,52],[71,55,54,53,"awaiting"],[71,63,54,61],[71,65,54,63],[72,10,55,8],[72,14,55,12],[72,15,55,13,"cleanHandler"],[72,27,55,25],[72,28,55,26,"handler"],[72,35,55,33],[72,36,55,34],[73,10,56,8,"handlersToRemove"],[73,26,56,24],[73,27,56,25,"add"],[73,30,56,28],[73,31,56,29,"handler"],[73,38,56,36],[73,39,56,37],[74,8,57,6],[75,6,58,4],[76,6,60,4],[76,10,60,8],[76,11,60,9,"gestureHandlers"],[76,26,60,24],[76,29,60,27],[76,33,60,31],[76,34,60,32,"gestureHandlers"],[76,49,60,47],[76,50,60,48,"filter"],[76,56,60,54],[76,57,60,55,"handler"],[76,64,60,62],[76,68,60,66],[76,69,60,67,"handlersToRemove"],[76,85,60,83],[76,86,60,84,"has"],[76,89,60,87],[76,90,60,88,"handler"],[76,97,60,95],[76,98,60,96],[76,99,60,97],[77,4,61,2],[78,4,63,2,"hasOtherHandlerToWaitFor"],[78,28,63,26,"hasOtherHandlerToWaitFor"],[78,29,63,27,"handler"],[78,36,63,34],[78,38,63,36],[79,6,64,4],[79,12,64,10,"hasToWaitFor"],[79,24,64,22],[79,27,64,25,"otherHandler"],[79,39,64,37],[79,43,64,41],[80,8,65,6],[80,15,65,13],[80,16,65,14],[80,20,65,18],[80,21,65,19,"isFinished"],[80,31,65,29],[80,32,65,30,"otherHandler"],[80,44,65,42],[80,45,65,43,"state"],[80,50,65,48],[80,51,65,49],[80,55,65,53],[80,59,65,57],[80,60,65,58,"shouldHandlerWaitForOther"],[80,85,65,83],[80,86,65,84,"handler"],[80,93,65,91],[80,95,65,93,"otherHandler"],[80,107,65,105],[80,108,65,106],[81,6,66,4],[81,7,66,5],[82,6,68,4],[82,13,68,11],[82,17,68,15],[82,18,68,16,"gestureHandlers"],[82,33,68,31],[82,34,68,32,"some"],[82,38,68,36],[82,39,68,37,"hasToWaitFor"],[82,51,68,49],[82,52,68,50],[83,4,69,2],[84,4,71,2,"shouldBeCancelledByFinishedHandler"],[84,38,71,36,"shouldBeCancelledByFinishedHandler"],[84,39,71,37,"handler"],[84,46,71,44],[84,48,71,46],[85,6,72,4],[85,12,72,10,"shouldBeCancelled"],[85,29,72,27],[85,32,72,30,"otherHandler"],[85,44,72,42],[85,48,72,46],[86,8,73,6],[86,15,73,13],[86,19,73,17],[86,20,73,18,"shouldHandlerWaitForOther"],[86,45,73,43],[86,46,73,44,"handler"],[86,53,73,51],[86,55,73,53,"otherHandler"],[86,67,73,65],[86,68,73,66],[86,72,73,70,"otherHandler"],[86,84,73,82],[86,85,73,83,"state"],[86,90,73,88],[86,95,73,93,"State"],[86,101,73,98],[86,102,73,98,"State"],[86,107,73,98],[86,108,73,99,"END"],[86,111,73,102],[87,6,74,4],[87,7,74,5],[88,6,76,4],[88,13,76,11],[88,17,76,15],[88,18,76,16,"gestureHandlers"],[88,33,76,31],[88,34,76,32,"some"],[88,38,76,36],[88,39,76,37,"shouldBeCancelled"],[88,56,76,54],[88,57,76,55],[89,4,77,2],[90,4,79,2,"tryActivate"],[90,15,79,13,"tryActivate"],[90,16,79,14,"handler"],[90,23,79,21],[90,25,79,23],[91,6,80,4],[91,10,80,8],[91,14,80,12],[91,15,80,13,"shouldBeCancelledByFinishedHandler"],[91,49,80,47],[91,50,80,48,"handler"],[91,57,80,55],[91,58,80,56],[91,60,80,58],[92,8,81,6,"handler"],[92,15,81,13],[92,16,81,14,"cancel"],[92,22,81,20],[92,23,81,21],[92,24,81,22],[93,8,82,6],[94,6,83,4],[95,6,85,4],[95,10,85,8],[95,14,85,12],[95,15,85,13,"hasOtherHandlerToWaitFor"],[95,39,85,37],[95,40,85,38,"handler"],[95,47,85,45],[95,48,85,46],[95,50,85,48],[96,8,86,6],[96,12,86,10],[96,13,86,11,"addAwaitingHandler"],[96,31,86,29],[96,32,86,30,"handler"],[96,39,86,37],[96,40,86,38],[97,8,87,6],[98,6,88,4],[99,6,90,4],[99,12,90,10,"handlerState"],[99,24,90,22],[99,27,90,25,"handler"],[99,34,90,32],[99,35,90,33,"state"],[99,40,90,38],[100,6,92,4],[100,10,92,8,"handlerState"],[100,22,92,20],[100,27,92,25,"State"],[100,33,92,30],[100,34,92,30,"State"],[100,39,92,30],[100,40,92,31,"CANCELLED"],[100,49,92,40],[100,53,92,44,"handlerState"],[100,65,92,56],[100,70,92,61,"State"],[100,76,92,66],[100,77,92,66,"State"],[100,82,92,66],[100,83,92,67,"FAILED"],[100,89,92,73],[100,91,92,75],[101,8,93,6],[102,6,94,4],[103,6,96,4],[103,10,96,8],[103,14,96,12],[103,15,96,13,"shouldActivate"],[103,29,96,27],[103,30,96,28,"handler"],[103,37,96,35],[103,38,96,36],[103,40,96,38],[104,8,97,6],[104,12,97,10],[104,13,97,11,"makeActive"],[104,23,97,21],[104,24,97,22,"handler"],[104,31,97,29],[104,32,97,30],[105,8,98,6],[106,6,99,4],[107,6,101,4],[107,10,101,8,"handlerState"],[107,22,101,20],[107,27,101,25,"State"],[107,33,101,30],[107,34,101,30,"State"],[107,39,101,30],[107,40,101,31,"ACTIVE"],[107,46,101,37],[107,48,101,39],[108,8,102,6,"handler"],[108,15,102,13],[108,16,102,14,"fail"],[108,20,102,18],[108,21,102,19],[108,22,102,20],[109,8,103,6],[110,6,104,4],[111,6,106,4],[111,10,106,8,"handlerState"],[111,22,106,20],[111,27,106,25,"State"],[111,33,106,30],[111,34,106,30,"State"],[111,39,106,30],[111,40,106,31,"BEGAN"],[111,45,106,36],[111,47,106,38],[112,8,107,6,"handler"],[112,15,107,13],[112,16,107,14,"cancel"],[112,22,107,20],[112,23,107,21],[112,24,107,22],[113,6,108,4],[114,4,109,2],[115,4,111,2,"shouldActivate"],[115,18,111,16,"shouldActivate"],[115,19,111,17,"handler"],[115,26,111,24],[115,28,111,26],[116,6,112,4],[116,12,112,10,"shouldBeCancelledBy"],[116,31,112,29],[116,34,112,32,"otherHandler"],[116,46,112,44],[116,50,112,48],[117,8,113,6],[117,15,113,13],[117,19,113,17],[117,20,113,18,"shouldHandlerBeCancelledBy"],[117,46,113,44],[117,47,113,45,"handler"],[117,54,113,52],[117,56,113,54,"otherHandler"],[117,68,113,66],[117,69,113,67],[118,6,114,4],[118,7,114,5],[119,6,116,4],[119,13,116,11],[119,14,116,12],[119,18,116,16],[119,19,116,17,"gestureHandlers"],[119,34,116,32],[119,35,116,33,"some"],[119,39,116,37],[119,40,116,38,"shouldBeCancelledBy"],[119,59,116,57],[119,60,116,58],[120,4,117,2],[121,4,119,2,"cleanupAwaitingHandlers"],[121,27,119,25,"cleanupAwaitingHandlers"],[121,28,119,26,"handler"],[121,35,119,33],[121,37,119,35],[122,6,120,4],[122,12,120,10,"shouldWait"],[122,22,120,20],[122,25,120,23,"otherHandler"],[122,37,120,35],[122,41,120,39],[123,8,121,6],[123,15,121,13],[123,16,121,14,"otherHandler"],[123,28,121,26],[123,29,121,27,"awaiting"],[123,37,121,35],[123,41,121,39],[123,45,121,43],[123,46,121,44,"shouldHandlerWaitForOther"],[123,71,121,69],[123,72,121,70,"otherHandler"],[123,84,121,82],[123,86,121,84,"handler"],[123,93,121,91],[123,94,121,92],[124,6,122,4],[124,7,122,5],[125,6,124,4],[125,11,124,9],[125,17,124,15,"otherHandler"],[125,29,124,27],[125,33,124,31],[125,37,124,35],[125,38,124,36,"awaitingHandlers"],[125,54,124,52],[125,56,124,54],[126,8,125,6],[126,12,125,10,"shouldWait"],[126,22,125,20],[126,23,125,21,"otherHandler"],[126,35,125,33],[126,36,125,34],[126,38,125,36],[127,10,126,8],[127,14,126,12],[127,15,126,13,"cleanHandler"],[127,27,126,25],[127,28,126,26,"otherHandler"],[127,40,126,38],[127,41,126,39],[128,10,127,8],[128,14,127,12],[128,15,127,13,"awaitingHandlersTags"],[128,35,127,33],[128,36,127,34,"delete"],[128,42,127,40],[128,43,127,41,"otherHandler"],[128,55,127,53],[128,56,127,54,"handlerTag"],[128,66,127,64],[128,67,127,65],[129,8,128,6],[130,6,129,4],[131,6,131,4],[131,10,131,8],[131,11,131,9,"awaitingHandlers"],[131,27,131,25],[131,30,131,28],[131,34,131,32],[131,35,131,33,"awaitingHandlers"],[131,51,131,49],[131,52,131,50,"filter"],[131,58,131,56],[131,59,131,57,"otherHandler"],[131,71,131,69],[131,75,131,73],[131,79,131,77],[131,80,131,78,"awaitingHandlersTags"],[131,100,131,98],[131,101,131,99,"has"],[131,104,131,102],[131,105,131,103,"otherHandler"],[131,117,131,115],[131,118,131,116,"handlerTag"],[131,128,131,126],[131,129,131,127],[131,130,131,128],[132,4,132,2],[133,4,134,2,"onHandlerStateChange"],[133,24,134,22,"onHandlerStateChange"],[133,25,134,23,"handler"],[133,32,134,30],[133,34,134,32,"newState"],[133,42,134,40],[133,44,134,42,"oldState"],[133,52,134,50],[133,54,134,52,"sendIfDisabled"],[133,68,134,66],[133,70,134,68],[134,6,135,4],[134,10,135,8],[134,11,135,9,"handler"],[134,18,135,16],[134,19,135,17,"enabled"],[134,26,135,24],[134,30,135,28],[134,31,135,29,"sendIfDisabled"],[134,45,135,43],[134,47,135,45],[135,8,136,6],[136,6,137,4],[137,6,139,4],[137,10,139,8],[137,11,139,9,"handlingChangeSemaphore"],[137,34,139,32],[137,38,139,36],[137,39,139,37],[138,6,141,4],[138,10,141,8],[138,14,141,12],[138,15,141,13,"isFinished"],[138,25,141,23],[138,26,141,24,"newState"],[138,34,141,32],[138,35,141,33],[138,37,141,35],[139,8,142,6],[139,13,142,11],[139,19,142,17,"otherHandler"],[139,31,142,29],[139,35,142,33],[139,39,142,37],[139,40,142,38,"awaitingHandlers"],[139,56,142,54],[139,58,142,56],[140,10,143,8],[140,14,143,12],[140,15,143,13],[140,19,143,17],[140,20,143,18,"shouldHandlerWaitForOther"],[140,45,143,43],[140,46,143,44,"otherHandler"],[140,58,143,56],[140,60,143,58,"handler"],[140,67,143,65],[140,68,143,66],[140,72,143,70],[140,73,143,71],[140,77,143,75],[140,78,143,76,"awaitingHandlersTags"],[140,98,143,96],[140,99,143,97,"has"],[140,102,143,100],[140,103,143,101,"otherHandler"],[140,115,143,113],[140,116,143,114,"handlerTag"],[140,126,143,124],[140,127,143,125],[140,129,143,127],[141,12,144,10],[142,10,145,8],[143,10,147,8],[143,14,147,12,"newState"],[143,22,147,20],[143,27,147,25,"State"],[143,33,147,30],[143,34,147,30,"State"],[143,39,147,30],[143,40,147,31,"END"],[143,43,147,34],[143,45,147,36],[144,12,148,10],[144,16,148,14],[144,17,148,15,"tryActivate"],[144,28,148,26],[144,29,148,27,"otherHandler"],[144,41,148,39],[144,42,148,40],[145,12,149,10],[146,10,150,8],[147,10,152,8,"otherHandler"],[147,22,152,20],[147,23,152,21,"cancel"],[147,29,152,27],[147,30,152,28],[147,31,152,29],[148,10,154,8],[148,14,154,12,"otherHandler"],[148,26,154,24],[148,27,154,25,"state"],[148,32,154,30],[148,37,154,35,"State"],[148,43,154,40],[148,44,154,40,"State"],[148,49,154,40],[148,50,154,41,"END"],[148,53,154,44],[148,55,154,46],[149,12,155,10],[150,12,156,10],[151,12,157,10],[152,12,158,10],[153,12,159,10,"otherHandler"],[153,24,159,22],[153,25,159,23,"sendEvent"],[153,34,159,32],[153,35,159,33,"State"],[153,41,159,38],[153,42,159,38,"State"],[153,47,159,38],[153,48,159,39,"CANCELLED"],[153,57,159,48],[153,59,159,50,"State"],[153,65,159,55],[153,66,159,55,"State"],[153,71,159,55],[153,72,159,56,"BEGAN"],[153,77,159,61],[153,78,159,62],[154,10,160,8],[155,10,162,8,"otherHandler"],[155,22,162,20],[155,23,162,21,"awaiting"],[155,31,162,29],[155,34,162,32],[155,39,162,37],[156,8,163,6],[157,6,164,4],[158,6,166,4],[158,10,166,8,"newState"],[158,18,166,16],[158,23,166,21,"State"],[158,29,166,26],[158,30,166,26,"State"],[158,35,166,26],[158,36,166,27,"ACTIVE"],[158,42,166,33],[158,44,166,35],[159,8,167,6],[159,12,167,10],[159,13,167,11,"tryActivate"],[159,24,167,22],[159,25,167,23,"handler"],[159,32,167,30],[159,33,167,31],[160,6,168,4],[160,7,168,5],[160,13,168,11],[160,17,168,15,"oldState"],[160,25,168,23],[160,30,168,28,"State"],[160,36,168,33],[160,37,168,33,"State"],[160,42,168,33],[160,43,168,34,"ACTIVE"],[160,49,168,40],[160,53,168,44,"oldState"],[160,61,168,52],[160,66,168,57,"State"],[160,72,168,62],[160,73,168,62,"State"],[160,78,168,62],[160,79,168,63,"END"],[160,82,168,66],[160,84,168,68],[161,8,169,6],[161,12,169,10,"handler"],[161,19,169,17],[161,20,169,18,"active"],[161,26,169,24],[161,28,169,26],[162,10,170,8,"handler"],[162,17,170,15],[162,18,170,16,"sendEvent"],[162,27,170,25],[162,28,170,26,"newState"],[162,36,170,34],[162,38,170,36,"oldState"],[162,46,170,44],[162,47,170,45],[163,8,171,6],[163,9,171,7],[163,15,171,13],[163,19,171,17,"oldState"],[163,27,171,25],[163,32,171,30,"State"],[163,38,171,35],[163,39,171,35,"State"],[163,44,171,35],[163,45,171,36,"ACTIVE"],[163,51,171,42],[163,56,171,47,"newState"],[163,64,171,55],[163,69,171,60,"State"],[163,75,171,65],[163,76,171,65,"State"],[163,81,171,65],[163,82,171,66,"CANCELLED"],[163,91,171,75],[163,95,171,79,"newState"],[163,103,171,87],[163,108,171,92,"State"],[163,114,171,97],[163,115,171,97,"State"],[163,120,171,97],[163,121,171,98,"FAILED"],[163,127,171,104],[163,128,171,105],[163,130,171,107],[164,10,172,8,"handler"],[164,17,172,15],[164,18,172,16,"sendEvent"],[164,27,172,25],[164,28,172,26,"newState"],[164,36,172,34],[164,38,172,36,"State"],[164,44,172,41],[164,45,172,41,"State"],[164,50,172,41],[164,51,172,42,"BEGAN"],[164,56,172,47],[164,57,172,48],[165,8,173,6],[166,6,174,4],[166,7,174,5],[166,13,174,11],[166,17,174,15,"oldState"],[166,25,174,23],[166,30,174,28,"State"],[166,36,174,33],[166,37,174,33,"State"],[166,42,174,33],[166,43,174,34,"UNDETERMINED"],[166,55,174,46],[166,59,174,50,"newState"],[166,67,174,58],[166,72,174,63,"State"],[166,78,174,68],[166,79,174,68,"State"],[166,84,174,68],[166,85,174,69,"CANCELLED"],[166,94,174,78],[166,96,174,80],[167,8,175,6,"handler"],[167,15,175,13],[167,16,175,14,"sendEvent"],[167,25,175,23],[167,26,175,24,"newState"],[167,34,175,32],[167,36,175,34,"oldState"],[167,44,175,42],[167,45,175,43],[168,6,176,4],[169,6,178,4],[169,10,178,8],[169,11,178,9,"handlingChangeSemaphore"],[169,34,178,32],[169,38,178,36],[169,39,178,37],[170,6,179,4],[170,10,179,8],[170,11,179,9,"scheduleFinishedHandlersCleanup"],[170,42,179,40],[170,43,179,41],[170,44,179,42],[171,6,181,4],[171,10,181,8],[171,11,181,9],[171,15,181,13],[171,16,181,14,"awaitingHandlers"],[171,32,181,30],[171,33,181,31,"includes"],[171,41,181,39],[171,42,181,40,"handler"],[171,49,181,47],[171,50,181,48],[171,52,181,50],[172,8,182,6],[172,12,182,10],[172,13,182,11,"cleanupAwaitingHandlers"],[172,36,182,34],[172,37,182,35,"handler"],[172,44,182,42],[172,45,182,43],[173,6,183,4],[174,4,184,2],[175,4,186,2,"makeActive"],[175,14,186,12,"makeActive"],[175,15,186,13,"handler"],[175,22,186,20],[175,24,186,22],[176,6,187,4],[176,12,187,10,"currentState"],[176,24,187,22],[176,27,187,25,"handler"],[176,34,187,32],[176,35,187,33,"state"],[176,40,187,38],[177,6,188,4,"handler"],[177,13,188,11],[177,14,188,12,"active"],[177,20,188,18],[177,23,188,21],[177,27,188,25],[178,6,189,4,"handler"],[178,13,189,11],[178,14,189,12,"shouldResetProgress"],[178,33,189,31],[178,36,189,34],[178,40,189,38],[179,6,190,4,"handler"],[179,13,190,11],[179,14,190,12,"activationIndex"],[179,29,190,27],[179,32,190,30],[179,36,190,34],[179,37,190,35,"activationIndex"],[179,52,190,50],[179,54,190,52],[180,6,192,4],[180,11,192,9],[180,15,192,13,"i"],[180,16,192,14],[180,19,192,17],[180,23,192,21],[180,24,192,22,"gestureHandlers"],[180,39,192,37],[180,40,192,38,"length"],[180,46,192,44],[180,49,192,47],[180,50,192,48],[180,52,192,50,"i"],[180,53,192,51],[180,57,192,55],[180,58,192,56],[180,60,192,58],[180,62,192,60,"i"],[180,63,192,61],[180,65,192,63],[181,8,193,6],[181,12,193,10],[181,16,193,14],[181,17,193,15,"shouldHandlerBeCancelledBy"],[181,43,193,41],[181,44,193,42],[181,48,193,46],[181,49,193,47,"gestureHandlers"],[181,64,193,62],[181,65,193,63,"i"],[181,66,193,64],[181,67,193,65],[181,69,193,67,"handler"],[181,76,193,74],[181,77,193,75],[181,79,193,77],[182,10,194,8],[182,14,194,12],[182,15,194,13,"gestureHandlers"],[182,30,194,28],[182,31,194,29,"i"],[182,32,194,30],[182,33,194,31],[182,34,194,32,"cancel"],[182,40,194,38],[182,41,194,39],[182,42,194,40],[183,8,195,6],[184,6,196,4],[185,6,198,4],[185,11,198,9],[185,17,198,15,"otherHandler"],[185,29,198,27],[185,33,198,31],[185,37,198,35],[185,38,198,36,"awaitingHandlers"],[185,54,198,52],[185,56,198,54],[186,8,199,6],[186,12,199,10],[186,16,199,14],[186,17,199,15,"shouldHandlerBeCancelledBy"],[186,43,199,41],[186,44,199,42,"otherHandler"],[186,56,199,54],[186,58,199,56,"handler"],[186,65,199,63],[186,66,199,64],[186,68,199,66],[187,10,200,8,"otherHandler"],[187,22,200,20],[187,23,200,21,"awaiting"],[187,31,200,29],[187,34,200,32],[187,39,200,37],[188,8,201,6],[189,6,202,4],[190,6,204,4,"handler"],[190,13,204,11],[190,14,204,12,"sendEvent"],[190,23,204,21],[190,24,204,22,"State"],[190,30,204,27],[190,31,204,27,"State"],[190,36,204,27],[190,37,204,28,"ACTIVE"],[190,43,204,34],[190,45,204,36,"State"],[190,51,204,41],[190,52,204,41,"State"],[190,57,204,41],[190,58,204,42,"BEGAN"],[190,63,204,47],[190,64,204,48],[191,6,206,4],[191,10,206,8,"currentState"],[191,22,206,20],[191,27,206,25,"State"],[191,33,206,30],[191,34,206,30,"State"],[191,39,206,30],[191,40,206,31,"ACTIVE"],[191,46,206,37],[191,48,206,39],[192,8,207,6,"handler"],[192,15,207,13],[192,16,207,14,"sendEvent"],[192,25,207,23],[192,26,207,24,"State"],[192,32,207,29],[192,33,207,29,"State"],[192,38,207,29],[192,39,207,30,"END"],[192,42,207,33],[192,44,207,35,"State"],[192,50,207,40],[192,51,207,40,"State"],[192,56,207,40],[192,57,207,41,"ACTIVE"],[192,63,207,47],[192,64,207,48],[193,8,209,6],[193,12,209,10,"currentState"],[193,24,209,22],[193,29,209,27,"State"],[193,35,209,32],[193,36,209,32,"State"],[193,41,209,32],[193,42,209,33,"END"],[193,45,209,36],[193,47,209,38],[194,10,210,8,"handler"],[194,17,210,15],[194,18,210,16,"sendEvent"],[194,27,210,25],[194,28,210,26,"State"],[194,34,210,31],[194,35,210,31,"State"],[194,40,210,31],[194,41,210,32,"UNDETERMINED"],[194,53,210,44],[194,55,210,46,"State"],[194,61,210,51],[194,62,210,51,"State"],[194,67,210,51],[194,68,210,52,"END"],[194,71,210,55],[194,72,210,56],[195,8,211,6],[196,6,212,4],[197,6,214,4],[197,10,214,8],[197,11,214,9,"handler"],[197,18,214,16],[197,19,214,17,"awaiting"],[197,27,214,25],[197,29,214,27],[198,8,215,6],[199,6,216,4],[200,6,218,4,"handler"],[200,13,218,11],[200,14,218,12,"awaiting"],[200,22,218,20],[200,25,218,23],[200,30,218,28],[201,6,219,4],[201,10,219,8],[201,11,219,9,"awaitingHandlers"],[201,27,219,25],[201,30,219,28],[201,34,219,32],[201,35,219,33,"awaitingHandlers"],[201,51,219,49],[201,52,219,50,"filter"],[201,58,219,56],[201,59,219,57,"otherHandler"],[201,71,219,69],[201,75,219,73,"otherHandler"],[201,87,219,85],[201,92,219,90,"handler"],[201,99,219,97],[201,100,219,98],[202,4,220,2],[203,4,222,2,"addAwaitingHandler"],[203,22,222,20,"addAwaitingHandler"],[203,23,222,21,"handler"],[203,30,222,28],[203,32,222,30],[204,6,223,4],[204,10,223,8],[204,14,223,12],[204,15,223,13,"awaitingHandlers"],[204,31,223,29],[204,32,223,30,"includes"],[204,40,223,38],[204,41,223,39,"handler"],[204,48,223,46],[204,49,223,47],[204,51,223,49],[205,8,224,6],[206,6,225,4],[207,6,227,4],[207,10,227,8],[207,11,227,9,"awaitingHandlers"],[207,27,227,25],[207,28,227,26,"push"],[207,32,227,30],[207,33,227,31,"handler"],[207,40,227,38],[207,41,227,39],[208,6,228,4],[208,10,228,8],[208,11,228,9,"awaitingHandlersTags"],[208,31,228,29],[208,32,228,30,"add"],[208,35,228,33],[208,36,228,34,"handler"],[208,43,228,41],[208,44,228,42,"handlerTag"],[208,54,228,52],[208,55,228,53],[209,6,229,4,"handler"],[209,13,229,11],[209,14,229,12,"awaiting"],[209,22,229,20],[209,25,229,23],[209,29,229,27],[210,6,230,4,"handler"],[210,13,230,11],[210,14,230,12,"activationIndex"],[210,29,230,27],[210,32,230,30],[210,36,230,34],[210,37,230,35,"activationIndex"],[210,52,230,50],[210,54,230,52],[211,4,231,2],[212,4,233,2,"recordHandlerIfNotPresent"],[212,29,233,27,"recordHandlerIfNotPresent"],[212,30,233,28,"handler"],[212,37,233,35],[212,39,233,37],[213,6,234,4],[213,10,234,8],[213,14,234,12],[213,15,234,13,"gestureHandlers"],[213,30,234,28],[213,31,234,29,"includes"],[213,39,234,37],[213,40,234,38,"handler"],[213,47,234,45],[213,48,234,46],[213,50,234,48],[214,8,235,6],[215,6,236,4],[216,6,238,4],[216,10,238,8],[216,11,238,9,"gestureHandlers"],[216,26,238,24],[216,27,238,25,"push"],[216,31,238,29],[216,32,238,30,"handler"],[216,39,238,37],[216,40,238,38],[217,6,239,4,"handler"],[217,13,239,11],[217,14,239,12,"active"],[217,20,239,18],[217,23,239,21],[217,28,239,26],[218,6,240,4,"handler"],[218,13,240,11],[218,14,240,12,"awaiting"],[218,22,240,20],[218,25,240,23],[218,30,240,28],[219,6,241,4,"handler"],[219,13,241,11],[219,14,241,12,"activationIndex"],[219,29,241,27],[219,32,241,30,"Number"],[219,38,241,36],[219,39,241,37,"MAX_SAFE_INTEGER"],[219,55,241,53],[220,4,242,2],[221,4,244,2,"shouldHandlerWaitForOther"],[221,29,244,27,"shouldHandlerWaitForOther"],[221,30,244,28,"handler"],[221,37,244,35],[221,39,244,37,"otherHandler"],[221,51,244,49],[221,53,244,51],[222,6,245,4],[222,13,245,11,"handler"],[222,20,245,18],[222,25,245,23,"otherHandler"],[222,37,245,35],[222,42,245,40,"handler"],[222,49,245,47],[222,50,245,48,"shouldWaitForHandlerFailure"],[222,77,245,75],[222,78,245,76,"otherHandler"],[222,90,245,88],[222,91,245,89],[222,95,245,93,"otherHandler"],[222,107,245,105],[222,108,245,106,"shouldRequireToWaitForFailure"],[222,137,245,135],[222,138,245,136,"handler"],[222,145,245,143],[222,146,245,144],[222,147,245,145],[223,4,246,2],[224,4,248,2,"canRunSimultaneously"],[224,24,248,22,"canRunSimultaneously"],[224,25,248,23,"gh1"],[224,28,248,26],[224,30,248,28,"gh2"],[224,33,248,31],[224,35,248,33],[225,6,249,4],[225,13,249,11,"gh1"],[225,16,249,14],[225,21,249,19,"gh2"],[225,24,249,22],[225,28,249,26,"gh1"],[225,31,249,29],[225,32,249,30,"shouldRecognizeSimultaneously"],[225,61,249,59],[225,62,249,60,"gh2"],[225,65,249,63],[225,66,249,64],[225,70,249,68,"gh2"],[225,73,249,71],[225,74,249,72,"shouldRecognizeSimultaneously"],[225,103,249,101],[225,104,249,102,"gh1"],[225,107,249,105],[225,108,249,106],[226,4,250,2],[227,4,252,2,"shouldHandlerBeCancelledBy"],[227,30,252,28,"shouldHandlerBeCancelledBy"],[227,31,252,29,"handler"],[227,38,252,36],[227,40,252,38,"otherHandler"],[227,52,252,50],[227,54,252,52],[228,6,253,4],[228,10,253,8],[228,14,253,12],[228,15,253,13,"canRunSimultaneously"],[228,35,253,33],[228,36,253,34,"handler"],[228,43,253,41],[228,45,253,43,"otherHandler"],[228,57,253,55],[228,58,253,56],[228,60,253,58],[229,8,254,6],[229,15,254,13],[229,20,254,18],[230,6,255,4],[231,6,257,4],[231,10,257,8,"handler"],[231,17,257,15],[231,18,257,16,"awaiting"],[231,26,257,24],[231,30,257,28,"handler"],[231,37,257,35],[231,38,257,36,"state"],[231,43,257,41],[231,48,257,46,"State"],[231,54,257,51],[231,55,257,51,"State"],[231,60,257,51],[231,61,257,52,"ACTIVE"],[231,67,257,58],[231,69,257,60],[232,8,258,6],[233,8,259,6],[233,15,259,13,"handler"],[233,22,259,20],[233,23,259,21,"shouldBeCancelledByOther"],[233,47,259,45],[233,48,259,46,"otherHandler"],[233,60,259,58],[233,61,259,59],[234,6,260,4],[235,6,262,4],[235,12,262,10,"handlerPointers"],[235,27,262,25],[235,30,262,28,"handler"],[235,37,262,35],[235,38,262,36,"getTrackedPointersID"],[235,58,262,56],[235,59,262,57],[235,60,262,58],[236,6,263,4],[236,12,263,10,"otherPointers"],[236,25,263,23],[236,28,263,26,"otherHandler"],[236,40,263,38],[236,41,263,39,"getTrackedPointersID"],[236,61,263,59],[236,62,263,60],[236,63,263,61],[237,6,265,4],[237,10,265,8],[237,11,265,9,"PointerTracker"],[237,25,265,23],[237,26,265,23,"default"],[237,33,265,23],[237,34,265,24,"shareCommonPointers"],[237,53,265,43],[237,54,265,44,"handlerPointers"],[237,69,265,59],[237,71,265,61,"otherPointers"],[237,84,265,74],[237,85,265,75],[237,89,265,79,"handler"],[237,96,265,86],[237,97,265,87,"delegate"],[237,105,265,95],[237,106,265,96,"view"],[237,110,265,100],[237,115,265,105,"otherHandler"],[237,127,265,117],[237,128,265,118,"delegate"],[237,136,265,126],[237,137,265,127,"view"],[237,141,265,131],[237,143,265,133],[238,8,266,6],[238,15,266,13],[238,19,266,17],[238,20,266,18,"checkOverlap"],[238,32,266,30],[238,33,266,31,"handler"],[238,40,266,38],[238,42,266,40,"otherHandler"],[238,54,266,52],[238,55,266,53],[239,6,267,4],[240,6,269,4],[240,13,269,11],[240,17,269,15],[241,4,270,2],[242,4,272,2,"checkOverlap"],[242,16,272,14,"checkOverlap"],[242,17,272,15,"handler"],[242,24,272,22],[242,26,272,24,"otherHandler"],[242,38,272,36],[242,40,272,38],[243,6,273,4],[244,6,274,4],[245,6,275,4],[246,6,276,4],[247,6,277,4],[247,12,277,10,"isPointerWithinBothBounds"],[247,37,277,35],[247,40,277,38,"pointer"],[247,47,277,45],[247,51,277,49],[248,8,278,6],[248,14,278,12,"point"],[248,19,278,17],[248,22,278,20,"handler"],[248,29,278,27],[248,30,278,28,"tracker"],[248,37,278,35],[248,38,278,36,"getLastAbsoluteCoords"],[248,59,278,57],[248,60,278,58,"pointer"],[248,67,278,65],[248,68,278,66],[249,8,279,6],[249,15,279,13,"handler"],[249,22,279,20],[249,23,279,21,"delegate"],[249,31,279,29],[249,32,279,30,"isPointerInBounds"],[249,49,279,47],[249,50,279,48,"point"],[249,55,279,53],[249,56,279,54],[249,60,279,58,"otherHandler"],[249,72,279,70],[249,73,279,71,"delegate"],[249,81,279,79],[249,82,279,80,"isPointerInBounds"],[249,99,279,97],[249,100,279,98,"point"],[249,105,279,103],[249,106,279,104],[250,6,280,4],[250,7,280,5],[251,6,282,4],[251,13,282,11,"handler"],[251,20,282,18],[251,21,282,19,"getTrackedPointersID"],[251,41,282,39],[251,42,282,40],[251,43,282,41],[251,44,282,42,"some"],[251,48,282,46],[251,49,282,47,"isPointerWithinBothBounds"],[251,74,282,72],[251,75,282,73],[252,4,283,2],[253,4,285,2,"isFinished"],[253,14,285,12,"isFinished"],[253,15,285,13,"state"],[253,20,285,18],[253,22,285,20],[254,6,286,4],[254,13,286,11,"state"],[254,18,286,16],[254,23,286,21,"State"],[254,29,286,26],[254,30,286,26,"State"],[254,35,286,26],[254,36,286,27,"END"],[254,39,286,30],[254,43,286,34,"state"],[254,48,286,39],[254,53,286,44,"State"],[254,59,286,49],[254,60,286,49,"State"],[254,65,286,49],[254,66,286,50,"FAILED"],[254,72,286,56],[254,76,286,60,"state"],[254,81,286,65],[254,86,286,70,"State"],[254,92,286,75],[254,93,286,75,"State"],[254,98,286,75],[254,99,286,76,"CANCELLED"],[254,108,286,85],[255,4,287,2],[255,5,287,3],[255,6,287,4],[256,4,288,2],[257,4,289,2],[258,4,290,2],[259,4,291,2],[260,4,292,2],[262,4,295,2,"cancelMouseAndPenGestures"],[262,29,295,27,"cancelMouseAndPenGestures"],[262,30,295,28,"currentHandler"],[262,44,295,42],[262,46,295,44],[263,6,296,4],[263,10,296,8],[263,11,296,9,"gestureHandlers"],[263,26,296,24],[263,27,296,25,"forEach"],[263,34,296,32],[263,35,296,33,"handler"],[263,42,296,40],[263,46,296,44],[264,8,297,6],[264,12,297,10,"handler"],[264,19,297,17],[264,20,297,18,"pointerType"],[264,31,297,29],[264,36,297,34,"PointerType"],[264,48,297,45],[264,49,297,45,"PointerType"],[264,60,297,45],[264,61,297,46,"MOUSE"],[264,66,297,51],[264,70,297,55,"handler"],[264,77,297,62],[264,78,297,63,"pointerType"],[264,89,297,74],[264,94,297,79,"PointerType"],[264,106,297,90],[264,107,297,90,"PointerType"],[264,118,297,90],[264,119,297,91,"STYLUS"],[264,125,297,97],[264,127,297,99],[265,10,298,8],[266,8,299,6],[267,8,301,6],[267,12,301,10,"handler"],[267,19,301,17],[267,24,301,22,"currentHandler"],[267,38,301,36],[267,40,301,38],[268,10,302,8,"handler"],[268,17,302,15],[268,18,302,16,"cancel"],[268,24,302,22],[268,25,302,23],[268,26,302,24],[269,8,303,6],[269,9,303,7],[269,15,303,13],[270,10,304,8],[271,10,305,8],[272,10,306,8],[273,10,307,8],[274,10,308,8],[275,10,309,8],[276,10,310,8],[277,10,311,8,"handler"],[277,17,311,15],[277,18,311,16,"tracker"],[277,25,311,23],[277,26,311,24,"resetTracker"],[277,38,311,36],[277,39,311,37],[277,40,311,38],[278,8,312,6],[279,6,313,4],[279,7,313,5],[279,8,313,6],[280,4,314,2],[281,4,316,2],[281,15,316,13,"instance"],[281,23,316,21,"instance"],[281,24,316,21],[281,26,316,24],[282,6,317,4],[282,10,317,8],[282,11,317,9,"GestureHandlerOrchestrator"],[282,37,317,35],[282,38,317,36,"_instance"],[282,47,317,45],[282,49,317,47],[283,8,318,6,"GestureHandlerOrchestrator"],[283,34,318,32],[283,35,318,33,"_instance"],[283,44,318,42],[283,47,318,45],[283,51,318,49,"GestureHandlerOrchestrator"],[283,77,318,75],[283,78,318,76],[283,79,318,77],[284,6,319,4],[285,6,321,4],[285,13,321,11,"GestureHandlerOrchestrator"],[285,39,321,37],[285,40,321,38,"_instance"],[285,49,321,47],[286,4,322,2],[287,2,324,0],[288,2,326,0,"_defineProperty"],[288,17,326,15],[288,18,326,16,"GestureHandlerOrchestrator"],[288,44,326,42],[288,46,326,44],[288,57,326,55],[288,59,326,57],[288,64,326,62],[288,65,326,63],[288,66,326,64],[289,0,326,65],[289,3]],"functionMap":{"names":["_defineProperty","<global>","GestureHandlerOrchestrator","constructor","scheduleFinishedHandlersCleanup","cleanHandler","removeHandlerFromOrchestrator","cleanupFinishedHandlers","gestureHandlers.filter$argument_0","hasOtherHandlerToWaitFor","hasToWaitFor","shouldBeCancelledByFinishedHandler","shouldBeCancelled","tryActivate","shouldActivate","shouldBeCancelledBy","cleanupAwaitingHandlers","shouldWait","awaitingHandlers.filter$argument_0","onHandlerStateChange","makeActive","addAwaitingHandler","recordHandlerIfNotPresent","shouldHandlerWaitForOther","canRunSimultaneously","shouldHandlerBeCancelledBy","checkOverlap","isPointerWithinBothBounds","isFinished","cancelMouseAndPenGestures","gestureHandlers.forEach$argument_0","get__instance"],"mappings":"AAA,iNC;eCK;ECG;GDU;EEE;GFI;EGE;GHK;EIE;GJY;EKE;uDCY,yCD;GLC;EOE;yBCC;KDE;GPG;ESE;8BCC;KDE;GTG;EWE;GX8B;EYE;gCCC;KDE;GZG;EcE;uBCC;KDE;yDES,sEF;GdC;EiBE;GjBkD;EkBE;yDFiC,wCE;GlBC;EmBE;GnBS;EoBE;GpBS;EqBE;GrBE;EsBE;GtBE;EuBE;GvBkB;EwBE;sCCK;KDG;GxBG;E0BE;G1BE;E2BQ;iCCC;KDiB;G3BC;E6BE;G7BM;CDE"},"hasCjsExports":false},"type":"js/module"}]}