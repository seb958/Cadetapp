{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":875},"end":{"line":34,"column":64,"index":939}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":940},"end":{"line":35,"column":77,"index":1017}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/node_modules/react-native-gesture-handler/src/handlers/createHandler.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNative = require(_dependencyMap[5], \"react-native\");\n  var _customDirectEventTypes = require(_dependencyMap[6], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = require(_dependencyMap[7], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[8], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[9], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[10], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[11], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[12], \"../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[13], \"../utils\");\n  var _ActionType = require(_dependencyMap[14], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[15], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[16], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[17], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[18], \"../mountRegistry\");\n  var _reactJsxDevRuntime = require(_dependencyMap[19], \"react/jsx-dev-runtime\");\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck.default)(this, Handler);\n        _this = (0, _callSuper.default)(this, Handler, [props]);\n        _this.handlerTag = -1;\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n          var ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits.default)(Handler, _React$Component);\n      return (0, _createClass.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n              this.setState(_ => ({\n                allowTouches\n              }));\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          if (_reactNative.Platform.OS !== 'web') {\n            (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n          }\n          RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _utils.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n          _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n\n        // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_PressabilityDebugView.PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 11\n            }, this));\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, _utils2.isTestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag,\n              enabled: this.props.enabled\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":450,"map":[[28,2,169,15,"Object"],[28,8,169,15],[28,9,169,15,"defineProperty"],[28,23,169,15],[28,24,169,15,"exports"],[28,31,169,15],[29,4,169,15,"enumerable"],[29,14,169,15],[30,4,169,15,"get"],[30,7,169,15],[30,18,169,15,"get"],[30,19,169,15],[31,6,169,15],[31,13,169,15,"createHandler"],[31,26,169,15],[32,4,169,15],[33,2,169,15],[34,2,572,1],[34,6,572,1,"_babelRuntimeHelpersClassCallCheck"],[34,40,572,1],[34,43,572,1,"require"],[34,50,572,1],[34,51,572,1,"_dependencyMap"],[34,65,572,1],[35,2,572,1],[35,6,572,1,"_classCallCheck"],[35,21,572,1],[35,24,572,1,"_interopDefault"],[35,39,572,1],[35,40,572,1,"_babelRuntimeHelpersClassCallCheck"],[35,74,572,1],[36,2,572,1],[36,6,572,1,"_babelRuntimeHelpersCreateClass"],[36,37,572,1],[36,40,572,1,"require"],[36,47,572,1],[36,48,572,1,"_dependencyMap"],[36,62,572,1],[37,2,572,1],[37,6,572,1,"_createClass"],[37,18,572,1],[37,21,572,1,"_interopDefault"],[37,36,572,1],[37,37,572,1,"_babelRuntimeHelpersCreateClass"],[37,68,572,1],[38,2,572,1],[38,6,572,1,"_babelRuntimeHelpersCallSuper"],[38,35,572,1],[38,38,572,1,"require"],[38,45,572,1],[38,46,572,1,"_dependencyMap"],[38,60,572,1],[39,2,572,1],[39,6,572,1,"_callSuper"],[39,16,572,1],[39,19,572,1,"_interopDefault"],[39,34,572,1],[39,35,572,1,"_babelRuntimeHelpersCallSuper"],[39,64,572,1],[40,2,572,1],[40,6,572,1,"_babelRuntimeHelpersInherits"],[40,34,572,1],[40,37,572,1,"require"],[40,44,572,1],[40,45,572,1,"_dependencyMap"],[40,59,572,1],[41,2,572,1],[41,6,572,1,"_inherits"],[41,15,572,1],[41,18,572,1,"_interopDefault"],[41,33,572,1],[41,34,572,1,"_babelRuntimeHelpersInherits"],[41,62,572,1],[42,2,1,0],[42,6,1,0,"_react"],[42,12,1,0],[42,15,1,0,"require"],[42,22,1,0],[42,23,1,0,"_dependencyMap"],[42,37,1,0],[43,2,1,0],[43,6,1,0,"React"],[43,11,1,0],[43,14,1,0,"_interopNamespace"],[43,31,1,0],[43,32,1,0,"_react"],[43,38,1,0],[44,2,2,0],[44,6,2,0,"_reactNative"],[44,18,2,0],[44,21,2,0,"require"],[44,28,2,0],[44,29,2,0,"_dependencyMap"],[44,43,2,0],[45,2,8,0],[45,6,8,0,"_customDirectEventTypes"],[45,29,8,0],[45,32,8,0,"require"],[45,39,8,0],[45,40,8,0,"_dependencyMap"],[45,54,8,0],[46,2,9,0],[46,6,9,0,"_RNGestureHandlerModule"],[46,29,9,0],[46,32,9,0,"require"],[46,39,9,0],[46,40,9,0,"_dependencyMap"],[46,54,9,0],[47,2,9,0],[47,6,9,0,"RNGestureHandlerModule"],[47,28,9,0],[47,31,9,0,"_interopDefault"],[47,46,9,0],[47,47,9,0,"_RNGestureHandlerModule"],[47,70,9,0],[48,2,10,0],[48,6,10,0,"_State"],[48,12,10,0],[48,15,10,0,"require"],[48,22,10,0],[48,23,10,0,"_dependencyMap"],[48,37,10,0],[49,2,11,0],[49,6,11,0,"_handlersRegistry"],[49,23,11,0],[49,26,11,0,"require"],[49,33,11,0],[49,34,11,0,"_dependencyMap"],[49,48,11,0],[50,2,16,0],[50,6,16,0,"_getNextHandlerTag"],[50,24,16,0],[50,27,16,0,"require"],[50,34,16,0],[50,35,16,0,"_dependencyMap"],[50,49,16,0],[51,2,23,0],[51,6,23,0,"_utils"],[51,12,23,0],[51,15,23,0,"require"],[51,22,23,0],[51,23,23,0,"_dependencyMap"],[51,37,23,0],[52,2,24,0],[52,6,24,0,"_findNodeHandle"],[52,21,24,0],[52,24,24,0,"require"],[52,31,24,0],[52,32,24,0,"_dependencyMap"],[52,46,24,0],[53,2,24,0],[53,6,24,0,"findNodeHandle"],[53,20,24,0],[53,23,24,0,"_interopDefault"],[53,38,24,0],[53,39,24,0,"_findNodeHandle"],[53,54,24,0],[54,2,26,0],[54,6,26,0,"_utils2"],[54,13,26,0],[54,16,26,0,"require"],[54,23,26,0],[54,24,26,0,"_dependencyMap"],[54,38,26,0],[55,2,33,0],[55,6,33,0,"_ActionType"],[55,17,33,0],[55,20,33,0,"require"],[55,27,33,0],[55,28,33,0,"_dependencyMap"],[55,42,33,0],[56,2,34,0],[56,6,34,0,"_PressabilityDebugView"],[56,28,34,0],[56,31,34,0,"require"],[56,38,34,0],[56,39,34,0,"_dependencyMap"],[56,53,34,0],[57,2,35,0],[57,6,35,0,"_GestureHandlerRootViewContext"],[57,36,35,0],[57,39,35,0,"require"],[57,46,35,0],[57,47,35,0,"_dependencyMap"],[57,61,35,0],[58,2,35,0],[58,6,35,0,"GestureHandlerRootViewContext"],[58,35,35,0],[58,38,35,0,"_interopDefault"],[58,53,35,0],[58,54,35,0,"_GestureHandlerRootViewContext"],[58,84,35,0],[59,2,36,0],[59,6,36,0,"_ghQueueMicrotask"],[59,23,36,0],[59,26,36,0,"require"],[59,33,36,0],[59,34,36,0,"_dependencyMap"],[59,48,36,0],[60,2,37,0],[60,6,37,0,"_mountRegistry"],[60,20,37,0],[60,23,37,0,"require"],[60,30,37,0],[60,31,37,0,"_dependencyMap"],[60,45,37,0],[61,2,37,49],[61,6,37,49,"_reactJsxDevRuntime"],[61,25,37,49],[61,28,37,49,"require"],[61,35,37,49],[61,36,37,49,"_dependencyMap"],[61,50,37,49],[62,2,40,0],[62,6,40,6,"UIManagerAny"],[62,18,40,18],[62,21,40,21,"UIManager"],[62,33,40,30],[62,34,40,30,"UIManager"],[62,43,40,37],[63,2,42,0,"customDirectEventTypes"],[63,25,42,22],[63,26,42,22,"customDirectEventTypes"],[63,48,42,22],[63,49,42,23,"topGestureHandlerEvent"],[63,71,42,45],[63,74,42,48],[64,4,43,2,"registrationName"],[64,20,43,18],[64,22,43,20],[65,2,44,0],[65,3,44,1],[66,2,46,0],[66,6,46,6,"customGHEventsConfigFabricAndroid"],[66,39,46,39],[66,42,46,42],[67,4,47,2,"topOnGestureHandlerEvent"],[67,28,47,26],[67,30,47,28],[68,6,47,30,"registrationName"],[68,22,47,46],[68,24,47,48],[69,4,47,72],[69,5,47,73],[70,4,48,2,"topOnGestureHandlerStateChange"],[70,34,48,32],[70,36,48,34],[71,6,49,4,"registrationName"],[71,22,49,20],[71,24,49,22],[72,4,50,2],[73,2,51,0],[73,3,51,1],[74,2,53,0],[74,6,53,6,"customGHEventsConfig"],[74,26,53,26],[74,29,53,29],[75,4,54,2,"onGestureHandlerEvent"],[75,25,54,23],[75,27,54,25],[76,6,54,27,"registrationName"],[76,22,54,43],[76,24,54,45],[77,4,54,69],[77,5,54,70],[78,4,55,2,"onGestureHandlerStateChange"],[78,31,55,29],[78,33,55,31],[79,6,56,4,"registrationName"],[79,22,56,20],[79,24,56,22],[80,4,57,2],[80,5,57,3],[81,4,59,2],[82,4,60,2],[83,4,61,2],[84,4,62,2],[85,4,63,2],[86,4,64,2],[87,4,65,2],[88,4,66,2],[89,4,67,2],[89,8,67,6],[89,12,67,6,"isFabric"],[89,19,67,14],[89,20,67,14,"isFabric"],[89,28,67,14],[89,30,67,15],[89,31,67,16],[89,35,68,4,"Platform"],[89,47,68,12],[89,48,68,12,"Platform"],[89,56,68,12],[89,57,68,13,"OS"],[89,59,68,15],[89,64,68,20],[89,73,68,29],[89,77,69,4,"customGHEventsConfigFabricAndroid"],[89,110,69,37],[90,2,70,0],[90,3,70,1],[92,2,72,0],[93,2,73,0],[94,2,74,0],[95,2,75,0],[96,2,76,0,"UIManagerAny"],[96,14,76,12],[96,15,76,13,"genericDirectEventTypes"],[96,38,76,36],[96,41,76,39],[97,4,77,2],[97,7,77,5,"UIManagerAny"],[97,19,77,17],[97,20,77,18,"genericDirectEventTypes"],[97,43,77,41],[98,4,78,2],[98,7,78,5,"customGHEventsConfig"],[99,2,79,0],[99,3,79,1],[100,2,81,0],[100,6,81,6,"UIManagerConstants"],[100,24,81,24],[100,27,81,27,"UIManagerAny"],[100,39,81,39],[100,40,81,40,"getViewManagerConfig"],[100,60,81,60],[100,63,81,63],[100,77,81,77],[100,78,81,78],[101,2,83,0],[101,6,83,4,"UIManagerConstants"],[101,24,83,22],[101,26,83,24],[102,4,84,2,"UIManagerConstants"],[102,22,84,20],[102,23,84,21,"genericDirectEventTypes"],[102,46,84,44],[102,49,84,47],[103,6,85,4],[103,9,85,7,"UIManagerConstants"],[103,27,85,25],[103,28,85,26,"genericDirectEventTypes"],[103,51,85,49],[104,6,86,4],[104,9,86,7,"customGHEventsConfig"],[105,4,87,2],[105,5,87,3],[106,2,88,0],[108,2,90,0],[109,2,91,0],[109,6,91,0,"_UIManagerAny$setJSRe"],[109,27,91,0],[109,30,98,4,"UIManagerAny"],[109,42,98,16],[109,43,92,2,"setJSResponder"],[109,57,92,16],[110,4,92,18,"oldSetJSResponder"],[110,21,92,35],[110,24,92,35,"_UIManagerAny$setJSRe"],[110,45,92,35],[110,59,92,38],[110,65,92,44],[111,6,93,4],[112,4,93,4],[112,5,94,3],[112,8,94,3,"_UIManagerAny$setJSRe"],[112,29,94,3],[113,4,94,3,"_UIManagerAny$clearJS"],[113,25,94,3],[113,28,98,4,"UIManagerAny"],[113,40,98,16],[113,41,95,2,"clearJSResponder"],[113,57,95,18],[114,4,95,20,"oldClearJSResponder"],[114,23,95,39],[114,26,95,39,"_UIManagerAny$clearJS"],[114,47,95,39],[114,61,95,42],[114,67,95,48],[115,6,96,4],[116,4,96,4],[116,5,97,3],[116,8,97,3,"_UIManagerAny$clearJS"],[116,29,97,3],[117,2,99,0,"UIManagerAny"],[117,14,99,12],[117,15,99,13,"setJSResponder"],[117,29,99,27],[117,32,99,30],[117,33,99,31,"tag"],[117,36,99,42],[117,38,99,44,"blockNativeResponder"],[117,58,99,73],[117,63,99,78],[118,4,100,2,"RNGestureHandlerModule"],[118,26,100,24],[118,27,100,24,"default"],[118,34,100,24],[118,35,100,25,"handleSetJSResponder"],[118,55,100,45],[118,56,100,46,"tag"],[118,59,100,49],[118,61,100,51,"blockNativeResponder"],[118,81,100,71],[118,82,100,72],[119,4,101,2,"oldSetJSResponder"],[119,21,101,19],[119,22,101,20,"tag"],[119,25,101,23],[119,27,101,25,"blockNativeResponder"],[119,47,101,45],[119,48,101,46],[120,2,102,0],[120,3,102,1],[121,2,103,0,"UIManagerAny"],[121,14,103,12],[121,15,103,13,"clearJSResponder"],[121,31,103,29],[121,34,103,32],[121,40,103,38],[122,4,104,2,"RNGestureHandlerModule"],[122,26,104,24],[122,27,104,24,"default"],[122,34,104,24],[122,35,104,25,"handleClearJSResponder"],[122,57,104,47],[122,58,104,48],[122,59,104,49],[123,4,105,2,"oldClearJSResponder"],[123,23,105,21],[123,24,105,22],[123,25,105,23],[124,2,106,0],[124,3,106,1],[125,2,108,0],[125,6,108,4,"allowTouches"],[125,18,108,16],[125,21,108,19],[125,25,108,23],[126,2,109,0],[126,6,109,6,"DEV_ON_ANDROID"],[126,20,109,20],[126,23,109,23,"__DEV__"],[126,30,109,30],[126,34,109,34,"Platform"],[126,46,109,42],[126,47,109,42,"Platform"],[126,55,109,42],[126,56,109,43,"OS"],[126,58,109,45],[126,63,109,50],[126,72,109,59],[127,2,110,0],[128,2,111,0],[129,2,112,0],[129,6,112,4,"DEV_ON_ANDROID"],[129,20,112,18],[129,22,112,20],[130,4,113,2,"DeviceEventEmitter"],[130,16,113,20],[130,17,113,20,"DeviceEventEmitter"],[130,35,113,20],[130,36,113,21,"addListener"],[130,47,113,32],[130,48,113,33],[130,72,113,57],[130,74,113,59],[130,80,113,65],[131,6,114,4,"allowTouches"],[131,18,114,16],[131,21,114,19],[131,22,114,20,"allowTouches"],[131,34,114,32],[132,4,115,2],[132,5,115,3],[132,6,115,4],[133,2,116,0],[134,2,121,0],[134,11,121,9,"hasUnresolvedRefs"],[134,28,121,26,"hasUnresolvedRefs"],[134,29,122,2,"props"],[134,34,122,24],[134,36,123,2],[135,4,124,2],[136,4,125,2],[136,8,125,8,"extract"],[136,15,125,15],[136,18,125,19,"refs"],[136,22,125,36],[136,26,125,41],[137,6,126,4],[137,10,126,8],[137,11,126,9,"Array"],[137,16,126,14],[137,17,126,15,"isArray"],[137,24,126,22],[137,25,126,23,"refs"],[137,29,126,27],[137,30,126,28],[137,32,126,30],[138,8,127,6],[138,15,127,13,"refs"],[138,19,127,17],[138,23,127,21,"refs"],[138,27,127,25],[138,28,127,26,"current"],[138,35,127,33],[138,40,127,38],[138,44,127,42],[139,6,128,4],[140,6,129,4],[140,13,129,11,"refs"],[140,17,129,15],[140,18,129,16,"some"],[140,22,129,20],[140,23,129,22,"r"],[140,24,129,23],[140,28,129,28,"r"],[140,29,129,29],[140,33,129,33,"r"],[140,34,129,34],[140,35,129,35,"current"],[140,42,129,42],[140,47,129,47],[140,51,129,51],[140,52,129,52],[141,4,130,2],[141,5,130,3],[142,4,131,2],[142,11,131,9,"extract"],[142,18,131,16],[142,19,131,17,"props"],[142,24,131,22],[142,25,131,23],[142,47,131,45],[142,48,131,46],[142,49,131,47],[142,53,131,51,"extract"],[142,60,131,58],[142,61,131,59,"props"],[142,66,131,64],[142,67,131,65],[142,76,131,74],[142,77,131,75],[142,78,131,76],[143,2,132,0],[144,2,134,0],[144,6,134,6,"stateToPropMappings"],[144,25,134,25],[144,28,134,28],[145,4,135,2],[145,5,135,3,"State"],[145,11,135,8],[145,12,135,8,"State"],[145,17,135,8],[145,18,135,9,"UNDETERMINED"],[145,30,135,21],[145,33,135,24,"undefined"],[145,42,135,33],[146,4,136,2],[146,5,136,3,"State"],[146,11,136,8],[146,12,136,8,"State"],[146,17,136,8],[146,18,136,9,"BEGAN"],[146,23,136,14],[146,26,136,17],[146,35,136,26],[147,4,137,2],[147,5,137,3,"State"],[147,11,137,8],[147,12,137,8,"State"],[147,17,137,8],[147,18,137,9,"FAILED"],[147,24,137,15],[147,27,137,18],[147,37,137,28],[148,4,138,2],[148,5,138,3,"State"],[148,11,138,8],[148,12,138,8,"State"],[148,17,138,8],[148,18,138,9,"CANCELLED"],[148,27,138,18],[148,30,138,21],[148,43,138,34],[149,4,139,2],[149,5,139,3,"State"],[149,11,139,8],[149,12,139,8,"State"],[149,17,139,8],[149,18,139,9,"ACTIVE"],[149,24,139,15],[149,27,139,18],[149,40,139,31],[150,4,140,2],[150,5,140,3,"State"],[150,11,140,8],[150,12,140,8,"State"],[150,17,140,8],[150,18,140,9,"END"],[150,21,140,12],[150,24,140,15],[151,2,141,0],[151,3,141,10],[153,2,152,0],[155,2,166,0],[155,6,166,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[155,33,166,33],[155,36,166,36],[155,37,166,37],[157,2,168,0],[158,2,169,15],[158,11,169,24,"createHandler"],[158,24,169,37,"createHandler"],[158,25,169,37,"_ref"],[158,29,169,37],[158,31,178,76],[159,4,178,76],[159,8,173,2,"name"],[159,12,173,6],[159,15,173,6,"_ref"],[159,19,173,6],[159,20,173,2,"name"],[159,24,173,6],[160,6,173,6,"_ref$allowedProps"],[160,23,173,6],[160,26,173,6,"_ref"],[160,30,173,6],[160,31,174,2,"allowedProps"],[160,43,174,14],[161,6,174,2,"allowedProps"],[161,18,174,14],[161,21,174,14,"_ref$allowedProps"],[161,38,174,14],[161,52,174,17],[161,54,174,19],[161,57,174,19,"_ref$allowedProps"],[161,74,174,19],[162,6,174,19,"_ref$config"],[162,17,174,19],[162,20,174,19,"_ref"],[162,24,174,19],[162,25,175,2,"config"],[162,31,175,8],[163,6,175,2,"config"],[163,12,175,8],[163,15,175,8,"_ref$config"],[163,26,175,8],[163,40,175,11],[163,41,175,12],[163,42,175,13],[163,45,175,13,"_ref$config"],[163,56,175,13],[164,6,176,2,"transformProps"],[164,20,176,16],[164,23,176,16,"_ref"],[164,27,176,16],[164,28,176,2,"transformProps"],[164,42,176,16],[165,6,176,16,"_ref$customNativeProp"],[165,27,176,16],[165,30,176,16,"_ref"],[165,34,176,16],[165,35,177,2,"customNativeProps"],[165,52,177,19],[166,6,177,2,"customNativeProps"],[166,23,177,19],[166,26,177,19,"_ref$customNativeProp"],[166,47,177,19],[166,61,177,22],[166,63,177,24],[166,66,177,24,"_ref$customNativeProp"],[166,87,177,24],[167,4,177,24],[167,8,182,8,"Handler"],[167,15,182,15],[167,41,182,15,"_React$Component"],[167,57,182,15],[168,6,197,4],[168,15,197,4,"Handler"],[168,23,197,16,"props"],[168,28,197,48],[168,30,197,50],[169,8,197,50],[169,12,197,50,"_this"],[169,17,197,50],[170,8,197,50],[170,12,197,50,"_classCallCheck"],[170,27,197,50],[170,28,197,50,"default"],[170,35,197,50],[170,43,197,50,"Handler"],[170,50,197,50],[171,8,198,6,"_this"],[171,13,198,6],[171,20,198,6,"_callSuper"],[171,30,198,6],[171,31,198,6,"default"],[171,38,198,6],[171,46,198,6,"Handler"],[171,53,198,6],[171,56,198,12,"props"],[171,61,198,17],[172,8,198,19,"_this"],[172,13,198,19],[172,14,189,12,"handlerTag"],[172,24,189,22],[172,27,189,25],[172,28,189,26],[172,29,189,27],[173,8,189,27,"_this"],[173,13,189,27],[173,14,279,12,"onGestureHandlerEvent"],[173,35,279,33],[173,38,279,37,"event"],[173,43,279,59],[173,47,279,64],[174,10,280,6],[174,14,280,10,"event"],[174,19,280,15],[174,20,280,16,"nativeEvent"],[174,31,280,27],[174,32,280,28,"handlerTag"],[174,42,280,38],[174,47,280,43,"_this"],[174,52,280,43],[174,53,280,48,"handlerTag"],[174,63,280,58],[174,65,280,60],[175,12,281,8],[175,16,281,12],[175,23,281,19,"_this"],[175,28,281,19],[175,29,281,24,"props"],[175,34,281,29],[175,35,281,30,"onGestureEvent"],[175,49,281,44],[175,54,281,49],[175,64,281,59],[175,66,281,61],[176,14,282,10,"_this"],[176,19,282,10],[176,20,282,15,"props"],[176,25,282,20],[176,26,282,21,"onGestureEvent"],[176,40,282,35],[176,43,282,38,"event"],[176,48,282,43],[176,49,282,44],[177,12,283,8],[178,10,284,6],[178,11,284,7],[178,17,284,13],[179,12,285,8,"_this"],[179,17,285,8],[179,18,285,13,"props"],[179,23,285,18],[179,24,285,19,"onGestureHandlerEvent"],[179,45,285,40],[179,48,285,43,"event"],[179,53,285,48],[179,54,285,49],[180,10,286,6],[181,8,287,4],[181,9,287,5],[182,8,289,4],[183,8,289,4,"_this"],[183,13,289,4],[183,14,290,12,"onGestureHandlerStateChange"],[183,41,290,39],[183,44,291,6,"event"],[183,49,291,39],[183,53,292,9],[184,10,293,6],[184,14,293,10,"event"],[184,19,293,15],[184,20,293,16,"nativeEvent"],[184,31,293,27],[184,32,293,28,"handlerTag"],[184,42,293,38],[184,47,293,43,"_this"],[184,52,293,43],[184,53,293,48,"handlerTag"],[184,63,293,58],[184,65,293,60],[185,12,294,8],[185,16,294,12],[185,23,294,19,"_this"],[185,28,294,19],[185,29,294,24,"props"],[185,34,294,29],[185,35,294,30,"onHandlerStateChange"],[185,55,294,50],[185,60,294,55],[185,70,294,65],[185,72,294,67],[186,14,295,10,"_this"],[186,19,295,10],[186,20,295,15,"props"],[186,25,295,20],[186,26,295,21,"onHandlerStateChange"],[186,46,295,41],[186,49,295,44,"event"],[186,54,295,49],[186,55,295,50],[187,12,296,8],[188,12,298,8],[188,16,298,14,"state"],[188,21,298,42],[188,24,298,45,"event"],[188,29,298,50],[188,30,298,51,"nativeEvent"],[188,41,298,62],[188,42,298,63,"state"],[188,47,298,68],[189,12,299,8],[189,16,299,14,"stateEventName"],[189,30,299,28],[189,33,299,31,"stateToPropMappings"],[189,52,299,50],[189,53,299,51,"state"],[189,58,299,56],[189,59,299,57],[190,12,300,8],[190,16,300,14,"eventHandler"],[190,28,300,26],[190,31,300,29,"stateEventName"],[190,45,300,43],[190,49,300,47,"_this"],[190,54,300,47],[190,55,300,52,"props"],[190,60,300,57],[190,61,300,58,"stateEventName"],[190,75,300,72],[190,76,300,73],[191,12,301,8],[191,16,301,12,"eventHandler"],[191,28,301,24],[191,32,301,28],[191,39,301,35,"eventHandler"],[191,51,301,47],[191,56,301,52],[191,66,301,62],[191,68,301,64],[192,14,302,10,"eventHandler"],[192,26,302,22],[192,27,302,23,"event"],[192,32,302,28],[192,33,302,29],[193,12,303,8],[194,10,304,6],[194,11,304,7],[194,17,304,13],[195,12,305,8,"_this"],[195,17,305,8],[195,18,305,13,"props"],[195,23,305,18],[195,24,305,19,"onGestureHandlerStateChange"],[195,51,305,46],[195,54,305,49,"event"],[195,59,305,54],[195,60,305,55],[196,10,306,6],[197,8,307,4],[197,9,307,5],[198,8,307,5,"_this"],[198,13,307,5],[198,14,309,12,"refHandler"],[198,24,309,22],[198,27,309,26,"node"],[198,31,309,35],[198,35,309,40],[199,10,310,6,"_this"],[199,15,310,6],[199,16,310,11,"viewNode"],[199,24,310,19],[199,27,310,22,"node"],[199,31,310,26],[200,10,312,6],[200,14,312,12,"child"],[200,19,312,17],[200,22,312,20,"React"],[200,27,312,25],[200,28,312,26,"Children"],[200,36,312,34],[200,37,312,35,"only"],[200,41,312,39],[200,42,312,40,"_this"],[200,47,312,40],[200,48,312,45,"props"],[200,53,312,50],[200,54,312,51,"children"],[200,62,312,59],[200,63,312,60],[201,10,313,6],[202,10,314,6],[203,10,315,6],[203,14,315,12,"ref"],[203,17,315,15],[203,20,315,18],[203,24,315,18,"isReact19"],[203,31,315,27],[203,32,315,27,"isReact19"],[203,41,315,27],[203,43,315,28],[203,44,315,29],[203,47,315,33,"child"],[203,52,315,38],[203,53,315,56,"props"],[203,58,315,61],[203,60,315,63,"ref"],[203,63,315,66],[203,66,315,69,"child"],[203,71,315,74],[203,73,315,76,"ref"],[203,76,315,79],[204,10,317,6],[204,14,317,10],[204,15,317,11,"ref"],[204,18,317,14],[204,20,317,16],[205,12,318,8],[206,10,319,6],[207,10,321,6],[207,14,321,10],[207,21,321,17,"ref"],[207,24,321,20],[207,29,321,25],[207,39,321,35],[207,41,321,37],[208,12,322,8,"ref"],[208,15,322,11],[208,16,322,12,"node"],[208,20,322,16],[208,21,322,17],[209,10,323,6],[209,11,323,7],[209,17,323,13],[210,12,324,8,"ref"],[210,15,324,11],[210,16,324,12,"current"],[210,23,324,19],[210,26,324,22,"node"],[210,30,324,26],[211,10,325,6],[212,8,326,4],[212,9,326,5],[213,8,326,5,"_this"],[213,13,326,5],[213,14,328,12,"createGestureHandler"],[213,34,328,32],[213,37,329,6,"newConfig"],[213,46,329,50],[213,50,330,9],[214,10,331,6,"_this"],[214,15,331,6],[214,16,331,11,"handlerTag"],[214,26,331,21],[214,29,331,24],[214,33,331,24,"getNextHandlerTag"],[214,51,331,41],[214,52,331,41,"getNextHandlerTag"],[214,69,331,41],[214,71,331,42],[214,72,331,43],[215,10,332,6,"_this"],[215,15,332,6],[215,16,332,11,"config"],[215,22,332,17],[215,25,332,20,"newConfig"],[215,34,332,29],[216,10,334,6,"RNGestureHandlerModule"],[216,32,334,28],[216,33,334,28,"default"],[216,40,334,28],[216,41,334,29,"createGestureHandler"],[216,61,334,49],[216,62,335,8,"name"],[216,66,335,12],[216,68,336,8,"_this"],[216,73,336,8],[216,74,336,13,"handlerTag"],[216,84,336,23],[216,86,337,8,"newConfig"],[216,95,338,6],[216,96,338,7],[217,8,339,4],[217,9,339,5],[218,8,339,5,"_this"],[218,13,339,5],[218,14,341,12,"attachGestureHandler"],[218,34,341,32],[218,37,341,36,"newViewTag"],[218,47,341,54],[218,51,341,59],[219,10,342,6,"_this"],[219,15,342,6],[219,16,342,11,"viewTag"],[219,23,342,18],[219,26,342,21,"newViewTag"],[219,36,342,31],[220,10,344,6],[220,14,344,10,"Platform"],[220,26,344,18],[220,27,344,18,"Platform"],[220,35,344,18],[220,36,344,19,"OS"],[220,38,344,21],[220,43,344,26],[220,48,344,31],[220,50,344,33],[221,12,345,8],[222,12,347,10,"RNGestureHandlerModule"],[222,34,347,32],[222,35,347,32,"default"],[222,42,347,32],[222,43,347,33,"attachGestureHandler"],[222,63,347,53],[222,64,349,10,"_this"],[222,69,349,10],[222,70,349,15,"handlerTag"],[222,80,349,25],[222,82,350,10,"newViewTag"],[222,92,350,20],[222,94,351,10,"ActionType"],[222,105,351,20],[222,106,351,20,"ActionType"],[222,116,351,20],[222,117,351,21,"JS_FUNCTION_OLD_API"],[222,136,351,40],[223,12,351,42],[224,12,352,10,"_this"],[224,17,352,10],[224,18,352,15,"propsRef"],[224,26,353,8],[224,27,353,9],[225,10,354,6],[225,11,354,7],[225,17,354,13],[226,12,355,8],[226,16,355,8,"registerOldGestureHandler"],[226,33,355,33],[226,34,355,33,"registerOldGestureHandler"],[226,59,355,33],[226,61,355,34,"_this"],[226,66,355,34],[226,67,355,39,"handlerTag"],[226,77,355,49],[226,79,355,51],[227,14,356,10,"onGestureEvent"],[227,28,356,24],[227,30,356,26,"_this"],[227,35,356,26],[227,36,356,31,"onGestureHandlerEvent"],[227,57,356,52],[228,14,357,10,"onGestureStateChange"],[228,34,357,30],[228,36,357,32,"_this"],[228,41,357,32],[228,42,357,37,"onGestureHandlerStateChange"],[229,12,358,8],[229,13,358,9],[229,14,358,10],[230,12,360,8],[230,16,360,14,"actionType"],[230,26,360,24],[230,29,360,27],[230,30,360,28],[230,36,360,34],[231,14,361,10],[231,18,361,16,"onGestureEvent"],[231,32,361,30],[231,35,361,33,"_this"],[231,40,361,33],[231,41,361,38,"props"],[231,46,361,43],[231,48,361,45,"onGestureEvent"],[231,62,361,59],[232,14,362,10],[232,18,362,16,"isGestureHandlerWorklet"],[232,41,362,39],[232,44,363,12,"onGestureEvent"],[232,58,363,26],[232,63,364,13],[232,72,364,22],[232,76,364,26,"onGestureEvent"],[232,90,364,40],[232,94,365,14],[232,115,365,35],[232,119,365,39,"onGestureEvent"],[232,133,365,53],[232,134,365,54],[233,14,366,10],[233,18,366,16,"onHandlerStateChange"],[233,38,366,36],[233,41,366,39,"_this"],[233,46,366,39],[233,47,366,44,"props"],[233,52,366,49],[233,54,366,51,"onHandlerStateChange"],[233,74,366,71],[234,14,367,10],[234,18,367,16,"isStateChangeHandlerWorklet"],[234,45,367,43],[234,48,368,12,"onHandlerStateChange"],[234,68,368,32],[234,73,369,13],[234,82,369,22],[234,86,369,26,"onHandlerStateChange"],[234,106,369,46],[234,110,370,14],[234,131,370,35],[234,135,370,39,"onHandlerStateChange"],[234,155,370,59],[234,156,370,60],[235,14,371,10],[235,18,371,16,"isReanimatedHandler"],[235,37,371,35],[235,40,372,12,"isGestureHandlerWorklet"],[235,63,372,35],[235,67,372,39,"isStateChangeHandlerWorklet"],[235,94,372,66],[236,14,373,10],[236,18,373,14,"isReanimatedHandler"],[236,37,373,33],[236,39,373,35],[237,16,374,12],[238,16,375,12],[238,23,375,19,"ActionType"],[238,34,375,29],[238,35,375,29,"ActionType"],[238,45,375,29],[238,46,375,30,"REANIMATED_WORKLET"],[238,64,375,48],[239,14,376,10],[239,15,376,11],[239,21,376,17],[239,25,376,21,"onGestureEvent"],[239,39,376,35],[239,43,376,39],[239,55,376,51],[239,59,376,55,"onGestureEvent"],[239,73,376,69],[239,75,376,71],[240,16,377,12],[241,16,378,12],[241,23,378,19,"ActionType"],[241,34,378,29],[241,35,378,29,"ActionType"],[241,45,378,29],[241,46,378,30,"NATIVE_ANIMATED_EVENT"],[241,67,378,51],[242,14,379,10],[242,15,379,11],[242,21,379,17],[243,16,380,12],[244,16,381,12],[244,23,381,19,"ActionType"],[244,34,381,29],[244,35,381,29,"ActionType"],[244,45,381,29],[244,46,381,30,"JS_FUNCTION_OLD_API"],[244,65,381,49],[245,14,382,10],[246,12,383,8],[246,13,383,9],[246,15,383,11],[246,16,383,12],[247,12,385,8,"RNGestureHandlerModule"],[247,34,385,30],[247,35,385,30,"default"],[247,42,385,30],[247,43,385,31,"attachGestureHandler"],[247,63,385,51],[247,64,386,10,"_this"],[247,69,386,10],[247,70,386,15,"handlerTag"],[247,80,386,25],[247,82,387,10,"newViewTag"],[247,92,387,20],[247,94,388,10,"actionType"],[247,104,389,8],[247,105,389,9],[248,10,390,6],[249,10,392,6],[249,14,392,6,"scheduleFlushOperations"],[249,20,392,29],[249,21,392,29,"scheduleFlushOperations"],[249,44,392,29],[249,46,392,30],[249,47,392,31],[250,10,394,6],[250,14,394,6,"ghQueueMicrotask"],[250,31,394,22],[250,32,394,22,"ghQueueMicrotask"],[250,48,394,22],[250,50,394,23],[250,56,394,29],[251,12,395,8,"MountRegistry"],[251,26,395,21],[251,27,395,21,"MountRegistry"],[251,40,395,21],[251,41,395,22,"gestureHandlerWillMount"],[251,64,395,45],[251,65,395,45,"_this"],[251,70,395,50],[251,71,395,51],[252,10,396,6],[252,11,396,7],[252,12,396,8],[253,8,397,4],[253,9,397,5],[254,8,397,5,"_this"],[254,13,397,5],[254,14,399,12,"updateGestureHandler"],[254,34,399,32],[254,37,400,6,"newConfig"],[254,46,400,50],[254,50,401,9],[255,10,402,6,"_this"],[255,15,402,6],[255,16,402,11,"config"],[255,22,402,17],[255,25,402,20,"newConfig"],[255,34,402,29],[256,10,404,6,"RNGestureHandlerModule"],[256,32,404,28],[256,33,404,28,"default"],[256,40,404,28],[256,41,404,29,"updateGestureHandler"],[256,61,404,49],[256,62,404,50,"_this"],[256,67,404,50],[256,68,404,55,"handlerTag"],[256,78,404,65],[256,80,404,67,"newConfig"],[256,89,404,76],[256,90,404,77],[257,10,405,6],[257,14,405,6,"scheduleFlushOperations"],[257,20,405,29],[257,21,405,29,"scheduleFlushOperations"],[257,44,405,29],[257,46,405,30],[257,47,405,31],[258,8,406,4],[258,9,406,5],[259,8,199,6,"_this"],[259,13,199,6],[259,14,199,11,"config"],[259,20,199,17],[259,23,199,20],[259,24,199,21],[259,25,199,22],[260,8,200,6,"_this"],[260,13,200,6],[260,14,200,11,"propsRef"],[260,22,200,19],[260,38,200,22,"React"],[260,43,200,27],[260,44,200,28,"createRef"],[260,53,200,37],[260,54,200,38],[260,55,200,39],[261,8,201,6,"_this"],[261,13,201,6],[261,14,201,11,"isMountedRef"],[261,26,201,23],[261,42,201,26,"React"],[261,47,201,31],[261,48,201,32,"createRef"],[261,57,201,41],[261,58,201,42],[261,59,201,43],[262,8,202,6,"_this"],[262,13,202,6],[262,14,202,11,"state"],[262,19,202,16],[262,22,202,19],[263,10,202,21,"allowTouches"],[264,8,202,34],[264,9,202,35],[265,8,203,6],[265,12,203,10,"props"],[265,17,203,15],[265,18,203,16,"id"],[265,20,203,18],[265,22,203,20],[266,10,204,8],[266,14,204,12,"handlerIDToTag"],[266,31,204,26],[266,32,204,26,"handlerIDToTag"],[266,46,204,26],[266,47,204,27,"props"],[266,52,204,32],[266,53,204,33,"id"],[266,55,204,35],[266,56,204,36],[266,61,204,41,"undefined"],[266,70,204,50],[266,72,204,52],[267,12,205,10],[267,18,205,16],[267,22,205,20,"Error"],[267,27,205,25],[267,28,205,26],[267,48,205,46,"props"],[267,53,205,51],[267,54,205,52,"id"],[267,56,205,54],[267,78,205,76],[267,79,205,77],[268,10,206,8],[269,10,207,8,"handlerIDToTag"],[269,27,207,22],[269,28,207,22,"handlerIDToTag"],[269,42,207,22],[269,43,207,23,"props"],[269,48,207,28],[269,49,207,29,"id"],[269,51,207,31],[269,52,207,32],[269,55,207,35,"_this"],[269,60,207,35],[269,61,207,40,"handlerTag"],[269,71,207,50],[270,8,208,6],[271,8,208,7],[271,15,208,7,"_this"],[271,20,208,7],[272,6,209,4],[273,6,209,5],[273,10,209,5,"_inherits"],[273,19,209,5],[273,20,209,5,"default"],[273,27,209,5],[273,29,209,5,"Handler"],[273,36,209,5],[273,38,209,5,"_React$Component"],[273,54,209,5],[274,6,209,5],[274,17,209,5,"_createClass"],[274,29,209,5],[274,30,209,5,"default"],[274,37,209,5],[274,39,209,5,"Handler"],[274,46,209,5],[275,8,209,5,"key"],[275,11,209,5],[276,8,209,5,"value"],[276,13,209,5],[276,15,211,4],[276,24,211,4,"componentDidMount"],[276,41,211,21,"componentDidMount"],[276,42,211,21],[276,44,211,24],[277,10,212,6],[277,14,212,12,"props"],[277,19,212,34],[277,22,212,37],[277,26,212,41],[277,27,212,42,"props"],[277,32,212,47],[278,10,213,6],[278,14,213,10],[278,15,213,11,"isMountedRef"],[278,27,213,23],[278,28,213,24,"current"],[278,35,213,31],[278,38,213,34],[278,42,213,38],[279,10,215,6],[279,14,215,10,"DEV_ON_ANDROID"],[279,28,215,24],[279,30,215,26],[280,12,216,8],[280,16,216,12],[280,17,216,13,"inspectorToggleListener"],[280,40,216,36],[280,43,216,39,"DeviceEventEmitter"],[280,55,216,57],[280,56,216,57,"DeviceEventEmitter"],[280,74,216,57],[280,75,216,58,"addListener"],[280,86,216,69],[280,87,217,10],[280,111,217,34],[280,113,218,10],[280,119,218,16],[281,14,219,12],[281,18,219,16],[281,19,219,17,"setState"],[281,27,219,25],[281,28,219,27,"_"],[281,29,219,28],[281,34,219,34],[282,16,219,36,"allowTouches"],[283,14,219,49],[283,15,219,50],[283,16,219,51],[283,17,219,52],[284,14,220,12],[284,18,220,16],[284,19,220,17,"update"],[284,25,220,23],[284,26,220,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[284,53,220,51],[284,54,220,52],[285,12,221,10],[285,13,222,8],[285,14,222,9],[286,10,223,6],[287,10,224,6],[287,14,224,10,"hasUnresolvedRefs"],[287,31,224,27],[287,32,224,28,"props"],[287,37,224,33],[287,38,224,34],[287,40,224,36],[288,12,225,8],[289,12,226,8],[290,12,227,8],[291,12,228,8],[292,12,229,8],[293,12,230,8],[294,12,231,8],[294,16,231,8,"ghQueueMicrotask"],[294,33,231,24],[294,34,231,24,"ghQueueMicrotask"],[294,50,231,24],[294,52,231,25],[294,58,231,31],[295,14,232,10],[295,18,232,14],[295,19,232,15,"update"],[295,25,232,21],[295,26,232,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[295,53,232,49],[295,54,232,50],[296,12,233,8],[296,13,233,9],[296,14,233,10],[297,10,234,6],[298,10,236,6],[298,14,236,10],[298,15,236,11,"createGestureHandler"],[298,35,236,31],[298,36,237,8],[298,40,237,8,"filterConfig"],[298,46,237,20],[298,47,237,20,"filterConfig"],[298,59,237,20],[298,61,238,10,"transformProps"],[298,75,238,24],[298,78,238,27,"transformProps"],[298,92,238,41],[298,93,238,42],[298,97,238,46],[298,98,238,47,"props"],[298,103,238,52],[298,104,238,53],[298,107,238,56],[298,111,238,60],[298,112,238,61,"props"],[298,117,238,66],[298,119,239,10],[298,120,239,11],[298,123,239,14,"allowedProps"],[298,135,239,26],[298,137,239,28],[298,140,239,31,"customNativeProps"],[298,157,239,48],[298,158,239,49],[298,160,240,10,"config"],[298,166,241,8],[298,167,242,6],[298,168,242,7],[299,10,244,6],[299,14,244,10],[299,15,244,11],[299,19,244,15],[299,20,244,16,"viewNode"],[299,28,244,24],[299,30,244,26],[300,12,245,8],[300,18,245,14],[300,22,245,18,"Error"],[300,27,245,23],[300,28,246,10],[300,75,246,57,"Handler"],[300,82,246,64],[300,83,246,65,"displayName"],[300,94,246,76],[300,154,247,8],[300,155,247,9],[301,10,248,6],[302,10,250,6],[302,14,250,10],[302,15,250,11,"attachGestureHandler"],[302,35,250,31],[302,36,250,32],[302,40,250,32,"findNodeHandle"],[302,54,250,46],[302,55,250,46,"default"],[302,62,250,46],[302,64,250,47],[302,68,250,51],[302,69,250,52,"viewNode"],[302,77,250,60],[302,78,250,71],[302,79,250,72],[302,80,250,73],[302,81,250,74],[303,8,251,4],[304,6,251,5],[305,8,251,5,"key"],[305,11,251,5],[306,8,251,5,"value"],[306,13,251,5],[306,15,253,4],[306,24,253,4,"componentDidUpdate"],[306,42,253,22,"componentDidUpdate"],[306,43,253,22],[306,45,253,25],[307,10,254,6],[307,14,254,12,"viewTag"],[307,21,254,19],[307,24,254,22],[307,28,254,22,"findNodeHandle"],[307,42,254,36],[307,43,254,36,"default"],[307,50,254,36],[307,52,254,37],[307,56,254,41],[307,57,254,42,"viewNode"],[307,65,254,50],[307,66,254,51],[308,10,255,6],[308,14,255,10],[308,18,255,14],[308,19,255,15,"viewTag"],[308,26,255,22],[308,31,255,27,"viewTag"],[308,38,255,34],[308,40,255,36],[309,12,256,8],[309,16,256,12],[309,17,256,13,"attachGestureHandler"],[309,37,256,33],[309,38,256,34,"viewTag"],[309,45,256,51],[309,46,256,52],[309,47,256,53],[309,48,256,54],[310,10,257,6],[311,10,258,6],[311,14,258,10],[311,15,258,11,"update"],[311,21,258,17],[311,22,258,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[311,49,258,45],[311,50,258,46],[312,8,259,4],[313,6,259,5],[314,8,259,5,"key"],[314,11,259,5],[315,8,259,5,"value"],[315,13,259,5],[315,15,261,4],[315,24,261,4,"componentWillUnmount"],[315,44,261,24,"componentWillUnmount"],[315,45,261,24],[315,47,261,27],[316,10,262,6],[316,14,262,10],[316,15,262,11,"inspectorToggleListener"],[316,38,262,34],[316,40,262,36,"remove"],[316,46,262,42],[316,47,262,43],[316,48,262,44],[317,10,263,6],[317,14,263,10],[317,15,263,11,"isMountedRef"],[317,27,263,23],[317,28,263,24,"current"],[317,35,263,31],[317,38,263,34],[317,43,263,39],[318,10,264,6],[318,14,264,10,"Platform"],[318,26,264,18],[318,27,264,18,"Platform"],[318,35,264,18],[318,36,264,19,"OS"],[318,38,264,21],[318,43,264,26],[318,48,264,31],[318,50,264,33],[319,12,265,8],[319,16,265,8,"unregisterOldGestureHandler"],[319,33,265,35],[319,34,265,35,"unregisterOldGestureHandler"],[319,61,265,35],[319,63,265,36],[319,67,265,40],[319,68,265,41,"handlerTag"],[319,78,265,51],[319,79,265,52],[320,10,266,6],[321,10,267,6,"RNGestureHandlerModule"],[321,32,267,28],[321,33,267,28,"default"],[321,40,267,28],[321,41,267,29,"dropGestureHandler"],[321,59,267,47],[321,60,267,48],[321,64,267,52],[321,65,267,53,"handlerTag"],[321,75,267,63],[321,76,267,64],[322,10,268,6],[322,14,268,6,"scheduleFlushOperations"],[322,20,268,29],[322,21,268,29,"scheduleFlushOperations"],[322,44,268,29],[322,46,268,30],[322,47,268,31],[323,10,269,6],[324,10,270,6],[324,14,270,12,"handlerID"],[324,23,270,41],[324,26,270,44],[324,30,270,48],[324,31,270,49,"props"],[324,36,270,54],[324,37,270,55,"id"],[324,39,270,57],[325,10,271,6],[325,14,271,10,"handlerID"],[325,23,271,19],[325,25,271,21],[326,12,272,8],[327,12,273,8],[327,19,273,15,"handlerIDToTag"],[327,36,273,29],[327,37,273,29,"handlerIDToTag"],[327,51,273,29],[327,52,273,30,"handlerID"],[327,61,273,39],[327,62,273,40],[328,10,274,6],[329,10,276,6,"MountRegistry"],[329,24,276,19],[329,25,276,19,"MountRegistry"],[329,38,276,19],[329,39,276,20,"gestureHandlerWillUnmount"],[329,64,276,45],[329,65,276,46],[329,69,276,50],[329,70,276,51],[330,8,277,4],[331,6,277,5],[332,8,277,5,"key"],[332,11,277,5],[333,8,277,5,"value"],[333,13,277,5],[333,15,408,4],[333,24,408,12,"update"],[333,30,408,18,"update"],[333,31,408,19,"remainingTries"],[333,45,408,41],[333,47,408,43],[334,10,409,6],[334,14,409,10],[334,15,409,11],[334,19,409,15],[334,20,409,16,"isMountedRef"],[334,32,409,28],[334,33,409,29,"current"],[334,40,409,36],[334,42,409,38],[335,12,410,8],[336,10,411,6],[337,10,413,6],[337,14,413,12,"props"],[337,19,413,34],[337,22,413,37],[337,26,413,41],[337,27,413,42,"props"],[337,32,413,47],[339,10,415,6],[340,10,416,6],[341,10,417,6],[342,10,418,6],[342,14,418,10,"hasUnresolvedRefs"],[342,31,418,27],[342,32,418,28,"props"],[342,37,418,33],[342,38,418,34],[342,42,418,38,"remainingTries"],[342,56,418,52],[342,59,418,55],[342,60,418,56],[342,62,418,58],[343,12,419,8],[343,16,419,8,"ghQueueMicrotask"],[343,33,419,24],[343,34,419,24,"ghQueueMicrotask"],[343,50,419,24],[343,52,419,25],[343,58,419,31],[344,14,420,10],[344,18,420,14],[344,19,420,15,"update"],[344,25,420,21],[344,26,420,22,"remainingTries"],[344,40,420,36],[344,43,420,39],[344,44,420,40],[344,45,420,41],[345,12,421,8],[345,13,421,9],[345,14,421,10],[346,10,422,6],[346,11,422,7],[346,17,422,13],[347,12,423,8],[347,16,423,14,"newConfig"],[347,25,423,23],[347,28,423,26],[347,32,423,26,"filterConfig"],[347,38,423,38],[347,39,423,38,"filterConfig"],[347,51,423,38],[347,53,424,10,"transformProps"],[347,67,424,24],[347,70,424,27,"transformProps"],[347,84,424,41],[347,85,424,42],[347,89,424,46],[347,90,424,47,"props"],[347,95,424,52],[347,96,424,53],[347,99,424,56],[347,103,424,60],[347,104,424,61,"props"],[347,109,424,66],[347,111,425,10],[347,112,425,11],[347,115,425,14,"allowedProps"],[347,127,425,26],[347,129,425,28],[347,132,425,31,"customNativeProps"],[347,149,425,48],[347,150,425,49],[347,152,426,10,"config"],[347,158,427,8],[347,159,427,9],[348,12,428,8],[348,16,428,12],[348,17,428,13],[348,21,428,13,"deepEqual"],[348,28,428,22],[348,29,428,22,"deepEqual"],[348,38,428,22],[348,40,428,23],[348,44,428,27],[348,45,428,28,"config"],[348,51,428,34],[348,53,428,36,"newConfig"],[348,62,428,45],[348,63,428,46],[348,65,428,48],[349,14,429,10],[349,18,429,14],[349,19,429,15,"updateGestureHandler"],[349,39,429,35],[349,40,429,36,"newConfig"],[349,49,429,45],[349,50,429,46],[350,12,430,8],[351,10,431,6],[352,8,432,4],[354,8,434,4],[355,6,434,4],[356,8,434,4,"key"],[356,11,434,4],[357,8,434,4,"value"],[357,13,434,4],[357,15,435,4],[357,24,435,4,"setNativeProps"],[357,38,435,18,"setNativeProps"],[357,39,435,19,"updates"],[357,46,435,31],[357,48,435,33],[358,10,436,6],[358,14,436,12,"mergedProps"],[358,25,436,23],[358,28,436,26],[359,12,436,28],[359,15,436,31],[359,19,436,35],[359,20,436,36,"props"],[359,25,436,41],[360,12,436,43],[360,15,436,46,"updates"],[361,10,436,54],[361,11,436,55],[362,10,437,6],[362,14,437,12,"newConfig"],[362,23,437,21],[362,26,437,24],[362,30,437,24,"filterConfig"],[362,36,437,36],[362,37,437,36,"filterConfig"],[362,49,437,36],[362,51,438,8,"transformProps"],[362,65,438,22],[362,68,438,25,"transformProps"],[362,82,438,39],[362,83,438,40,"mergedProps"],[362,94,438,51],[362,95,438,52],[362,98,438,55,"mergedProps"],[362,109,438,66],[362,111,439,8],[362,112,439,9],[362,115,439,12,"allowedProps"],[362,127,439,24],[362,129,439,26],[362,132,439,29,"customNativeProps"],[362,149,439,46],[362,150,439,47],[362,152,440,8,"config"],[362,158,441,6],[362,159,441,7],[363,10,442,6],[363,14,442,10],[363,15,442,11,"updateGestureHandler"],[363,35,442,31],[363,36,442,32,"newConfig"],[363,45,442,41],[363,46,442,42],[364,8,443,4],[365,6,443,5],[366,8,443,5,"key"],[366,11,443,5],[367,8,443,5,"value"],[367,13,443,5],[367,15,445,4],[367,24,445,4,"render"],[367,30,445,10,"render"],[367,31,445,10],[367,33,445,13],[368,10,446,6],[368,14,446,10,"__DEV__"],[368,21,446,17],[368,25,446,21],[368,26,446,22],[368,30,446,26],[368,31,446,27,"context"],[368,38,446,34],[368,42,446,38],[368,43,446,39],[368,47,446,39,"isTestEnv"],[368,54,446,48],[368,55,446,48,"isTestEnv"],[368,64,446,48],[368,66,446,49],[368,67,446,50],[368,71,446,54,"Platform"],[368,83,446,62],[368,84,446,62,"Platform"],[368,92,446,62],[368,93,446,63,"OS"],[368,95,446,65],[368,100,446,70],[368,105,446,75],[368,107,446,77],[369,12,447,8],[369,18,447,14],[369,22,447,18,"Error"],[369,27,447,23],[369,28,448,10,"name"],[369,32,448,14],[369,35,449,12],[369,249,450,8],[369,250,450,9],[370,10,451,6],[371,10,453,6],[371,14,453,10,"gestureEventHandler"],[371,33,453,29],[371,36,453,32],[371,40,453,36],[371,41,453,37,"onGestureHandlerEvent"],[371,62,453,58],[372,10,454,6],[374,10,459,6],[374,14,459,6,"_this$props"],[374,25,459,6],[374,28,460,8],[374,32,460,12],[374,33,460,13,"props"],[374,38,460,18],[375,12,459,14,"onGestureEvent"],[375,26,459,28],[375,29,459,28,"_this$props"],[375,40,459,28],[375,41,459,14,"onGestureEvent"],[375,55,459,28],[376,12,459,30,"onGestureHandlerEvent"],[376,33,459,51],[376,36,459,51,"_this$props"],[376,47,459,51],[376,48,459,30,"onGestureHandlerEvent"],[376,69,459,51],[377,10,461,6],[377,14,461,10,"onGestureEvent"],[377,28,461,24],[377,32,461,28],[377,39,461,35,"onGestureEvent"],[377,53,461,49],[377,58,461,54],[377,68,461,64],[377,70,461,66],[378,12,462,8],[379,12,463,8],[380,12,464,8],[381,12,465,8],[381,16,465,12,"onGestureHandlerEvent"],[381,37,465,33],[381,39,465,35],[382,14,466,10],[382,20,466,16],[382,24,466,20,"Error"],[382,29,466,25],[382,30,467,12],[382,103,468,10],[382,104,468,11],[383,12,469,8],[384,12,470,8,"gestureEventHandler"],[384,31,470,27],[384,34,470,30,"onGestureEvent"],[384,48,470,44],[385,10,471,6],[385,11,471,7],[385,17,471,13],[386,12,472,8],[386,16,473,10,"onGestureHandlerEvent"],[386,37,473,31],[386,41,474,10],[386,48,474,17,"onGestureHandlerEvent"],[386,69,474,38],[386,74,474,43],[386,84,474,53],[386,86,475,10],[387,14,476,10],[387,20,476,16],[387,24,476,20,"Error"],[387,29,476,25],[387,30,477,12],[387,103,478,10],[387,104,478,11],[388,12,479,8],[389,10,480,6],[390,10,482,6],[390,14,482,10,"gestureStateEventHandler"],[390,38,482,34],[390,41,482,37],[390,45,482,41],[390,46,482,42,"onGestureHandlerStateChange"],[390,73,482,69],[391,10,483,6],[393,10,488,6],[393,14,488,6,"_this$props2"],[393,26,488,6],[393,29,491,40],[393,33,491,44],[393,34,491,45,"props"],[393,39,491,50],[394,12,489,8,"onHandlerStateChange"],[394,32,489,28],[394,35,489,28,"_this$props2"],[394,47,489,28],[394,48,489,8,"onHandlerStateChange"],[394,68,489,28],[395,12,490,8,"onGestureHandlerStateChange"],[395,39,490,35],[395,42,490,35,"_this$props2"],[395,54,490,35],[395,55,490,8,"onGestureHandlerStateChange"],[395,82,490,35],[396,10,492,6],[396,14,492,10,"onHandlerStateChange"],[396,34,492,30],[396,38,492,34],[396,45,492,41,"onHandlerStateChange"],[396,65,492,61],[396,70,492,66],[396,80,492,76],[396,82,492,78],[397,12,493,8],[398,12,494,8],[399,12,495,8],[400,12,496,8],[400,16,496,12,"onGestureHandlerStateChange"],[400,43,496,39],[400,45,496,41],[401,14,497,10],[401,20,497,16],[401,24,497,20,"Error"],[401,29,497,25],[401,30,498,12],[401,103,499,10],[401,104,499,11],[402,12,500,8],[403,12,501,8,"gestureStateEventHandler"],[403,36,501,32],[403,39,501,35,"onHandlerStateChange"],[403,59,501,55],[404,10,502,6],[404,11,502,7],[404,17,502,13],[405,12,503,8],[405,16,504,10,"onGestureHandlerStateChange"],[405,43,504,37],[405,47,505,10],[405,54,505,17,"onGestureHandlerStateChange"],[405,81,505,44],[405,86,505,49],[405,96,505,59],[405,98,506,10],[406,14,507,10],[406,20,507,16],[406,24,507,20,"Error"],[406,29,507,25],[406,30,508,12],[406,103,509,10],[406,104,509,11],[407,12,510,8],[408,10,511,6],[409,10,512,6],[409,14,512,12,"events"],[409,20,512,18],[409,23,512,21],[410,12,513,8,"onGestureHandlerEvent"],[410,33,513,29],[410,35,513,31],[410,39,513,35],[410,40,513,36,"state"],[410,45,513,41],[410,46,513,42,"allowTouches"],[410,58,513,54],[410,61,514,12,"gestureEventHandler"],[410,80,514,31],[410,83,515,12,"undefined"],[410,92,515,21],[411,12,516,8,"onGestureHandlerStateChange"],[411,39,516,35],[411,41,516,37],[411,45,516,41],[411,46,516,42,"state"],[411,51,516,47],[411,52,516,48,"allowTouches"],[411,64,516,60],[411,67,517,12,"gestureStateEventHandler"],[411,91,517,36],[411,94,518,12,"undefined"],[412,10,519,6],[412,11,519,7],[413,10,521,6],[413,14,521,10],[413,15,521,11,"propsRef"],[413,23,521,19],[413,24,521,20,"current"],[413,31,521,27],[413,34,521,30,"events"],[413,40,521,36],[414,10,523,6],[414,14,523,10,"child"],[414,19,523,20],[414,22,523,23],[414,26,523,27],[415,10,524,6],[415,14,524,10],[416,12,525,8,"child"],[416,17,525,13],[416,20,525,16,"React"],[416,25,525,21],[416,26,525,22,"Children"],[416,34,525,30],[416,35,525,31,"only"],[416,39,525,35],[416,40,525,36],[416,44,525,40],[416,45,525,41,"props"],[416,50,525,46],[416,51,525,47,"children"],[416,59,525,55],[416,60,525,56],[417,10,526,6],[417,11,526,7],[417,12,526,8],[417,19,526,15,"e"],[417,20,526,16],[417,22,526,18],[418,12,527,8],[418,18,527,14],[418,22,527,18,"Error"],[418,27,527,23],[418,28,528,10],[418,32,528,10,"tagMessage"],[418,39,528,20],[418,40,528,20,"tagMessage"],[418,50,528,20],[418,52,529,12],[418,55,529,15,"name"],[418,59,529,19],[418,215,530,10],[418,216,531,8],[418,217,531,9],[419,10,532,6],[420,10,534,6],[420,14,534,10,"grandChildren"],[420,27,534,23],[420,30,534,26,"child"],[420,35,534,31],[420,36,534,32,"props"],[420,41,534,37],[420,42,534,38,"children"],[420,50,534,46],[421,10,535,6],[421,14,536,8,"__DEV__"],[421,21,536,15],[421,25,537,8,"child"],[421,30,537,13],[421,31,537,14,"type"],[421,35,537,18],[421,40,538,9,"child"],[421,45,538,14],[421,46,538,15,"type"],[421,50,538,19],[421,55,538,24],[421,79,538,48],[421,83,539,10,"child"],[421,88,539,15],[421,89,539,16,"type"],[421,93,539,20],[421,94,539,21,"name"],[421,98,539,25],[421,103,539,30],[421,109,539,36],[421,113,540,10,"child"],[421,118,540,15],[421,119,540,16,"type"],[421,123,540,20],[421,124,540,21,"displayName"],[421,135,540,32],[421,140,540,37],[421,146,540,43],[421,147,540,44],[421,149,541,8],[422,12,542,8,"grandChildren"],[422,25,542,21],[422,28,542,24,"React"],[422,33,542,29],[422,34,542,30,"Children"],[422,42,542,38],[422,43,542,39,"toArray"],[422,50,542,46],[422,51,542,47,"grandChildren"],[422,64,542,60],[422,65,542,61],[423,12,543,8,"grandChildren"],[423,25,543,21],[423,26,543,22,"push"],[423,30,543,26],[423,44,544,10],[423,48,544,10,"_reactJsxDevRuntime"],[423,67,544,10],[423,68,544,10,"jsxDEV"],[423,74,544,10],[423,76,544,11,"_PressabilityDebugView"],[423,98,544,32],[423,99,544,32,"PressabilityDebugView"],[423,120,544,32],[424,14,546,12,"color"],[424,19,546,17],[424,21,546,18],[424,40,546,37],[425,14,547,12,"hitSlop"],[425,21,547,19],[425,23,547,21,"child"],[425,28,547,26],[425,29,547,27,"props"],[425,34,547,32],[425,35,547,33,"hitSlop"],[426,12,547,41],[426,15,545,16],[426,38,545,39],[427,14,545,39,"fileName"],[427,22,545,39],[427,24,545,39,"_jsxFileName"],[427,36,545,39],[428,14,545,39,"lineNumber"],[428,24,545,39],[429,14,545,39,"columnNumber"],[429,26,545,39],[430,12,545,39],[430,19,548,11],[430,20,549,8],[430,21,549,9],[431,10,550,6],[432,10,552,6],[432,30,552,13,"React"],[432,35,552,18],[432,36,552,19,"cloneElement"],[432,48,552,31],[432,49,553,8,"child"],[432,54,553,13],[432,56,554,8],[433,12,555,10,"ref"],[433,15,555,13],[433,17,555,15],[433,21,555,19],[433,22,555,20,"refHandler"],[433,32,555,30],[434,12,556,10,"collapsable"],[434,23,556,21],[434,25,556,23],[434,30,556,28],[435,12,557,10],[435,16,557,14],[435,20,557,14,"isTestEnv"],[435,27,557,23],[435,28,557,23,"isTestEnv"],[435,37,557,23],[435,39,557,24],[435,40,557,25],[435,43,558,14],[436,14,559,16,"handlerType"],[436,25,559,27],[436,27,559,29,"name"],[436,31,559,33],[437,14,560,16,"handlerTag"],[437,24,560,26],[437,26,560,28],[437,30,560,32],[437,31,560,33,"handlerTag"],[437,41,560,43],[438,14,561,16,"enabled"],[438,21,561,23],[438,23,561,25],[438,27,561,29],[438,28,561,30,"props"],[438,33,561,35],[438,34,561,36,"enabled"],[439,12,562,14],[439,13,562,15],[439,16,563,14],[439,17,563,15],[439,18,563,16],[439,19,563,17],[440,12,564,10,"testID"],[440,18,564,16],[440,20,564,18],[440,24,564,22],[440,25,564,23,"props"],[440,30,564,28],[440,31,564,29,"testID"],[440,37,564,35],[440,41,564,39,"child"],[440,46,564,44],[440,47,564,45,"props"],[440,52,564,50],[440,53,564,51,"testID"],[440,59,564,57],[441,12,565,10],[441,15,565,13,"events"],[442,10,566,8],[442,11,566,9],[442,13,567,8,"grandChildren"],[442,26,568,6],[442,27,568,7],[443,8,569,4],[444,6,569,5],[445,4,569,5],[445,6,182,24,"React"],[445,11,182,29],[445,12,182,30,"Component"],[445,21,182,39],[446,4,182,8,"Handler"],[446,11,182,15],[446,12,186,11,"displayName"],[446,23,186,22],[446,26,186,25,"name"],[446,30,186,29],[447,4,182,8,"Handler"],[447,11,182,15],[447,12,187,11,"contextType"],[447,23,187,22],[447,26,187,25,"GestureHandlerRootViewContext"],[447,55,187,54],[447,56,187,54,"default"],[447,63,187,54],[448,4,571,2],[448,11,571,9,"Handler"],[448,18,571,16],[449,2,572,0],[450,0,572,1],[450,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCC2F;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDY;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTiB;mCUE;KVW;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcG;KdQ;IeE;Kf4H;GDC;CRE"},"hasCjsExports":false},"type":"js/module"}]}