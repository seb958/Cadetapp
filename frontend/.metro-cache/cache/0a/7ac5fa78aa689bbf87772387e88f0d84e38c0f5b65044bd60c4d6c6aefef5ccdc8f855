{"dependencies":[{"name":"../../PointerType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":48,"index":63}}],"key":"PNpP2j+zRZwLQ3w6ZmXPMJNakiU=","exportNames":["*"],"imports":1}},{"name":"../../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":64},"end":{"line":4,"column":36,"index":100}}],"key":"WEWPBXLBFeeryzJLF/iqxrLBTrA=","exportNames":["*"],"imports":1}},{"name":"./PointerTracker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":101},"end":{"line":5,"column":46,"index":147}}],"key":"1iEqYtl129GsycZ0U5VpXvfk4T0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return GestureHandlerOrchestrator;\n    }\n  });\n  var _PointerType = require(_dependencyMap[0], \"../../PointerType\");\n  var _State = require(_dependencyMap[1], \"../../State\");\n  var _PointerTracker = require(_dependencyMap[2], \"./PointerTracker\");\n  var PointerTracker = _interopDefault(_PointerTracker);\n  class GestureHandlerOrchestrator {\n    gestureHandlers = [];\n    awaitingHandlers = [];\n    awaitingHandlersTags = new Set();\n    handlingChangeSemaphore = 0;\n    activationIndex = 0;\n\n    // Private beacuse of Singleton\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    constructor() {}\n    scheduleFinishedHandlersCleanup() {\n      if (this.handlingChangeSemaphore === 0) {\n        this.cleanupFinishedHandlers();\n      }\n    }\n    cleanHandler(handler) {\n      handler.reset();\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_VALUE;\n    }\n    removeHandlerFromOrchestrator(handler) {\n      const indexInGestureHandlers = this.gestureHandlers.indexOf(handler);\n      const indexInAwaitingHandlers = this.awaitingHandlers.indexOf(handler);\n      if (indexInGestureHandlers >= 0) {\n        this.gestureHandlers.splice(indexInGestureHandlers, 1);\n      }\n      if (indexInAwaitingHandlers >= 0) {\n        this.awaitingHandlers.splice(indexInAwaitingHandlers, 1);\n        this.awaitingHandlersTags.delete(handler.handlerTag);\n      }\n    }\n    cleanupFinishedHandlers() {\n      const handlersToRemove = new Set();\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        const handler = this.gestureHandlers[i];\n        if (this.isFinished(handler.state) && !handler.awaiting) {\n          this.cleanHandler(handler);\n          handlersToRemove.add(handler);\n        }\n      }\n      this.gestureHandlers = this.gestureHandlers.filter(handler => !handlersToRemove.has(handler));\n    }\n    hasOtherHandlerToWaitFor(handler) {\n      const hasToWaitFor = otherHandler => {\n        return !this.isFinished(otherHandler.state) && this.shouldHandlerWaitForOther(handler, otherHandler);\n      };\n      return this.gestureHandlers.some(hasToWaitFor);\n    }\n    shouldBeCancelledByFinishedHandler(handler) {\n      const shouldBeCancelled = otherHandler => {\n        return this.shouldHandlerWaitForOther(handler, otherHandler) && otherHandler.state === _State.State.END;\n      };\n      return this.gestureHandlers.some(shouldBeCancelled);\n    }\n    tryActivate(handler) {\n      if (this.shouldBeCancelledByFinishedHandler(handler)) {\n        handler.cancel();\n        return;\n      }\n      if (this.hasOtherHandlerToWaitFor(handler)) {\n        this.addAwaitingHandler(handler);\n        return;\n      }\n      const handlerState = handler.state;\n      if (handlerState === _State.State.CANCELLED || handlerState === _State.State.FAILED) {\n        return;\n      }\n      if (this.shouldActivate(handler)) {\n        this.makeActive(handler);\n        return;\n      }\n      if (handlerState === _State.State.ACTIVE) {\n        handler.fail();\n        return;\n      }\n      if (handlerState === _State.State.BEGAN) {\n        handler.cancel();\n      }\n    }\n    shouldActivate(handler) {\n      const shouldBeCancelledBy = otherHandler => {\n        return this.shouldHandlerBeCancelledBy(handler, otherHandler);\n      };\n      return !this.gestureHandlers.some(shouldBeCancelledBy);\n    }\n    cleanupAwaitingHandlers(handler) {\n      const shouldWait = otherHandler => {\n        return !otherHandler.awaiting && this.shouldHandlerWaitForOther(otherHandler, handler);\n      };\n      for (const otherHandler of this.awaitingHandlers) {\n        if (shouldWait(otherHandler)) {\n          this.cleanHandler(otherHandler);\n          this.awaitingHandlersTags.delete(otherHandler.handlerTag);\n        }\n      }\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => this.awaitingHandlersTags.has(otherHandler.handlerTag));\n    }\n    onHandlerStateChange(handler, newState, oldState, sendIfDisabled) {\n      if (!handler.enabled && !sendIfDisabled) {\n        return;\n      }\n      this.handlingChangeSemaphore += 1;\n      if (this.isFinished(newState)) {\n        for (const otherHandler of this.awaitingHandlers) {\n          if (!this.shouldHandlerWaitForOther(otherHandler, handler) || !this.awaitingHandlersTags.has(otherHandler.handlerTag)) {\n            continue;\n          }\n          if (newState !== _State.State.END) {\n            this.tryActivate(otherHandler);\n            continue;\n          }\n          otherHandler.cancel();\n          if (otherHandler.state === _State.State.END) {\n            // Handle edge case, where discrete gestures end immediately after activation thus\n            // their state is set to END and when the gesture they are waiting for activates they\n            // should be cancelled, however `cancel` was never sent as gestures were already in the END state.\n            // Send synthetic BEGAN -> CANCELLED to properly handle JS logic\n            otherHandler.sendEvent(_State.State.CANCELLED, _State.State.BEGAN);\n          }\n          otherHandler.awaiting = false;\n        }\n      }\n      if (newState === _State.State.ACTIVE) {\n        this.tryActivate(handler);\n      } else if (oldState === _State.State.ACTIVE || oldState === _State.State.END) {\n        if (handler.active) {\n          handler.sendEvent(newState, oldState);\n        } else if (oldState === _State.State.ACTIVE && (newState === _State.State.CANCELLED || newState === _State.State.FAILED)) {\n          handler.sendEvent(newState, _State.State.BEGAN);\n        }\n      } else if (oldState !== _State.State.UNDETERMINED || newState !== _State.State.CANCELLED) {\n        handler.sendEvent(newState, oldState);\n      }\n      this.handlingChangeSemaphore -= 1;\n      this.scheduleFinishedHandlersCleanup();\n      if (!this.awaitingHandlers.includes(handler)) {\n        this.cleanupAwaitingHandlers(handler);\n      }\n    }\n    makeActive(handler) {\n      const currentState = handler.state;\n      handler.active = true;\n      handler.shouldResetProgress = true;\n      handler.activationIndex = this.activationIndex++;\n      for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n        if (this.shouldHandlerBeCancelledBy(this.gestureHandlers[i], handler)) {\n          this.gestureHandlers[i].cancel();\n        }\n      }\n      for (const otherHandler of this.awaitingHandlers) {\n        if (this.shouldHandlerBeCancelledBy(otherHandler, handler)) {\n          otherHandler.awaiting = false;\n        }\n      }\n      handler.sendEvent(_State.State.ACTIVE, _State.State.BEGAN);\n      if (currentState !== _State.State.ACTIVE) {\n        handler.sendEvent(_State.State.END, _State.State.ACTIVE);\n        if (currentState !== _State.State.END) {\n          handler.sendEvent(_State.State.UNDETERMINED, _State.State.END);\n        }\n      }\n      if (!handler.awaiting) {\n        return;\n      }\n      handler.awaiting = false;\n      this.awaitingHandlers = this.awaitingHandlers.filter(otherHandler => otherHandler !== handler);\n    }\n    addAwaitingHandler(handler) {\n      if (this.awaitingHandlers.includes(handler)) {\n        return;\n      }\n      this.awaitingHandlers.push(handler);\n      this.awaitingHandlersTags.add(handler.handlerTag);\n      handler.awaiting = true;\n      handler.activationIndex = this.activationIndex++;\n    }\n    recordHandlerIfNotPresent(handler) {\n      if (this.gestureHandlers.includes(handler)) {\n        return;\n      }\n      this.gestureHandlers.push(handler);\n      handler.active = false;\n      handler.awaiting = false;\n      handler.activationIndex = Number.MAX_SAFE_INTEGER;\n    }\n    shouldHandlerWaitForOther(handler, otherHandler) {\n      return handler !== otherHandler && (handler.shouldWaitForHandlerFailure(otherHandler) || otherHandler.shouldRequireToWaitForFailure(handler));\n    }\n    canRunSimultaneously(gh1, gh2) {\n      return gh1 === gh2 || gh1.shouldRecognizeSimultaneously(gh2) || gh2.shouldRecognizeSimultaneously(gh1);\n    }\n    shouldHandlerBeCancelledBy(handler, otherHandler) {\n      if (this.canRunSimultaneously(handler, otherHandler)) {\n        return false;\n      }\n      if (handler.awaiting || handler.state === _State.State.ACTIVE) {\n        return handler.shouldBeCancelledByOther(otherHandler);\n      }\n      const handlerPointers = handler.getTrackedPointersID();\n      const otherPointers = otherHandler.getTrackedPointersID();\n      if (!PointerTracker.default.shareCommonPointers(handlerPointers, otherPointers) && handler.delegate.view !== otherHandler.delegate.view) {\n        return this.checkOverlap(handler, otherHandler);\n      }\n      return true;\n    }\n    checkOverlap(handler, otherHandler) {\n      // If handlers don't have common pointers, default return value is false.\n      // However, if at least on pointer overlaps with both handlers, we return true\n      // This solves issue in overlapping parents example\n\n      // TODO: Find better way to handle that issue, for example by activation order and handler cancelling\n\n      const isPointerWithinBothBounds = pointer => {\n        const point = handler.tracker.getLastAbsoluteCoords(pointer);\n        return point && handler.delegate.isPointerInBounds(point) && otherHandler.delegate.isPointerInBounds(point);\n      };\n      return handler.getTrackedPointersID().some(isPointerWithinBothBounds);\n    }\n    isFinished(state) {\n      return state === _State.State.END || state === _State.State.FAILED || state === _State.State.CANCELLED;\n    }\n\n    // This function is called when handler receives touchdown event\n    // If handler is using mouse or pen as a pointer and any handler receives touch event,\n    // mouse/pen event dissappears - it doesn't send onPointerCancel nor onPointerUp (and others)\n    // This became a problem because handler was left at active state without any signal to end or fail\n    // To handle this, when new touch event is received, we loop through active handlers and check which type of\n    // pointer they're using. If there are any handler with mouse/pen as a pointer, we cancel them\n    cancelMouseAndPenGestures(currentHandler) {\n      this.gestureHandlers.forEach(handler => {\n        if (handler.pointerType !== _PointerType.PointerType.MOUSE && handler.pointerType !== _PointerType.PointerType.STYLUS) {\n          return;\n        }\n        if (handler !== currentHandler) {\n          handler.cancel();\n        } else {\n          // Handler that received touch event should have its pointer tracker reset\n          // This allows handler to smoothly change from mouse/pen to touch\n          // The drawback is, that when we try to use mouse/pen one more time, it doesn't send onPointerDown at the first time\n          // so it is required to click two times to get handler to work\n          //\n          // However, handler will receive manually created onPointerEnter that is triggered in EventManager in onPointerMove method.\n          // There may be possibility to use that fact to make handler respond properly to first mouse click\n          handler.tracker.resetTracker();\n        }\n      });\n    }\n    static get instance() {\n      if (!GestureHandlerOrchestrator._instance) {\n        GestureHandlerOrchestrator._instance = new GestureHandlerOrchestrator();\n      }\n      return GestureHandlerOrchestrator._instance;\n    }\n  }\n});","lineCount":277,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,6,15,"Object"],[12,8,6,15],[12,9,6,15,"defineProperty"],[12,23,6,15],[12,24,6,15,"exports"],[12,31,6,15],[13,4,6,15,"enumerable"],[13,14,6,15],[14,4,6,15,"get"],[14,7,6,15],[14,18,6,15,"get"],[14,19,6,15],[15,6,6,15],[15,13,6,15,"GestureHandlerOrchestrator"],[15,39,6,15],[16,4,6,15],[17,2,6,15],[18,2,3,0],[18,6,3,0,"_PointerType"],[18,18,3,0],[18,21,3,0,"require"],[18,28,3,0],[18,29,3,0,"_dependencyMap"],[18,43,3,0],[19,2,4,0],[19,6,4,0,"_State"],[19,12,4,0],[19,15,4,0,"require"],[19,22,4,0],[19,23,4,0,"_dependencyMap"],[19,37,4,0],[20,2,5,0],[20,6,5,0,"_PointerTracker"],[20,21,5,0],[20,24,5,0,"require"],[20,31,5,0],[20,32,5,0,"_dependencyMap"],[20,46,5,0],[21,2,5,0],[21,6,5,0,"PointerTracker"],[21,20,5,0],[21,23,5,0,"_interopDefault"],[21,38,5,0],[21,39,5,0,"_PointerTracker"],[21,54,5,0],[22,2,6,15],[22,8,6,21,"GestureHandlerOrchestrator"],[22,34,6,47],[22,35,6,48],[23,4,7,2,"gestureHandlers"],[23,19,7,17],[23,22,7,20],[23,24,7,22],[24,4,8,2,"awaitingHandlers"],[24,20,8,18],[24,23,8,21],[24,25,8,23],[25,4,9,2,"awaitingHandlersTags"],[25,24,9,22],[25,27,9,25],[25,31,9,29,"Set"],[25,34,9,32],[25,35,9,33],[25,36,9,34],[26,4,10,2,"handlingChangeSemaphore"],[26,27,10,25],[26,30,10,28],[26,31,10,29],[27,4,11,2,"activationIndex"],[27,19,11,17],[27,22,11,20],[27,23,11,21],[29,4,13,2],[30,4,14,2],[31,4,15,2,"constructor"],[31,15,15,13,"constructor"],[31,16,15,13],[31,18,15,16],[31,19,15,17],[32,4,16,2,"scheduleFinishedHandlersCleanup"],[32,35,16,33,"scheduleFinishedHandlersCleanup"],[32,36,16,33],[32,38,16,36],[33,6,17,4],[33,10,17,8],[33,14,17,12],[33,15,17,13,"handlingChangeSemaphore"],[33,38,17,36],[33,43,17,41],[33,44,17,42],[33,46,17,44],[34,8,18,6],[34,12,18,10],[34,13,18,11,"cleanupFinishedHandlers"],[34,36,18,34],[34,37,18,35],[34,38,18,36],[35,6,19,4],[36,4,20,2],[37,4,21,2,"cleanHandler"],[37,16,21,14,"cleanHandler"],[37,17,21,15,"handler"],[37,24,21,22],[37,26,21,24],[38,6,22,4,"handler"],[38,13,22,11],[38,14,22,12,"reset"],[38,19,22,17],[38,20,22,18],[38,21,22,19],[39,6,23,4,"handler"],[39,13,23,11],[39,14,23,12,"active"],[39,20,23,18],[39,23,23,21],[39,28,23,26],[40,6,24,4,"handler"],[40,13,24,11],[40,14,24,12,"awaiting"],[40,22,24,20],[40,25,24,23],[40,30,24,28],[41,6,25,4,"handler"],[41,13,25,11],[41,14,25,12,"activationIndex"],[41,29,25,27],[41,32,25,30,"Number"],[41,38,25,36],[41,39,25,37,"MAX_VALUE"],[41,48,25,46],[42,4,26,2],[43,4,27,2,"removeHandlerFromOrchestrator"],[43,33,27,31,"removeHandlerFromOrchestrator"],[43,34,27,32,"handler"],[43,41,27,39],[43,43,27,41],[44,6,28,4],[44,12,28,10,"indexInGestureHandlers"],[44,34,28,32],[44,37,28,35],[44,41,28,39],[44,42,28,40,"gestureHandlers"],[44,57,28,55],[44,58,28,56,"indexOf"],[44,65,28,63],[44,66,28,64,"handler"],[44,73,28,71],[44,74,28,72],[45,6,29,4],[45,12,29,10,"indexInAwaitingHandlers"],[45,35,29,33],[45,38,29,36],[45,42,29,40],[45,43,29,41,"awaitingHandlers"],[45,59,29,57],[45,60,29,58,"indexOf"],[45,67,29,65],[45,68,29,66,"handler"],[45,75,29,73],[45,76,29,74],[46,6,30,4],[46,10,30,8,"indexInGestureHandlers"],[46,32,30,30],[46,36,30,34],[46,37,30,35],[46,39,30,37],[47,8,31,6],[47,12,31,10],[47,13,31,11,"gestureHandlers"],[47,28,31,26],[47,29,31,27,"splice"],[47,35,31,33],[47,36,31,34,"indexInGestureHandlers"],[47,58,31,56],[47,60,31,58],[47,61,31,59],[47,62,31,60],[48,6,32,4],[49,6,33,4],[49,10,33,8,"indexInAwaitingHandlers"],[49,33,33,31],[49,37,33,35],[49,38,33,36],[49,40,33,38],[50,8,34,6],[50,12,34,10],[50,13,34,11,"awaitingHandlers"],[50,29,34,27],[50,30,34,28,"splice"],[50,36,34,34],[50,37,34,35,"indexInAwaitingHandlers"],[50,60,34,58],[50,62,34,60],[50,63,34,61],[50,64,34,62],[51,8,35,6],[51,12,35,10],[51,13,35,11,"awaitingHandlersTags"],[51,33,35,31],[51,34,35,32,"delete"],[51,40,35,38],[51,41,35,39,"handler"],[51,48,35,46],[51,49,35,47,"handlerTag"],[51,59,35,57],[51,60,35,58],[52,6,36,4],[53,4,37,2],[54,4,38,2,"cleanupFinishedHandlers"],[54,27,38,25,"cleanupFinishedHandlers"],[54,28,38,25],[54,30,38,28],[55,6,39,4],[55,12,39,10,"handlersToRemove"],[55,28,39,26],[55,31,39,29],[55,35,39,33,"Set"],[55,38,39,36],[55,39,39,37],[55,40,39,38],[56,6,40,4],[56,11,40,9],[56,15,40,13,"i"],[56,16,40,14],[56,19,40,17],[56,23,40,21],[56,24,40,22,"gestureHandlers"],[56,39,40,37],[56,40,40,38,"length"],[56,46,40,44],[56,49,40,47],[56,50,40,48],[56,52,40,50,"i"],[56,53,40,51],[56,57,40,55],[56,58,40,56],[56,60,40,58],[56,62,40,60,"i"],[56,63,40,61],[56,65,40,63],[57,8,41,6],[57,14,41,12,"handler"],[57,21,41,19],[57,24,41,22],[57,28,41,26],[57,29,41,27,"gestureHandlers"],[57,44,41,42],[57,45,41,43,"i"],[57,46,41,44],[57,47,41,45],[58,8,42,6],[58,12,42,10],[58,16,42,14],[58,17,42,15,"isFinished"],[58,27,42,25],[58,28,42,26,"handler"],[58,35,42,33],[58,36,42,34,"state"],[58,41,42,39],[58,42,42,40],[58,46,42,44],[58,47,42,45,"handler"],[58,54,42,52],[58,55,42,53,"awaiting"],[58,63,42,61],[58,65,42,63],[59,10,43,8],[59,14,43,12],[59,15,43,13,"cleanHandler"],[59,27,43,25],[59,28,43,26,"handler"],[59,35,43,33],[59,36,43,34],[60,10,44,8,"handlersToRemove"],[60,26,44,24],[60,27,44,25,"add"],[60,30,44,28],[60,31,44,29,"handler"],[60,38,44,36],[60,39,44,37],[61,8,45,6],[62,6,46,4],[63,6,47,4],[63,10,47,8],[63,11,47,9,"gestureHandlers"],[63,26,47,24],[63,29,47,27],[63,33,47,31],[63,34,47,32,"gestureHandlers"],[63,49,47,47],[63,50,47,48,"filter"],[63,56,47,54],[63,57,47,55,"handler"],[63,64,47,62],[63,68,47,66],[63,69,47,67,"handlersToRemove"],[63,85,47,83],[63,86,47,84,"has"],[63,89,47,87],[63,90,47,88,"handler"],[63,97,47,95],[63,98,47,96],[63,99,47,97],[64,4,48,2],[65,4,49,2,"hasOtherHandlerToWaitFor"],[65,28,49,26,"hasOtherHandlerToWaitFor"],[65,29,49,27,"handler"],[65,36,49,34],[65,38,49,36],[66,6,50,4],[66,12,50,10,"hasToWaitFor"],[66,24,50,22],[66,27,50,25,"otherHandler"],[66,39,50,37],[66,43,50,41],[67,8,51,6],[67,15,51,13],[67,16,51,14],[67,20,51,18],[67,21,51,19,"isFinished"],[67,31,51,29],[67,32,51,30,"otherHandler"],[67,44,51,42],[67,45,51,43,"state"],[67,50,51,48],[67,51,51,49],[67,55,51,53],[67,59,51,57],[67,60,51,58,"shouldHandlerWaitForOther"],[67,85,51,83],[67,86,51,84,"handler"],[67,93,51,91],[67,95,51,93,"otherHandler"],[67,107,51,105],[67,108,51,106],[68,6,52,4],[68,7,52,5],[69,6,53,4],[69,13,53,11],[69,17,53,15],[69,18,53,16,"gestureHandlers"],[69,33,53,31],[69,34,53,32,"some"],[69,38,53,36],[69,39,53,37,"hasToWaitFor"],[69,51,53,49],[69,52,53,50],[70,4,54,2],[71,4,55,2,"shouldBeCancelledByFinishedHandler"],[71,38,55,36,"shouldBeCancelledByFinishedHandler"],[71,39,55,37,"handler"],[71,46,55,44],[71,48,55,46],[72,6,56,4],[72,12,56,10,"shouldBeCancelled"],[72,29,56,27],[72,32,56,30,"otherHandler"],[72,44,56,42],[72,48,56,46],[73,8,57,6],[73,15,57,13],[73,19,57,17],[73,20,57,18,"shouldHandlerWaitForOther"],[73,45,57,43],[73,46,57,44,"handler"],[73,53,57,51],[73,55,57,53,"otherHandler"],[73,67,57,65],[73,68,57,66],[73,72,57,70,"otherHandler"],[73,84,57,82],[73,85,57,83,"state"],[73,90,57,88],[73,95,57,93,"State"],[73,101,57,98],[73,102,57,98,"State"],[73,107,57,98],[73,108,57,99,"END"],[73,111,57,102],[74,6,58,4],[74,7,58,5],[75,6,59,4],[75,13,59,11],[75,17,59,15],[75,18,59,16,"gestureHandlers"],[75,33,59,31],[75,34,59,32,"some"],[75,38,59,36],[75,39,59,37,"shouldBeCancelled"],[75,56,59,54],[75,57,59,55],[76,4,60,2],[77,4,61,2,"tryActivate"],[77,15,61,13,"tryActivate"],[77,16,61,14,"handler"],[77,23,61,21],[77,25,61,23],[78,6,62,4],[78,10,62,8],[78,14,62,12],[78,15,62,13,"shouldBeCancelledByFinishedHandler"],[78,49,62,47],[78,50,62,48,"handler"],[78,57,62,55],[78,58,62,56],[78,60,62,58],[79,8,63,6,"handler"],[79,15,63,13],[79,16,63,14,"cancel"],[79,22,63,20],[79,23,63,21],[79,24,63,22],[80,8,64,6],[81,6,65,4],[82,6,66,4],[82,10,66,8],[82,14,66,12],[82,15,66,13,"hasOtherHandlerToWaitFor"],[82,39,66,37],[82,40,66,38,"handler"],[82,47,66,45],[82,48,66,46],[82,50,66,48],[83,8,67,6],[83,12,67,10],[83,13,67,11,"addAwaitingHandler"],[83,31,67,29],[83,32,67,30,"handler"],[83,39,67,37],[83,40,67,38],[84,8,68,6],[85,6,69,4],[86,6,70,4],[86,12,70,10,"handlerState"],[86,24,70,22],[86,27,70,25,"handler"],[86,34,70,32],[86,35,70,33,"state"],[86,40,70,38],[87,6,71,4],[87,10,71,8,"handlerState"],[87,22,71,20],[87,27,71,25,"State"],[87,33,71,30],[87,34,71,30,"State"],[87,39,71,30],[87,40,71,31,"CANCELLED"],[87,49,71,40],[87,53,71,44,"handlerState"],[87,65,71,56],[87,70,71,61,"State"],[87,76,71,66],[87,77,71,66,"State"],[87,82,71,66],[87,83,71,67,"FAILED"],[87,89,71,73],[87,91,71,75],[88,8,72,6],[89,6,73,4],[90,6,74,4],[90,10,74,8],[90,14,74,12],[90,15,74,13,"shouldActivate"],[90,29,74,27],[90,30,74,28,"handler"],[90,37,74,35],[90,38,74,36],[90,40,74,38],[91,8,75,6],[91,12,75,10],[91,13,75,11,"makeActive"],[91,23,75,21],[91,24,75,22,"handler"],[91,31,75,29],[91,32,75,30],[92,8,76,6],[93,6,77,4],[94,6,78,4],[94,10,78,8,"handlerState"],[94,22,78,20],[94,27,78,25,"State"],[94,33,78,30],[94,34,78,30,"State"],[94,39,78,30],[94,40,78,31,"ACTIVE"],[94,46,78,37],[94,48,78,39],[95,8,79,6,"handler"],[95,15,79,13],[95,16,79,14,"fail"],[95,20,79,18],[95,21,79,19],[95,22,79,20],[96,8,80,6],[97,6,81,4],[98,6,82,4],[98,10,82,8,"handlerState"],[98,22,82,20],[98,27,82,25,"State"],[98,33,82,30],[98,34,82,30,"State"],[98,39,82,30],[98,40,82,31,"BEGAN"],[98,45,82,36],[98,47,82,38],[99,8,83,6,"handler"],[99,15,83,13],[99,16,83,14,"cancel"],[99,22,83,20],[99,23,83,21],[99,24,83,22],[100,6,84,4],[101,4,85,2],[102,4,86,2,"shouldActivate"],[102,18,86,16,"shouldActivate"],[102,19,86,17,"handler"],[102,26,86,24],[102,28,86,26],[103,6,87,4],[103,12,87,10,"shouldBeCancelledBy"],[103,31,87,29],[103,34,87,32,"otherHandler"],[103,46,87,44],[103,50,87,48],[104,8,88,6],[104,15,88,13],[104,19,88,17],[104,20,88,18,"shouldHandlerBeCancelledBy"],[104,46,88,44],[104,47,88,45,"handler"],[104,54,88,52],[104,56,88,54,"otherHandler"],[104,68,88,66],[104,69,88,67],[105,6,89,4],[105,7,89,5],[106,6,90,4],[106,13,90,11],[106,14,90,12],[106,18,90,16],[106,19,90,17,"gestureHandlers"],[106,34,90,32],[106,35,90,33,"some"],[106,39,90,37],[106,40,90,38,"shouldBeCancelledBy"],[106,59,90,57],[106,60,90,58],[107,4,91,2],[108,4,92,2,"cleanupAwaitingHandlers"],[108,27,92,25,"cleanupAwaitingHandlers"],[108,28,92,26,"handler"],[108,35,92,33],[108,37,92,35],[109,6,93,4],[109,12,93,10,"shouldWait"],[109,22,93,20],[109,25,93,23,"otherHandler"],[109,37,93,35],[109,41,93,39],[110,8,94,6],[110,15,94,13],[110,16,94,14,"otherHandler"],[110,28,94,26],[110,29,94,27,"awaiting"],[110,37,94,35],[110,41,94,39],[110,45,94,43],[110,46,94,44,"shouldHandlerWaitForOther"],[110,71,94,69],[110,72,94,70,"otherHandler"],[110,84,94,82],[110,86,94,84,"handler"],[110,93,94,91],[110,94,94,92],[111,6,95,4],[111,7,95,5],[112,6,96,4],[112,11,96,9],[112,17,96,15,"otherHandler"],[112,29,96,27],[112,33,96,31],[112,37,96,35],[112,38,96,36,"awaitingHandlers"],[112,54,96,52],[112,56,96,54],[113,8,97,6],[113,12,97,10,"shouldWait"],[113,22,97,20],[113,23,97,21,"otherHandler"],[113,35,97,33],[113,36,97,34],[113,38,97,36],[114,10,98,8],[114,14,98,12],[114,15,98,13,"cleanHandler"],[114,27,98,25],[114,28,98,26,"otherHandler"],[114,40,98,38],[114,41,98,39],[115,10,99,8],[115,14,99,12],[115,15,99,13,"awaitingHandlersTags"],[115,35,99,33],[115,36,99,34,"delete"],[115,42,99,40],[115,43,99,41,"otherHandler"],[115,55,99,53],[115,56,99,54,"handlerTag"],[115,66,99,64],[115,67,99,65],[116,8,100,6],[117,6,101,4],[118,6,102,4],[118,10,102,8],[118,11,102,9,"awaitingHandlers"],[118,27,102,25],[118,30,102,28],[118,34,102,32],[118,35,102,33,"awaitingHandlers"],[118,51,102,49],[118,52,102,50,"filter"],[118,58,102,56],[118,59,102,57,"otherHandler"],[118,71,102,69],[118,75,102,73],[118,79,102,77],[118,80,102,78,"awaitingHandlersTags"],[118,100,102,98],[118,101,102,99,"has"],[118,104,102,102],[118,105,102,103,"otherHandler"],[118,117,102,115],[118,118,102,116,"handlerTag"],[118,128,102,126],[118,129,102,127],[118,130,102,128],[119,4,103,2],[120,4,104,2,"onHandlerStateChange"],[120,24,104,22,"onHandlerStateChange"],[120,25,104,23,"handler"],[120,32,104,30],[120,34,104,32,"newState"],[120,42,104,40],[120,44,104,42,"oldState"],[120,52,104,50],[120,54,104,52,"sendIfDisabled"],[120,68,104,66],[120,70,104,68],[121,6,105,4],[121,10,105,8],[121,11,105,9,"handler"],[121,18,105,16],[121,19,105,17,"enabled"],[121,26,105,24],[121,30,105,28],[121,31,105,29,"sendIfDisabled"],[121,45,105,43],[121,47,105,45],[122,8,106,6],[123,6,107,4],[124,6,108,4],[124,10,108,8],[124,11,108,9,"handlingChangeSemaphore"],[124,34,108,32],[124,38,108,36],[124,39,108,37],[125,6,109,4],[125,10,109,8],[125,14,109,12],[125,15,109,13,"isFinished"],[125,25,109,23],[125,26,109,24,"newState"],[125,34,109,32],[125,35,109,33],[125,37,109,35],[126,8,110,6],[126,13,110,11],[126,19,110,17,"otherHandler"],[126,31,110,29],[126,35,110,33],[126,39,110,37],[126,40,110,38,"awaitingHandlers"],[126,56,110,54],[126,58,110,56],[127,10,111,8],[127,14,111,12],[127,15,111,13],[127,19,111,17],[127,20,111,18,"shouldHandlerWaitForOther"],[127,45,111,43],[127,46,111,44,"otherHandler"],[127,58,111,56],[127,60,111,58,"handler"],[127,67,111,65],[127,68,111,66],[127,72,111,70],[127,73,111,71],[127,77,111,75],[127,78,111,76,"awaitingHandlersTags"],[127,98,111,96],[127,99,111,97,"has"],[127,102,111,100],[127,103,111,101,"otherHandler"],[127,115,111,113],[127,116,111,114,"handlerTag"],[127,126,111,124],[127,127,111,125],[127,129,111,127],[128,12,112,10],[129,10,113,8],[130,10,114,8],[130,14,114,12,"newState"],[130,22,114,20],[130,27,114,25,"State"],[130,33,114,30],[130,34,114,30,"State"],[130,39,114,30],[130,40,114,31,"END"],[130,43,114,34],[130,45,114,36],[131,12,115,10],[131,16,115,14],[131,17,115,15,"tryActivate"],[131,28,115,26],[131,29,115,27,"otherHandler"],[131,41,115,39],[131,42,115,40],[132,12,116,10],[133,10,117,8],[134,10,118,8,"otherHandler"],[134,22,118,20],[134,23,118,21,"cancel"],[134,29,118,27],[134,30,118,28],[134,31,118,29],[135,10,119,8],[135,14,119,12,"otherHandler"],[135,26,119,24],[135,27,119,25,"state"],[135,32,119,30],[135,37,119,35,"State"],[135,43,119,40],[135,44,119,40,"State"],[135,49,119,40],[135,50,119,41,"END"],[135,53,119,44],[135,55,119,46],[136,12,120,10],[137,12,121,10],[138,12,122,10],[139,12,123,10],[140,12,124,10,"otherHandler"],[140,24,124,22],[140,25,124,23,"sendEvent"],[140,34,124,32],[140,35,124,33,"State"],[140,41,124,38],[140,42,124,38,"State"],[140,47,124,38],[140,48,124,39,"CANCELLED"],[140,57,124,48],[140,59,124,50,"State"],[140,65,124,55],[140,66,124,55,"State"],[140,71,124,55],[140,72,124,56,"BEGAN"],[140,77,124,61],[140,78,124,62],[141,10,125,8],[142,10,126,8,"otherHandler"],[142,22,126,20],[142,23,126,21,"awaiting"],[142,31,126,29],[142,34,126,32],[142,39,126,37],[143,8,127,6],[144,6,128,4],[145,6,129,4],[145,10,129,8,"newState"],[145,18,129,16],[145,23,129,21,"State"],[145,29,129,26],[145,30,129,26,"State"],[145,35,129,26],[145,36,129,27,"ACTIVE"],[145,42,129,33],[145,44,129,35],[146,8,130,6],[146,12,130,10],[146,13,130,11,"tryActivate"],[146,24,130,22],[146,25,130,23,"handler"],[146,32,130,30],[146,33,130,31],[147,6,131,4],[147,7,131,5],[147,13,131,11],[147,17,131,15,"oldState"],[147,25,131,23],[147,30,131,28,"State"],[147,36,131,33],[147,37,131,33,"State"],[147,42,131,33],[147,43,131,34,"ACTIVE"],[147,49,131,40],[147,53,131,44,"oldState"],[147,61,131,52],[147,66,131,57,"State"],[147,72,131,62],[147,73,131,62,"State"],[147,78,131,62],[147,79,131,63,"END"],[147,82,131,66],[147,84,131,68],[148,8,132,6],[148,12,132,10,"handler"],[148,19,132,17],[148,20,132,18,"active"],[148,26,132,24],[148,28,132,26],[149,10,133,8,"handler"],[149,17,133,15],[149,18,133,16,"sendEvent"],[149,27,133,25],[149,28,133,26,"newState"],[149,36,133,34],[149,38,133,36,"oldState"],[149,46,133,44],[149,47,133,45],[150,8,134,6],[150,9,134,7],[150,15,134,13],[150,19,134,17,"oldState"],[150,27,134,25],[150,32,134,30,"State"],[150,38,134,35],[150,39,134,35,"State"],[150,44,134,35],[150,45,134,36,"ACTIVE"],[150,51,134,42],[150,56,134,47,"newState"],[150,64,134,55],[150,69,134,60,"State"],[150,75,134,65],[150,76,134,65,"State"],[150,81,134,65],[150,82,134,66,"CANCELLED"],[150,91,134,75],[150,95,134,79,"newState"],[150,103,134,87],[150,108,134,92,"State"],[150,114,134,97],[150,115,134,97,"State"],[150,120,134,97],[150,121,134,98,"FAILED"],[150,127,134,104],[150,128,134,105],[150,130,134,107],[151,10,135,8,"handler"],[151,17,135,15],[151,18,135,16,"sendEvent"],[151,27,135,25],[151,28,135,26,"newState"],[151,36,135,34],[151,38,135,36,"State"],[151,44,135,41],[151,45,135,41,"State"],[151,50,135,41],[151,51,135,42,"BEGAN"],[151,56,135,47],[151,57,135,48],[152,8,136,6],[153,6,137,4],[153,7,137,5],[153,13,137,11],[153,17,137,15,"oldState"],[153,25,137,23],[153,30,137,28,"State"],[153,36,137,33],[153,37,137,33,"State"],[153,42,137,33],[153,43,137,34,"UNDETERMINED"],[153,55,137,46],[153,59,137,50,"newState"],[153,67,137,58],[153,72,137,63,"State"],[153,78,137,68],[153,79,137,68,"State"],[153,84,137,68],[153,85,137,69,"CANCELLED"],[153,94,137,78],[153,96,137,80],[154,8,138,6,"handler"],[154,15,138,13],[154,16,138,14,"sendEvent"],[154,25,138,23],[154,26,138,24,"newState"],[154,34,138,32],[154,36,138,34,"oldState"],[154,44,138,42],[154,45,138,43],[155,6,139,4],[156,6,140,4],[156,10,140,8],[156,11,140,9,"handlingChangeSemaphore"],[156,34,140,32],[156,38,140,36],[156,39,140,37],[157,6,141,4],[157,10,141,8],[157,11,141,9,"scheduleFinishedHandlersCleanup"],[157,42,141,40],[157,43,141,41],[157,44,141,42],[158,6,142,4],[158,10,142,8],[158,11,142,9],[158,15,142,13],[158,16,142,14,"awaitingHandlers"],[158,32,142,30],[158,33,142,31,"includes"],[158,41,142,39],[158,42,142,40,"handler"],[158,49,142,47],[158,50,142,48],[158,52,142,50],[159,8,143,6],[159,12,143,10],[159,13,143,11,"cleanupAwaitingHandlers"],[159,36,143,34],[159,37,143,35,"handler"],[159,44,143,42],[159,45,143,43],[160,6,144,4],[161,4,145,2],[162,4,146,2,"makeActive"],[162,14,146,12,"makeActive"],[162,15,146,13,"handler"],[162,22,146,20],[162,24,146,22],[163,6,147,4],[163,12,147,10,"currentState"],[163,24,147,22],[163,27,147,25,"handler"],[163,34,147,32],[163,35,147,33,"state"],[163,40,147,38],[164,6,148,4,"handler"],[164,13,148,11],[164,14,148,12,"active"],[164,20,148,18],[164,23,148,21],[164,27,148,25],[165,6,149,4,"handler"],[165,13,149,11],[165,14,149,12,"shouldResetProgress"],[165,33,149,31],[165,36,149,34],[165,40,149,38],[166,6,150,4,"handler"],[166,13,150,11],[166,14,150,12,"activationIndex"],[166,29,150,27],[166,32,150,30],[166,36,150,34],[166,37,150,35,"activationIndex"],[166,52,150,50],[166,54,150,52],[167,6,151,4],[167,11,151,9],[167,15,151,13,"i"],[167,16,151,14],[167,19,151,17],[167,23,151,21],[167,24,151,22,"gestureHandlers"],[167,39,151,37],[167,40,151,38,"length"],[167,46,151,44],[167,49,151,47],[167,50,151,48],[167,52,151,50,"i"],[167,53,151,51],[167,57,151,55],[167,58,151,56],[167,60,151,58],[167,62,151,60,"i"],[167,63,151,61],[167,65,151,63],[168,8,152,6],[168,12,152,10],[168,16,152,14],[168,17,152,15,"shouldHandlerBeCancelledBy"],[168,43,152,41],[168,44,152,42],[168,48,152,46],[168,49,152,47,"gestureHandlers"],[168,64,152,62],[168,65,152,63,"i"],[168,66,152,64],[168,67,152,65],[168,69,152,67,"handler"],[168,76,152,74],[168,77,152,75],[168,79,152,77],[169,10,153,8],[169,14,153,12],[169,15,153,13,"gestureHandlers"],[169,30,153,28],[169,31,153,29,"i"],[169,32,153,30],[169,33,153,31],[169,34,153,32,"cancel"],[169,40,153,38],[169,41,153,39],[169,42,153,40],[170,8,154,6],[171,6,155,4],[172,6,156,4],[172,11,156,9],[172,17,156,15,"otherHandler"],[172,29,156,27],[172,33,156,31],[172,37,156,35],[172,38,156,36,"awaitingHandlers"],[172,54,156,52],[172,56,156,54],[173,8,157,6],[173,12,157,10],[173,16,157,14],[173,17,157,15,"shouldHandlerBeCancelledBy"],[173,43,157,41],[173,44,157,42,"otherHandler"],[173,56,157,54],[173,58,157,56,"handler"],[173,65,157,63],[173,66,157,64],[173,68,157,66],[174,10,158,8,"otherHandler"],[174,22,158,20],[174,23,158,21,"awaiting"],[174,31,158,29],[174,34,158,32],[174,39,158,37],[175,8,159,6],[176,6,160,4],[177,6,161,4,"handler"],[177,13,161,11],[177,14,161,12,"sendEvent"],[177,23,161,21],[177,24,161,22,"State"],[177,30,161,27],[177,31,161,27,"State"],[177,36,161,27],[177,37,161,28,"ACTIVE"],[177,43,161,34],[177,45,161,36,"State"],[177,51,161,41],[177,52,161,41,"State"],[177,57,161,41],[177,58,161,42,"BEGAN"],[177,63,161,47],[177,64,161,48],[178,6,162,4],[178,10,162,8,"currentState"],[178,22,162,20],[178,27,162,25,"State"],[178,33,162,30],[178,34,162,30,"State"],[178,39,162,30],[178,40,162,31,"ACTIVE"],[178,46,162,37],[178,48,162,39],[179,8,163,6,"handler"],[179,15,163,13],[179,16,163,14,"sendEvent"],[179,25,163,23],[179,26,163,24,"State"],[179,32,163,29],[179,33,163,29,"State"],[179,38,163,29],[179,39,163,30,"END"],[179,42,163,33],[179,44,163,35,"State"],[179,50,163,40],[179,51,163,40,"State"],[179,56,163,40],[179,57,163,41,"ACTIVE"],[179,63,163,47],[179,64,163,48],[180,8,164,6],[180,12,164,10,"currentState"],[180,24,164,22],[180,29,164,27,"State"],[180,35,164,32],[180,36,164,32,"State"],[180,41,164,32],[180,42,164,33,"END"],[180,45,164,36],[180,47,164,38],[181,10,165,8,"handler"],[181,17,165,15],[181,18,165,16,"sendEvent"],[181,27,165,25],[181,28,165,26,"State"],[181,34,165,31],[181,35,165,31,"State"],[181,40,165,31],[181,41,165,32,"UNDETERMINED"],[181,53,165,44],[181,55,165,46,"State"],[181,61,165,51],[181,62,165,51,"State"],[181,67,165,51],[181,68,165,52,"END"],[181,71,165,55],[181,72,165,56],[182,8,166,6],[183,6,167,4],[184,6,168,4],[184,10,168,8],[184,11,168,9,"handler"],[184,18,168,16],[184,19,168,17,"awaiting"],[184,27,168,25],[184,29,168,27],[185,8,169,6],[186,6,170,4],[187,6,171,4,"handler"],[187,13,171,11],[187,14,171,12,"awaiting"],[187,22,171,20],[187,25,171,23],[187,30,171,28],[188,6,172,4],[188,10,172,8],[188,11,172,9,"awaitingHandlers"],[188,27,172,25],[188,30,172,28],[188,34,172,32],[188,35,172,33,"awaitingHandlers"],[188,51,172,49],[188,52,172,50,"filter"],[188,58,172,56],[188,59,172,57,"otherHandler"],[188,71,172,69],[188,75,172,73,"otherHandler"],[188,87,172,85],[188,92,172,90,"handler"],[188,99,172,97],[188,100,172,98],[189,4,173,2],[190,4,174,2,"addAwaitingHandler"],[190,22,174,20,"addAwaitingHandler"],[190,23,174,21,"handler"],[190,30,174,28],[190,32,174,30],[191,6,175,4],[191,10,175,8],[191,14,175,12],[191,15,175,13,"awaitingHandlers"],[191,31,175,29],[191,32,175,30,"includes"],[191,40,175,38],[191,41,175,39,"handler"],[191,48,175,46],[191,49,175,47],[191,51,175,49],[192,8,176,6],[193,6,177,4],[194,6,178,4],[194,10,178,8],[194,11,178,9,"awaitingHandlers"],[194,27,178,25],[194,28,178,26,"push"],[194,32,178,30],[194,33,178,31,"handler"],[194,40,178,38],[194,41,178,39],[195,6,179,4],[195,10,179,8],[195,11,179,9,"awaitingHandlersTags"],[195,31,179,29],[195,32,179,30,"add"],[195,35,179,33],[195,36,179,34,"handler"],[195,43,179,41],[195,44,179,42,"handlerTag"],[195,54,179,52],[195,55,179,53],[196,6,180,4,"handler"],[196,13,180,11],[196,14,180,12,"awaiting"],[196,22,180,20],[196,25,180,23],[196,29,180,27],[197,6,181,4,"handler"],[197,13,181,11],[197,14,181,12,"activationIndex"],[197,29,181,27],[197,32,181,30],[197,36,181,34],[197,37,181,35,"activationIndex"],[197,52,181,50],[197,54,181,52],[198,4,182,2],[199,4,183,2,"recordHandlerIfNotPresent"],[199,29,183,27,"recordHandlerIfNotPresent"],[199,30,183,28,"handler"],[199,37,183,35],[199,39,183,37],[200,6,184,4],[200,10,184,8],[200,14,184,12],[200,15,184,13,"gestureHandlers"],[200,30,184,28],[200,31,184,29,"includes"],[200,39,184,37],[200,40,184,38,"handler"],[200,47,184,45],[200,48,184,46],[200,50,184,48],[201,8,185,6],[202,6,186,4],[203,6,187,4],[203,10,187,8],[203,11,187,9,"gestureHandlers"],[203,26,187,24],[203,27,187,25,"push"],[203,31,187,29],[203,32,187,30,"handler"],[203,39,187,37],[203,40,187,38],[204,6,188,4,"handler"],[204,13,188,11],[204,14,188,12,"active"],[204,20,188,18],[204,23,188,21],[204,28,188,26],[205,6,189,4,"handler"],[205,13,189,11],[205,14,189,12,"awaiting"],[205,22,189,20],[205,25,189,23],[205,30,189,28],[206,6,190,4,"handler"],[206,13,190,11],[206,14,190,12,"activationIndex"],[206,29,190,27],[206,32,190,30,"Number"],[206,38,190,36],[206,39,190,37,"MAX_SAFE_INTEGER"],[206,55,190,53],[207,4,191,2],[208,4,192,2,"shouldHandlerWaitForOther"],[208,29,192,27,"shouldHandlerWaitForOther"],[208,30,192,28,"handler"],[208,37,192,35],[208,39,192,37,"otherHandler"],[208,51,192,49],[208,53,192,51],[209,6,193,4],[209,13,193,11,"handler"],[209,20,193,18],[209,25,193,23,"otherHandler"],[209,37,193,35],[209,42,193,40,"handler"],[209,49,193,47],[209,50,193,48,"shouldWaitForHandlerFailure"],[209,77,193,75],[209,78,193,76,"otherHandler"],[209,90,193,88],[209,91,193,89],[209,95,193,93,"otherHandler"],[209,107,193,105],[209,108,193,106,"shouldRequireToWaitForFailure"],[209,137,193,135],[209,138,193,136,"handler"],[209,145,193,143],[209,146,193,144],[209,147,193,145],[210,4,194,2],[211,4,195,2,"canRunSimultaneously"],[211,24,195,22,"canRunSimultaneously"],[211,25,195,23,"gh1"],[211,28,195,26],[211,30,195,28,"gh2"],[211,33,195,31],[211,35,195,33],[212,6,196,4],[212,13,196,11,"gh1"],[212,16,196,14],[212,21,196,19,"gh2"],[212,24,196,22],[212,28,196,26,"gh1"],[212,31,196,29],[212,32,196,30,"shouldRecognizeSimultaneously"],[212,61,196,59],[212,62,196,60,"gh2"],[212,65,196,63],[212,66,196,64],[212,70,196,68,"gh2"],[212,73,196,71],[212,74,196,72,"shouldRecognizeSimultaneously"],[212,103,196,101],[212,104,196,102,"gh1"],[212,107,196,105],[212,108,196,106],[213,4,197,2],[214,4,198,2,"shouldHandlerBeCancelledBy"],[214,30,198,28,"shouldHandlerBeCancelledBy"],[214,31,198,29,"handler"],[214,38,198,36],[214,40,198,38,"otherHandler"],[214,52,198,50],[214,54,198,52],[215,6,199,4],[215,10,199,8],[215,14,199,12],[215,15,199,13,"canRunSimultaneously"],[215,35,199,33],[215,36,199,34,"handler"],[215,43,199,41],[215,45,199,43,"otherHandler"],[215,57,199,55],[215,58,199,56],[215,60,199,58],[216,8,200,6],[216,15,200,13],[216,20,200,18],[217,6,201,4],[218,6,202,4],[218,10,202,8,"handler"],[218,17,202,15],[218,18,202,16,"awaiting"],[218,26,202,24],[218,30,202,28,"handler"],[218,37,202,35],[218,38,202,36,"state"],[218,43,202,41],[218,48,202,46,"State"],[218,54,202,51],[218,55,202,51,"State"],[218,60,202,51],[218,61,202,52,"ACTIVE"],[218,67,202,58],[218,69,202,60],[219,8,203,6],[219,15,203,13,"handler"],[219,22,203,20],[219,23,203,21,"shouldBeCancelledByOther"],[219,47,203,45],[219,48,203,46,"otherHandler"],[219,60,203,58],[219,61,203,59],[220,6,204,4],[221,6,205,4],[221,12,205,10,"handlerPointers"],[221,27,205,25],[221,30,205,28,"handler"],[221,37,205,35],[221,38,205,36,"getTrackedPointersID"],[221,58,205,56],[221,59,205,57],[221,60,205,58],[222,6,206,4],[222,12,206,10,"otherPointers"],[222,25,206,23],[222,28,206,26,"otherHandler"],[222,40,206,38],[222,41,206,39,"getTrackedPointersID"],[222,61,206,59],[222,62,206,60],[222,63,206,61],[223,6,207,4],[223,10,207,8],[223,11,207,9,"PointerTracker"],[223,25,207,23],[223,26,207,23,"default"],[223,33,207,23],[223,34,207,24,"shareCommonPointers"],[223,53,207,43],[223,54,207,44,"handlerPointers"],[223,69,207,59],[223,71,207,61,"otherPointers"],[223,84,207,74],[223,85,207,75],[223,89,207,79,"handler"],[223,96,207,86],[223,97,207,87,"delegate"],[223,105,207,95],[223,106,207,96,"view"],[223,110,207,100],[223,115,207,105,"otherHandler"],[223,127,207,117],[223,128,207,118,"delegate"],[223,136,207,126],[223,137,207,127,"view"],[223,141,207,131],[223,143,207,133],[224,8,208,6],[224,15,208,13],[224,19,208,17],[224,20,208,18,"checkOverlap"],[224,32,208,30],[224,33,208,31,"handler"],[224,40,208,38],[224,42,208,40,"otherHandler"],[224,54,208,52],[224,55,208,53],[225,6,209,4],[226,6,210,4],[226,13,210,11],[226,17,210,15],[227,4,211,2],[228,4,212,2,"checkOverlap"],[228,16,212,14,"checkOverlap"],[228,17,212,15,"handler"],[228,24,212,22],[228,26,212,24,"otherHandler"],[228,38,212,36],[228,40,212,38],[229,6,213,4],[230,6,214,4],[231,6,215,4],[233,6,217,4],[235,6,219,4],[235,12,219,10,"isPointerWithinBothBounds"],[235,37,219,35],[235,40,219,38,"pointer"],[235,47,219,45],[235,51,219,49],[236,8,220,6],[236,14,220,12,"point"],[236,19,220,17],[236,22,220,20,"handler"],[236,29,220,27],[236,30,220,28,"tracker"],[236,37,220,35],[236,38,220,36,"getLastAbsoluteCoords"],[236,59,220,57],[236,60,220,58,"pointer"],[236,67,220,65],[236,68,220,66],[237,8,221,6],[237,15,221,13,"point"],[237,20,221,18],[237,24,221,22,"handler"],[237,31,221,29],[237,32,221,30,"delegate"],[237,40,221,38],[237,41,221,39,"isPointerInBounds"],[237,58,221,56],[237,59,221,57,"point"],[237,64,221,62],[237,65,221,63],[237,69,221,67,"otherHandler"],[237,81,221,79],[237,82,221,80,"delegate"],[237,90,221,88],[237,91,221,89,"isPointerInBounds"],[237,108,221,106],[237,109,221,107,"point"],[237,114,221,112],[237,115,221,113],[238,6,222,4],[238,7,222,5],[239,6,223,4],[239,13,223,11,"handler"],[239,20,223,18],[239,21,223,19,"getTrackedPointersID"],[239,41,223,39],[239,42,223,40],[239,43,223,41],[239,44,223,42,"some"],[239,48,223,46],[239,49,223,47,"isPointerWithinBothBounds"],[239,74,223,72],[239,75,223,73],[240,4,224,2],[241,4,225,2,"isFinished"],[241,14,225,12,"isFinished"],[241,15,225,13,"state"],[241,20,225,18],[241,22,225,20],[242,6,226,4],[242,13,226,11,"state"],[242,18,226,16],[242,23,226,21,"State"],[242,29,226,26],[242,30,226,26,"State"],[242,35,226,26],[242,36,226,27,"END"],[242,39,226,30],[242,43,226,34,"state"],[242,48,226,39],[242,53,226,44,"State"],[242,59,226,49],[242,60,226,49,"State"],[242,65,226,49],[242,66,226,50,"FAILED"],[242,72,226,56],[242,76,226,60,"state"],[242,81,226,65],[242,86,226,70,"State"],[242,92,226,75],[242,93,226,75,"State"],[242,98,226,75],[242,99,226,76,"CANCELLED"],[242,108,226,85],[243,4,227,2],[245,4,229,2],[246,4,230,2],[247,4,231,2],[248,4,232,2],[249,4,233,2],[250,4,234,2],[251,4,235,2,"cancelMouseAndPenGestures"],[251,29,235,27,"cancelMouseAndPenGestures"],[251,30,235,28,"currentHandler"],[251,44,235,42],[251,46,235,44],[252,6,236,4],[252,10,236,8],[252,11,236,9,"gestureHandlers"],[252,26,236,24],[252,27,236,25,"forEach"],[252,34,236,32],[252,35,236,33,"handler"],[252,42,236,40],[252,46,236,44],[253,8,237,6],[253,12,237,10,"handler"],[253,19,237,17],[253,20,237,18,"pointerType"],[253,31,237,29],[253,36,237,34,"PointerType"],[253,48,237,45],[253,49,237,45,"PointerType"],[253,60,237,45],[253,61,237,46,"MOUSE"],[253,66,237,51],[253,70,237,55,"handler"],[253,77,237,62],[253,78,237,63,"pointerType"],[253,89,237,74],[253,94,237,79,"PointerType"],[253,106,237,90],[253,107,237,90,"PointerType"],[253,118,237,90],[253,119,237,91,"STYLUS"],[253,125,237,97],[253,127,237,99],[254,10,238,8],[255,8,239,6],[256,8,240,6],[256,12,240,10,"handler"],[256,19,240,17],[256,24,240,22,"currentHandler"],[256,38,240,36],[256,40,240,38],[257,10,241,8,"handler"],[257,17,241,15],[257,18,241,16,"cancel"],[257,24,241,22],[257,25,241,23],[257,26,241,24],[258,8,242,6],[258,9,242,7],[258,15,242,13],[259,10,243,8],[260,10,244,8],[261,10,245,8],[262,10,246,8],[263,10,247,8],[264,10,248,8],[265,10,249,8],[266,10,250,8,"handler"],[266,17,250,15],[266,18,250,16,"tracker"],[266,25,250,23],[266,26,250,24,"resetTracker"],[266,38,250,36],[266,39,250,37],[266,40,250,38],[267,8,251,6],[268,6,252,4],[268,7,252,5],[268,8,252,6],[269,4,253,2],[270,4,254,2],[270,15,254,13,"instance"],[270,23,254,21,"instance"],[270,24,254,21],[270,26,254,24],[271,6,255,4],[271,10,255,8],[271,11,255,9,"GestureHandlerOrchestrator"],[271,37,255,35],[271,38,255,36,"_instance"],[271,47,255,45],[271,49,255,47],[272,8,256,6,"GestureHandlerOrchestrator"],[272,34,256,32],[272,35,256,33,"_instance"],[272,44,256,42],[272,47,256,45],[272,51,256,49,"GestureHandlerOrchestrator"],[272,77,256,75],[272,78,256,76],[272,79,256,77],[273,6,257,4],[274,6,258,4],[274,13,258,11,"GestureHandlerOrchestrator"],[274,39,258,37],[274,40,258,38,"_instance"],[274,49,258,47],[275,4,259,2],[276,2,260,0],[277,0,260,1],[277,3]],"functionMap":{"names":["<global>","GestureHandlerOrchestrator","constructor","scheduleFinishedHandlersCleanup","cleanHandler","removeHandlerFromOrchestrator","cleanupFinishedHandlers","gestureHandlers.filter$argument_0","hasOtherHandlerToWaitFor","hasToWaitFor","shouldBeCancelledByFinishedHandler","shouldBeCancelled","tryActivate","shouldActivate","shouldBeCancelledBy","cleanupAwaitingHandlers","shouldWait","awaitingHandlers.filter$argument_0","onHandlerStateChange","makeActive","addAwaitingHandler","recordHandlerIfNotPresent","shouldHandlerWaitForOther","canRunSimultaneously","shouldHandlerBeCancelledBy","checkOverlap","isPointerWithinBothBounds","isFinished","cancelMouseAndPenGestures","gestureHandlers.forEach$argument_0","get__instance"],"mappings":"AAA;eCK;ECS,gBD;EEC;GFI;EGC;GHK;EIC;GJU;EKC;uDCS,yCD;GLC;EOC;yBCC;KDE;GPE;ESC;8BCC;KDE;GTE;EWC;GXwB;EYC;gCCC;KDE;GZE;EcC;uBCC;KDE;yDEO,sEF;GdC;EiBC;GjByC;EkBC;yDF0B,wCE;GlBC;EmBC;GnBQ;EoBC;GpBQ;EqBC;GrBE;EsBC;GtBE;EuBC;GvBa;EwBC;sCCO;KDG;GxBE;E0BC;G1BE;E2BQ;iCCC;KDgB;G3BC;E6BC;G7BK;CDC"},"hasCjsExports":false},"type":"js/module"}]}