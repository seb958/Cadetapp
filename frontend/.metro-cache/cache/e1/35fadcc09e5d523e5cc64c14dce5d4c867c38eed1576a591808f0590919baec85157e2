{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return EventManager;\n    }\n  });\n  class EventManager {\n    pointersInBounds = [];\n    constructor(view) {\n      this.view = view;\n      this.activePointersCounter = 0;\n    }\n    onPointerDown(_event) {}\n    onPointerAdd(_event) {}\n    onPointerUp(_event) {}\n    onPointerRemove(_event) {}\n    onPointerMove(_event) {}\n    onPointerLeave(_event) {} // Called only when pointer is pressed (or touching)\n    onPointerEnter(_event) {} // Called only when pointer is pressed (or touching)\n    onPointerCancel(_event) {\n      // When pointer cancel is triggered and there are more pointers on the view, only one pointer is cancelled\n      // Because we want all pointers to be cancelled by that event, we are doing it manually by reseting handler and changing activePointersCounter to 0\n      // Events that correspond to removing the pointer (pointerup, touchend) have condition, that they don't perform any action when activePointersCounter\n      // is equal to 0. This prevents counter from going to negative values, when pointers are removed from view after one of them has been cancelled\n    }\n    onPointerOutOfBounds(_event) {}\n    onPointerMoveOver(_event) {}\n    onPointerMoveOut(_event) {}\n    onWheel(_event) {}\n    setOnPointerDown(callback) {\n      this.onPointerDown = callback;\n    }\n    setOnPointerAdd(callback) {\n      this.onPointerAdd = callback;\n    }\n    setOnPointerUp(callback) {\n      this.onPointerUp = callback;\n    }\n    setOnPointerRemove(callback) {\n      this.onPointerRemove = callback;\n    }\n    setOnPointerMove(callback) {\n      this.onPointerMove = callback;\n    }\n    setOnPointerLeave(callback) {\n      this.onPointerLeave = callback;\n    }\n    setOnPointerEnter(callback) {\n      this.onPointerEnter = callback;\n    }\n    setOnPointerCancel(callback) {\n      this.onPointerCancel = callback;\n    }\n    setOnPointerOutOfBounds(callback) {\n      this.onPointerOutOfBounds = callback;\n    }\n    setOnPointerMoveOver(callback) {\n      this.onPointerMoveOver = callback;\n    }\n    setOnPointerMoveOut(callback) {\n      this.onPointerMoveOut = callback;\n    }\n    setOnWheel(callback) {\n      this.onWheel = callback;\n    }\n    markAsInBounds(pointerId) {\n      if (this.pointersInBounds.indexOf(pointerId) >= 0) {\n        return;\n      }\n      this.pointersInBounds.push(pointerId);\n    }\n    markAsOutOfBounds(pointerId) {\n      const index = this.pointersInBounds.indexOf(pointerId);\n      if (index < 0) {\n        return;\n      }\n      this.pointersInBounds.splice(index, 1);\n    }\n    resetManager() {\n      // Reseting activePointersCounter is necessary to make gestures such as pinch work properly\n      // There are gestures that end when there is still one active pointer (like pinch/rotation)\n      // When these gestures end, they are reset, but they still receive events from pointer that is active\n      // This causes trouble, since only onPointerDown registers gesture in orchestrator, and while gestures receive\n      // Events from active pointer after they finished, next pointerdown event will be registered as additional pointer, not the first one\n      // This casues trouble like gestures getting stuck in END state, even though they should have gone to UNDETERMINED\n\n      this.activePointersCounter = 0;\n      this.pointersInBounds = [];\n    }\n  }\n});","lineCount":98,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,5,15,"Object"],[8,8,5,15],[8,9,5,15,"defineProperty"],[8,23,5,15],[8,24,5,15,"exports"],[8,31,5,15],[9,4,5,15,"enumerable"],[9,14,5,15],[10,4,5,15,"get"],[10,7,5,15],[10,18,5,15,"get"],[10,19,5,15],[11,6,5,15],[11,13,5,15,"EventManager"],[11,25,5,15],[12,4,5,15],[13,2,5,15],[14,2,5,15],[14,8,5,21,"EventManager"],[14,20,5,33],[14,21,5,34],[15,4,6,2,"pointersInBounds"],[15,20,6,18],[15,23,6,21],[15,25,6,23],[16,4,7,2,"constructor"],[16,15,7,13,"constructor"],[16,16,7,14,"view"],[16,20,7,18],[16,22,7,20],[17,6,8,4],[17,10,8,8],[17,11,8,9,"view"],[17,15,8,13],[17,18,8,16,"view"],[17,22,8,20],[18,6,9,4],[18,10,9,8],[18,11,9,9,"activePointersCounter"],[18,32,9,30],[18,35,9,33],[18,36,9,34],[19,4,10,2],[20,4,11,2,"onPointerDown"],[20,17,11,15,"onPointerDown"],[20,18,11,16,"_event"],[20,24,11,22],[20,26,11,24],[20,27,11,25],[21,4,12,2,"onPointerAdd"],[21,16,12,14,"onPointerAdd"],[21,17,12,15,"_event"],[21,23,12,21],[21,25,12,23],[21,26,12,24],[22,4,13,2,"onPointerUp"],[22,15,13,13,"onPointerUp"],[22,16,13,14,"_event"],[22,22,13,20],[22,24,13,22],[22,25,13,23],[23,4,14,2,"onPointerRemove"],[23,19,14,17,"onPointerRemove"],[23,20,14,18,"_event"],[23,26,14,24],[23,28,14,26],[23,29,14,27],[24,4,15,2,"onPointerMove"],[24,17,15,15,"onPointerMove"],[24,18,15,16,"_event"],[24,24,15,22],[24,26,15,24],[24,27,15,25],[25,4,16,2,"onPointerLeave"],[25,18,16,16,"onPointerLeave"],[25,19,16,17,"_event"],[25,25,16,23],[25,27,16,25],[25,28,16,26],[25,29,16,27],[25,30,16,28],[26,4,17,2,"onPointerEnter"],[26,18,17,16,"onPointerEnter"],[26,19,17,17,"_event"],[26,25,17,23],[26,27,17,25],[26,28,17,26],[26,29,17,27],[26,30,17,28],[27,4,18,2,"onPointerCancel"],[27,19,18,17,"onPointerCancel"],[27,20,18,18,"_event"],[27,26,18,24],[27,28,18,26],[28,6,19,4],[29,6,20,4],[30,6,21,4],[31,6,22,4],[32,4,22,4],[33,4,24,2,"onPointerOutOfBounds"],[33,24,24,22,"onPointerOutOfBounds"],[33,25,24,23,"_event"],[33,31,24,29],[33,33,24,31],[33,34,24,32],[34,4,25,2,"onPointerMoveOver"],[34,21,25,19,"onPointerMoveOver"],[34,22,25,20,"_event"],[34,28,25,26],[34,30,25,28],[34,31,25,29],[35,4,26,2,"onPointerMoveOut"],[35,20,26,18,"onPointerMoveOut"],[35,21,26,19,"_event"],[35,27,26,25],[35,29,26,27],[35,30,26,28],[36,4,27,2,"onWheel"],[36,11,27,9,"onWheel"],[36,12,27,10,"_event"],[36,18,27,16],[36,20,27,18],[36,21,27,19],[37,4,28,2,"setOnPointerDown"],[37,20,28,18,"setOnPointerDown"],[37,21,28,19,"callback"],[37,29,28,27],[37,31,28,29],[38,6,29,4],[38,10,29,8],[38,11,29,9,"onPointerDown"],[38,24,29,22],[38,27,29,25,"callback"],[38,35,29,33],[39,4,30,2],[40,4,31,2,"setOnPointerAdd"],[40,19,31,17,"setOnPointerAdd"],[40,20,31,18,"callback"],[40,28,31,26],[40,30,31,28],[41,6,32,4],[41,10,32,8],[41,11,32,9,"onPointerAdd"],[41,23,32,21],[41,26,32,24,"callback"],[41,34,32,32],[42,4,33,2],[43,4,34,2,"setOnPointerUp"],[43,18,34,16,"setOnPointerUp"],[43,19,34,17,"callback"],[43,27,34,25],[43,29,34,27],[44,6,35,4],[44,10,35,8],[44,11,35,9,"onPointerUp"],[44,22,35,20],[44,25,35,23,"callback"],[44,33,35,31],[45,4,36,2],[46,4,37,2,"setOnPointerRemove"],[46,22,37,20,"setOnPointerRemove"],[46,23,37,21,"callback"],[46,31,37,29],[46,33,37,31],[47,6,38,4],[47,10,38,8],[47,11,38,9,"onPointerRemove"],[47,26,38,24],[47,29,38,27,"callback"],[47,37,38,35],[48,4,39,2],[49,4,40,2,"setOnPointerMove"],[49,20,40,18,"setOnPointerMove"],[49,21,40,19,"callback"],[49,29,40,27],[49,31,40,29],[50,6,41,4],[50,10,41,8],[50,11,41,9,"onPointerMove"],[50,24,41,22],[50,27,41,25,"callback"],[50,35,41,33],[51,4,42,2],[52,4,43,2,"setOnPointerLeave"],[52,21,43,19,"setOnPointerLeave"],[52,22,43,20,"callback"],[52,30,43,28],[52,32,43,30],[53,6,44,4],[53,10,44,8],[53,11,44,9,"onPointerLeave"],[53,25,44,23],[53,28,44,26,"callback"],[53,36,44,34],[54,4,45,2],[55,4,46,2,"setOnPointerEnter"],[55,21,46,19,"setOnPointerEnter"],[55,22,46,20,"callback"],[55,30,46,28],[55,32,46,30],[56,6,47,4],[56,10,47,8],[56,11,47,9,"onPointerEnter"],[56,25,47,23],[56,28,47,26,"callback"],[56,36,47,34],[57,4,48,2],[58,4,49,2,"setOnPointerCancel"],[58,22,49,20,"setOnPointerCancel"],[58,23,49,21,"callback"],[58,31,49,29],[58,33,49,31],[59,6,50,4],[59,10,50,8],[59,11,50,9,"onPointerCancel"],[59,26,50,24],[59,29,50,27,"callback"],[59,37,50,35],[60,4,51,2],[61,4,52,2,"setOnPointerOutOfBounds"],[61,27,52,25,"setOnPointerOutOfBounds"],[61,28,52,26,"callback"],[61,36,52,34],[61,38,52,36],[62,6,53,4],[62,10,53,8],[62,11,53,9,"onPointerOutOfBounds"],[62,31,53,29],[62,34,53,32,"callback"],[62,42,53,40],[63,4,54,2],[64,4,55,2,"setOnPointerMoveOver"],[64,24,55,22,"setOnPointerMoveOver"],[64,25,55,23,"callback"],[64,33,55,31],[64,35,55,33],[65,6,56,4],[65,10,56,8],[65,11,56,9,"onPointerMoveOver"],[65,28,56,26],[65,31,56,29,"callback"],[65,39,56,37],[66,4,57,2],[67,4,58,2,"setOnPointerMoveOut"],[67,23,58,21,"setOnPointerMoveOut"],[67,24,58,22,"callback"],[67,32,58,30],[67,34,58,32],[68,6,59,4],[68,10,59,8],[68,11,59,9,"onPointerMoveOut"],[68,27,59,25],[68,30,59,28,"callback"],[68,38,59,36],[69,4,60,2],[70,4,61,2,"setOnWheel"],[70,14,61,12,"setOnWheel"],[70,15,61,13,"callback"],[70,23,61,21],[70,25,61,23],[71,6,62,4],[71,10,62,8],[71,11,62,9,"onWheel"],[71,18,62,16],[71,21,62,19,"callback"],[71,29,62,27],[72,4,63,2],[73,4,64,2,"markAsInBounds"],[73,18,64,16,"markAsInBounds"],[73,19,64,17,"pointerId"],[73,28,64,26],[73,30,64,28],[74,6,65,4],[74,10,65,8],[74,14,65,12],[74,15,65,13,"pointersInBounds"],[74,31,65,29],[74,32,65,30,"indexOf"],[74,39,65,37],[74,40,65,38,"pointerId"],[74,49,65,47],[74,50,65,48],[74,54,65,52],[74,55,65,53],[74,57,65,55],[75,8,66,6],[76,6,67,4],[77,6,68,4],[77,10,68,8],[77,11,68,9,"pointersInBounds"],[77,27,68,25],[77,28,68,26,"push"],[77,32,68,30],[77,33,68,31,"pointerId"],[77,42,68,40],[77,43,68,41],[78,4,69,2],[79,4,70,2,"markAsOutOfBounds"],[79,21,70,19,"markAsOutOfBounds"],[79,22,70,20,"pointerId"],[79,31,70,29],[79,33,70,31],[80,6,71,4],[80,12,71,10,"index"],[80,17,71,15],[80,20,71,18],[80,24,71,22],[80,25,71,23,"pointersInBounds"],[80,41,71,39],[80,42,71,40,"indexOf"],[80,49,71,47],[80,50,71,48,"pointerId"],[80,59,71,57],[80,60,71,58],[81,6,72,4],[81,10,72,8,"index"],[81,15,72,13],[81,18,72,16],[81,19,72,17],[81,21,72,19],[82,8,73,6],[83,6,74,4],[84,6,75,4],[84,10,75,8],[84,11,75,9,"pointersInBounds"],[84,27,75,25],[84,28,75,26,"splice"],[84,34,75,32],[84,35,75,33,"index"],[84,40,75,38],[84,42,75,40],[84,43,75,41],[84,44,75,42],[85,4,76,2],[86,4,77,2,"resetManager"],[86,16,77,14,"resetManager"],[86,17,77,14],[86,19,77,17],[87,6,78,4],[88,6,79,4],[89,6,80,4],[90,6,81,4],[91,6,82,4],[92,6,83,4],[94,6,85,4],[94,10,85,8],[94,11,85,9,"activePointersCounter"],[94,32,85,30],[94,35,85,33],[94,36,85,34],[95,6,86,4],[95,10,86,8],[95,11,86,9,"pointersInBounds"],[95,27,86,25],[95,30,86,28],[95,32,86,30],[96,4,87,2],[97,2,88,0],[98,0,88,1],[98,3]],"functionMap":{"names":["<global>","EventManager","constructor","onPointerDown","onPointerAdd","onPointerUp","onPointerRemove","onPointerMove","onPointerLeave","onPointerEnter","onPointerCancel","onPointerOutOfBounds","onPointerMoveOver","onPointerMoveOut","onWheel","setOnPointerDown","setOnPointerAdd","setOnPointerUp","setOnPointerRemove","setOnPointerMove","setOnPointerLeave","setOnPointerEnter","setOnPointerCancel","setOnPointerOutOfBounds","setOnPointerMoveOver","setOnPointerMoveOut","setOnWheel","markAsInBounds","markAsOutOfBounds","resetManager"],"mappings":"AAA;eCI;ECE;GDG;EEC,wBF;EGC,uBH;EIC,sBJ;EKC,0BL;EMC,wBN;EOC,yBP;EQC,yBR;ESC;GTK;EUC,+BV;EWC,4BX;EYC,2BZ;EaC,kBb;EcC;GdE;EeC;GfE;EgBC;GhBE;EiBC;GjBE;EkBC;GlBE;EmBC;GnBE;EoBC;GpBE;EqBC;GrBE;EsBC;GtBE;EuBC;GvBE;EwBC;GxBE;EyBC;GzBE;E0BC;G1BK;E2BC;G3BM;E4BC;G5BU;CDC"},"hasCjsExports":false},"type":"js/module"}]}