{"dependencies":[{"name":"../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":55,"index":70}}],"key":"ByXat9lt9duIJLDmSeH0V+tRq1s=","exportNames":["*"],"imports":1}},{"name":"../../../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":71},"end":{"line":4,"column":55,"index":126}}],"key":"ZDu7aL2iuT3Od7iyX13y9sY9XZQ=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":127},"end":{"line":5,"column":34,"index":161}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useMountReactions = useMountReactions;\n  var _utils = require(_dependencyMap[0], \"../../utils\");\n  var _mountRegistry = require(_dependencyMap[1], \"../../../mountRegistry\");\n  var _react = require(_dependencyMap[2], \"react\");\n  function shouldUpdateDetector(relation, gesture) {\n    if (relation === undefined) {\n      return false;\n    }\n    for (const tag of (0, _utils.transformIntoHandlerTags)(relation)) {\n      if (tag === gesture.handlerTag) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function useMountReactions(updateDetector, state) {\n    (0, _react.useEffect)(() => {\n      return _mountRegistry.MountRegistry.addMountListener(gesture => {\n        // At this point the ref in the gesture config should be updated, so we can check if one of the gestures\n        // set in a relation with the gesture got mounted. If so, we need to update the detector to propagate\n        // the changes to the native side.\n        for (const attachedGesture of state.attachedGestures) {\n          const blocksHandlers = attachedGesture.config.blocksHandlers;\n          const requireToFail = attachedGesture.config.requireToFail;\n          const simultaneousWith = attachedGesture.config.simultaneousWith;\n          if (shouldUpdateDetector(blocksHandlers, gesture) || shouldUpdateDetector(requireToFail, gesture) || shouldUpdateDetector(simultaneousWith, gesture)) {\n            updateDetector();\n\n            // We can safely return here, if any other gestures should be updated, they will be by the above call\n            return;\n          }\n        }\n      });\n    }, [updateDetector, state]);\n  }\n});","lineCount":42,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,17,0,"exports"],[7,9,17,0],[7,10,17,0,"useMountReactions"],[7,27,17,0],[7,30,17,0,"useMountReactions"],[7,47,17,0],[8,2,3,0],[8,6,3,0,"_utils"],[8,12,3,0],[8,15,3,0,"require"],[8,22,3,0],[8,23,3,0,"_dependencyMap"],[8,37,3,0],[9,2,4,0],[9,6,4,0,"_mountRegistry"],[9,20,4,0],[9,23,4,0,"require"],[9,30,4,0],[9,31,4,0,"_dependencyMap"],[9,45,4,0],[10,2,5,0],[10,6,5,0,"_react"],[10,12,5,0],[10,15,5,0,"require"],[10,22,5,0],[10,23,5,0,"_dependencyMap"],[10,37,5,0],[11,2,6,0],[11,11,6,9,"shouldUpdateDetector"],[11,31,6,29,"shouldUpdateDetector"],[11,32,6,30,"relation"],[11,40,6,38],[11,42,6,40,"gesture"],[11,49,6,47],[11,51,6,49],[12,4,7,2],[12,8,7,6,"relation"],[12,16,7,14],[12,21,7,19,"undefined"],[12,30,7,28],[12,32,7,30],[13,6,8,4],[13,13,8,11],[13,18,8,16],[14,4,9,2],[15,4,10,2],[15,9,10,7],[15,15,10,13,"tag"],[15,18,10,16],[15,22,10,20],[15,26,10,20,"transformIntoHandlerTags"],[15,32,10,44],[15,33,10,44,"transformIntoHandlerTags"],[15,57,10,44],[15,59,10,45,"relation"],[15,67,10,53],[15,68,10,54],[15,70,10,56],[16,6,11,4],[16,10,11,8,"tag"],[16,13,11,11],[16,18,11,16,"gesture"],[16,25,11,23],[16,26,11,24,"handlerTag"],[16,36,11,34],[16,38,11,36],[17,8,12,6],[17,15,12,13],[17,19,12,17],[18,6,13,4],[19,4,14,2],[20,4,15,2],[20,11,15,9],[20,16,15,14],[21,2,16,0],[22,2,17,7],[22,11,17,16,"useMountReactions"],[22,28,17,33,"useMountReactions"],[22,29,17,34,"updateDetector"],[22,43,17,48],[22,45,17,50,"state"],[22,50,17,55],[22,52,17,57],[23,4,18,2],[23,8,18,2,"useEffect"],[23,14,18,11],[23,15,18,11,"useEffect"],[23,24,18,11],[23,26,18,12],[23,32,18,18],[24,6,19,4],[24,13,19,11,"MountRegistry"],[24,27,19,24],[24,28,19,24,"MountRegistry"],[24,41,19,24],[24,42,19,25,"addMountListener"],[24,58,19,41],[24,59,19,42,"gesture"],[24,66,19,49],[24,70,19,53],[25,8,20,6],[26,8,21,6],[27,8,22,6],[28,8,23,6],[28,13,23,11],[28,19,23,17,"attachedGesture"],[28,34,23,32],[28,38,23,36,"state"],[28,43,23,41],[28,44,23,42,"attachedGestures"],[28,60,23,58],[28,62,23,60],[29,10,24,8],[29,16,24,14,"blocksHandlers"],[29,30,24,28],[29,33,24,31,"attachedGesture"],[29,48,24,46],[29,49,24,47,"config"],[29,55,24,53],[29,56,24,54,"blocksHandlers"],[29,70,24,68],[30,10,25,8],[30,16,25,14,"requireToFail"],[30,29,25,27],[30,32,25,30,"attachedGesture"],[30,47,25,45],[30,48,25,46,"config"],[30,54,25,52],[30,55,25,53,"requireToFail"],[30,68,25,66],[31,10,26,8],[31,16,26,14,"simultaneousWith"],[31,32,26,30],[31,35,26,33,"attachedGesture"],[31,50,26,48],[31,51,26,49,"config"],[31,57,26,55],[31,58,26,56,"simultaneousWith"],[31,74,26,72],[32,10,27,8],[32,14,27,12,"shouldUpdateDetector"],[32,34,27,32],[32,35,27,33,"blocksHandlers"],[32,49,27,47],[32,51,27,49,"gesture"],[32,58,27,56],[32,59,27,57],[32,63,27,61,"shouldUpdateDetector"],[32,83,27,81],[32,84,27,82,"requireToFail"],[32,97,27,95],[32,99,27,97,"gesture"],[32,106,27,104],[32,107,27,105],[32,111,27,109,"shouldUpdateDetector"],[32,131,27,129],[32,132,27,130,"simultaneousWith"],[32,148,27,146],[32,150,27,148,"gesture"],[32,157,27,155],[32,158,27,156],[32,160,27,158],[33,12,28,10,"updateDetector"],[33,26,28,24],[33,27,28,25],[33,28,28,26],[35,12,30,10],[36,12,31,10],[37,10,32,8],[38,8,33,6],[39,6,34,4],[39,7,34,5],[39,8,34,6],[40,4,35,2],[40,5,35,3],[40,7,35,5],[40,8,35,6,"updateDetector"],[40,22,35,20],[40,24,35,22,"state"],[40,29,35,27],[40,30,35,28],[40,31,35,29],[41,2,36,0],[42,0,36,1],[42,3]],"functionMap":{"names":["<global>","shouldUpdateDetector","useMountReactions","useEffect$argument_0","MountRegistry.addMountListener$argument_0"],"mappings":"AAA;ACK;CDU;OEC;YCC;0CCC;KDe;GDC;CFC"},"hasCjsExports":false},"type":"js/module"}]}