{"dependencies":[{"name":"./core.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":73,"index":88}}],"key":"mJVVi7YU3vDVLm6ZethtbJGh1KY=","exportNames":["*"],"imports":1}},{"name":"./PlatformChecker.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":89},"end":{"line":4,"column":54,"index":143}}],"key":"6AA7RQghlqlrd3hVWNoLh/rI420=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"WorkletEventHandler\", {\n    enumerable: true,\n    get: function () {\n      return WorkletEventHandler;\n    }\n  });\n  var _coreJs = require(_dependencyMap[0], \"./core.js\");\n  var _PlatformCheckerJs = require(_dependencyMap[1], \"./PlatformChecker.js\");\n  const SHOULD_BE_USE_WEB = (0, _PlatformCheckerJs.shouldBeUseWeb)();\n  // In JS implementation (e.g. for web) we don't use Reanimated's\n  // event emitter, therefore we have to handle here\n  // the event that came from React Native and convert it.\n  function jsListener(eventName, handler) {\n    return evt => {\n      handler(Object.assign({}, evt.nativeEvent, {\n        eventName\n      }));\n    };\n  }\n  class WorkletEventHandlerNative {\n    #viewTags;\n    #registrations; // keys are viewTags, values are arrays of registration ID's for each viewTag\n    constructor(worklet, eventNames) {\n      this.worklet = worklet;\n      this.eventNames = eventNames;\n      this.#viewTags = new Set();\n      this.#registrations = new Map();\n    }\n    updateEventHandler(newWorklet, newEvents) {\n      // Update worklet and event names\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n\n      // Detach all events\n      this.#registrations.forEach(registrationIDs => {\n        registrationIDs.forEach(id => (0, _coreJs.unregisterEventHandler)(id));\n        // No need to remove registrationIDs from map, since it gets overwritten when attaching\n      });\n\n      // Attach new events with new worklet\n      Array.from(this.#viewTags).forEach(tag => {\n        const newRegistrations = this.eventNames.map(eventName => (0, _coreJs.registerEventHandler)(this.worklet, eventName, tag));\n        this.#registrations.set(tag, newRegistrations);\n      });\n    }\n    registerForEvents(viewTag, fallbackEventName) {\n      this.#viewTags.add(viewTag);\n      const newRegistrations = this.eventNames.map(eventName => (0, _coreJs.registerEventHandler)(this.worklet, eventName, viewTag));\n      this.#registrations.set(viewTag, newRegistrations);\n      if (this.eventNames.length === 0 && fallbackEventName) {\n        const newRegistration = (0, _coreJs.registerEventHandler)(this.worklet, fallbackEventName, viewTag);\n        this.#registrations.set(viewTag, [newRegistration]);\n      }\n    }\n    unregisterFromEvents(viewTag) {\n      this.#viewTags.delete(viewTag);\n      this.#registrations.get(viewTag)?.forEach(id => {\n        (0, _coreJs.unregisterEventHandler)(id);\n      });\n      this.#registrations.delete(viewTag);\n    }\n  }\n  class WorkletEventHandlerWeb {\n    constructor(worklet, eventNames = []) {\n      this.worklet = worklet;\n      this.eventNames = eventNames;\n      this.listeners = {};\n      this.setupWebListeners();\n    }\n    setupWebListeners() {\n      this.listeners = {};\n      this.eventNames.forEach(eventName => {\n        this.listeners[eventName] = jsListener(eventName, this.worklet);\n      });\n    }\n    updateEventHandler(newWorklet, newEvents) {\n      // Update worklet and event names\n      this.worklet = newWorklet;\n      this.eventNames = newEvents;\n      this.setupWebListeners();\n    }\n    registerForEvents(_viewTag, _fallbackEventName) {\n      // noop\n    }\n    unregisterFromEvents(_viewTag) {\n      // noop\n    }\n  }\n  const WorkletEventHandler = SHOULD_BE_USE_WEB ? WorkletEventHandlerWeb : WorkletEventHandlerNative;\n});","lineCount":96,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,86,0,"Object"],[7,8,86,0],[7,9,86,0,"defineProperty"],[7,23,86,0],[7,24,86,0,"exports"],[7,31,86,0],[8,4,86,0,"enumerable"],[8,14,86,0],[9,4,86,0,"get"],[9,7,86,0],[9,18,86,0,"get"],[9,19,86,0],[10,6,86,0],[10,13,86,0,"WorkletEventHandler"],[10,32,86,0],[11,4,86,0],[12,2,86,0],[13,2,3,0],[13,6,3,0,"_coreJs"],[13,13,3,0],[13,16,3,0,"require"],[13,23,3,0],[13,24,3,0,"_dependencyMap"],[13,38,3,0],[14,2,4,0],[14,6,4,0,"_PlatformCheckerJs"],[14,24,4,0],[14,27,4,0,"require"],[14,34,4,0],[14,35,4,0,"_dependencyMap"],[14,49,4,0],[15,2,5,0],[15,8,5,6,"SHOULD_BE_USE_WEB"],[15,25,5,23],[15,28,5,26],[15,32,5,26,"shouldBeUseWeb"],[15,50,5,40],[15,51,5,40,"shouldBeUseWeb"],[15,65,5,40],[15,67,5,41],[15,68,5,42],[16,2,6,0],[17,2,7,0],[18,2,8,0],[19,2,9,0],[19,11,9,9,"jsListener"],[19,21,9,19,"jsListener"],[19,22,9,20,"eventName"],[19,31,9,29],[19,33,9,31,"handler"],[19,40,9,38],[19,42,9,40],[20,4,10,2],[20,11,10,9,"evt"],[20,14,10,12],[20,18,10,16],[21,6,11,4,"handler"],[21,13,11,11],[21,14,11,11,"Object"],[21,20,11,11],[21,21,11,11,"assign"],[21,27,11,11],[21,32,12,9,"evt"],[21,35,12,12],[21,36,12,13,"nativeEvent"],[21,47,12,24],[22,8,13,6,"eventName"],[23,6,13,15],[23,8,14,5],[23,9,14,6],[24,4,15,2],[24,5,15,3],[25,2,16,0],[26,2,17,0],[26,8,17,6,"WorkletEventHandlerNative"],[26,33,17,31],[26,34,17,32],[27,4,18,2],[27,5,18,3,"viewTags"],[27,13,18,11],[28,4,19,2],[28,5,19,3,"registrations"],[28,18,19,16],[28,19,19,17],[28,20,19,18],[29,4,20,2,"constructor"],[29,15,20,13,"constructor"],[29,16,20,14,"worklet"],[29,23,20,21],[29,25,20,23,"eventNames"],[29,35,20,33],[29,37,20,35],[30,6,21,4],[30,10,21,8],[30,11,21,9,"worklet"],[30,18,21,16],[30,21,21,19,"worklet"],[30,28,21,26],[31,6,22,4],[31,10,22,8],[31,11,22,9,"eventNames"],[31,21,22,19],[31,24,22,22,"eventNames"],[31,34,22,32],[32,6,23,4],[32,10,23,8],[32,11,23,9],[32,12,23,10,"viewTags"],[32,20,23,18],[32,23,23,21],[32,27,23,25,"Set"],[32,30,23,28],[32,31,23,29],[32,32,23,30],[33,6,24,4],[33,10,24,8],[33,11,24,9],[33,12,24,10,"registrations"],[33,25,24,23],[33,28,24,26],[33,32,24,30,"Map"],[33,35,24,33],[33,36,24,34],[33,37,24,35],[34,4,25,2],[35,4,26,2,"updateEventHandler"],[35,22,26,20,"updateEventHandler"],[35,23,26,21,"newWorklet"],[35,33,26,31],[35,35,26,33,"newEvents"],[35,44,26,42],[35,46,26,44],[36,6,27,4],[37,6,28,4],[37,10,28,8],[37,11,28,9,"worklet"],[37,18,28,16],[37,21,28,19,"newWorklet"],[37,31,28,29],[38,6,29,4],[38,10,29,8],[38,11,29,9,"eventNames"],[38,21,29,19],[38,24,29,22,"newEvents"],[38,33,29,31],[40,6,31,4],[41,6,32,4],[41,10,32,8],[41,11,32,9],[41,12,32,10,"registrations"],[41,25,32,23],[41,26,32,24,"forEach"],[41,33,32,31],[41,34,32,32,"registrationIDs"],[41,49,32,47],[41,53,32,51],[42,8,33,6,"registrationIDs"],[42,23,33,21],[42,24,33,22,"forEach"],[42,31,33,29],[42,32,33,30,"id"],[42,34,33,32],[42,38,33,36],[42,42,33,36,"unregisterEventHandler"],[42,49,33,58],[42,50,33,58,"unregisterEventHandler"],[42,72,33,58],[42,74,33,59,"id"],[42,76,33,61],[42,77,33,62],[42,78,33,63],[43,8,34,6],[44,6,35,4],[44,7,35,5],[44,8,35,6],[46,6,37,4],[47,6,38,4,"Array"],[47,11,38,9],[47,12,38,10,"from"],[47,16,38,14],[47,17,38,15],[47,21,38,19],[47,22,38,20],[47,23,38,21,"viewTags"],[47,31,38,29],[47,32,38,30],[47,33,38,31,"forEach"],[47,40,38,38],[47,41,38,39,"tag"],[47,44,38,42],[47,48,38,46],[48,8,39,6],[48,14,39,12,"newRegistrations"],[48,30,39,28],[48,33,39,31],[48,37,39,35],[48,38,39,36,"eventNames"],[48,48,39,46],[48,49,39,47,"map"],[48,52,39,50],[48,53,39,51,"eventName"],[48,62,39,60],[48,66,39,64],[48,70,39,64,"registerEventHandler"],[48,77,39,84],[48,78,39,84,"registerEventHandler"],[48,98,39,84],[48,100,39,85],[48,104,39,89],[48,105,39,90,"worklet"],[48,112,39,97],[48,114,39,99,"eventName"],[48,123,39,108],[48,125,39,110,"tag"],[48,128,39,113],[48,129,39,114],[48,130,39,115],[49,8,40,6],[49,12,40,10],[49,13,40,11],[49,14,40,12,"registrations"],[49,27,40,25],[49,28,40,26,"set"],[49,31,40,29],[49,32,40,30,"tag"],[49,35,40,33],[49,37,40,35,"newRegistrations"],[49,53,40,51],[49,54,40,52],[50,6,41,4],[50,7,41,5],[50,8,41,6],[51,4,42,2],[52,4,43,2,"registerForEvents"],[52,21,43,19,"registerForEvents"],[52,22,43,20,"viewTag"],[52,29,43,27],[52,31,43,29,"fallbackEventName"],[52,48,43,46],[52,50,43,48],[53,6,44,4],[53,10,44,8],[53,11,44,9],[53,12,44,10,"viewTags"],[53,20,44,18],[53,21,44,19,"add"],[53,24,44,22],[53,25,44,23,"viewTag"],[53,32,44,30],[53,33,44,31],[54,6,45,4],[54,12,45,10,"newRegistrations"],[54,28,45,26],[54,31,45,29],[54,35,45,33],[54,36,45,34,"eventNames"],[54,46,45,44],[54,47,45,45,"map"],[54,50,45,48],[54,51,45,49,"eventName"],[54,60,45,58],[54,64,45,62],[54,68,45,62,"registerEventHandler"],[54,75,45,82],[54,76,45,82,"registerEventHandler"],[54,96,45,82],[54,98,45,83],[54,102,45,87],[54,103,45,88,"worklet"],[54,110,45,95],[54,112,45,97,"eventName"],[54,121,45,106],[54,123,45,108,"viewTag"],[54,130,45,115],[54,131,45,116],[54,132,45,117],[55,6,46,4],[55,10,46,8],[55,11,46,9],[55,12,46,10,"registrations"],[55,25,46,23],[55,26,46,24,"set"],[55,29,46,27],[55,30,46,28,"viewTag"],[55,37,46,35],[55,39,46,37,"newRegistrations"],[55,55,46,53],[55,56,46,54],[56,6,47,4],[56,10,47,8],[56,14,47,12],[56,15,47,13,"eventNames"],[56,25,47,23],[56,26,47,24,"length"],[56,32,47,30],[56,37,47,35],[56,38,47,36],[56,42,47,40,"fallbackEventName"],[56,59,47,57],[56,61,47,59],[57,8,48,6],[57,14,48,12,"newRegistration"],[57,29,48,27],[57,32,48,30],[57,36,48,30,"registerEventHandler"],[57,43,48,50],[57,44,48,50,"registerEventHandler"],[57,64,48,50],[57,66,48,51],[57,70,48,55],[57,71,48,56,"worklet"],[57,78,48,63],[57,80,48,65,"fallbackEventName"],[57,97,48,82],[57,99,48,84,"viewTag"],[57,106,48,91],[57,107,48,92],[58,8,49,6],[58,12,49,10],[58,13,49,11],[58,14,49,12,"registrations"],[58,27,49,25],[58,28,49,26,"set"],[58,31,49,29],[58,32,49,30,"viewTag"],[58,39,49,37],[58,41,49,39],[58,42,49,40,"newRegistration"],[58,57,49,55],[58,58,49,56],[58,59,49,57],[59,6,50,4],[60,4,51,2],[61,4,52,2,"unregisterFromEvents"],[61,24,52,22,"unregisterFromEvents"],[61,25,52,23,"viewTag"],[61,32,52,30],[61,34,52,32],[62,6,53,4],[62,10,53,8],[62,11,53,9],[62,12,53,10,"viewTags"],[62,20,53,18],[62,21,53,19,"delete"],[62,27,53,25],[62,28,53,26,"viewTag"],[62,35,53,33],[62,36,53,34],[63,6,54,4],[63,10,54,8],[63,11,54,9],[63,12,54,10,"registrations"],[63,25,54,23],[63,26,54,24,"get"],[63,29,54,27],[63,30,54,28,"viewTag"],[63,37,54,35],[63,38,54,36],[63,40,54,38,"forEach"],[63,47,54,45],[63,48,54,46,"id"],[63,50,54,48],[63,54,54,52],[64,8,55,6],[64,12,55,6,"unregisterEventHandler"],[64,19,55,28],[64,20,55,28,"unregisterEventHandler"],[64,42,55,28],[64,44,55,29,"id"],[64,46,55,31],[64,47,55,32],[65,6,56,4],[65,7,56,5],[65,8,56,6],[66,6,57,4],[66,10,57,8],[66,11,57,9],[66,12,57,10,"registrations"],[66,25,57,23],[66,26,57,24,"delete"],[66,32,57,30],[66,33,57,31,"viewTag"],[66,40,57,38],[66,41,57,39],[67,4,58,2],[68,2,59,0],[69,2,60,0],[69,8,60,6,"WorkletEventHandlerWeb"],[69,30,60,28],[69,31,60,29],[70,4,61,2,"constructor"],[70,15,61,13,"constructor"],[70,16,61,14,"worklet"],[70,23,61,21],[70,25,61,23,"eventNames"],[70,35,61,33],[70,38,61,36],[70,40,61,38],[70,42,61,40],[71,6,62,4],[71,10,62,8],[71,11,62,9,"worklet"],[71,18,62,16],[71,21,62,19,"worklet"],[71,28,62,26],[72,6,63,4],[72,10,63,8],[72,11,63,9,"eventNames"],[72,21,63,19],[72,24,63,22,"eventNames"],[72,34,63,32],[73,6,64,4],[73,10,64,8],[73,11,64,9,"listeners"],[73,20,64,18],[73,23,64,21],[73,24,64,22],[73,25,64,23],[74,6,65,4],[74,10,65,8],[74,11,65,9,"setupWebListeners"],[74,28,65,26],[74,29,65,27],[74,30,65,28],[75,4,66,2],[76,4,67,2,"setupWebListeners"],[76,21,67,19,"setupWebListeners"],[76,22,67,19],[76,24,67,22],[77,6,68,4],[77,10,68,8],[77,11,68,9,"listeners"],[77,20,68,18],[77,23,68,21],[77,24,68,22],[77,25,68,23],[78,6,69,4],[78,10,69,8],[78,11,69,9,"eventNames"],[78,21,69,19],[78,22,69,20,"forEach"],[78,29,69,27],[78,30,69,28,"eventName"],[78,39,69,37],[78,43,69,41],[79,8,70,6],[79,12,70,10],[79,13,70,11,"listeners"],[79,22,70,20],[79,23,70,21,"eventName"],[79,32,70,30],[79,33,70,31],[79,36,70,34,"jsListener"],[79,46,70,44],[79,47,70,45,"eventName"],[79,56,70,54],[79,58,70,56],[79,62,70,60],[79,63,70,61,"worklet"],[79,70,70,68],[79,71,70,69],[80,6,71,4],[80,7,71,5],[80,8,71,6],[81,4,72,2],[82,4,73,2,"updateEventHandler"],[82,22,73,20,"updateEventHandler"],[82,23,73,21,"newWorklet"],[82,33,73,31],[82,35,73,33,"newEvents"],[82,44,73,42],[82,46,73,44],[83,6,74,4],[84,6,75,4],[84,10,75,8],[84,11,75,9,"worklet"],[84,18,75,16],[84,21,75,19,"newWorklet"],[84,31,75,29],[85,6,76,4],[85,10,76,8],[85,11,76,9,"eventNames"],[85,21,76,19],[85,24,76,22,"newEvents"],[85,33,76,31],[86,6,77,4],[86,10,77,8],[86,11,77,9,"setupWebListeners"],[86,28,77,26],[86,29,77,27],[86,30,77,28],[87,4,78,2],[88,4,79,2,"registerForEvents"],[88,21,79,19,"registerForEvents"],[88,22,79,20,"_viewTag"],[88,30,79,28],[88,32,79,30,"_fallbackEventName"],[88,50,79,48],[88,52,79,50],[89,6,80,4],[90,4,80,4],[91,4,82,2,"unregisterFromEvents"],[91,24,82,22,"unregisterFromEvents"],[91,25,82,23,"_viewTag"],[91,33,82,31],[91,35,82,33],[92,6,83,4],[93,4,83,4],[94,2,85,0],[95,2,86,7],[95,8,86,13,"WorkletEventHandler"],[95,27,86,32],[95,30,86,35,"SHOULD_BE_USE_WEB"],[95,47,86,52],[95,50,86,55,"WorkletEventHandlerWeb"],[95,72,86,77],[95,75,86,80,"WorkletEventHandlerNative"],[95,100,86,105],[96,0,86,106],[96,3]],"functionMap":{"names":["<global>","jsListener","<anonymous>","WorkletEventHandlerNative","WorkletEventHandlerNative#constructor","WorkletEventHandlerNative#updateEventHandler","forEach$argument_0","registrationIDs.forEach$argument_0","Array.from.forEach$argument_0","eventNames.map$argument_0","WorkletEventHandlerNative#registerForEvents","WorkletEventHandlerNative#unregisterFromEvents","get.forEach$argument_0","WorkletEventHandlerWeb","WorkletEventHandlerWeb#constructor","WorkletEventHandlerWeb#setupWebListeners","eventNames.forEach$argument_0","WorkletEventHandlerWeb#updateEventHandler","WorkletEventHandlerWeb#registerForEvents","WorkletEventHandlerWeb#unregisterFromEvents"],"mappings":"AAA;ACQ;SCC;GDK;CDC;AGC;ECG;GDK;EEC;gCCM;8BCC,gCD;KDE;uCGG;mDCC,+DD;KHE;GFC;EOC;iDDE,mEC;GPM;EQC;8CCE;KDE;GRE;CHC;AaC;ECC;GDK;EEC;4BCE;KDE;GFC;EIC;GJK;EKC;GLE;EMC;GNE;CbC"},"hasCjsExports":false},"type":"js/module"}]}