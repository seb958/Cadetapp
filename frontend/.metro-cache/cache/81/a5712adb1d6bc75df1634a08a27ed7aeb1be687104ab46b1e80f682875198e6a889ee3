{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":62,"index":114}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":115},"end":{"line":5,"column":32,"index":147}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _DiscreteGestureHandler = require(_dependencyMap[1], \"./DiscreteGestureHandler\");\n  var DiscreteGestureHandler = _interopDefault(_DiscreteGestureHandler);\n  var _utils = require(_dependencyMap[2], \"./utils\");\n  class TapGestureHandler extends DiscreteGestureHandler.default {\n    _shouldFireEndEvent = null;\n    // TODO unused?\n    get name() {\n      return 'tap';\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Tap;\n    }\n    get maxDelayMs() {\n      // @ts-ignore TODO(TS) trace down config\n      return (0, _utils.isnan)(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n    }\n    simulateCancelEvent(inputData) {\n      if (this.isGestureRunning) {\n        this.cancelEvent(inputData);\n      }\n    }\n    onGestureActivated(ev) {\n      if (this.isGestureRunning) {\n        this.onSuccessfulTap(ev);\n      }\n    }\n    onSuccessfulTap = ev => {\n      if (this._getPendingGestures().length) {\n        this._shouldFireEndEvent = ev;\n        return;\n      }\n      if (ev.eventType === Hammer.default.INPUT_END) {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.default.INPUT_MOVE\n        });\n      }\n      // When handler gets activated it will turn into State.END immediately.\n      this.sendEvent({\n        ...ev,\n        isFinal: true\n      });\n      this.onGestureEnded(ev);\n    };\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n\n      // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n      if (!this.hasGestureFailed && !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore TODO(TS) trace down config\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n      if (ev.isFinal && ev.maxPointers > 1) {\n        setTimeout(() => {\n          // Handle case where one finger presses slightly\n          // after the first finger on a multi-tap event\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n      if (this.hasGestureFailed) {\n        return;\n      }\n      // Hammer doesn't send a `cancel` event for taps.\n      // Manually fail the event.\n      if (ev.isFinal) {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (ev.maxPointers > 1) {\n          setTimeout(() => {\n            if (this.isGestureRunning) {\n              this.cancelEvent(ev);\n            }\n          });\n        }\n\n        // Clear last timer\n        clearTimeout(this._timer);\n        // Create time out for multi-taps.\n        this._timer = setTimeout(() => {\n          this.hasGestureFailed = true;\n          this.cancelEvent(ev);\n        }, this.maxDelayMs);\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        // Tap Gesture start event\n        const gesture = this.hammer.get(this.name);\n        // @ts-ignore TODO(TS) trace down config\n        if (gesture.options.enable(gesture, ev)) {\n          clearTimeout(this._multiTapTimer);\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        event: this.name,\n        // @ts-ignore TODO(TS) trace down config\n        taps: (0, _utils.isnan)(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n        interval: this.maxDelayMs,\n        time:\n        // @ts-ignore TODO(TS) trace down config\n        (0, _utils.isnan)(this.config.maxDurationMs) || this.config.maxDurationMs == null ? 250 :\n        // @ts-ignore TODO(TS) trace down config\n        this.config.maxDurationMs\n      };\n    }\n    updateGestureConfig({\n      shouldCancelWhenOutside = true,\n      maxDeltaX = Number.NaN,\n      maxDeltaY = Number.NaN,\n      numberOfTaps = 1,\n      minDurationMs = 525,\n      maxDelayMs = Number.NaN,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n      maxDurationMs = Number.NaN,\n      maxDist = 2,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldCancelWhenOutside,\n        numberOfTaps,\n        maxDeltaX,\n        maxDeltaY,\n        minDurationMs,\n        maxDelayMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n    onGestureEnded(...props) {\n      clearTimeout(this._timer);\n      // @ts-ignore TODO(TS) check how onGestureEnded works\n      super.onGestureEnded(...props);\n    }\n    onWaitingEnded(_gesture) {\n      if (this._shouldFireEndEvent) {\n        this.onSuccessfulTap(this._shouldFireEndEvent);\n        this._shouldFireEndEvent = null;\n      }\n    }\n  }\n  var _default = TapGestureHandler;\n});","lineCount":177,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,159,0,"Object"],[12,8,159,0],[12,9,159,0,"defineProperty"],[12,23,159,0],[12,24,159,0,"exports"],[12,31,159,0],[13,4,159,0,"enumerable"],[13,14,159,0],[14,4,159,0,"get"],[14,7,159,0],[14,18,159,0,"get"],[14,19,159,0],[15,6,159,0],[15,13,159,0,"_default"],[15,21,159,0],[16,4,159,0],[17,2,159,0],[18,2,3,0],[18,6,3,0,"_egjsHammerjs"],[18,19,3,0],[18,22,3,0,"require"],[18,29,3,0],[18,30,3,0,"_dependencyMap"],[18,44,3,0],[19,2,3,0],[19,6,3,0,"Hammer"],[19,12,3,0],[19,15,3,0,"_interopDefault"],[19,30,3,0],[19,31,3,0,"_egjsHammerjs"],[19,44,3,0],[20,2,4,0],[20,6,4,0,"_DiscreteGestureHandler"],[20,29,4,0],[20,32,4,0,"require"],[20,39,4,0],[20,40,4,0,"_dependencyMap"],[20,54,4,0],[21,2,4,0],[21,6,4,0,"DiscreteGestureHandler"],[21,28,4,0],[21,31,4,0,"_interopDefault"],[21,46,4,0],[21,47,4,0,"_DiscreteGestureHandler"],[21,70,4,0],[22,2,5,0],[22,6,5,0,"_utils"],[22,12,5,0],[22,15,5,0,"require"],[22,22,5,0],[22,23,5,0,"_dependencyMap"],[22,37,5,0],[23,2,6,0],[23,8,6,6,"TapGestureHandler"],[23,25,6,23],[23,34,6,32,"DiscreteGestureHandler"],[23,56,6,54],[23,57,6,54,"default"],[23,64,6,54],[23,65,6,55],[24,4,7,2,"_shouldFireEndEvent"],[24,23,7,21],[24,26,7,24],[24,30,7,28],[25,4,8,2],[26,4,9,2],[26,8,9,6,"name"],[26,12,9,10,"name"],[26,13,9,10],[26,15,9,13],[27,6,10,4],[27,13,10,11],[27,18,10,16],[28,4,11,2],[29,4,12,2],[29,8,12,6,"NativeGestureClass"],[29,26,12,24,"NativeGestureClass"],[29,27,12,24],[29,29,12,27],[30,6,13,4],[30,13,13,11,"Hammer"],[30,19,13,17],[30,20,13,17,"default"],[30,27,13,17],[30,28,13,18,"Tap"],[30,31,13,21],[31,4,14,2],[32,4,15,2],[32,8,15,6,"maxDelayMs"],[32,18,15,16,"maxDelayMs"],[32,19,15,16],[32,21,15,19],[33,6,16,4],[34,6,17,4],[34,13,17,11],[34,17,17,11,"isnan"],[34,23,17,16],[34,24,17,16,"isnan"],[34,29,17,16],[34,31,17,17],[34,35,17,21],[34,36,17,22,"config"],[34,42,17,28],[34,43,17,29,"maxDelayMs"],[34,53,17,39],[34,54,17,40],[34,57,17,43],[34,60,17,46],[34,63,17,49],[34,67,17,53],[34,68,17,54,"config"],[34,74,17,60],[34,75,17,61,"maxDelayMs"],[34,85,17,71],[35,4,18,2],[36,4,19,2,"simulateCancelEvent"],[36,23,19,21,"simulateCancelEvent"],[36,24,19,22,"inputData"],[36,33,19,31],[36,35,19,33],[37,6,20,4],[37,10,20,8],[37,14,20,12],[37,15,20,13,"isGestureRunning"],[37,31,20,29],[37,33,20,31],[38,8,21,6],[38,12,21,10],[38,13,21,11,"cancelEvent"],[38,24,21,22],[38,25,21,23,"inputData"],[38,34,21,32],[38,35,21,33],[39,6,22,4],[40,4,23,2],[41,4,24,2,"onGestureActivated"],[41,22,24,20,"onGestureActivated"],[41,23,24,21,"ev"],[41,25,24,23],[41,27,24,25],[42,6,25,4],[42,10,25,8],[42,14,25,12],[42,15,25,13,"isGestureRunning"],[42,31,25,29],[42,33,25,31],[43,8,26,6],[43,12,26,10],[43,13,26,11,"onSuccessfulTap"],[43,28,26,26],[43,29,26,27,"ev"],[43,31,26,29],[43,32,26,30],[44,6,27,4],[45,4,28,2],[46,4,29,2,"onSuccessfulTap"],[46,19,29,17],[46,22,29,20,"ev"],[46,24,29,22],[46,28,29,26],[47,6,30,4],[47,10,30,8],[47,14,30,12],[47,15,30,13,"_getPendingGestures"],[47,34,30,32],[47,35,30,33],[47,36,30,34],[47,37,30,35,"length"],[47,43,30,41],[47,45,30,43],[48,8,31,6],[48,12,31,10],[48,13,31,11,"_shouldFireEndEvent"],[48,32,31,30],[48,35,31,33,"ev"],[48,37,31,35],[49,8,32,6],[50,6,33,4],[51,6,34,4],[51,10,34,8,"ev"],[51,12,34,10],[51,13,34,11,"eventType"],[51,22,34,20],[51,27,34,25,"Hammer"],[51,33,34,31],[51,34,34,31,"default"],[51,41,34,31],[51,42,34,32,"INPUT_END"],[51,51,34,41],[51,53,34,43],[52,8,35,6],[52,12,35,10],[52,13,35,11,"sendEvent"],[52,22,35,20],[52,23,35,21],[53,10,36,8],[53,13,36,11,"ev"],[53,15,36,13],[54,10,37,8,"eventType"],[54,19,37,17],[54,21,37,19,"Hammer"],[54,27,37,25],[54,28,37,25,"default"],[54,35,37,25],[54,36,37,26,"INPUT_MOVE"],[55,8,38,6],[55,9,38,7],[55,10,38,8],[56,6,39,4],[57,6,40,4],[58,6,41,4],[58,10,41,8],[58,11,41,9,"sendEvent"],[58,20,41,18],[58,21,41,19],[59,8,42,6],[59,11,42,9,"ev"],[59,13,42,11],[60,8,43,6,"isFinal"],[60,15,43,13],[60,17,43,15],[61,6,44,4],[61,7,44,5],[61,8,44,6],[62,6,45,4],[62,10,45,8],[62,11,45,9,"onGestureEnded"],[62,25,45,23],[62,26,45,24,"ev"],[62,28,45,26],[62,29,45,27],[63,4,46,2],[63,5,46,3],[64,4,47,2,"onRawEvent"],[64,14,47,12,"onRawEvent"],[64,15,47,13,"ev"],[64,17,47,15],[64,19,47,17],[65,6,48,4],[65,11,48,9],[65,12,48,10,"onRawEvent"],[65,22,48,20],[65,23,48,21,"ev"],[65,25,48,23],[65,26,48,24],[67,6,50,4],[68,6,51,4],[68,10,51,8],[68,11,51,9],[68,15,51,13],[68,16,51,14,"hasGestureFailed"],[68,32,51,30],[68,36,51,34],[68,37,51,35],[68,41,51,39],[68,42,51,40,"isGestureRunning"],[68,58,51,56],[69,6,52,4],[70,6,53,4],[70,7,53,5,"ev"],[70,9,53,7],[70,10,53,8,"isFinal"],[70,17,53,15],[70,19,53,17],[71,8,54,6],[72,8,55,6],[72,14,55,12,"gesture"],[72,21,55,19],[72,24,55,22],[72,28,55,26],[72,29,55,27,"hammer"],[72,35,55,33],[72,36,55,34,"get"],[72,39,55,37],[72,40,55,38],[72,44,55,42],[72,45,55,43,"name"],[72,49,55,47],[72,50,55,48],[73,8,56,6],[74,8,57,6],[74,12,57,10,"gesture"],[74,19,57,17],[74,20,57,18,"options"],[74,27,57,25],[74,28,57,26,"enable"],[74,34,57,32],[74,35,57,33,"gesture"],[74,42,57,40],[74,44,57,42,"ev"],[74,46,57,44],[74,47,57,45],[74,49,57,47],[75,10,58,8,"clearTimeout"],[75,22,58,20],[75,23,58,21],[75,27,58,25],[75,28,58,26,"_multiTapTimer"],[75,42,58,40],[75,43,58,41],[76,10,59,8],[76,14,59,12],[76,15,59,13,"onStart"],[76,22,59,20],[76,23,59,21,"ev"],[76,25,59,23],[76,26,59,24],[77,10,60,8],[77,14,60,12],[77,15,60,13,"sendEvent"],[77,24,60,22],[77,25,60,23,"ev"],[77,27,60,25],[77,28,60,26],[78,8,61,6],[79,6,62,4],[80,6,63,4],[80,10,63,8,"ev"],[80,12,63,10],[80,13,63,11,"isFinal"],[80,20,63,18],[80,24,63,22,"ev"],[80,26,63,24],[80,27,63,25,"maxPointers"],[80,38,63,36],[80,41,63,39],[80,42,63,40],[80,44,63,42],[81,8,64,6,"setTimeout"],[81,18,64,16],[81,19,64,17],[81,25,64,23],[82,10,65,8],[83,10,66,8],[84,10,67,8],[84,14,67,12],[84,18,67,16],[84,19,67,17,"isGestureRunning"],[84,35,67,33],[84,37,67,35],[85,12,68,10],[85,16,68,14],[85,17,68,15,"cancelEvent"],[85,28,68,26],[85,29,68,27,"ev"],[85,31,68,29],[85,32,68,30],[86,10,69,8],[87,8,70,6],[87,9,70,7],[87,10,70,8],[88,6,71,4],[89,6,72,4],[89,10,72,8],[89,14,72,12],[89,15,72,13,"hasGestureFailed"],[89,31,72,29],[89,33,72,31],[90,8,73,6],[91,6,74,4],[92,6,75,4],[93,6,76,4],[94,6,77,4],[94,10,77,8,"ev"],[94,12,77,10],[94,13,77,11,"isFinal"],[94,20,77,18],[94,22,77,20],[95,8,78,6],[96,8,79,6],[97,8,80,6],[97,12,80,10,"ev"],[97,14,80,12],[97,15,80,13,"maxPointers"],[97,26,80,24],[97,29,80,27],[97,30,80,28],[97,32,80,30],[98,10,81,8,"setTimeout"],[98,20,81,18],[98,21,81,19],[98,27,81,25],[99,12,82,10],[99,16,82,14],[99,20,82,18],[99,21,82,19,"isGestureRunning"],[99,37,82,35],[99,39,82,37],[100,14,83,12],[100,18,83,16],[100,19,83,17,"cancelEvent"],[100,30,83,28],[100,31,83,29,"ev"],[100,33,83,31],[100,34,83,32],[101,12,84,10],[102,10,85,8],[102,11,85,9],[102,12,85,10],[103,8,86,6],[105,8,88,6],[106,8,89,6,"clearTimeout"],[106,20,89,18],[106,21,89,19],[106,25,89,23],[106,26,89,24,"_timer"],[106,32,89,30],[106,33,89,31],[107,8,90,6],[108,8,91,6],[108,12,91,10],[108,13,91,11,"_timer"],[108,19,91,17],[108,22,91,20,"setTimeout"],[108,32,91,30],[108,33,91,31],[108,39,91,37],[109,10,92,8],[109,14,92,12],[109,15,92,13,"hasGestureFailed"],[109,31,92,29],[109,34,92,32],[109,38,92,36],[110,10,93,8],[110,14,93,12],[110,15,93,13,"cancelEvent"],[110,26,93,24],[110,27,93,25,"ev"],[110,29,93,27],[110,30,93,28],[111,8,94,6],[111,9,94,7],[111,11,94,9],[111,15,94,13],[111,16,94,14,"maxDelayMs"],[111,26,94,24],[111,27,94,25],[112,6,95,4],[112,7,95,5],[112,13,95,11],[112,17,95,15],[112,18,95,16],[112,22,95,20],[112,23,95,21,"hasGestureFailed"],[112,39,95,37],[112,43,95,41],[112,44,95,42],[112,48,95,46],[112,49,95,47,"isGestureRunning"],[112,65,95,63],[112,67,95,65],[113,8,96,6],[114,8,97,6],[114,14,97,12,"gesture"],[114,21,97,19],[114,24,97,22],[114,28,97,26],[114,29,97,27,"hammer"],[114,35,97,33],[114,36,97,34,"get"],[114,39,97,37],[114,40,97,38],[114,44,97,42],[114,45,97,43,"name"],[114,49,97,47],[114,50,97,48],[115,8,98,6],[116,8,99,6],[116,12,99,10,"gesture"],[116,19,99,17],[116,20,99,18,"options"],[116,27,99,25],[116,28,99,26,"enable"],[116,34,99,32],[116,35,99,33,"gesture"],[116,42,99,40],[116,44,99,42,"ev"],[116,46,99,44],[116,47,99,45],[116,49,99,47],[117,10,100,8,"clearTimeout"],[117,22,100,20],[117,23,100,21],[117,27,100,25],[117,28,100,26,"_multiTapTimer"],[117,42,100,40],[117,43,100,41],[118,10,101,8],[118,14,101,12],[118,15,101,13,"onStart"],[118,22,101,20],[118,23,101,21,"ev"],[118,25,101,23],[118,26,101,24],[119,10,102,8],[119,14,102,12],[119,15,102,13,"sendEvent"],[119,24,102,22],[119,25,102,23,"ev"],[119,27,102,25],[119,28,102,26],[120,8,103,6],[121,6,104,4],[122,4,105,2],[123,4,106,2,"getHammerConfig"],[123,19,106,17,"getHammerConfig"],[123,20,106,17],[123,22,106,20],[124,6,107,4],[124,13,107,11],[125,8,108,6],[125,11,108,9],[125,16,108,14],[125,17,108,15,"getHammerConfig"],[125,32,108,30],[125,33,108,31],[125,34,108,32],[126,8,109,6,"event"],[126,13,109,11],[126,15,109,13],[126,19,109,17],[126,20,109,18,"name"],[126,24,109,22],[127,8,110,6],[128,8,111,6,"taps"],[128,12,111,10],[128,14,111,12],[128,18,111,12,"isnan"],[128,24,111,17],[128,25,111,17,"isnan"],[128,30,111,17],[128,32,111,18],[128,36,111,22],[128,37,111,23,"config"],[128,43,111,29],[128,44,111,30,"numberOfTaps"],[128,56,111,42],[128,57,111,43],[128,60,111,46],[128,61,111,47],[128,64,111,50],[128,68,111,54],[128,69,111,55,"config"],[128,75,111,61],[128,76,111,62,"numberOfTaps"],[128,88,111,74],[129,8,112,6,"interval"],[129,16,112,14],[129,18,112,16],[129,22,112,20],[129,23,112,21,"maxDelayMs"],[129,33,112,31],[130,8,113,6,"time"],[130,12,113,10],[131,8,114,6],[132,8,115,6],[132,12,115,6,"isnan"],[132,18,115,11],[132,19,115,11,"isnan"],[132,24,115,11],[132,26,115,12],[132,30,115,16],[132,31,115,17,"config"],[132,37,115,23],[132,38,115,24,"maxDurationMs"],[132,51,115,37],[132,52,115,38],[132,56,115,42],[132,60,115,46],[132,61,115,47,"config"],[132,67,115,53],[132,68,115,54,"maxDurationMs"],[132,81,115,67],[132,85,115,71],[132,89,115,75],[132,92,115,78],[132,95,115,81],[133,8,116,6],[134,8,117,6],[134,12,117,10],[134,13,117,11,"config"],[134,19,117,17],[134,20,117,18,"maxDurationMs"],[135,6,118,4],[135,7,118,5],[136,4,119,2],[137,4,120,2,"updateGestureConfig"],[137,23,120,21,"updateGestureConfig"],[137,24,120,22],[138,6,121,4,"shouldCancelWhenOutside"],[138,29,121,27],[138,32,121,30],[138,36,121,34],[139,6,122,4,"maxDeltaX"],[139,15,122,13],[139,18,122,16,"Number"],[139,24,122,22],[139,25,122,23,"NaN"],[139,28,122,26],[140,6,123,4,"maxDeltaY"],[140,15,123,13],[140,18,123,16,"Number"],[140,24,123,22],[140,25,123,23,"NaN"],[140,28,123,26],[141,6,124,4,"numberOfTaps"],[141,18,124,16],[141,21,124,19],[141,22,124,20],[142,6,125,4,"minDurationMs"],[142,19,125,17],[142,22,125,20],[142,25,125,23],[143,6,126,4,"maxDelayMs"],[143,16,126,14],[143,19,126,17,"Number"],[143,25,126,23],[143,26,126,24,"NaN"],[143,29,126,27],[144,6,127,4],[145,6,128,4,"maxDurationMs"],[145,19,128,17],[145,22,128,20,"Number"],[145,28,128,26],[145,29,128,27,"NaN"],[145,32,128,30],[146,6,129,4,"maxDist"],[146,13,129,11],[146,16,129,14],[146,17,129,15],[147,6,130,4,"minPointers"],[147,17,130,15],[147,20,130,18],[147,21,130,19],[148,6,131,4,"maxPointers"],[148,17,131,15],[148,20,131,18],[148,21,131,19],[149,6,132,4],[149,9,132,7,"props"],[150,4,133,2],[150,5,133,3],[150,7,133,5],[151,6,134,4],[151,13,134,11],[151,18,134,16],[151,19,134,17,"updateGestureConfig"],[151,38,134,36],[151,39,134,37],[152,8,135,6,"shouldCancelWhenOutside"],[152,31,135,29],[153,8,136,6,"numberOfTaps"],[153,20,136,18],[154,8,137,6,"maxDeltaX"],[154,17,137,15],[155,8,138,6,"maxDeltaY"],[155,17,138,15],[156,8,139,6,"minDurationMs"],[156,21,139,19],[157,8,140,6,"maxDelayMs"],[157,18,140,16],[158,8,141,6,"maxDist"],[158,15,141,13],[159,8,142,6,"minPointers"],[159,19,142,17],[160,8,143,6,"maxPointers"],[160,19,143,17],[161,8,144,6],[161,11,144,9,"props"],[162,6,145,4],[162,7,145,5],[162,8,145,6],[163,4,146,2],[164,4,147,2,"onGestureEnded"],[164,18,147,16,"onGestureEnded"],[164,19,147,17],[164,22,147,20,"props"],[164,27,147,25],[164,29,147,27],[165,6,148,4,"clearTimeout"],[165,18,148,16],[165,19,148,17],[165,23,148,21],[165,24,148,22,"_timer"],[165,30,148,28],[165,31,148,29],[166,6,149,4],[167,6,150,4],[167,11,150,9],[167,12,150,10,"onGestureEnded"],[167,26,150,24],[167,27,150,25],[167,30,150,28,"props"],[167,35,150,33],[167,36,150,34],[168,4,151,2],[169,4,152,2,"onWaitingEnded"],[169,18,152,16,"onWaitingEnded"],[169,19,152,17,"_gesture"],[169,27,152,25],[169,29,152,27],[170,6,153,4],[170,10,153,8],[170,14,153,12],[170,15,153,13,"_shouldFireEndEvent"],[170,34,153,32],[170,36,153,34],[171,8,154,6],[171,12,154,10],[171,13,154,11,"onSuccessfulTap"],[171,28,154,26],[171,29,154,27],[171,33,154,31],[171,34,154,32,"_shouldFireEndEvent"],[171,53,154,51],[171,54,154,52],[172,8,155,6],[172,12,155,10],[172,13,155,11,"_shouldFireEndEvent"],[172,32,155,30],[172,35,155,33],[172,39,155,37],[173,6,156,4],[174,4,157,2],[175,2,158,0],[176,2,159,0],[176,6,159,0,"_default"],[176,14,159,0],[176,17,159,15,"TapGestureHandler"],[176,34,159,32],[177,0,159,33],[177,3]],"functionMap":{"names":["<global>","TapGestureHandler","get__name","get__NativeGestureClass","get__maxDelayMs","simulateCancelEvent","onGestureActivated","onSuccessfulTap","onRawEvent","setTimeout$argument_0","getHammerConfig","updateGestureConfig","onGestureEnded","onWaitingEnded"],"mappings":"AAA;ACK;ECG;GDE;EEC;GFE;EGC;GHG;EIC;GJI;EKC;GLI;oBMC;GNiB;EOC;iBCiB;ODM;mBCW;SDI;+BCM;ODG;GPW;ESC;GTa;EUC;GV0B;EWC;GXI;EYC;GZK;CDC"},"hasCjsExports":false},"type":"js/module"}]}