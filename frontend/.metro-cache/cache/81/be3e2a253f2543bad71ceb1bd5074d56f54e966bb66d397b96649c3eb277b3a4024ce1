{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":286},"end":{"line":5,"column":31,"index":317}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":390},"end":{"line":7,"column":66,"index":456}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":457},"end":{"line":8,"column":63,"index":520}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":521},"end":{"line":9,"column":33,"index":554}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":555},"end":{"line":10,"column":108,"index":663}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":664},"end":{"line":11,"column":56,"index":720}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":721},"end":{"line":12,"column":64,"index":785}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":786},"end":{"line":13,"column":47,"index":833}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":834},"end":{"line":14,"column":81,"index":915}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":916},"end":{"line":15,"column":43,"index":959}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":960},"end":{"line":16,"column":64,"index":1024}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1025},"end":{"line":17,"column":77,"index":1102}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1103},"end":{"line":18,"column":55,"index":1158}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1159},"end":{"line":19,"column":49,"index":1208}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _reactNativeWebDistExportsUIManager = require(_dependencyMap[2], \"react-native-web/dist/exports/UIManager\");\n  var UIManager = _interopDefault(_reactNativeWebDistExportsUIManager);\n  var _reactNativeWebDistExportsDeviceEventEmitter = require(_dependencyMap[3], \"react-native-web/dist/exports/DeviceEventEmitter\");\n  var DeviceEventEmitter = _interopDefault(_reactNativeWebDistExportsDeviceEventEmitter);\n  var _customDirectEventTypes = require(_dependencyMap[4], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = require(_dependencyMap[5], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[6], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[7], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[8], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[9], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[10], \"../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[11], \"../utils\");\n  var _ActionType = require(_dependencyMap[12], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[13], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[14], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[15], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[16], \"../mountRegistry\");\n  var _UIManagerAny$getView, _UIManagerAny$getView2, _UIManagerAny$getCons;\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const UIManagerAny = UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid)\n  }; // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  }; // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n\n  const UIManagerConstants = (_UIManagerAny$getView = (_UIManagerAny$getView2 = UIManagerAny.getViewManagerConfig) === null || _UIManagerAny$getView2 === void 0 ? void 0 : _UIManagerAny$getView2.call(UIManagerAny, 'getConstants')) !== null && _UIManagerAny$getView !== void 0 ? _UIManagerAny$getView : (_UIManagerAny$getCons = UIManagerAny.getConstants) === null || _UIManagerAny$getCons === void 0 ? void 0 : _UIManagerAny$getCons.call(UIManagerAny);\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  } // Wrap JS responder calls and notify gesture handler manager\n\n  const {\n    setJSResponder: oldSetJSResponder = () => {// no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {// no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && Platform.default.OS === 'android'; // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n\n  if (DEV_ON_ANDROID) {\n    DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1; // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      constructor(props) {\n        super(props);\n        _defineProperty(this, \"handlerTag\", void 0);\n        _defineProperty(this, \"config\", void 0);\n        _defineProperty(this, \"propsRef\", void 0);\n        _defineProperty(this, \"isMountedRef\", void 0);\n        _defineProperty(this, \"viewNode\", void 0);\n        _defineProperty(this, \"viewTag\", void 0);\n        _defineProperty(this, \"inspectorToggleListener\", void 0);\n        _defineProperty(this, \"onGestureHandlerEvent\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onGestureEvent === 'function') {\n              var _this$props$onGesture, _this$props;\n              (_this$props$onGesture = (_this$props = this.props).onGestureEvent) === null || _this$props$onGesture === void 0 ? void 0 : _this$props$onGesture.call(_this$props, event);\n            }\n          } else {\n            var _this$props$onGesture2, _this$props2;\n            (_this$props$onGesture2 = (_this$props2 = this.props).onGestureHandlerEvent) === null || _this$props$onGesture2 === void 0 ? void 0 : _this$props$onGesture2.call(_this$props2, event);\n          }\n        });\n        _defineProperty(this, \"onGestureHandlerStateChange\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onHandlerStateChange === 'function') {\n              var _this$props$onHandler, _this$props3;\n              (_this$props$onHandler = (_this$props3 = this.props).onHandlerStateChange) === null || _this$props$onHandler === void 0 ? void 0 : _this$props$onHandler.call(_this$props3, event);\n            }\n            const state = event.nativeEvent.state;\n            const stateEventName = stateToPropMappings[state];\n            const eventHandler = stateEventName && this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            var _this$props$onGesture3, _this$props4;\n            (_this$props$onGesture3 = (_this$props4 = this.props).onGestureHandlerStateChange) === null || _this$props$onGesture3 === void 0 ? void 0 : _this$props$onGesture3.call(_this$props4, event);\n          }\n        });\n        _defineProperty(this, \"refHandler\", node => {\n          var _props;\n          this.viewNode = node;\n          const child = React.Children.only(this.props.children); // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n\n          const ref = (0, _utils2.isReact19)() ? (_props = child.props) === null || _props === void 0 ? void 0 : _props.ref : child === null || child === void 0 ? void 0 : child.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        });\n        _defineProperty(this, \"createGestureHandler\", newConfig => {\n          this.config = newConfig;\n          RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n        });\n        _defineProperty(this, \"attachGestureHandler\", newViewTag => {\n          this.viewTag = newViewTag;\n          if (Platform.default.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n              onGestureEvent: this.onGestureHandlerEvent,\n              onGestureStateChange: this.onGestureHandlerStateChange\n            });\n            const actionType = (() => {\n              var _this$props5, _this$props6;\n              const onGestureEvent = (_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : _this$props5.onGestureEvent;\n              const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              const onHandlerStateChange = (_this$props6 = this.props) === null || _this$props6 === void 0 ? void 0 : _this$props6.onHandlerStateChange;\n              const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n          });\n        });\n        _defineProperty(this, \"updateGestureHandler\", newConfig => {\n          this.config = newConfig;\n          RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        });\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        var _this$inspectorToggle;\n        (_this$inspectorToggle = this.inspectorToggleListener) === null || _this$inspectorToggle === void 0 ? void 0 : _this$inspectorToggle.remove();\n        this.isMountedRef.current = false;\n        if (Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)(); // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props; // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n      setNativeProps(updates) {\n        const mergedProps = {\n          ...this.props,\n          ...updates\n        };\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        var _this$props$testID;\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/React.createElement(_PressabilityDebugView.PressabilityDebugView, {\n            key: \"pressabilityDebugView\",\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }));\n        }\n        return /*#__PURE__*/React.cloneElement(child, {\n          ref: this.refHandler,\n          collapsable: false,\n          ...((0, _utils2.isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}),\n          testID: (_this$props$testID = this.props.testID) !== null && _this$props$testID !== void 0 ? _this$props$testID : child.props.testID,\n          ...events\n        }, grandChildren);\n      }\n    }\n    _defineProperty(Handler, \"displayName\", name);\n    _defineProperty(Handler, \"contextType\", GestureHandlerRootViewContext.default);\n    return Handler;\n  }\n});","lineCount":442,"map":[[27,2,118,15,"Object"],[27,8,118,15],[27,9,118,15,"defineProperty"],[27,23,118,15],[27,24,118,15,"exports"],[27,31,118,15],[28,4,118,15,"enumerable"],[28,14,118,15],[29,4,118,15,"get"],[29,7,118,15],[29,18,118,15,"get"],[29,19,118,15],[30,6,118,15],[30,13,118,15,"createHandler"],[30,26,118,15],[31,4,118,15],[32,2,118,15],[33,2,5,0],[33,6,5,0,"_react"],[33,12,5,0],[33,15,5,0,"require"],[33,22,5,0],[33,23,5,0,"_dependencyMap"],[33,37,5,0],[34,2,5,0],[34,6,5,0,"React"],[34,11,5,0],[34,14,5,0,"_interopNamespace"],[34,31,5,0],[34,32,5,0,"_react"],[34,38,5,0],[35,2,5,31],[35,6,5,31,"_reactNativeWebDistExportsPlatform"],[35,40,5,31],[35,43,5,31,"require"],[35,50,5,31],[35,51,5,31,"_dependencyMap"],[35,65,5,31],[36,2,5,31],[36,6,5,31,"Platform"],[36,14,5,31],[36,17,5,31,"_interopDefault"],[36,32,5,31],[36,33,5,31,"_reactNativeWebDistExportsPlatform"],[36,67,5,31],[37,2,5,31],[37,6,5,31,"_reactNativeWebDistExportsUIManager"],[37,41,5,31],[37,44,5,31,"require"],[37,51,5,31],[37,52,5,31,"_dependencyMap"],[37,66,5,31],[38,2,5,31],[38,6,5,31,"UIManager"],[38,15,5,31],[38,18,5,31,"_interopDefault"],[38,33,5,31],[38,34,5,31,"_reactNativeWebDistExportsUIManager"],[38,69,5,31],[39,2,5,31],[39,6,5,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[39,50,5,31],[39,53,5,31,"require"],[39,60,5,31],[39,61,5,31,"_dependencyMap"],[39,75,5,31],[40,2,5,31],[40,6,5,31,"DeviceEventEmitter"],[40,24,5,31],[40,27,5,31,"_interopDefault"],[40,42,5,31],[40,43,5,31,"_reactNativeWebDistExportsDeviceEventEmitter"],[40,87,5,31],[41,2,7,0],[41,6,7,0,"_customDirectEventTypes"],[41,29,7,0],[41,32,7,0,"require"],[41,39,7,0],[41,40,7,0,"_dependencyMap"],[41,54,7,0],[42,2,8,0],[42,6,8,0,"_RNGestureHandlerModule"],[42,29,8,0],[42,32,8,0,"require"],[42,39,8,0],[42,40,8,0,"_dependencyMap"],[42,54,8,0],[43,2,8,0],[43,6,8,0,"RNGestureHandlerModule"],[43,28,8,0],[43,31,8,0,"_interopDefault"],[43,46,8,0],[43,47,8,0,"_RNGestureHandlerModule"],[43,70,8,0],[44,2,9,0],[44,6,9,0,"_State"],[44,12,9,0],[44,15,9,0,"require"],[44,22,9,0],[44,23,9,0,"_dependencyMap"],[44,37,9,0],[45,2,10,0],[45,6,10,0,"_handlersRegistry"],[45,23,10,0],[45,26,10,0,"require"],[45,33,10,0],[45,34,10,0,"_dependencyMap"],[45,48,10,0],[46,2,11,0],[46,6,11,0,"_getNextHandlerTag"],[46,24,11,0],[46,27,11,0,"require"],[46,34,11,0],[46,35,11,0,"_dependencyMap"],[46,49,11,0],[47,2,12,0],[47,6,12,0,"_utils"],[47,12,12,0],[47,15,12,0,"require"],[47,22,12,0],[47,23,12,0,"_dependencyMap"],[47,37,12,0],[48,2,13,0],[48,6,13,0,"_findNodeHandle"],[48,21,13,0],[48,24,13,0,"require"],[48,31,13,0],[48,32,13,0,"_dependencyMap"],[48,46,13,0],[49,2,13,0],[49,6,13,0,"findNodeHandle"],[49,20,13,0],[49,23,13,0,"_interopDefault"],[49,38,13,0],[49,39,13,0,"_findNodeHandle"],[49,54,13,0],[50,2,14,0],[50,6,14,0,"_utils2"],[50,13,14,0],[50,16,14,0,"require"],[50,23,14,0],[50,24,14,0,"_dependencyMap"],[50,38,14,0],[51,2,15,0],[51,6,15,0,"_ActionType"],[51,17,15,0],[51,20,15,0,"require"],[51,27,15,0],[51,28,15,0,"_dependencyMap"],[51,42,15,0],[52,2,16,0],[52,6,16,0,"_PressabilityDebugView"],[52,28,16,0],[52,31,16,0,"require"],[52,38,16,0],[52,39,16,0,"_dependencyMap"],[52,53,16,0],[53,2,17,0],[53,6,17,0,"_GestureHandlerRootViewContext"],[53,36,17,0],[53,39,17,0,"require"],[53,46,17,0],[53,47,17,0,"_dependencyMap"],[53,61,17,0],[54,2,17,0],[54,6,17,0,"GestureHandlerRootViewContext"],[54,35,17,0],[54,38,17,0,"_interopDefault"],[54,53,17,0],[54,54,17,0,"_GestureHandlerRootViewContext"],[54,84,17,0],[55,2,18,0],[55,6,18,0,"_ghQueueMicrotask"],[55,23,18,0],[55,26,18,0,"require"],[55,33,18,0],[55,34,18,0,"_dependencyMap"],[55,48,18,0],[56,2,19,0],[56,6,19,0,"_mountRegistry"],[56,20,19,0],[56,23,19,0,"require"],[56,30,19,0],[56,31,19,0,"_dependencyMap"],[56,45,19,0],[57,2,1,0],[57,6,1,4,"_UIManagerAny$getView"],[57,27,1,25],[57,29,1,27,"_UIManagerAny$getView2"],[57,51,1,49],[57,53,1,51,"_UIManagerAny$getCons"],[57,74,1,72],[58,2,3,0],[58,11,3,9,"_defineProperty"],[58,26,3,24,"_defineProperty"],[58,27,3,25,"obj"],[58,30,3,28],[58,32,3,30,"key"],[58,35,3,33],[58,37,3,35,"value"],[58,42,3,40],[58,44,3,42],[59,4,3,44],[59,8,3,48,"key"],[59,11,3,51],[59,15,3,55,"obj"],[59,18,3,58],[59,20,3,60],[60,6,3,62,"Object"],[60,12,3,68],[60,13,3,69,"defineProperty"],[60,27,3,83],[60,28,3,84,"obj"],[60,31,3,87],[60,33,3,89,"key"],[60,36,3,92],[60,38,3,94],[61,8,3,96,"value"],[61,13,3,101],[61,15,3,103,"value"],[61,20,3,108],[62,8,3,110,"enumerable"],[62,18,3,120],[62,20,3,122],[62,24,3,126],[63,8,3,128,"configurable"],[63,20,3,140],[63,22,3,142],[63,26,3,146],[64,8,3,148,"writable"],[64,16,3,156],[64,18,3,158],[65,6,3,163],[65,7,3,164],[65,8,3,165],[66,4,3,167],[66,5,3,168],[66,11,3,174],[67,6,3,176,"obj"],[67,9,3,179],[67,10,3,180,"key"],[67,13,3,183],[67,14,3,184],[67,17,3,187,"value"],[67,22,3,192],[68,4,3,194],[69,4,3,196],[69,11,3,203,"obj"],[69,14,3,206],[70,2,3,208],[71,2,20,0],[71,8,20,6,"UIManagerAny"],[71,20,20,18],[71,23,20,21,"UIManager"],[71,32,20,30],[71,33,20,30,"default"],[71,40,20,30],[72,2,21,0,"customDirectEventTypes"],[72,25,21,22],[72,26,21,22,"customDirectEventTypes"],[72,48,21,22],[72,49,21,23,"topGestureHandlerEvent"],[72,71,21,45],[72,74,21,48],[73,4,22,2,"registrationName"],[73,20,22,18],[73,22,22,20],[74,2,23,0],[74,3,23,1],[75,2,24,0],[75,8,24,6,"customGHEventsConfigFabricAndroid"],[75,41,24,39],[75,44,24,42],[76,4,25,2,"topOnGestureHandlerEvent"],[76,28,25,26],[76,30,25,28],[77,6,26,4,"registrationName"],[77,22,26,20],[77,24,26,22],[78,4,27,2],[78,5,27,3],[79,4,28,2,"topOnGestureHandlerStateChange"],[79,34,28,32],[79,36,28,34],[80,6,29,4,"registrationName"],[80,22,29,20],[80,24,29,22],[81,4,30,2],[82,2,31,0],[82,3,31,1],[83,2,32,0],[83,8,32,6,"customGHEventsConfig"],[83,28,32,26],[83,31,32,29],[84,4,33,2,"onGestureHandlerEvent"],[84,25,33,23],[84,27,33,25],[85,6,34,4,"registrationName"],[85,22,34,20],[85,24,34,22],[86,4,35,2],[86,5,35,3],[87,4,36,2,"onGestureHandlerStateChange"],[87,31,36,29],[87,33,36,31],[88,6,37,4,"registrationName"],[88,22,37,20],[88,24,37,22],[89,4,38,2],[89,5,38,3],[90,4,39,2],[91,4,40,2],[92,4,41,2],[93,4,42,2],[94,4,43,2],[95,4,44,2],[96,4,45,2],[97,4,46,2],[98,4,47,2],[98,8,47,6],[98,12,47,6,"isFabric"],[98,19,47,14],[98,20,47,14,"isFabric"],[98,28,47,14],[98,30,47,15],[98,31,47,16],[98,35,47,20,"Platform"],[98,43,47,28],[98,44,47,28,"default"],[98,51,47,28],[98,52,47,29,"OS"],[98,54,47,31],[98,59,47,36],[98,68,47,45],[98,72,47,49,"customGHEventsConfigFabricAndroid"],[98,105,47,82],[99,2,48,0],[99,3,48,1],[99,4,48,2],[99,5,48,3],[100,2,49,0],[101,2,50,0],[102,2,51,0],[104,2,53,0,"UIManagerAny"],[104,14,53,12],[104,15,53,13,"genericDirectEventTypes"],[104,38,53,36],[104,41,53,39],[105,4,53,41],[105,7,53,44,"UIManagerAny"],[105,19,53,56],[105,20,53,57,"genericDirectEventTypes"],[105,43,53,80],[106,4,54,2],[106,7,54,5,"customGHEventsConfig"],[107,2,55,0],[107,3,55,1],[107,4,55,2],[107,5,55,3],[108,2,56,0],[109,2,57,0],[111,2,59,0],[111,8,59,6,"UIManagerConstants"],[111,26,59,24],[111,29,59,27],[111,30,59,28,"_UIManagerAny$getView"],[111,51,59,49],[111,54,59,52],[111,55,59,53,"_UIManagerAny$getView2"],[111,77,59,75],[111,80,59,78,"UIManagerAny"],[111,92,59,90],[111,93,59,91,"getViewManagerConfig"],[111,113,59,111],[111,119,59,117],[111,123,59,121],[111,127,59,125,"_UIManagerAny$getView2"],[111,149,59,147],[111,154,59,152],[111,159,59,157],[111,160,59,158],[111,163,59,161],[111,168,59,166],[111,169,59,167],[111,172,59,170,"_UIManagerAny$getView2"],[111,194,59,192],[111,195,59,193,"call"],[111,199,59,197],[111,200,59,198,"UIManagerAny"],[111,212,59,210],[111,214,59,212],[111,228,59,226],[111,229,59,227],[111,235,59,233],[111,239,59,237],[111,243,59,241,"_UIManagerAny$getView"],[111,264,59,262],[111,269,59,267],[111,274,59,272],[111,275,59,273],[111,278,59,276,"_UIManagerAny$getView"],[111,299,59,297],[111,302,59,300],[111,303,59,301,"_UIManagerAny$getCons"],[111,324,59,322],[111,327,59,325,"UIManagerAny"],[111,339,59,337],[111,340,59,338,"getConstants"],[111,352,59,350],[111,358,59,356],[111,362,59,360],[111,366,59,364,"_UIManagerAny$getCons"],[111,387,59,385],[111,392,59,390],[111,397,59,395],[111,398,59,396],[111,401,59,399],[111,406,59,404],[111,407,59,405],[111,410,59,408,"_UIManagerAny$getCons"],[111,431,59,429],[111,432,59,430,"call"],[111,436,59,434],[111,437,59,435,"UIManagerAny"],[111,449,59,447],[111,450,59,448],[112,2,61,0],[112,6,61,4,"UIManagerConstants"],[112,24,61,22],[112,26,61,24],[113,4,62,2,"UIManagerConstants"],[113,22,62,20],[113,23,62,21,"genericDirectEventTypes"],[113,46,62,44],[113,49,62,47],[114,6,62,49],[114,9,62,52,"UIManagerConstants"],[114,27,62,70],[114,28,62,71,"genericDirectEventTypes"],[114,51,62,94],[115,6,63,4],[115,9,63,7,"customGHEventsConfig"],[116,4,64,2],[116,5,64,3],[117,2,65,0],[117,3,65,1],[117,4,65,2],[119,2,68,0],[119,8,68,6],[120,4,69,2,"setJSResponder"],[120,18,69,16],[120,20,69,18,"oldSetJSResponder"],[120,37,69,35],[120,40,69,38,"oldSetJSResponder"],[120,41,69,38],[120,46,69,44],[120,47,69,45],[121,4,69,45],[121,5,70,3],[122,4,71,2,"clearJSResponder"],[122,20,71,18],[122,22,71,20,"oldClearJSResponder"],[122,41,71,39],[122,44,71,42,"oldClearJSResponder"],[122,45,71,42],[122,50,71,48],[122,51,71,49],[123,4,71,49],[124,2,73,0],[124,3,73,1],[124,6,73,4,"UIManagerAny"],[124,18,73,16],[125,2,75,0,"UIManagerAny"],[125,14,75,12],[125,15,75,13,"setJSResponder"],[125,29,75,27],[125,32,75,30],[125,33,75,31,"tag"],[125,36,75,34],[125,38,75,36,"blockNativeResponder"],[125,58,75,56],[125,63,75,61],[126,4,76,2,"RNGestureHandlerModule"],[126,26,76,24],[126,27,76,24,"default"],[126,34,76,24],[126,35,76,25,"handleSetJSResponder"],[126,55,76,45],[126,56,76,46,"tag"],[126,59,76,49],[126,61,76,51,"blockNativeResponder"],[126,81,76,71],[126,82,76,72],[127,4,77,2,"oldSetJSResponder"],[127,21,77,19],[127,22,77,20,"tag"],[127,25,77,23],[127,27,77,25,"blockNativeResponder"],[127,47,77,45],[127,48,77,46],[128,2,78,0],[128,3,78,1],[129,2,80,0,"UIManagerAny"],[129,14,80,12],[129,15,80,13,"clearJSResponder"],[129,31,80,29],[129,34,80,32],[129,40,80,38],[130,4,81,2,"RNGestureHandlerModule"],[130,26,81,24],[130,27,81,24,"default"],[130,34,81,24],[130,35,81,25,"handleClearJSResponder"],[130,57,81,47],[130,58,81,48],[130,59,81,49],[131,4,82,2,"oldClearJSResponder"],[131,23,82,21],[131,24,82,22],[131,25,82,23],[132,2,83,0],[132,3,83,1],[133,2,85,0],[133,6,85,4,"allowTouches"],[133,18,85,16],[133,21,85,19],[133,25,85,23],[134,2,86,0],[134,8,86,6,"DEV_ON_ANDROID"],[134,22,86,20],[134,25,86,23,"__DEV__"],[134,32,86,30],[134,36,86,34,"Platform"],[134,44,86,42],[134,45,86,42,"default"],[134,52,86,42],[134,53,86,43,"OS"],[134,55,86,45],[134,60,86,50],[134,69,86,59],[134,70,86,60],[134,71,86,61],[135,2,87,0],[137,2,89,0],[137,6,89,4,"DEV_ON_ANDROID"],[137,20,89,18],[137,22,89,20],[138,4,90,2,"DeviceEventEmitter"],[138,22,90,20],[138,23,90,20,"default"],[138,30,90,20],[138,31,90,21,"addListener"],[138,42,90,32],[138,43,90,33],[138,67,90,57],[138,69,90,59],[138,75,90,65],[139,6,91,4,"allowTouches"],[139,18,91,16],[139,21,91,19],[139,22,91,20,"allowTouches"],[139,34,91,32],[140,4,92,2],[140,5,92,3],[140,6,92,4],[141,2,93,0],[142,2,95,0],[142,11,95,9,"hasUnresolvedRefs"],[142,28,95,26,"hasUnresolvedRefs"],[142,29,95,27,"props"],[142,34,95,32],[142,36,95,34],[143,4,96,2],[144,4,97,2],[144,10,97,8,"extract"],[144,17,97,15],[144,20,97,18,"refs"],[144,24,97,22],[144,28,97,26],[145,6,98,4],[145,10,98,8],[145,11,98,9,"Array"],[145,16,98,14],[145,17,98,15,"isArray"],[145,24,98,22],[145,25,98,23,"refs"],[145,29,98,27],[145,30,98,28],[145,32,98,30],[146,8,99,6],[146,15,99,13,"refs"],[146,19,99,17],[146,23,99,21,"refs"],[146,27,99,25],[146,28,99,26,"current"],[146,35,99,33],[146,40,99,38],[146,44,99,42],[147,6,100,4],[148,6,102,4],[148,13,102,11,"refs"],[148,17,102,15],[148,18,102,16,"some"],[148,22,102,20],[148,23,102,21,"r"],[148,24,102,22],[148,28,102,26,"r"],[148,29,102,27],[148,33,102,31,"r"],[148,34,102,32],[148,35,102,33,"current"],[148,42,102,40],[148,47,102,45],[148,51,102,49],[148,52,102,50],[149,4,103,2],[149,5,103,3],[150,4,105,2],[150,11,105,9,"extract"],[150,18,105,16],[150,19,105,17,"props"],[150,24,105,22],[150,25,105,23],[150,47,105,45],[150,48,105,46],[150,49,105,47],[150,53,105,51,"extract"],[150,60,105,58],[150,61,105,59,"props"],[150,66,105,64],[150,67,105,65],[150,76,105,74],[150,77,105,75],[150,78,105,76],[151,2,106,0],[152,2,108,0],[152,8,108,6,"stateToPropMappings"],[152,27,108,25],[152,30,108,28],[153,4,109,2],[153,5,109,3,"State"],[153,11,109,8],[153,12,109,8,"State"],[153,17,109,8],[153,18,109,9,"UNDETERMINED"],[153,30,109,21],[153,33,109,24,"undefined"],[153,42,109,33],[154,4,110,2],[154,5,110,3,"State"],[154,11,110,8],[154,12,110,8,"State"],[154,17,110,8],[154,18,110,9,"BEGAN"],[154,23,110,14],[154,26,110,17],[154,35,110,26],[155,4,111,2],[155,5,111,3,"State"],[155,11,111,8],[155,12,111,8,"State"],[155,17,111,8],[155,18,111,9,"FAILED"],[155,24,111,15],[155,27,111,18],[155,37,111,28],[156,4,112,2],[156,5,112,3,"State"],[156,11,112,8],[156,12,112,8,"State"],[156,17,112,8],[156,18,112,9,"CANCELLED"],[156,27,112,18],[156,30,112,21],[156,43,112,34],[157,4,113,2],[157,5,113,3,"State"],[157,11,113,8],[157,12,113,8,"State"],[157,17,113,8],[157,18,113,9,"ACTIVE"],[157,24,113,15],[157,27,113,18],[157,40,113,31],[158,4,114,2],[158,5,114,3,"State"],[158,11,114,8],[158,12,114,8,"State"],[158,17,114,8],[158,18,114,9,"END"],[158,21,114,12],[158,24,114,15],[159,2,115,0],[159,3,115,1],[160,2,116,0],[160,8,116,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[160,35,116,33],[160,38,116,36],[160,39,116,37],[160,40,116,38],[160,41,116,39],[162,2,118,15],[162,11,118,24,"createHandler"],[162,24,118,37,"createHandler"],[162,25,118,38],[163,4,119,2,"name"],[163,8,119,6],[164,4,120,2,"allowedProps"],[164,16,120,14],[164,19,120,17],[164,21,120,19],[165,4,121,2,"config"],[165,10,121,8],[165,13,121,11],[165,14,121,12],[165,15,121,13],[166,4,122,2,"transformProps"],[166,18,122,16],[167,4,123,2,"customNativeProps"],[167,21,123,19],[167,24,123,22],[168,2,124,0],[168,3,124,1],[168,5,124,3],[169,4,125,2],[169,10,125,8,"Handler"],[169,17,125,15],[169,26,125,24,"React"],[169,31,125,29],[169,32,125,30,"Component"],[169,41,125,39],[169,42,125,40],[170,6,126,4,"constructor"],[170,17,126,15,"constructor"],[170,18,126,16,"props"],[170,23,126,21],[170,25,126,23],[171,8,127,6],[171,13,127,11],[171,14,127,12,"props"],[171,19,127,17],[171,20,127,18],[172,8,129,6,"_defineProperty"],[172,23,129,21],[172,24,129,22],[172,28,129,26],[172,30,129,28],[172,42,129,40],[172,44,129,42],[172,49,129,47],[172,50,129,48],[172,51,129,49],[173,8,131,6,"_defineProperty"],[173,23,131,21],[173,24,131,22],[173,28,131,26],[173,30,131,28],[173,38,131,36],[173,40,131,38],[173,45,131,43],[173,46,131,44],[173,47,131,45],[174,8,133,6,"_defineProperty"],[174,23,133,21],[174,24,133,22],[174,28,133,26],[174,30,133,28],[174,40,133,38],[174,42,133,40],[174,47,133,45],[174,48,133,46],[174,49,133,47],[175,8,135,6,"_defineProperty"],[175,23,135,21],[175,24,135,22],[175,28,135,26],[175,30,135,28],[175,44,135,42],[175,46,135,44],[175,51,135,49],[175,52,135,50],[175,53,135,51],[176,8,137,6,"_defineProperty"],[176,23,137,21],[176,24,137,22],[176,28,137,26],[176,30,137,28],[176,40,137,38],[176,42,137,40],[176,47,137,45],[176,48,137,46],[176,49,137,47],[177,8,139,6,"_defineProperty"],[177,23,139,21],[177,24,139,22],[177,28,139,26],[177,30,139,28],[177,39,139,37],[177,41,139,39],[177,46,139,44],[177,47,139,45],[177,48,139,46],[178,8,141,6,"_defineProperty"],[178,23,141,21],[178,24,141,22],[178,28,141,26],[178,30,141,28],[178,55,141,53],[178,57,141,55],[178,62,141,60],[178,63,141,61],[178,64,141,62],[179,8,143,6,"_defineProperty"],[179,23,143,21],[179,24,143,22],[179,28,143,26],[179,30,143,28],[179,53,143,51],[179,55,143,53,"event"],[179,60,143,58],[179,64,143,62],[180,10,144,8],[180,14,144,12,"event"],[180,19,144,17],[180,20,144,18,"nativeEvent"],[180,31,144,29],[180,32,144,30,"handlerTag"],[180,42,144,40],[180,47,144,45],[180,51,144,49],[180,52,144,50,"handlerTag"],[180,62,144,60],[180,64,144,62],[181,12,145,10],[181,16,145,14],[181,23,145,21],[181,27,145,25],[181,28,145,26,"props"],[181,33,145,31],[181,34,145,32,"onGestureEvent"],[181,48,145,46],[181,53,145,51],[181,63,145,61],[181,65,145,63],[182,14,146,12],[182,18,146,16,"_this$props$onGesture"],[182,39,146,37],[182,41,146,39,"_this$props"],[182,52,146,50],[183,14,148,12],[183,15,148,13,"_this$props$onGesture"],[183,36,148,34],[183,39,148,37],[183,40,148,38,"_this$props"],[183,51,148,49],[183,54,148,52],[183,58,148,56],[183,59,148,57,"props"],[183,64,148,62],[183,66,148,64,"onGestureEvent"],[183,80,148,78],[183,86,148,84],[183,90,148,88],[183,94,148,92,"_this$props$onGesture"],[183,115,148,113],[183,120,148,118],[183,125,148,123],[183,126,148,124],[183,129,148,127],[183,134,148,132],[183,135,148,133],[183,138,148,136,"_this$props$onGesture"],[183,159,148,157],[183,160,148,158,"call"],[183,164,148,162],[183,165,148,163,"_this$props"],[183,176,148,174],[183,178,148,176,"event"],[183,183,148,181],[183,184,148,182],[184,12,149,10],[185,10,150,8],[185,11,150,9],[185,17,150,15],[186,12,151,10],[186,16,151,14,"_this$props$onGesture2"],[186,38,151,36],[186,40,151,38,"_this$props2"],[186,52,151,50],[187,12,153,10],[187,13,153,11,"_this$props$onGesture2"],[187,35,153,33],[187,38,153,36],[187,39,153,37,"_this$props2"],[187,51,153,49],[187,54,153,52],[187,58,153,56],[187,59,153,57,"props"],[187,64,153,62],[187,66,153,64,"onGestureHandlerEvent"],[187,87,153,85],[187,93,153,91],[187,97,153,95],[187,101,153,99,"_this$props$onGesture2"],[187,123,153,121],[187,128,153,126],[187,133,153,131],[187,134,153,132],[187,137,153,135],[187,142,153,140],[187,143,153,141],[187,146,153,144,"_this$props$onGesture2"],[187,168,153,166],[187,169,153,167,"call"],[187,173,153,171],[187,174,153,172,"_this$props2"],[187,186,153,184],[187,188,153,186,"event"],[187,193,153,191],[187,194,153,192],[188,10,154,8],[189,8,155,6],[189,9,155,7],[189,10,155,8],[190,8,157,6,"_defineProperty"],[190,23,157,21],[190,24,157,22],[190,28,157,26],[190,30,157,28],[190,59,157,57],[190,61,157,59,"event"],[190,66,157,64],[190,70,157,68],[191,10,158,8],[191,14,158,12,"event"],[191,19,158,17],[191,20,158,18,"nativeEvent"],[191,31,158,29],[191,32,158,30,"handlerTag"],[191,42,158,40],[191,47,158,45],[191,51,158,49],[191,52,158,50,"handlerTag"],[191,62,158,60],[191,64,158,62],[192,12,159,10],[192,16,159,14],[192,23,159,21],[192,27,159,25],[192,28,159,26,"props"],[192,33,159,31],[192,34,159,32,"onHandlerStateChange"],[192,54,159,52],[192,59,159,57],[192,69,159,67],[192,71,159,69],[193,14,160,12],[193,18,160,16,"_this$props$onHandler"],[193,39,160,37],[193,41,160,39,"_this$props3"],[193,53,160,51],[194,14,162,12],[194,15,162,13,"_this$props$onHandler"],[194,36,162,34],[194,39,162,37],[194,40,162,38,"_this$props3"],[194,52,162,50],[194,55,162,53],[194,59,162,57],[194,60,162,58,"props"],[194,65,162,63],[194,67,162,65,"onHandlerStateChange"],[194,87,162,85],[194,93,162,91],[194,97,162,95],[194,101,162,99,"_this$props$onHandler"],[194,122,162,120],[194,127,162,125],[194,132,162,130],[194,133,162,131],[194,136,162,134],[194,141,162,139],[194,142,162,140],[194,145,162,143,"_this$props$onHandler"],[194,166,162,164],[194,167,162,165,"call"],[194,171,162,169],[194,172,162,170,"_this$props3"],[194,184,162,182],[194,186,162,184,"event"],[194,191,162,189],[194,192,162,190],[195,12,163,10],[196,12,165,10],[196,18,165,16,"state"],[196,23,165,21],[196,26,165,24,"event"],[196,31,165,29],[196,32,165,30,"nativeEvent"],[196,43,165,41],[196,44,165,42,"state"],[196,49,165,47],[197,12,166,10],[197,18,166,16,"stateEventName"],[197,32,166,30],[197,35,166,33,"stateToPropMappings"],[197,54,166,52],[197,55,166,53,"state"],[197,60,166,58],[197,61,166,59],[198,12,167,10],[198,18,167,16,"eventHandler"],[198,30,167,28],[198,33,167,31,"stateEventName"],[198,47,167,45],[198,51,167,49],[198,55,167,53],[198,56,167,54,"props"],[198,61,167,59],[198,62,167,60,"stateEventName"],[198,76,167,74],[198,77,167,75],[199,12,169,10],[199,16,169,14,"eventHandler"],[199,28,169,26],[199,32,169,30],[199,39,169,37,"eventHandler"],[199,51,169,49],[199,56,169,54],[199,66,169,64],[199,68,169,66],[200,14,170,12,"eventHandler"],[200,26,170,24],[200,27,170,25,"event"],[200,32,170,30],[200,33,170,31],[201,12,171,10],[202,10,172,8],[202,11,172,9],[202,17,172,15],[203,12,173,10],[203,16,173,14,"_this$props$onGesture3"],[203,38,173,36],[203,40,173,38,"_this$props4"],[203,52,173,50],[204,12,175,10],[204,13,175,11,"_this$props$onGesture3"],[204,35,175,33],[204,38,175,36],[204,39,175,37,"_this$props4"],[204,51,175,49],[204,54,175,52],[204,58,175,56],[204,59,175,57,"props"],[204,64,175,62],[204,66,175,64,"onGestureHandlerStateChange"],[204,93,175,91],[204,99,175,97],[204,103,175,101],[204,107,175,105,"_this$props$onGesture3"],[204,129,175,127],[204,134,175,132],[204,139,175,137],[204,140,175,138],[204,143,175,141],[204,148,175,146],[204,149,175,147],[204,152,175,150,"_this$props$onGesture3"],[204,174,175,172],[204,175,175,173,"call"],[204,179,175,177],[204,180,175,178,"_this$props4"],[204,192,175,190],[204,194,175,192,"event"],[204,199,175,197],[204,200,175,198],[205,10,176,8],[206,8,177,6],[206,9,177,7],[206,10,177,8],[207,8,179,6,"_defineProperty"],[207,23,179,21],[207,24,179,22],[207,28,179,26],[207,30,179,28],[207,42,179,40],[207,44,179,42,"node"],[207,48,179,46],[207,52,179,50],[208,10,180,8],[208,14,180,12,"_props"],[208,20,180,18],[209,10,182,8],[209,14,182,12],[209,15,182,13,"viewNode"],[209,23,182,21],[209,26,182,24,"node"],[209,30,182,28],[210,10,183,8],[210,16,183,14,"child"],[210,21,183,19],[210,24,183,22,"React"],[210,29,183,27],[210,30,183,28,"Children"],[210,38,183,36],[210,39,183,37,"only"],[210,43,183,41],[210,44,183,42],[210,48,183,46],[210,49,183,47,"props"],[210,54,183,52],[210,55,183,53,"children"],[210,63,183,61],[210,64,183,62],[210,65,183,63],[210,66,183,64],[211,10,184,8],[213,10,186,8],[213,16,186,14,"ref"],[213,19,186,17],[213,22,186,20],[213,26,186,20,"isReact19"],[213,33,186,29],[213,34,186,29,"isReact19"],[213,43,186,29],[213,45,186,30],[213,46,186,31],[213,49,186,34],[213,50,186,35,"_props"],[213,56,186,41],[213,59,186,44,"child"],[213,64,186,49],[213,65,186,50,"props"],[213,70,186,55],[213,76,186,61],[213,80,186,65],[213,84,186,69,"_props"],[213,90,186,75],[213,95,186,80],[213,100,186,85],[213,101,186,86],[213,104,186,89],[213,109,186,94],[213,110,186,95],[213,113,186,98,"_props"],[213,119,186,104],[213,120,186,105,"ref"],[213,123,186,108],[213,126,186,111,"child"],[213,131,186,116],[213,136,186,121],[213,140,186,125],[213,144,186,129,"child"],[213,149,186,134],[213,154,186,139],[213,159,186,144],[213,160,186,145],[213,163,186,148],[213,168,186,153],[213,169,186,154],[213,172,186,157,"child"],[213,177,186,162],[213,178,186,163,"ref"],[213,181,186,166],[214,10,188,8],[214,14,188,12],[214,15,188,13,"ref"],[214,18,188,16],[214,20,188,18],[215,12,189,10],[216,10,190,8],[217,10,192,8],[217,14,192,12],[217,21,192,19,"ref"],[217,24,192,22],[217,29,192,27],[217,39,192,37],[217,41,192,39],[218,12,193,10,"ref"],[218,15,193,13],[218,16,193,14,"node"],[218,20,193,18],[218,21,193,19],[219,10,194,8],[219,11,194,9],[219,17,194,15],[220,12,195,10,"ref"],[220,15,195,13],[220,16,195,14,"current"],[220,23,195,21],[220,26,195,24,"node"],[220,30,195,28],[221,10,196,8],[222,8,197,6],[222,9,197,7],[222,10,197,8],[223,8,199,6,"_defineProperty"],[223,23,199,21],[223,24,199,22],[223,28,199,26],[223,30,199,28],[223,52,199,50],[223,54,199,52,"newConfig"],[223,63,199,61],[223,67,199,65],[224,10,200,8],[224,14,200,12],[224,15,200,13,"config"],[224,21,200,19],[224,24,200,22,"newConfig"],[224,33,200,31],[225,10,201,8,"RNGestureHandlerModule"],[225,32,201,30],[225,33,201,30,"default"],[225,40,201,30],[225,41,201,31,"createGestureHandler"],[225,61,201,51],[225,62,201,52,"name"],[225,66,201,56],[225,68,201,58],[225,72,201,62],[225,73,201,63,"handlerTag"],[225,83,201,73],[225,85,201,75,"newConfig"],[225,94,201,84],[225,95,201,85],[226,8,202,6],[226,9,202,7],[226,10,202,8],[227,8,204,6,"_defineProperty"],[227,23,204,21],[227,24,204,22],[227,28,204,26],[227,30,204,28],[227,52,204,50],[227,54,204,52,"newViewTag"],[227,64,204,62],[227,68,204,66],[228,10,205,8],[228,14,205,12],[228,15,205,13,"viewTag"],[228,22,205,20],[228,25,205,23,"newViewTag"],[228,35,205,33],[229,10,207,8],[229,14,207,12,"Platform"],[229,22,207,20],[229,23,207,20,"default"],[229,30,207,20],[229,31,207,21,"OS"],[229,33,207,23],[229,38,207,28],[229,43,207,33],[229,45,207,35],[230,12,208,10],[231,12,209,10,"RNGestureHandlerModule"],[231,34,209,32],[231,35,209,32,"default"],[231,42,209,32],[231,43,209,33,"attachGestureHandler"],[231,63,209,53],[231,64,209,54],[231,68,209,58],[231,69,209,59,"handlerTag"],[231,79,209,69],[231,81,209,71,"newViewTag"],[231,91,209,81],[231,93,209,83,"ActionType"],[231,104,209,93],[231,105,209,93,"ActionType"],[231,115,209,93],[231,116,209,94,"JS_FUNCTION_OLD_API"],[231,135,209,113],[232,12,209,115],[233,12,210,10],[233,16,210,14],[233,17,210,15,"propsRef"],[233,25,210,23],[233,26,210,24],[234,10,211,8],[234,11,211,9],[234,17,211,15],[235,12,212,10],[235,16,212,10,"registerOldGestureHandler"],[235,33,212,35],[235,34,212,35,"registerOldGestureHandler"],[235,59,212,35],[235,61,212,36],[235,65,212,40],[235,66,212,41,"handlerTag"],[235,76,212,51],[235,78,212,53],[236,14,213,12,"onGestureEvent"],[236,28,213,26],[236,30,213,28],[236,34,213,32],[236,35,213,33,"onGestureHandlerEvent"],[236,56,213,54],[237,14,214,12,"onGestureStateChange"],[237,34,214,32],[237,36,214,34],[237,40,214,38],[237,41,214,39,"onGestureHandlerStateChange"],[238,12,215,10],[238,13,215,11],[238,14,215,12],[239,12,217,10],[239,18,217,16,"actionType"],[239,28,217,26],[239,31,217,29],[239,32,217,30],[239,38,217,36],[240,14,218,12],[240,18,218,16,"_this$props5"],[240,30,218,28],[240,32,218,30,"_this$props6"],[240,44,218,42],[241,14,220,12],[241,20,220,18,"onGestureEvent"],[241,34,220,32],[241,37,220,35],[241,38,220,36,"_this$props5"],[241,50,220,48],[241,53,220,51],[241,57,220,55],[241,58,220,56,"props"],[241,63,220,61],[241,69,220,67],[241,73,220,71],[241,77,220,75,"_this$props5"],[241,89,220,87],[241,94,220,92],[241,99,220,97],[241,100,220,98],[241,103,220,101],[241,108,220,106],[241,109,220,107],[241,112,220,110,"_this$props5"],[241,124,220,122],[241,125,220,123,"onGestureEvent"],[241,139,220,137],[242,14,221,12],[242,20,221,18,"isGestureHandlerWorklet"],[242,43,221,41],[242,46,221,44,"onGestureEvent"],[242,60,221,58],[242,65,221,63],[242,74,221,72],[242,78,221,76,"onGestureEvent"],[242,92,221,90],[242,96,221,94],[242,117,221,115],[242,121,221,119,"onGestureEvent"],[242,135,221,133],[242,136,221,134],[243,14,222,12],[243,20,222,18,"onHandlerStateChange"],[243,40,222,38],[243,43,222,41],[243,44,222,42,"_this$props6"],[243,56,222,54],[243,59,222,57],[243,63,222,61],[243,64,222,62,"props"],[243,69,222,67],[243,75,222,73],[243,79,222,77],[243,83,222,81,"_this$props6"],[243,95,222,93],[243,100,222,98],[243,105,222,103],[243,106,222,104],[243,109,222,107],[243,114,222,112],[243,115,222,113],[243,118,222,116,"_this$props6"],[243,130,222,128],[243,131,222,129,"onHandlerStateChange"],[243,151,222,149],[244,14,223,12],[244,20,223,18,"isStateChangeHandlerWorklet"],[244,47,223,45],[244,50,223,48,"onHandlerStateChange"],[244,70,223,68],[244,75,223,73],[244,84,223,82],[244,88,223,86,"onHandlerStateChange"],[244,108,223,106],[244,112,223,110],[244,133,223,131],[244,137,223,135,"onHandlerStateChange"],[244,157,223,155],[244,158,223,156],[245,14,224,12],[245,20,224,18,"isReanimatedHandler"],[245,39,224,37],[245,42,224,40,"isGestureHandlerWorklet"],[245,65,224,63],[245,69,224,67,"isStateChangeHandlerWorklet"],[245,96,224,94],[246,14,226,12],[246,18,226,16,"isReanimatedHandler"],[246,37,226,35],[246,39,226,37],[247,16,227,14],[248,16,228,14],[248,23,228,21,"ActionType"],[248,34,228,31],[248,35,228,31,"ActionType"],[248,45,228,31],[248,46,228,32,"REANIMATED_WORKLET"],[248,64,228,50],[249,14,229,12],[249,15,229,13],[249,21,229,19],[249,25,229,23,"onGestureEvent"],[249,39,229,37],[249,43,229,41],[249,55,229,53],[249,59,229,57,"onGestureEvent"],[249,73,229,71],[249,75,229,73],[250,16,230,14],[251,16,231,14],[251,23,231,21,"ActionType"],[251,34,231,31],[251,35,231,31,"ActionType"],[251,45,231,31],[251,46,231,32,"NATIVE_ANIMATED_EVENT"],[251,67,231,53],[252,14,232,12],[252,15,232,13],[252,21,232,19],[253,16,233,14],[254,16,234,14],[254,23,234,21,"ActionType"],[254,34,234,31],[254,35,234,31,"ActionType"],[254,45,234,31],[254,46,234,32,"JS_FUNCTION_OLD_API"],[254,65,234,51],[255,14,235,12],[256,12,236,10],[256,13,236,11],[256,15,236,13],[256,16,236,14],[257,12,238,10,"RNGestureHandlerModule"],[257,34,238,32],[257,35,238,32,"default"],[257,42,238,32],[257,43,238,33,"attachGestureHandler"],[257,63,238,53],[257,64,238,54],[257,68,238,58],[257,69,238,59,"handlerTag"],[257,79,238,69],[257,81,238,71,"newViewTag"],[257,91,238,81],[257,93,238,83,"actionType"],[257,103,238,93],[257,104,238,94],[258,10,239,8],[259,10,241,8],[259,14,241,8,"scheduleFlushOperations"],[259,20,241,31],[259,21,241,31,"scheduleFlushOperations"],[259,44,241,31],[259,46,241,32],[259,47,241,33],[260,10,242,8],[260,14,242,8,"ghQueueMicrotask"],[260,31,242,24],[260,32,242,24,"ghQueueMicrotask"],[260,48,242,24],[260,50,242,25],[260,56,242,31],[261,12,243,10,"MountRegistry"],[261,26,243,23],[261,27,243,23,"MountRegistry"],[261,40,243,23],[261,41,243,24,"gestureHandlerWillMount"],[261,64,243,47],[261,65,243,48],[261,69,243,52],[261,70,243,53],[262,10,244,8],[262,11,244,9],[262,12,244,10],[263,8,245,6],[263,9,245,7],[263,10,245,8],[264,8,247,6,"_defineProperty"],[264,23,247,21],[264,24,247,22],[264,28,247,26],[264,30,247,28],[264,52,247,50],[264,54,247,52,"newConfig"],[264,63,247,61],[264,67,247,65],[265,10,248,8],[265,14,248,12],[265,15,248,13,"config"],[265,21,248,19],[265,24,248,22,"newConfig"],[265,33,248,31],[266,10,249,8,"RNGestureHandlerModule"],[266,32,249,30],[266,33,249,30,"default"],[266,40,249,30],[266,41,249,31,"updateGestureHandler"],[266,61,249,51],[266,62,249,52],[266,66,249,56],[266,67,249,57,"handlerTag"],[266,77,249,67],[266,79,249,69,"newConfig"],[266,88,249,78],[266,89,249,79],[267,10,250,8],[267,14,250,8,"scheduleFlushOperations"],[267,20,250,31],[267,21,250,31,"scheduleFlushOperations"],[267,44,250,31],[267,46,250,32],[267,47,250,33],[268,8,251,6],[268,9,251,7],[268,10,251,8],[269,8,253,6],[269,12,253,10],[269,13,253,11,"handlerTag"],[269,23,253,21],[269,26,253,24],[269,30,253,24,"getNextHandlerTag"],[269,48,253,41],[269,49,253,41,"getNextHandlerTag"],[269,66,253,41],[269,68,253,42],[269,69,253,43],[270,8,254,6],[270,12,254,10],[270,13,254,11,"config"],[270,19,254,17],[270,22,254,20],[270,23,254,21],[270,24,254,22],[271,8,255,6],[271,12,255,10],[271,13,255,11,"propsRef"],[271,21,255,19],[271,24,255,22],[271,37,255,35,"React"],[271,42,255,40],[271,43,255,41,"createRef"],[271,52,255,50],[271,53,255,51],[271,54,255,52],[272,8,256,6],[272,12,256,10],[272,13,256,11,"isMountedRef"],[272,25,256,23],[272,28,256,26],[272,41,256,39,"React"],[272,46,256,44],[272,47,256,45,"createRef"],[272,56,256,54],[272,57,256,55],[272,58,256,56],[273,8,257,6],[273,12,257,10],[273,13,257,11,"state"],[273,18,257,16],[273,21,257,19],[274,10,258,8,"allowTouches"],[275,8,259,6],[275,9,259,7],[276,8,261,6],[276,12,261,10,"props"],[276,17,261,15],[276,18,261,16,"id"],[276,20,261,18],[276,22,261,20],[277,10,262,8],[277,14,262,12,"handlerIDToTag"],[277,31,262,26],[277,32,262,26,"handlerIDToTag"],[277,46,262,26],[277,47,262,27,"props"],[277,52,262,32],[277,53,262,33,"id"],[277,55,262,35],[277,56,262,36],[277,61,262,41,"undefined"],[277,70,262,50],[277,72,262,52],[278,12,263,10],[278,18,263,16],[278,22,263,20,"Error"],[278,27,263,25],[278,28,263,26],[278,48,263,46,"props"],[278,53,263,51],[278,54,263,52,"id"],[278,56,263,54],[278,78,263,76],[278,79,263,77],[279,10,264,8],[280,10,266,8,"handlerIDToTag"],[280,27,266,22],[280,28,266,22,"handlerIDToTag"],[280,42,266,22],[280,43,266,23,"props"],[280,48,266,28],[280,49,266,29,"id"],[280,51,266,31],[280,52,266,32],[280,55,266,35],[280,59,266,39],[280,60,266,40,"handlerTag"],[280,70,266,50],[281,8,267,6],[282,6,268,4],[283,6,270,4,"componentDidMount"],[283,23,270,21,"componentDidMount"],[283,24,270,21],[283,26,270,24],[284,8,271,6],[284,14,271,12,"props"],[284,19,271,17],[284,22,271,20],[284,26,271,24],[284,27,271,25,"props"],[284,32,271,30],[285,8,272,6],[285,12,272,10],[285,13,272,11,"isMountedRef"],[285,25,272,23],[285,26,272,24,"current"],[285,33,272,31],[285,36,272,34],[285,40,272,38],[286,8,274,6],[286,12,274,10,"DEV_ON_ANDROID"],[286,26,274,24],[286,28,274,26],[287,10,275,8],[287,14,275,12],[287,15,275,13,"inspectorToggleListener"],[287,38,275,36],[287,41,275,39,"DeviceEventEmitter"],[287,59,275,57],[287,60,275,57,"default"],[287,67,275,57],[287,68,275,58,"addListener"],[287,79,275,69],[287,80,275,70],[287,104,275,94],[287,106,275,96],[287,112,275,102],[288,12,276,10],[288,16,276,14],[288,17,276,15,"setState"],[288,25,276,23],[288,26,276,24,"_"],[288,27,276,25],[288,32,276,30],[289,14,277,12,"allowTouches"],[290,12,278,10],[290,13,278,11],[290,14,278,12],[290,15,278,13],[291,12,279,10],[291,16,279,14],[291,17,279,15,"update"],[291,23,279,21],[291,24,279,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[291,51,279,49],[291,52,279,50],[292,10,280,8],[292,11,280,9],[292,12,280,10],[293,8,281,6],[294,8,283,6],[294,12,283,10,"hasUnresolvedRefs"],[294,29,283,27],[294,30,283,28,"props"],[294,35,283,33],[294,36,283,34],[294,38,283,36],[295,10,284,8],[296,10,285,8],[297,10,286,8],[298,10,287,8],[299,10,288,8],[300,10,289,8],[301,10,290,8],[301,14,290,8,"ghQueueMicrotask"],[301,31,290,24],[301,32,290,24,"ghQueueMicrotask"],[301,48,290,24],[301,50,290,25],[301,56,290,31],[302,12,291,10],[302,16,291,14],[302,17,291,15,"update"],[302,23,291,21],[302,24,291,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[302,51,291,49],[302,52,291,50],[303,10,292,8],[303,11,292,9],[303,12,292,10],[304,8,293,6],[305,8,295,6],[305,12,295,10],[305,13,295,11,"createGestureHandler"],[305,33,295,31],[305,34,295,32],[305,38,295,32,"filterConfig"],[305,44,295,44],[305,45,295,44,"filterConfig"],[305,57,295,44],[305,59,295,45,"transformProps"],[305,73,295,59],[305,76,295,62,"transformProps"],[305,90,295,76],[305,91,295,77],[305,95,295,81],[305,96,295,82,"props"],[305,101,295,87],[305,102,295,88],[305,105,295,91],[305,109,295,95],[305,110,295,96,"props"],[305,115,295,101],[305,117,295,103],[305,118,295,104],[305,121,295,107,"allowedProps"],[305,133,295,119],[305,135,295,121],[305,138,295,124,"customNativeProps"],[305,155,295,141],[305,156,295,142],[305,158,295,144,"config"],[305,164,295,150],[305,165,295,151],[305,166,295,152],[306,8,297,6],[306,12,297,10],[306,13,297,11],[306,17,297,15],[306,18,297,16,"viewNode"],[306,26,297,24],[306,28,297,26],[307,10,298,8],[307,16,298,14],[307,20,298,18,"Error"],[307,25,298,23],[307,26,298,24],[307,73,298,71,"Handler"],[307,80,298,78],[307,81,298,79,"displayName"],[307,92,298,90],[307,152,298,150],[307,153,298,151],[308,8,299,6],[309,8,301,6],[309,12,301,10],[309,13,301,11,"attachGestureHandler"],[309,33,301,31],[309,34,301,32],[309,38,301,32,"findNodeHandle"],[309,52,301,46],[309,53,301,46,"default"],[309,60,301,46],[309,62,301,47],[309,66,301,51],[309,67,301,52,"viewNode"],[309,75,301,60],[309,76,301,61],[309,77,301,62],[309,78,301,63],[309,79,301,64],[310,6,302,4],[311,6,304,4,"componentDidUpdate"],[311,24,304,22,"componentDidUpdate"],[311,25,304,22],[311,27,304,25],[312,8,305,6],[312,14,305,12,"viewTag"],[312,21,305,19],[312,24,305,22],[312,28,305,22,"findNodeHandle"],[312,42,305,36],[312,43,305,36,"default"],[312,50,305,36],[312,52,305,37],[312,56,305,41],[312,57,305,42,"viewNode"],[312,65,305,50],[312,66,305,51],[313,8,307,6],[313,12,307,10],[313,16,307,14],[313,17,307,15,"viewTag"],[313,24,307,22],[313,29,307,27,"viewTag"],[313,36,307,34],[313,38,307,36],[314,10,308,8],[314,14,308,12],[314,15,308,13,"attachGestureHandler"],[314,35,308,33],[314,36,308,34,"viewTag"],[314,43,308,41],[314,44,308,42],[314,45,308,43],[314,46,308,44],[315,8,309,6],[316,8,311,6],[316,12,311,10],[316,13,311,11,"update"],[316,19,311,17],[316,20,311,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[316,47,311,45],[316,48,311,46],[317,6,312,4],[318,6,314,4,"componentWillUnmount"],[318,26,314,24,"componentWillUnmount"],[318,27,314,24],[318,29,314,27],[319,8,315,6],[319,12,315,10,"_this$inspectorToggle"],[319,33,315,31],[320,8,317,6],[320,9,317,7,"_this$inspectorToggle"],[320,30,317,28],[320,33,317,31],[320,37,317,35],[320,38,317,36,"inspectorToggleListener"],[320,61,317,59],[320,67,317,65],[320,71,317,69],[320,75,317,73,"_this$inspectorToggle"],[320,96,317,94],[320,101,317,99],[320,106,317,104],[320,107,317,105],[320,110,317,108],[320,115,317,113],[320,116,317,114],[320,119,317,117,"_this$inspectorToggle"],[320,140,317,138],[320,141,317,139,"remove"],[320,147,317,145],[320,148,317,146],[320,149,317,147],[321,8,318,6],[321,12,318,10],[321,13,318,11,"isMountedRef"],[321,25,318,23],[321,26,318,24,"current"],[321,33,318,31],[321,36,318,34],[321,41,318,39],[322,8,320,6],[322,12,320,10,"Platform"],[322,20,320,18],[322,21,320,18,"default"],[322,28,320,18],[322,29,320,19,"OS"],[322,31,320,21],[322,36,320,26],[322,41,320,31],[322,43,320,33],[323,10,321,8],[323,14,321,8,"unregisterOldGestureHandler"],[323,31,321,35],[323,32,321,35,"unregisterOldGestureHandler"],[323,59,321,35],[323,61,321,36],[323,65,321,40],[323,66,321,41,"handlerTag"],[323,76,321,51],[323,77,321,52],[324,8,322,6],[325,8,324,6,"RNGestureHandlerModule"],[325,30,324,28],[325,31,324,28,"default"],[325,38,324,28],[325,39,324,29,"dropGestureHandler"],[325,57,324,47],[325,58,324,48],[325,62,324,52],[325,63,324,53,"handlerTag"],[325,73,324,63],[325,74,324,64],[326,8,325,6],[326,12,325,6,"scheduleFlushOperations"],[326,18,325,29],[326,19,325,29,"scheduleFlushOperations"],[326,42,325,29],[326,44,325,30],[326,45,325,31],[326,46,325,32],[326,47,325,33],[328,8,327,6],[328,14,327,12,"handlerID"],[328,23,327,21],[328,26,327,24],[328,30,327,28],[328,31,327,29,"props"],[328,36,327,34],[328,37,327,35,"id"],[328,39,327,37],[329,8,329,6],[329,12,329,10,"handlerID"],[329,21,329,19],[329,23,329,21],[330,10,330,8],[331,10,331,8],[331,17,331,15,"handlerIDToTag"],[331,34,331,29],[331,35,331,29,"handlerIDToTag"],[331,49,331,29],[331,50,331,30,"handlerID"],[331,59,331,39],[331,60,331,40],[332,8,332,6],[333,8,334,6,"MountRegistry"],[333,22,334,19],[333,23,334,19,"MountRegistry"],[333,36,334,19],[333,37,334,20,"gestureHandlerWillUnmount"],[333,62,334,45],[333,63,334,46],[333,67,334,50],[333,68,334,51],[334,6,335,4],[335,6,337,4,"update"],[335,12,337,10,"update"],[335,13,337,11,"remainingTries"],[335,27,337,25],[335,29,337,27],[336,8,338,6],[336,12,338,10],[336,13,338,11],[336,17,338,15],[336,18,338,16,"isMountedRef"],[336,30,338,28],[336,31,338,29,"current"],[336,38,338,36],[336,40,338,38],[337,10,339,8],[338,8,340,6],[339,8,342,6],[339,14,342,12,"props"],[339,19,342,17],[339,22,342,20],[339,26,342,24],[339,27,342,25,"props"],[339,32,342,30],[339,33,342,31],[339,34,342,32],[340,8,343,6],[341,8,344,6],[343,8,346,6],[343,12,346,10,"hasUnresolvedRefs"],[343,29,346,27],[343,30,346,28,"props"],[343,35,346,33],[343,36,346,34],[343,40,346,38,"remainingTries"],[343,54,346,52],[343,57,346,55],[343,58,346,56],[343,60,346,58],[344,10,347,8],[344,14,347,8,"ghQueueMicrotask"],[344,31,347,24],[344,32,347,24,"ghQueueMicrotask"],[344,48,347,24],[344,50,347,25],[344,56,347,31],[345,12,348,10],[345,16,348,14],[345,17,348,15,"update"],[345,23,348,21],[345,24,348,22,"remainingTries"],[345,38,348,36],[345,41,348,39],[345,42,348,40],[345,43,348,41],[346,10,349,8],[346,11,349,9],[346,12,349,10],[347,8,350,6],[347,9,350,7],[347,15,350,13],[348,10,351,8],[348,16,351,14,"newConfig"],[348,25,351,23],[348,28,351,26],[348,32,351,26,"filterConfig"],[348,38,351,38],[348,39,351,38,"filterConfig"],[348,51,351,38],[348,53,351,39,"transformProps"],[348,67,351,53],[348,70,351,56,"transformProps"],[348,84,351,70],[348,85,351,71],[348,89,351,75],[348,90,351,76,"props"],[348,95,351,81],[348,96,351,82],[348,99,351,85],[348,103,351,89],[348,104,351,90,"props"],[348,109,351,95],[348,111,351,97],[348,112,351,98],[348,115,351,101,"allowedProps"],[348,127,351,113],[348,129,351,115],[348,132,351,118,"customNativeProps"],[348,149,351,135],[348,150,351,136],[348,152,351,138,"config"],[348,158,351,144],[348,159,351,145],[349,10,353,8],[349,14,353,12],[349,15,353,13],[349,19,353,13,"deepEqual"],[349,26,353,22],[349,27,353,22,"deepEqual"],[349,36,353,22],[349,38,353,23],[349,42,353,27],[349,43,353,28,"config"],[349,49,353,34],[349,51,353,36,"newConfig"],[349,60,353,45],[349,61,353,46],[349,63,353,48],[350,12,354,10],[350,16,354,14],[350,17,354,15,"updateGestureHandler"],[350,37,354,35],[350,38,354,36,"newConfig"],[350,47,354,45],[350,48,354,46],[351,10,355,8],[352,8,356,6],[353,6,357,4],[354,6,359,4,"setNativeProps"],[354,20,359,18,"setNativeProps"],[354,21,359,19,"updates"],[354,28,359,26],[354,30,359,28],[355,8,360,6],[355,14,360,12,"mergedProps"],[355,25,360,23],[355,28,360,26],[356,10,360,28],[356,13,360,31],[356,17,360,35],[356,18,360,36,"props"],[356,23,360,41],[357,10,361,8],[357,13,361,11,"updates"],[358,8,362,6],[358,9,362,7],[359,8,363,6],[359,14,363,12,"newConfig"],[359,23,363,21],[359,26,363,24],[359,30,363,24,"filterConfig"],[359,36,363,36],[359,37,363,36,"filterConfig"],[359,49,363,36],[359,51,363,37,"transformProps"],[359,65,363,51],[359,68,363,54,"transformProps"],[359,82,363,68],[359,83,363,69,"mergedProps"],[359,94,363,80],[359,95,363,81],[359,98,363,84,"mergedProps"],[359,109,363,95],[359,111,363,97],[359,112,363,98],[359,115,363,101,"allowedProps"],[359,127,363,113],[359,129,363,115],[359,132,363,118,"customNativeProps"],[359,149,363,135],[359,150,363,136],[359,152,363,138,"config"],[359,158,363,144],[359,159,363,145],[360,8,364,6],[360,12,364,10],[360,13,364,11,"updateGestureHandler"],[360,33,364,31],[360,34,364,32,"newConfig"],[360,43,364,41],[360,44,364,42],[361,6,365,4],[362,6,367,4,"render"],[362,12,367,10,"render"],[362,13,367,10],[362,15,367,13],[363,8,368,6],[363,12,368,10,"_this$props$testID"],[363,30,368,28],[364,8,370,6],[364,12,370,10,"__DEV__"],[364,19,370,17],[364,23,370,21],[364,24,370,22],[364,28,370,26],[364,29,370,27,"context"],[364,36,370,34],[364,40,370,38],[364,41,370,39],[364,45,370,39,"isTestEnv"],[364,52,370,48],[364,53,370,48,"isTestEnv"],[364,62,370,48],[364,64,370,49],[364,65,370,50],[364,69,370,54,"Platform"],[364,77,370,62],[364,78,370,62,"default"],[364,85,370,62],[364,86,370,63,"OS"],[364,88,370,65],[364,93,370,70],[364,98,370,75],[364,100,370,77],[365,10,371,8],[365,16,371,14],[365,20,371,18,"Error"],[365,25,371,23],[365,26,371,24,"name"],[365,30,371,28],[365,33,371,31],[365,234,371,232],[365,235,371,233],[366,8,372,6],[367,8,374,6],[367,12,374,10,"gestureEventHandler"],[367,31,374,29],[367,34,374,32],[367,38,374,36],[367,39,374,37,"onGestureHandlerEvent"],[367,60,374,58],[367,61,374,59],[367,62,374,60],[369,8,376,6],[369,14,376,12],[370,10,377,8,"onGestureEvent"],[370,24,377,22],[371,10,378,8,"onGestureHandlerEvent"],[372,8,379,6],[372,9,379,7],[372,12,379,10],[372,16,379,14],[372,17,379,15,"props"],[372,22,379,20],[373,8,381,6],[373,12,381,10,"onGestureEvent"],[373,26,381,24],[373,30,381,28],[373,37,381,35,"onGestureEvent"],[373,51,381,49],[373,56,381,54],[373,66,381,64],[373,68,381,66],[374,10,382,8],[375,10,383,8],[376,10,384,8],[377,10,385,8],[377,14,385,12,"onGestureHandlerEvent"],[377,35,385,33],[377,37,385,35],[378,12,386,10],[378,18,386,16],[378,22,386,20,"Error"],[378,27,386,25],[378,28,386,26],[378,101,386,99],[378,102,386,100],[379,10,387,8],[380,10,389,8,"gestureEventHandler"],[380,29,389,27],[380,32,389,30,"onGestureEvent"],[380,46,389,44],[381,8,390,6],[381,9,390,7],[381,15,390,13],[382,10,391,8],[382,14,391,12,"onGestureHandlerEvent"],[382,35,391,33],[382,39,391,37],[382,46,391,44,"onGestureHandlerEvent"],[382,67,391,65],[382,72,391,70],[382,82,391,80],[382,84,391,82],[383,12,392,10],[383,18,392,16],[383,22,392,20,"Error"],[383,27,392,25],[383,28,392,26],[383,101,392,99],[383,102,392,100],[384,10,393,8],[385,8,394,6],[386,8,396,6],[386,12,396,10,"gestureStateEventHandler"],[386,36,396,34],[386,39,396,37],[386,43,396,41],[386,44,396,42,"onGestureHandlerStateChange"],[386,71,396,69],[386,72,396,70],[386,73,396,71],[388,8,398,6],[388,14,398,12],[389,10,399,8,"onHandlerStateChange"],[389,30,399,28],[390,10,400,8,"onGestureHandlerStateChange"],[391,8,401,6],[391,9,401,7],[391,12,401,10],[391,16,401,14],[391,17,401,15,"props"],[391,22,401,20],[392,8,403,6],[392,12,403,10,"onHandlerStateChange"],[392,32,403,30],[392,36,403,34],[392,43,403,41,"onHandlerStateChange"],[392,63,403,61],[392,68,403,66],[392,78,403,76],[392,80,403,78],[393,10,404,8],[394,10,405,8],[395,10,406,8],[396,10,407,8],[396,14,407,12,"onGestureHandlerStateChange"],[396,41,407,39],[396,43,407,41],[397,12,408,10],[397,18,408,16],[397,22,408,20,"Error"],[397,27,408,25],[397,28,408,26],[397,101,408,99],[397,102,408,100],[398,10,409,8],[399,10,411,8,"gestureStateEventHandler"],[399,34,411,32],[399,37,411,35,"onHandlerStateChange"],[399,57,411,55],[400,8,412,6],[400,9,412,7],[400,15,412,13],[401,10,413,8],[401,14,413,12,"onGestureHandlerStateChange"],[401,41,413,39],[401,45,413,43],[401,52,413,50,"onGestureHandlerStateChange"],[401,79,413,77],[401,84,413,82],[401,94,413,92],[401,96,413,94],[402,12,414,10],[402,18,414,16],[402,22,414,20,"Error"],[402,27,414,25],[402,28,414,26],[402,101,414,99],[402,102,414,100],[403,10,415,8],[404,8,416,6],[405,8,418,6],[405,14,418,12,"events"],[405,20,418,18],[405,23,418,21],[406,10,419,8,"onGestureHandlerEvent"],[406,31,419,29],[406,33,419,31],[406,37,419,35],[406,38,419,36,"state"],[406,43,419,41],[406,44,419,42,"allowTouches"],[406,56,419,54],[406,59,419,57,"gestureEventHandler"],[406,78,419,76],[406,81,419,79,"undefined"],[406,90,419,88],[407,10,420,8,"onGestureHandlerStateChange"],[407,37,420,35],[407,39,420,37],[407,43,420,41],[407,44,420,42,"state"],[407,49,420,47],[407,50,420,48,"allowTouches"],[407,62,420,60],[407,65,420,63,"gestureStateEventHandler"],[407,89,420,87],[407,92,420,90,"undefined"],[408,8,421,6],[408,9,421,7],[409,8,422,6],[409,12,422,10],[409,13,422,11,"propsRef"],[409,21,422,19],[409,22,422,20,"current"],[409,29,422,27],[409,32,422,30,"events"],[409,38,422,36],[410,8,423,6],[410,12,423,10,"child"],[410,17,423,15],[410,20,423,18],[410,24,423,22],[411,8,425,6],[411,12,425,10],[412,10,426,8,"child"],[412,15,426,13],[412,18,426,16,"React"],[412,23,426,21],[412,24,426,22,"Children"],[412,32,426,30],[412,33,426,31,"only"],[412,37,426,35],[412,38,426,36],[412,42,426,40],[412,43,426,41,"props"],[412,48,426,46],[412,49,426,47,"children"],[412,57,426,55],[412,58,426,56],[413,8,427,6],[413,9,427,7],[413,10,427,8],[413,17,427,15,"e"],[413,18,427,16],[413,20,427,18],[414,10,428,8],[414,16,428,14],[414,20,428,18,"Error"],[414,25,428,23],[414,26,428,24],[414,30,428,24,"tagMessage"],[414,37,428,34],[414,38,428,34,"tagMessage"],[414,48,428,34],[414,50,428,35],[414,53,428,38,"name"],[414,57,428,42],[414,213,428,198],[414,214,428,199],[414,215,428,200],[415,8,429,6],[416,8,431,6],[416,12,431,10,"grandChildren"],[416,25,431,23],[416,28,431,26,"child"],[416,33,431,31],[416,34,431,32,"props"],[416,39,431,37],[416,40,431,38,"children"],[416,48,431,46],[417,8,433,6],[417,12,433,10,"__DEV__"],[417,19,433,17],[417,23,433,21,"child"],[417,28,433,26],[417,29,433,27,"type"],[417,33,433,31],[417,38,433,36,"child"],[417,43,433,41],[417,44,433,42,"type"],[417,48,433,46],[417,53,433,51],[417,77,433,75],[417,81,433,79,"child"],[417,86,433,84],[417,87,433,85,"type"],[417,91,433,89],[417,92,433,90,"name"],[417,96,433,94],[417,101,433,99],[417,107,433,105],[417,111,433,109,"child"],[417,116,433,114],[417,117,433,115,"type"],[417,121,433,119],[417,122,433,120,"displayName"],[417,133,433,131],[417,138,433,136],[417,144,433,142],[417,145,433,143],[417,147,433,145],[418,10,434,8,"grandChildren"],[418,23,434,21],[418,26,434,24,"React"],[418,31,434,29],[418,32,434,30,"Children"],[418,40,434,38],[418,41,434,39,"toArray"],[418,48,434,46],[418,49,434,47,"grandChildren"],[418,62,434,60],[418,63,434,61],[419,10,435,8,"grandChildren"],[419,23,435,21],[419,24,435,22,"push"],[419,28,435,26],[419,29,435,28],[419,42,435,41,"React"],[419,47,435,46],[419,48,435,47,"createElement"],[419,61,435,60],[419,62,435,61,"PressabilityDebugView"],[419,84,435,82],[419,85,435,82,"PressabilityDebugView"],[419,106,435,82],[419,108,435,84],[420,12,436,10,"key"],[420,15,436,13],[420,17,436,15],[420,40,436,38],[421,12,437,10,"color"],[421,17,437,15],[421,19,437,17],[421,38,437,36],[422,12,438,10,"hitSlop"],[422,19,438,17],[422,21,438,19,"child"],[422,26,438,24],[422,27,438,25,"props"],[422,32,438,30],[422,33,438,31,"hitSlop"],[423,10,439,8],[423,11,439,9],[423,12,439,10],[423,13,439,11],[424,8,440,6],[425,8,442,6],[425,15,442,13],[425,28,442,26,"React"],[425,33,442,31],[425,34,442,32,"cloneElement"],[425,46,442,44],[425,47,442,45,"child"],[425,52,442,50],[425,54,442,52],[426,10,443,8,"ref"],[426,13,443,11],[426,15,443,13],[426,19,443,17],[426,20,443,18,"refHandler"],[426,30,443,28],[427,10,444,8,"collapsable"],[427,21,444,19],[427,23,444,21],[427,28,444,26],[428,10,445,8],[428,14,445,12],[428,18,445,12,"isTestEnv"],[428,25,445,21],[428,26,445,21,"isTestEnv"],[428,35,445,21],[428,37,445,22],[428,38,445,23],[428,41,445,26],[429,12,446,10,"handlerType"],[429,23,446,21],[429,25,446,23,"name"],[429,29,446,27],[430,12,447,10,"handlerTag"],[430,22,447,20],[430,24,447,22],[430,28,447,26],[430,29,447,27,"handlerTag"],[430,39,447,37],[431,12,448,10,"enabled"],[431,19,448,17],[431,21,448,19],[431,25,448,23],[431,26,448,24,"props"],[431,31,448,29],[431,32,448,30,"enabled"],[432,10,449,8],[432,11,449,9],[432,14,449,12],[432,15,449,13],[432,16,449,14],[432,17,449,15],[433,10,450,8,"testID"],[433,16,450,14],[433,18,450,16],[433,19,450,17,"_this$props$testID"],[433,37,450,35],[433,40,450,38],[433,44,450,42],[433,45,450,43,"props"],[433,50,450,48],[433,51,450,49,"testID"],[433,57,450,55],[433,63,450,61],[433,67,450,65],[433,71,450,69,"_this$props$testID"],[433,89,450,87],[433,94,450,92],[433,99,450,97],[433,100,450,98],[433,103,450,101,"_this$props$testID"],[433,121,450,119],[433,124,450,122,"child"],[433,129,450,127],[433,130,450,128,"props"],[433,135,450,133],[433,136,450,134,"testID"],[433,142,450,140],[434,10,451,8],[434,13,451,11,"events"],[435,8,452,6],[435,9,452,7],[435,11,452,9,"grandChildren"],[435,24,452,22],[435,25,452,23],[436,6,453,4],[437,4,455,2],[438,4,457,2,"_defineProperty"],[438,19,457,17],[438,20,457,18,"Handler"],[438,27,457,25],[438,29,457,27],[438,42,457,40],[438,44,457,42,"name"],[438,48,457,46],[438,49,457,47],[439,4,459,2,"_defineProperty"],[439,19,459,17],[439,20,459,18,"Handler"],[439,27,459,25],[439,29,459,27],[439,42,459,40],[439,44,459,42,"GestureHandlerRootViewContext"],[439,73,459,71],[439,74,459,71,"default"],[439,81,459,71],[439,82,459,72],[440,4,461,2],[440,11,461,9,"Handler"],[440,18,461,16],[441,2,462,0],[442,0,462,1],[442,3]],"functionMap":{"names":["<global>","_defineProperty","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","_defineProperty$argument_2","ghQueueMicrotask$argument_0","Handler#componentDidMount","setState$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACE,iND;sCEkE;GFC;0CEC;GFC;8BGG;CHG;gCIE;CJG;2DKO;GLE;AMG;kBCE;qBCK,4BD;GDC;CNG;eSY;ECO;ICC;qDCiB;ODY;2DCE;ODoB;0CCE;ODkB;oDCE;ODG;oDCE;8BVa;WUmB;yBCM;SDE;ODC;oDCE;ODI;KDiB;IIE;gGTK;wBUC;YVE;SSE;yBDU;SCE;KJU;IME;KNQ;IOE;KPqB;IQE;yBLU;SKE;KRQ;ISE;KTM;IUE;KVsF;GDE;CTO"},"hasCjsExports":false},"type":"js/module"}]}