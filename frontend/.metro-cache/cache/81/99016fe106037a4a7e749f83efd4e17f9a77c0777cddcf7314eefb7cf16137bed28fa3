{"dependencies":[{"name":"./privateTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":203},"end":{"line":9,"column":59,"index":262}}],"key":"8BvuxiTUsGHSowX5GFNP+ePi44c=","exportNames":["*"],"imports":1}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":263},"end":{"line":10,"column":70,"index":333}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _privateTypes = require(_dependencyMap[0], \"./privateTypes\");\n  var _types = require(_dependencyMap[1], \"./types\");\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  // See https://wicg.github.io/netinfo/#dom-connectiontype\n\n  // Use a constant test of this form because in SSR on next.js, optional chaining is not sufficient,\n  // but this test correctly detects that window is not available and allows for conditionals before access\n  const isWindowPresent = typeof window !== 'undefined'; // Check if window exists and if the browser supports the connection API\n\n  const connection = isWindowPresent && !window.hasOwnProperty('tizen') && !window.hasOwnProperty('webOS') ? window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection : undefined; // Map browser types to native types\n\n  const typeMapping = {\n    bluetooth: _types.NetInfoStateType.bluetooth,\n    cellular: _types.NetInfoStateType.cellular,\n    ethernet: _types.NetInfoStateType.ethernet,\n    none: _types.NetInfoStateType.none,\n    other: _types.NetInfoStateType.other,\n    unknown: _types.NetInfoStateType.unknown,\n    wifi: _types.NetInfoStateType.wifi,\n    wimax: _types.NetInfoStateType.wimax,\n    mixed: _types.NetInfoStateType.other\n  };\n  const effectiveTypeMapping = {\n    '2g': _types.NetInfoCellularGeneration['2g'],\n    '3g': _types.NetInfoCellularGeneration['3g'],\n    '4g': _types.NetInfoCellularGeneration['4g'],\n    'slow-2g': _types.NetInfoCellularGeneration['2g']\n  }; // Determine current state of connection\n\n  const getCurrentState = _requestedInterface => {\n    const isConnected = isWindowPresent ? navigator.onLine : false;\n    const baseState = {\n      isInternetReachable: null\n    }; // If we don't have a connection object, we return minimal information\n\n    if (!connection) {\n      if (isConnected) {\n        const state = {\n          ...baseState,\n          isConnected: true,\n          type: _types.NetInfoStateType.other,\n          details: {\n            isConnectionExpensive: false\n          }\n        };\n        return state;\n      }\n      const state = {\n        ...baseState,\n        isConnected: false,\n        isInternetReachable: false,\n        type: _types.NetInfoStateType.none,\n        details: null\n      };\n      return state;\n    } // Otherwise try to return detailed information\n\n    const isConnectionExpensive = connection.saveData;\n    const type = connection.type ? typeMapping[connection.type] : isConnected ? _types.NetInfoStateType.other : _types.NetInfoStateType.unknown;\n    if (type === _types.NetInfoStateType.bluetooth) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.cellular) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          cellularGeneration: effectiveTypeMapping[connection.effectiveType] || null,\n          carrier: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.ethernet) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          ipAddress: null,\n          subnet: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.wifi) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          ssid: null,\n          bssid: null,\n          strength: null,\n          ipAddress: null,\n          subnet: null,\n          frequency: null,\n          linkSpeed: null,\n          rxLinkSpeed: null,\n          txLinkSpeed: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.wimax) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.none) {\n      const state = {\n        ...baseState,\n        isConnected: false,\n        isInternetReachable: false,\n        type,\n        details: null\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.unknown) {\n      const state = {\n        ...baseState,\n        isConnected,\n        isInternetReachable: null,\n        type,\n        details: null\n      };\n      return state;\n    }\n    const state = {\n      ...baseState,\n      isConnected: true,\n      type: _types.NetInfoStateType.other,\n      details: {\n        isConnectionExpensive\n      }\n    };\n    return state;\n  };\n  const handlers = [];\n  const nativeHandlers = [];\n  const RNCNetInfo = {\n    addListener(type, handler) {\n      switch (type) {\n        case _privateTypes.DEVICE_CONNECTIVITY_EVENT:\n          {\n            const nativeHandler = () => {\n              handler(getCurrentState());\n            };\n            if (connection) {\n              connection.addEventListener('change', nativeHandler);\n            } else {\n              if (isWindowPresent) {\n                window.addEventListener('online', nativeHandler, false);\n                window.addEventListener('offline', nativeHandler, false);\n              }\n            } // Remember handlers\n\n            handlers.push(handler);\n            nativeHandlers.push(nativeHandler);\n            break;\n          }\n      }\n    },\n    removeListeners(type, handler) {\n      switch (type) {\n        case _privateTypes.DEVICE_CONNECTIVITY_EVENT:\n          {\n            // Get native handler\n            const index = handlers.indexOf(handler);\n            const nativeHandler = nativeHandlers[index];\n            if (connection) {\n              connection.removeEventListener('change', nativeHandler);\n            } else {\n              if (isWindowPresent) {\n                window.removeEventListener('online', nativeHandler);\n                window.removeEventListener('offline', nativeHandler);\n              }\n            } // Remove handlers\n\n            handlers.splice(index, 1);\n            nativeHandlers.splice(index, 1);\n            break;\n          }\n      }\n    },\n    async getCurrentState(requestedInterface) {\n      return getCurrentState(requestedInterface);\n    },\n    configure() {\n      return;\n    }\n  };\n  var _default = RNCNetInfo;\n});","lineCount":227,"map":[[7,2,215,0,"Object"],[7,8,215,0],[7,9,215,0,"defineProperty"],[7,23,215,0],[7,24,215,0,"exports"],[7,31,215,0],[8,4,215,0,"enumerable"],[8,14,215,0],[9,4,215,0,"get"],[9,7,215,0],[9,18,215,0,"get"],[9,19,215,0],[10,6,215,0],[10,13,215,0,"_default"],[10,21,215,0],[11,4,215,0],[12,2,215,0],[13,2,9,0],[13,6,9,0,"_privateTypes"],[13,19,9,0],[13,22,9,0,"require"],[13,29,9,0],[13,30,9,0,"_dependencyMap"],[13,44,9,0],[14,2,10,0],[14,6,10,0,"_types"],[14,12,10,0],[14,15,10,0,"require"],[14,22,10,0],[14,23,10,0,"_dependencyMap"],[14,37,10,0],[15,2,1,0],[16,0,2,0],[17,0,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[24,2,10,71],[26,2,12,0],[27,2,13,0],[28,2,14,0],[28,8,14,6,"isWindowPresent"],[28,23,14,21],[28,26,14,24],[28,33,14,31,"window"],[28,39,14,37],[28,44,14,42],[28,55,14,53],[28,56,14,54],[28,57,14,55],[30,2,16,0],[30,8,16,6,"connection"],[30,18,16,16],[30,21,16,19,"isWindowPresent"],[30,36,16,34],[30,40,16,38],[30,41,16,39,"window"],[30,47,16,45],[30,48,16,46,"hasOwnProperty"],[30,62,16,60],[30,63,16,61],[30,70,16,68],[30,71,16,69],[30,75,16,73],[30,76,16,74,"window"],[30,82,16,80],[30,83,16,81,"hasOwnProperty"],[30,97,16,95],[30,98,16,96],[30,105,16,103],[30,106,16,104],[30,109,16,107,"window"],[30,115,16,113],[30,116,16,114,"navigator"],[30,125,16,123],[30,126,16,124,"connection"],[30,136,16,134],[30,140,16,138,"window"],[30,146,16,144],[30,147,16,145,"navigator"],[30,156,16,154],[30,157,16,155,"mozConnection"],[30,170,16,168],[30,174,16,172,"window"],[30,180,16,178],[30,181,16,179,"navigator"],[30,190,16,188],[30,191,16,189,"webkitConnection"],[30,207,16,205],[30,210,16,208,"undefined"],[30,219,16,217],[30,220,16,218],[30,221,16,219],[32,2,18,0],[32,8,18,6,"typeMapping"],[32,19,18,17],[32,22,18,20],[33,4,19,2,"bluetooth"],[33,13,19,11],[33,15,19,13,"NetInfoStateType"],[33,21,19,29],[33,22,19,29,"NetInfoStateType"],[33,38,19,29],[33,39,19,30,"bluetooth"],[33,48,19,39],[34,4,20,2,"cellular"],[34,12,20,10],[34,14,20,12,"NetInfoStateType"],[34,20,20,28],[34,21,20,28,"NetInfoStateType"],[34,37,20,28],[34,38,20,29,"cellular"],[34,46,20,37],[35,4,21,2,"ethernet"],[35,12,21,10],[35,14,21,12,"NetInfoStateType"],[35,20,21,28],[35,21,21,28,"NetInfoStateType"],[35,37,21,28],[35,38,21,29,"ethernet"],[35,46,21,37],[36,4,22,2,"none"],[36,8,22,6],[36,10,22,8,"NetInfoStateType"],[36,16,22,24],[36,17,22,24,"NetInfoStateType"],[36,33,22,24],[36,34,22,25,"none"],[36,38,22,29],[37,4,23,2,"other"],[37,9,23,7],[37,11,23,9,"NetInfoStateType"],[37,17,23,25],[37,18,23,25,"NetInfoStateType"],[37,34,23,25],[37,35,23,26,"other"],[37,40,23,31],[38,4,24,2,"unknown"],[38,11,24,9],[38,13,24,11,"NetInfoStateType"],[38,19,24,27],[38,20,24,27,"NetInfoStateType"],[38,36,24,27],[38,37,24,28,"unknown"],[38,44,24,35],[39,4,25,2,"wifi"],[39,8,25,6],[39,10,25,8,"NetInfoStateType"],[39,16,25,24],[39,17,25,24,"NetInfoStateType"],[39,33,25,24],[39,34,25,25,"wifi"],[39,38,25,29],[40,4,26,2,"wimax"],[40,9,26,7],[40,11,26,9,"NetInfoStateType"],[40,17,26,25],[40,18,26,25,"NetInfoStateType"],[40,34,26,25],[40,35,26,26,"wimax"],[40,40,26,31],[41,4,27,2,"mixed"],[41,9,27,7],[41,11,27,9,"NetInfoStateType"],[41,17,27,25],[41,18,27,25,"NetInfoStateType"],[41,34,27,25],[41,35,27,26,"other"],[42,2,28,0],[42,3,28,1],[43,2,29,0],[43,8,29,6,"effectiveTypeMapping"],[43,28,29,26],[43,31,29,29],[44,4,30,2],[44,8,30,6],[44,10,30,8,"NetInfoCellularGeneration"],[44,16,30,33],[44,17,30,33,"NetInfoCellularGeneration"],[44,42,30,33],[44,43,30,34],[44,47,30,38],[44,48,30,39],[45,4,31,2],[45,8,31,6],[45,10,31,8,"NetInfoCellularGeneration"],[45,16,31,33],[45,17,31,33,"NetInfoCellularGeneration"],[45,42,31,33],[45,43,31,34],[45,47,31,38],[45,48,31,39],[46,4,32,2],[46,8,32,6],[46,10,32,8,"NetInfoCellularGeneration"],[46,16,32,33],[46,17,32,33,"NetInfoCellularGeneration"],[46,42,32,33],[46,43,32,34],[46,47,32,38],[46,48,32,39],[47,4,33,2],[47,13,33,11],[47,15,33,13,"NetInfoCellularGeneration"],[47,21,33,38],[47,22,33,38,"NetInfoCellularGeneration"],[47,47,33,38],[47,48,33,39],[47,52,33,43],[48,2,34,0],[48,3,34,1],[48,4,34,2],[48,5,34,3],[50,2,36,0],[50,8,36,6,"getCurrentState"],[50,23,36,21],[50,26,36,24,"_requestedInterface"],[50,45,36,43],[50,49,36,47],[51,4,37,2],[51,10,37,8,"isConnected"],[51,21,37,19],[51,24,37,22,"isWindowPresent"],[51,39,37,37],[51,42,37,40,"navigator"],[51,51,37,49],[51,52,37,50,"onLine"],[51,58,37,56],[51,61,37,59],[51,66,37,64],[52,4,38,2],[52,10,38,8,"baseState"],[52,19,38,17],[52,22,38,20],[53,6,39,4,"isInternetReachable"],[53,25,39,23],[53,27,39,25],[54,4,40,2],[54,5,40,3],[54,6,40,4],[54,7,40,5],[56,4,42,2],[56,8,42,6],[56,9,42,7,"connection"],[56,19,42,17],[56,21,42,19],[57,6,43,4],[57,10,43,8,"isConnected"],[57,21,43,19],[57,23,43,21],[58,8,44,6],[58,14,44,12,"state"],[58,19,44,17],[58,22,44,20],[59,10,44,22],[59,13,44,25,"baseState"],[59,22,44,34],[60,10,45,8,"isConnected"],[60,21,45,19],[60,23,45,21],[60,27,45,25],[61,10,46,8,"type"],[61,14,46,12],[61,16,46,14,"NetInfoStateType"],[61,22,46,30],[61,23,46,30,"NetInfoStateType"],[61,39,46,30],[61,40,46,31,"other"],[61,45,46,36],[62,10,47,8,"details"],[62,17,47,15],[62,19,47,17],[63,12,48,10,"isConnectionExpensive"],[63,33,48,31],[63,35,48,33],[64,10,49,8],[65,8,50,6],[65,9,50,7],[66,8,51,6],[66,15,51,13,"state"],[66,20,51,18],[67,6,52,4],[68,6,54,4],[68,12,54,10,"state"],[68,17,54,15],[68,20,54,18],[69,8,54,20],[69,11,54,23,"baseState"],[69,20,54,32],[70,8,55,6,"isConnected"],[70,19,55,17],[70,21,55,19],[70,26,55,24],[71,8,56,6,"isInternetReachable"],[71,27,56,25],[71,29,56,27],[71,34,56,32],[72,8,57,6,"type"],[72,12,57,10],[72,14,57,12,"NetInfoStateType"],[72,20,57,28],[72,21,57,28,"NetInfoStateType"],[72,37,57,28],[72,38,57,29,"none"],[72,42,57,33],[73,8,58,6,"details"],[73,15,58,13],[73,17,58,15],[74,6,59,4],[74,7,59,5],[75,6,60,4],[75,13,60,11,"state"],[75,18,60,16],[76,4,61,2],[76,5,61,3],[76,6,61,4],[78,4,64,2],[78,10,64,8,"isConnectionExpensive"],[78,31,64,29],[78,34,64,32,"connection"],[78,44,64,42],[78,45,64,43,"saveData"],[78,53,64,51],[79,4,65,2],[79,10,65,8,"type"],[79,14,65,12],[79,17,65,15,"connection"],[79,27,65,25],[79,28,65,26,"type"],[79,32,65,30],[79,35,65,33,"typeMapping"],[79,46,65,44],[79,47,65,45,"connection"],[79,57,65,55],[79,58,65,56,"type"],[79,62,65,60],[79,63,65,61],[79,66,65,64,"isConnected"],[79,77,65,75],[79,80,65,78,"NetInfoStateType"],[79,86,65,94],[79,87,65,94,"NetInfoStateType"],[79,103,65,94],[79,104,65,95,"other"],[79,109,65,100],[79,112,65,103,"NetInfoStateType"],[79,118,65,119],[79,119,65,119,"NetInfoStateType"],[79,135,65,119],[79,136,65,120,"unknown"],[79,143,65,127],[80,4,67,2],[80,8,67,6,"type"],[80,12,67,10],[80,17,67,15,"NetInfoStateType"],[80,23,67,31],[80,24,67,31,"NetInfoStateType"],[80,40,67,31],[80,41,67,32,"bluetooth"],[80,50,67,41],[80,52,67,43],[81,6,68,4],[81,12,68,10,"state"],[81,17,68,15],[81,20,68,18],[82,8,68,20],[82,11,68,23,"baseState"],[82,20,68,32],[83,8,69,6,"isConnected"],[83,19,69,17],[83,21,69,19],[83,25,69,23],[84,8,70,6,"type"],[84,12,70,10],[85,8,71,6,"details"],[85,15,71,13],[85,17,71,15],[86,10,72,8,"isConnectionExpensive"],[87,8,73,6],[88,6,74,4],[88,7,74,5],[89,6,75,4],[89,13,75,11,"state"],[89,18,75,16],[90,4,76,2],[90,5,76,3],[90,11,76,9],[90,15,76,13,"type"],[90,19,76,17],[90,24,76,22,"NetInfoStateType"],[90,30,76,38],[90,31,76,38,"NetInfoStateType"],[90,47,76,38],[90,48,76,39,"cellular"],[90,56,76,47],[90,58,76,49],[91,6,77,4],[91,12,77,10,"state"],[91,17,77,15],[91,20,77,18],[92,8,77,20],[92,11,77,23,"baseState"],[92,20,77,32],[93,8,78,6,"isConnected"],[93,19,78,17],[93,21,78,19],[93,25,78,23],[94,8,79,6,"type"],[94,12,79,10],[95,8,80,6,"details"],[95,15,80,13],[95,17,80,15],[96,10,81,8,"isConnectionExpensive"],[96,31,81,29],[97,10,82,8,"cellularGeneration"],[97,28,82,26],[97,30,82,28,"effectiveTypeMapping"],[97,50,82,48],[97,51,82,49,"connection"],[97,61,82,59],[97,62,82,60,"effectiveType"],[97,75,82,73],[97,76,82,74],[97,80,82,78],[97,84,82,82],[98,10,83,8,"carrier"],[98,17,83,15],[98,19,83,17],[99,8,84,6],[100,6,85,4],[100,7,85,5],[101,6,86,4],[101,13,86,11,"state"],[101,18,86,16],[102,4,87,2],[102,5,87,3],[102,11,87,9],[102,15,87,13,"type"],[102,19,87,17],[102,24,87,22,"NetInfoStateType"],[102,30,87,38],[102,31,87,38,"NetInfoStateType"],[102,47,87,38],[102,48,87,39,"ethernet"],[102,56,87,47],[102,58,87,49],[103,6,88,4],[103,12,88,10,"state"],[103,17,88,15],[103,20,88,18],[104,8,88,20],[104,11,88,23,"baseState"],[104,20,88,32],[105,8,89,6,"isConnected"],[105,19,89,17],[105,21,89,19],[105,25,89,23],[106,8,90,6,"type"],[106,12,90,10],[107,8,91,6,"details"],[107,15,91,13],[107,17,91,15],[108,10,92,8,"isConnectionExpensive"],[108,31,92,29],[109,10,93,8,"ipAddress"],[109,19,93,17],[109,21,93,19],[109,25,93,23],[110,10,94,8,"subnet"],[110,16,94,14],[110,18,94,16],[111,8,95,6],[112,6,96,4],[112,7,96,5],[113,6,97,4],[113,13,97,11,"state"],[113,18,97,16],[114,4,98,2],[114,5,98,3],[114,11,98,9],[114,15,98,13,"type"],[114,19,98,17],[114,24,98,22,"NetInfoStateType"],[114,30,98,38],[114,31,98,38,"NetInfoStateType"],[114,47,98,38],[114,48,98,39,"wifi"],[114,52,98,43],[114,54,98,45],[115,6,99,4],[115,12,99,10,"state"],[115,17,99,15],[115,20,99,18],[116,8,99,20],[116,11,99,23,"baseState"],[116,20,99,32],[117,8,100,6,"isConnected"],[117,19,100,17],[117,21,100,19],[117,25,100,23],[118,8,101,6,"type"],[118,12,101,10],[119,8,102,6,"details"],[119,15,102,13],[119,17,102,15],[120,10,103,8,"isConnectionExpensive"],[120,31,103,29],[121,10,104,8,"ssid"],[121,14,104,12],[121,16,104,14],[121,20,104,18],[122,10,105,8,"bssid"],[122,15,105,13],[122,17,105,15],[122,21,105,19],[123,10,106,8,"strength"],[123,18,106,16],[123,20,106,18],[123,24,106,22],[124,10,107,8,"ipAddress"],[124,19,107,17],[124,21,107,19],[124,25,107,23],[125,10,108,8,"subnet"],[125,16,108,14],[125,18,108,16],[125,22,108,20],[126,10,109,8,"frequency"],[126,19,109,17],[126,21,109,19],[126,25,109,23],[127,10,110,8,"linkSpeed"],[127,19,110,17],[127,21,110,19],[127,25,110,23],[128,10,111,8,"rxLinkSpeed"],[128,21,111,19],[128,23,111,21],[128,27,111,25],[129,10,112,8,"txLinkSpeed"],[129,21,112,19],[129,23,112,21],[130,8,113,6],[131,6,114,4],[131,7,114,5],[132,6,115,4],[132,13,115,11,"state"],[132,18,115,16],[133,4,116,2],[133,5,116,3],[133,11,116,9],[133,15,116,13,"type"],[133,19,116,17],[133,24,116,22,"NetInfoStateType"],[133,30,116,38],[133,31,116,38,"NetInfoStateType"],[133,47,116,38],[133,48,116,39,"wimax"],[133,53,116,44],[133,55,116,46],[134,6,117,4],[134,12,117,10,"state"],[134,17,117,15],[134,20,117,18],[135,8,117,20],[135,11,117,23,"baseState"],[135,20,117,32],[136,8,118,6,"isConnected"],[136,19,118,17],[136,21,118,19],[136,25,118,23],[137,8,119,6,"type"],[137,12,119,10],[138,8,120,6,"details"],[138,15,120,13],[138,17,120,15],[139,10,121,8,"isConnectionExpensive"],[140,8,122,6],[141,6,123,4],[141,7,123,5],[142,6,124,4],[142,13,124,11,"state"],[142,18,124,16],[143,4,125,2],[143,5,125,3],[143,11,125,9],[143,15,125,13,"type"],[143,19,125,17],[143,24,125,22,"NetInfoStateType"],[143,30,125,38],[143,31,125,38,"NetInfoStateType"],[143,47,125,38],[143,48,125,39,"none"],[143,52,125,43],[143,54,125,45],[144,6,126,4],[144,12,126,10,"state"],[144,17,126,15],[144,20,126,18],[145,8,126,20],[145,11,126,23,"baseState"],[145,20,126,32],[146,8,127,6,"isConnected"],[146,19,127,17],[146,21,127,19],[146,26,127,24],[147,8,128,6,"isInternetReachable"],[147,27,128,25],[147,29,128,27],[147,34,128,32],[148,8,129,6,"type"],[148,12,129,10],[149,8,130,6,"details"],[149,15,130,13],[149,17,130,15],[150,6,131,4],[150,7,131,5],[151,6,132,4],[151,13,132,11,"state"],[151,18,132,16],[152,4,133,2],[152,5,133,3],[152,11,133,9],[152,15,133,13,"type"],[152,19,133,17],[152,24,133,22,"NetInfoStateType"],[152,30,133,38],[152,31,133,38,"NetInfoStateType"],[152,47,133,38],[152,48,133,39,"unknown"],[152,55,133,46],[152,57,133,48],[153,6,134,4],[153,12,134,10,"state"],[153,17,134,15],[153,20,134,18],[154,8,134,20],[154,11,134,23,"baseState"],[154,20,134,32],[155,8,135,6,"isConnected"],[155,19,135,17],[156,8,136,6,"isInternetReachable"],[156,27,136,25],[156,29,136,27],[156,33,136,31],[157,8,137,6,"type"],[157,12,137,10],[158,8,138,6,"details"],[158,15,138,13],[158,17,138,15],[159,6,139,4],[159,7,139,5],[160,6,140,4],[160,13,140,11,"state"],[160,18,140,16],[161,4,141,2],[162,4,143,2],[162,10,143,8,"state"],[162,15,143,13],[162,18,143,16],[163,6,143,18],[163,9,143,21,"baseState"],[163,18,143,30],[164,6,144,4,"isConnected"],[164,17,144,15],[164,19,144,17],[164,23,144,21],[165,6,145,4,"type"],[165,10,145,8],[165,12,145,10,"NetInfoStateType"],[165,18,145,26],[165,19,145,26,"NetInfoStateType"],[165,35,145,26],[165,36,145,27,"other"],[165,41,145,32],[166,6,146,4,"details"],[166,13,146,11],[166,15,146,13],[167,8,147,6,"isConnectionExpensive"],[168,6,148,4],[169,4,149,2],[169,5,149,3],[170,4,150,2],[170,11,150,9,"state"],[170,16,150,14],[171,2,151,0],[171,3,151,1],[172,2,153,0],[172,8,153,6,"handlers"],[172,16,153,14],[172,19,153,17],[172,21,153,19],[173,2,154,0],[173,8,154,6,"nativeHandlers"],[173,22,154,20],[173,25,154,23],[173,27,154,25],[174,2,155,0],[174,8,155,6,"RNCNetInfo"],[174,18,155,16],[174,21,155,19],[175,4,156,2,"addListener"],[175,15,156,13,"addListener"],[175,16,156,14,"type"],[175,20,156,18],[175,22,156,20,"handler"],[175,29,156,27],[175,31,156,29],[176,6,157,4],[176,14,157,12,"type"],[176,18,157,16],[177,8,158,6],[177,13,158,11,"DEVICE_CONNECTIVITY_EVENT"],[177,26,158,36],[177,27,158,36,"DEVICE_CONNECTIVITY_EVENT"],[177,52,158,36],[178,10,159,8],[179,12,160,10],[179,18,160,16,"nativeHandler"],[179,31,160,29],[179,34,160,32,"nativeHandler"],[179,35,160,32],[179,40,160,38],[180,14,161,12,"handler"],[180,21,161,19],[180,22,161,20,"getCurrentState"],[180,37,161,35],[180,38,161,36],[180,39,161,37],[180,40,161,38],[181,12,162,10],[181,13,162,11],[182,12,164,10],[182,16,164,14,"connection"],[182,26,164,24],[182,28,164,26],[183,14,165,12,"connection"],[183,24,165,22],[183,25,165,23,"addEventListener"],[183,41,165,39],[183,42,165,40],[183,50,165,48],[183,52,165,50,"nativeHandler"],[183,65,165,63],[183,66,165,64],[184,12,166,10],[184,13,166,11],[184,19,166,17],[185,14,167,12],[185,18,167,16,"isWindowPresent"],[185,33,167,31],[185,35,167,33],[186,16,168,14,"window"],[186,22,168,20],[186,23,168,21,"addEventListener"],[186,39,168,37],[186,40,168,38],[186,48,168,46],[186,50,168,48,"nativeHandler"],[186,63,168,61],[186,65,168,63],[186,70,168,68],[186,71,168,69],[187,16,169,14,"window"],[187,22,169,20],[187,23,169,21,"addEventListener"],[187,39,169,37],[187,40,169,38],[187,49,169,47],[187,51,169,49,"nativeHandler"],[187,64,169,62],[187,66,169,64],[187,71,169,69],[187,72,169,70],[188,14,170,12],[189,12,171,10],[189,13,171,11],[189,14,171,12],[191,12,174,10,"handlers"],[191,20,174,18],[191,21,174,19,"push"],[191,25,174,23],[191,26,174,24,"handler"],[191,33,174,31],[191,34,174,32],[192,12,175,10,"nativeHandlers"],[192,26,175,24],[192,27,175,25,"push"],[192,31,175,29],[192,32,175,30,"nativeHandler"],[192,45,175,43],[192,46,175,44],[193,12,176,10],[194,10,177,8],[195,6,178,4],[196,4,179,2],[196,5,179,3],[197,4,181,2,"removeListeners"],[197,19,181,17,"removeListeners"],[197,20,181,18,"type"],[197,24,181,22],[197,26,181,24,"handler"],[197,33,181,31],[197,35,181,33],[198,6,182,4],[198,14,182,12,"type"],[198,18,182,16],[199,8,183,6],[199,13,183,11,"DEVICE_CONNECTIVITY_EVENT"],[199,26,183,36],[199,27,183,36,"DEVICE_CONNECTIVITY_EVENT"],[199,52,183,36],[200,10,184,8],[201,12,185,10],[202,12,186,10],[202,18,186,16,"index"],[202,23,186,21],[202,26,186,24,"handlers"],[202,34,186,32],[202,35,186,33,"indexOf"],[202,42,186,40],[202,43,186,41,"handler"],[202,50,186,48],[202,51,186,49],[203,12,187,10],[203,18,187,16,"nativeHandler"],[203,31,187,29],[203,34,187,32,"nativeHandlers"],[203,48,187,46],[203,49,187,47,"index"],[203,54,187,52],[203,55,187,53],[204,12,189,10],[204,16,189,14,"connection"],[204,26,189,24],[204,28,189,26],[205,14,190,12,"connection"],[205,24,190,22],[205,25,190,23,"removeEventListener"],[205,44,190,42],[205,45,190,43],[205,53,190,51],[205,55,190,53,"nativeHandler"],[205,68,190,66],[205,69,190,67],[206,12,191,10],[206,13,191,11],[206,19,191,17],[207,14,192,12],[207,18,192,16,"isWindowPresent"],[207,33,192,31],[207,35,192,33],[208,16,193,14,"window"],[208,22,193,20],[208,23,193,21,"removeEventListener"],[208,42,193,40],[208,43,193,41],[208,51,193,49],[208,53,193,51,"nativeHandler"],[208,66,193,64],[208,67,193,65],[209,16,194,14,"window"],[209,22,194,20],[209,23,194,21,"removeEventListener"],[209,42,194,40],[209,43,194,41],[209,52,194,50],[209,54,194,52,"nativeHandler"],[209,67,194,65],[209,68,194,66],[210,14,195,12],[211,12,196,10],[211,13,196,11],[211,14,196,12],[213,12,199,10,"handlers"],[213,20,199,18],[213,21,199,19,"splice"],[213,27,199,25],[213,28,199,26,"index"],[213,33,199,31],[213,35,199,33],[213,36,199,34],[213,37,199,35],[214,12,200,10,"nativeHandlers"],[214,26,200,24],[214,27,200,25,"splice"],[214,33,200,31],[214,34,200,32,"index"],[214,39,200,37],[214,41,200,39],[214,42,200,40],[214,43,200,41],[215,12,201,10],[216,10,202,8],[217,6,203,4],[218,4,204,2],[218,5,204,3],[219,4,206,2],[219,10,206,8,"getCurrentState"],[219,25,206,23,"getCurrentState"],[219,26,206,24,"requestedInterface"],[219,44,206,42],[219,46,206,44],[220,6,207,4],[220,13,207,11,"getCurrentState"],[220,28,207,26],[220,29,207,27,"requestedInterface"],[220,47,207,45],[220,48,207,46],[221,4,208,2],[221,5,208,3],[222,4,210,2,"configure"],[222,13,210,11,"configure"],[222,14,210,11],[222,16,210,14],[223,6,211,4],[224,4,212,2],[225,2,214,0],[225,3,214,1],[226,2,215,0],[226,6,215,0,"_default"],[226,14,215,0],[226,17,215,15,"RNCNetInfo"],[226,27,215,25],[227,0,215,26],[227,3]],"functionMap":{"names":["<global>","getCurrentState","RNCNetInfo.addListener","nativeHandler","RNCNetInfo.removeListeners","RNCNetInfo.getCurrentState","RNCNetInfo.configure"],"mappings":"AAA;wBCmC;CDmH;EEK;gCCI;WDE;GFiB;EIE;GJuB;EKE;GLE;EME;GNE"},"hasCjsExports":false},"type":"js/module"}]}