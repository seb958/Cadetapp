{"dependencies":[{"name":"./privateTypes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":20,"index":127},"end":{"line":8,"column":45,"index":152}}],"key":"M4Wb1FNAoePEh1maJiT5onokGlA=","exportNames":["*"],"imports":1}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":13,"index":168},"end":{"line":10,"column":31,"index":186}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _privateTypes = require(_dependencyMap[0], \"./privateTypes\");\n  var _types = require(_dependencyMap[1], \"./types\");\n\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n  // Use a constant test of this form because in SSR on next.js, optional chaining is not sufficient,\n  // but this test correctly detects that window is not available and allows for conditionals before access\n  const isWindowPresent = false; // Check if window exists and if the browser supports the connection API\n\n  const connection = isWindowPresent && !window.hasOwnProperty('tizen') && !window.hasOwnProperty('webOS') ? window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection : undefined; // Map browser types to native types\n\n  const typeMapping = {\n    bluetooth: _types.NetInfoStateType.bluetooth,\n    cellular: _types.NetInfoStateType.cellular,\n    ethernet: _types.NetInfoStateType.ethernet,\n    none: _types.NetInfoStateType.none,\n    other: _types.NetInfoStateType.other,\n    unknown: _types.NetInfoStateType.unknown,\n    wifi: _types.NetInfoStateType.wifi,\n    wimax: _types.NetInfoStateType.wimax,\n    mixed: _types.NetInfoStateType.other\n  };\n  const effectiveTypeMapping = {\n    '2g': _types.NetInfoCellularGeneration['2g'],\n    '3g': _types.NetInfoCellularGeneration['3g'],\n    '4g': _types.NetInfoCellularGeneration['4g'],\n    'slow-2g': _types.NetInfoCellularGeneration['2g']\n  }; // Determine current state of connection\n\n  const getCurrentState = _requestedInterface => {\n    const isConnected = isWindowPresent ? navigator.onLine : false;\n    const baseState = {\n      isInternetReachable: null\n    }; // If we don't have a connection object, we return minimal information\n\n    if (!connection) {\n      if (isConnected) {\n        const state = {\n          ...baseState,\n          isConnected: true,\n          type: _types.NetInfoStateType.other,\n          details: {\n            isConnectionExpensive: false\n          }\n        };\n        return state;\n      }\n      const state = {\n        ...baseState,\n        isConnected: false,\n        isInternetReachable: false,\n        type: _types.NetInfoStateType.none,\n        details: null\n      };\n      return state;\n    } // Otherwise try to return detailed information\n\n    const isConnectionExpensive = connection.saveData;\n    const type = connection.type ? typeMapping[connection.type] : isConnected ? _types.NetInfoStateType.other : _types.NetInfoStateType.unknown;\n    if (type === _types.NetInfoStateType.bluetooth) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.cellular) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          cellularGeneration: effectiveTypeMapping[connection.effectiveType] || null,\n          carrier: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.ethernet) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          ipAddress: null,\n          subnet: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.wifi) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive,\n          ssid: null,\n          bssid: null,\n          strength: null,\n          ipAddress: null,\n          subnet: null,\n          frequency: null,\n          linkSpeed: null,\n          rxLinkSpeed: null,\n          txLinkSpeed: null\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.wimax) {\n      const state = {\n        ...baseState,\n        isConnected: true,\n        type,\n        details: {\n          isConnectionExpensive\n        }\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.none) {\n      const state = {\n        ...baseState,\n        isConnected: false,\n        isInternetReachable: false,\n        type,\n        details: null\n      };\n      return state;\n    } else if (type === _types.NetInfoStateType.unknown) {\n      const state = {\n        ...baseState,\n        isConnected,\n        isInternetReachable: null,\n        type,\n        details: null\n      };\n      return state;\n    }\n    const state = {\n      ...baseState,\n      isConnected: true,\n      type: _types.NetInfoStateType.other,\n      details: {\n        isConnectionExpensive\n      }\n    };\n    return state;\n  };\n  const handlers = [];\n  const nativeHandlers = [];\n  const RNCNetInfo = {\n    addListener(type, handler) {\n      switch (type) {\n        case _privateTypes.DEVICE_CONNECTIVITY_EVENT:\n          {\n            const nativeHandler = () => {\n              handler(getCurrentState());\n            };\n            if (connection) {\n              connection.addEventListener('change', nativeHandler);\n            } else {\n              if (isWindowPresent) {\n                window.addEventListener('online', nativeHandler, false);\n                window.addEventListener('offline', nativeHandler, false);\n              }\n            } // Remember handlers\n\n            handlers.push(handler);\n            nativeHandlers.push(nativeHandler);\n            break;\n          }\n      }\n    },\n    removeListeners(type, handler) {\n      switch (type) {\n        case _privateTypes.DEVICE_CONNECTIVITY_EVENT:\n          {\n            // Get native handler\n            const index = handlers.indexOf(handler);\n            const nativeHandler = nativeHandlers[index];\n            if (connection) {\n              connection.removeEventListener('change', nativeHandler);\n            } else {\n              if (isWindowPresent) {\n                window.removeEventListener('online', nativeHandler);\n                window.removeEventListener('offline', nativeHandler);\n              }\n            } // Remove handlers\n\n            handlers.splice(index, 1);\n            nativeHandlers.splice(index, 1);\n            break;\n          }\n      }\n    },\n    async getCurrentState(requestedInterface) {\n      return getCurrentState(requestedInterface);\n    },\n    configure() {\n      return;\n    }\n  };\n  var _default = RNCNetInfo;\n  exports.default = _default;\n});","lineCount":221,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,8,0],[8,6,8,4,"_privateTypes"],[8,19,8,17],[8,22,8,20,"require"],[8,29,8,27],[8,30,8,27,"_dependencyMap"],[8,44,8,27],[8,65,8,44],[8,66,8,45],[9,2,10,0],[9,6,10,4,"_types"],[9,12,10,10],[9,15,10,13,"require"],[9,22,10,20],[9,23,10,20,"_dependencyMap"],[9,37,10,20],[9,51,10,30],[9,52,10,31],[11,2,12,0],[12,0,13,0],[13,0,14,0],[14,0,15,0],[15,0,16,0],[16,0,17,0],[17,0,18,0],[18,0,19,0],[19,2,20,0],[20,2,21,0],[21,2,22,0],[21,8,22,6,"isWindowPresent"],[21,23,22,21],[21,31,22,53],[21,32,22,54],[21,33,22,55],[23,2,24,0],[23,8,24,6,"connection"],[23,18,24,16],[23,21,24,19,"isWindowPresent"],[23,36,24,34],[23,40,24,38],[23,41,24,39,"window"],[23,47,24,45],[23,48,24,46,"hasOwnProperty"],[23,62,24,60],[23,63,24,61],[23,70,24,68],[23,71,24,69],[23,75,24,73],[23,76,24,74,"window"],[23,82,24,80],[23,83,24,81,"hasOwnProperty"],[23,97,24,95],[23,98,24,96],[23,105,24,103],[23,106,24,104],[23,109,24,107,"window"],[23,115,24,113],[23,116,24,114,"navigator"],[23,125,24,123],[23,126,24,124,"connection"],[23,136,24,134],[23,140,24,138,"window"],[23,146,24,144],[23,147,24,145,"navigator"],[23,156,24,154],[23,157,24,155,"mozConnection"],[23,170,24,168],[23,174,24,172,"window"],[23,180,24,178],[23,181,24,179,"navigator"],[23,190,24,188],[23,191,24,189,"webkitConnection"],[23,207,24,205],[23,210,24,208,"undefined"],[23,219,24,217],[23,220,24,218],[23,221,24,219],[25,2,26,0],[25,8,26,6,"typeMapping"],[25,19,26,17],[25,22,26,20],[26,4,27,2,"bluetooth"],[26,13,27,11],[26,15,27,13,"_types"],[26,21,27,19],[26,22,27,20,"NetInfoStateType"],[26,38,27,36],[26,39,27,37,"bluetooth"],[26,48,27,46],[27,4,28,2,"cellular"],[27,12,28,10],[27,14,28,12,"_types"],[27,20,28,18],[27,21,28,19,"NetInfoStateType"],[27,37,28,35],[27,38,28,36,"cellular"],[27,46,28,44],[28,4,29,2,"ethernet"],[28,12,29,10],[28,14,29,12,"_types"],[28,20,29,18],[28,21,29,19,"NetInfoStateType"],[28,37,29,35],[28,38,29,36,"ethernet"],[28,46,29,44],[29,4,30,2,"none"],[29,8,30,6],[29,10,30,8,"_types"],[29,16,30,14],[29,17,30,15,"NetInfoStateType"],[29,33,30,31],[29,34,30,32,"none"],[29,38,30,36],[30,4,31,2,"other"],[30,9,31,7],[30,11,31,9,"_types"],[30,17,31,15],[30,18,31,16,"NetInfoStateType"],[30,34,31,32],[30,35,31,33,"other"],[30,40,31,38],[31,4,32,2,"unknown"],[31,11,32,9],[31,13,32,11,"_types"],[31,19,32,17],[31,20,32,18,"NetInfoStateType"],[31,36,32,34],[31,37,32,35,"unknown"],[31,44,32,42],[32,4,33,2,"wifi"],[32,8,33,6],[32,10,33,8,"_types"],[32,16,33,14],[32,17,33,15,"NetInfoStateType"],[32,33,33,31],[32,34,33,32,"wifi"],[32,38,33,36],[33,4,34,2,"wimax"],[33,9,34,7],[33,11,34,9,"_types"],[33,17,34,15],[33,18,34,16,"NetInfoStateType"],[33,34,34,32],[33,35,34,33,"wimax"],[33,40,34,38],[34,4,35,2,"mixed"],[34,9,35,7],[34,11,35,9,"_types"],[34,17,35,15],[34,18,35,16,"NetInfoStateType"],[34,34,35,32],[34,35,35,33,"other"],[35,2,36,0],[35,3,36,1],[36,2,37,0],[36,8,37,6,"effectiveTypeMapping"],[36,28,37,26],[36,31,37,29],[37,4,38,2],[37,8,38,6],[37,10,38,8,"_types"],[37,16,38,14],[37,17,38,15,"NetInfoCellularGeneration"],[37,42,38,40],[37,43,38,41],[37,47,38,45],[37,48,38,46],[38,4,39,2],[38,8,39,6],[38,10,39,8,"_types"],[38,16,39,14],[38,17,39,15,"NetInfoCellularGeneration"],[38,42,39,40],[38,43,39,41],[38,47,39,45],[38,48,39,46],[39,4,40,2],[39,8,40,6],[39,10,40,8,"_types"],[39,16,40,14],[39,17,40,15,"NetInfoCellularGeneration"],[39,42,40,40],[39,43,40,41],[39,47,40,45],[39,48,40,46],[40,4,41,2],[40,13,41,11],[40,15,41,13,"_types"],[40,21,41,19],[40,22,41,20,"NetInfoCellularGeneration"],[40,47,41,45],[40,48,41,46],[40,52,41,50],[41,2,42,0],[41,3,42,1],[41,4,42,2],[41,5,42,3],[43,2,44,0],[43,8,44,6,"getCurrentState"],[43,23,44,21],[43,26,44,24,"_requestedInterface"],[43,45,44,43],[43,49,44,47],[44,4,45,2],[44,10,45,8,"isConnected"],[44,21,45,19],[44,24,45,22,"isWindowPresent"],[44,39,45,37],[44,42,45,40,"navigator"],[44,51,45,49],[44,52,45,50,"onLine"],[44,58,45,56],[44,61,45,59],[44,66,45,64],[45,4,46,2],[45,10,46,8,"baseState"],[45,19,46,17],[45,22,46,20],[46,6,47,4,"isInternetReachable"],[46,25,47,23],[46,27,47,25],[47,4,48,2],[47,5,48,3],[47,6,48,4],[47,7,48,5],[49,4,50,2],[49,8,50,6],[49,9,50,7,"connection"],[49,19,50,17],[49,21,50,19],[50,6,51,4],[50,10,51,8,"isConnected"],[50,21,51,19],[50,23,51,21],[51,8,52,6],[51,14,52,12,"state"],[51,19,52,17],[51,22,52,20],[52,10,52,22],[52,13,52,25,"baseState"],[52,22,52,34],[53,10,53,8,"isConnected"],[53,21,53,19],[53,23,53,21],[53,27,53,25],[54,10,54,8,"type"],[54,14,54,12],[54,16,54,14,"_types"],[54,22,54,20],[54,23,54,21,"NetInfoStateType"],[54,39,54,37],[54,40,54,38,"other"],[54,45,54,43],[55,10,55,8,"details"],[55,17,55,15],[55,19,55,17],[56,12,56,10,"isConnectionExpensive"],[56,33,56,31],[56,35,56,33],[57,10,57,8],[58,8,58,6],[58,9,58,7],[59,8,59,6],[59,15,59,13,"state"],[59,20,59,18],[60,6,60,4],[61,6,62,4],[61,12,62,10,"state"],[61,17,62,15],[61,20,62,18],[62,8,62,20],[62,11,62,23,"baseState"],[62,20,62,32],[63,8,63,6,"isConnected"],[63,19,63,17],[63,21,63,19],[63,26,63,24],[64,8,64,6,"isInternetReachable"],[64,27,64,25],[64,29,64,27],[64,34,64,32],[65,8,65,6,"type"],[65,12,65,10],[65,14,65,12,"_types"],[65,20,65,18],[65,21,65,19,"NetInfoStateType"],[65,37,65,35],[65,38,65,36,"none"],[65,42,65,40],[66,8,66,6,"details"],[66,15,66,13],[66,17,66,15],[67,6,67,4],[67,7,67,5],[68,6,68,4],[68,13,68,11,"state"],[68,18,68,16],[69,4,69,2],[69,5,69,3],[69,6,69,4],[71,4,72,2],[71,10,72,8,"isConnectionExpensive"],[71,31,72,29],[71,34,72,32,"connection"],[71,44,72,42],[71,45,72,43,"saveData"],[71,53,72,51],[72,4,73,2],[72,10,73,8,"type"],[72,14,73,12],[72,17,73,15,"connection"],[72,27,73,25],[72,28,73,26,"type"],[72,32,73,30],[72,35,73,33,"typeMapping"],[72,46,73,44],[72,47,73,45,"connection"],[72,57,73,55],[72,58,73,56,"type"],[72,62,73,60],[72,63,73,61],[72,66,73,64,"isConnected"],[72,77,73,75],[72,80,73,78,"_types"],[72,86,73,84],[72,87,73,85,"NetInfoStateType"],[72,103,73,101],[72,104,73,102,"other"],[72,109,73,107],[72,112,73,110,"_types"],[72,118,73,116],[72,119,73,117,"NetInfoStateType"],[72,135,73,133],[72,136,73,134,"unknown"],[72,143,73,141],[73,4,75,2],[73,8,75,6,"type"],[73,12,75,10],[73,17,75,15,"_types"],[73,23,75,21],[73,24,75,22,"NetInfoStateType"],[73,40,75,38],[73,41,75,39,"bluetooth"],[73,50,75,48],[73,52,75,50],[74,6,76,4],[74,12,76,10,"state"],[74,17,76,15],[74,20,76,18],[75,8,76,20],[75,11,76,23,"baseState"],[75,20,76,32],[76,8,77,6,"isConnected"],[76,19,77,17],[76,21,77,19],[76,25,77,23],[77,8,78,6,"type"],[77,12,78,10],[78,8,79,6,"details"],[78,15,79,13],[78,17,79,15],[79,10,80,8,"isConnectionExpensive"],[80,8,81,6],[81,6,82,4],[81,7,82,5],[82,6,83,4],[82,13,83,11,"state"],[82,18,83,16],[83,4,84,2],[83,5,84,3],[83,11,84,9],[83,15,84,13,"type"],[83,19,84,17],[83,24,84,22,"_types"],[83,30,84,28],[83,31,84,29,"NetInfoStateType"],[83,47,84,45],[83,48,84,46,"cellular"],[83,56,84,54],[83,58,84,56],[84,6,85,4],[84,12,85,10,"state"],[84,17,85,15],[84,20,85,18],[85,8,85,20],[85,11,85,23,"baseState"],[85,20,85,32],[86,8,86,6,"isConnected"],[86,19,86,17],[86,21,86,19],[86,25,86,23],[87,8,87,6,"type"],[87,12,87,10],[88,8,88,6,"details"],[88,15,88,13],[88,17,88,15],[89,10,89,8,"isConnectionExpensive"],[89,31,89,29],[90,10,90,8,"cellularGeneration"],[90,28,90,26],[90,30,90,28,"effectiveTypeMapping"],[90,50,90,48],[90,51,90,49,"connection"],[90,61,90,59],[90,62,90,60,"effectiveType"],[90,75,90,73],[90,76,90,74],[90,80,90,78],[90,84,90,82],[91,10,91,8,"carrier"],[91,17,91,15],[91,19,91,17],[92,8,92,6],[93,6,93,4],[93,7,93,5],[94,6,94,4],[94,13,94,11,"state"],[94,18,94,16],[95,4,95,2],[95,5,95,3],[95,11,95,9],[95,15,95,13,"type"],[95,19,95,17],[95,24,95,22,"_types"],[95,30,95,28],[95,31,95,29,"NetInfoStateType"],[95,47,95,45],[95,48,95,46,"ethernet"],[95,56,95,54],[95,58,95,56],[96,6,96,4],[96,12,96,10,"state"],[96,17,96,15],[96,20,96,18],[97,8,96,20],[97,11,96,23,"baseState"],[97,20,96,32],[98,8,97,6,"isConnected"],[98,19,97,17],[98,21,97,19],[98,25,97,23],[99,8,98,6,"type"],[99,12,98,10],[100,8,99,6,"details"],[100,15,99,13],[100,17,99,15],[101,10,100,8,"isConnectionExpensive"],[101,31,100,29],[102,10,101,8,"ipAddress"],[102,19,101,17],[102,21,101,19],[102,25,101,23],[103,10,102,8,"subnet"],[103,16,102,14],[103,18,102,16],[104,8,103,6],[105,6,104,4],[105,7,104,5],[106,6,105,4],[106,13,105,11,"state"],[106,18,105,16],[107,4,106,2],[107,5,106,3],[107,11,106,9],[107,15,106,13,"type"],[107,19,106,17],[107,24,106,22,"_types"],[107,30,106,28],[107,31,106,29,"NetInfoStateType"],[107,47,106,45],[107,48,106,46,"wifi"],[107,52,106,50],[107,54,106,52],[108,6,107,4],[108,12,107,10,"state"],[108,17,107,15],[108,20,107,18],[109,8,107,20],[109,11,107,23,"baseState"],[109,20,107,32],[110,8,108,6,"isConnected"],[110,19,108,17],[110,21,108,19],[110,25,108,23],[111,8,109,6,"type"],[111,12,109,10],[112,8,110,6,"details"],[112,15,110,13],[112,17,110,15],[113,10,111,8,"isConnectionExpensive"],[113,31,111,29],[114,10,112,8,"ssid"],[114,14,112,12],[114,16,112,14],[114,20,112,18],[115,10,113,8,"bssid"],[115,15,113,13],[115,17,113,15],[115,21,113,19],[116,10,114,8,"strength"],[116,18,114,16],[116,20,114,18],[116,24,114,22],[117,10,115,8,"ipAddress"],[117,19,115,17],[117,21,115,19],[117,25,115,23],[118,10,116,8,"subnet"],[118,16,116,14],[118,18,116,16],[118,22,116,20],[119,10,117,8,"frequency"],[119,19,117,17],[119,21,117,19],[119,25,117,23],[120,10,118,8,"linkSpeed"],[120,19,118,17],[120,21,118,19],[120,25,118,23],[121,10,119,8,"rxLinkSpeed"],[121,21,119,19],[121,23,119,21],[121,27,119,25],[122,10,120,8,"txLinkSpeed"],[122,21,120,19],[122,23,120,21],[123,8,121,6],[124,6,122,4],[124,7,122,5],[125,6,123,4],[125,13,123,11,"state"],[125,18,123,16],[126,4,124,2],[126,5,124,3],[126,11,124,9],[126,15,124,13,"type"],[126,19,124,17],[126,24,124,22,"_types"],[126,30,124,28],[126,31,124,29,"NetInfoStateType"],[126,47,124,45],[126,48,124,46,"wimax"],[126,53,124,51],[126,55,124,53],[127,6,125,4],[127,12,125,10,"state"],[127,17,125,15],[127,20,125,18],[128,8,125,20],[128,11,125,23,"baseState"],[128,20,125,32],[129,8,126,6,"isConnected"],[129,19,126,17],[129,21,126,19],[129,25,126,23],[130,8,127,6,"type"],[130,12,127,10],[131,8,128,6,"details"],[131,15,128,13],[131,17,128,15],[132,10,129,8,"isConnectionExpensive"],[133,8,130,6],[134,6,131,4],[134,7,131,5],[135,6,132,4],[135,13,132,11,"state"],[135,18,132,16],[136,4,133,2],[136,5,133,3],[136,11,133,9],[136,15,133,13,"type"],[136,19,133,17],[136,24,133,22,"_types"],[136,30,133,28],[136,31,133,29,"NetInfoStateType"],[136,47,133,45],[136,48,133,46,"none"],[136,52,133,50],[136,54,133,52],[137,6,134,4],[137,12,134,10,"state"],[137,17,134,15],[137,20,134,18],[138,8,134,20],[138,11,134,23,"baseState"],[138,20,134,32],[139,8,135,6,"isConnected"],[139,19,135,17],[139,21,135,19],[139,26,135,24],[140,8,136,6,"isInternetReachable"],[140,27,136,25],[140,29,136,27],[140,34,136,32],[141,8,137,6,"type"],[141,12,137,10],[142,8,138,6,"details"],[142,15,138,13],[142,17,138,15],[143,6,139,4],[143,7,139,5],[144,6,140,4],[144,13,140,11,"state"],[144,18,140,16],[145,4,141,2],[145,5,141,3],[145,11,141,9],[145,15,141,13,"type"],[145,19,141,17],[145,24,141,22,"_types"],[145,30,141,28],[145,31,141,29,"NetInfoStateType"],[145,47,141,45],[145,48,141,46,"unknown"],[145,55,141,53],[145,57,141,55],[146,6,142,4],[146,12,142,10,"state"],[146,17,142,15],[146,20,142,18],[147,8,142,20],[147,11,142,23,"baseState"],[147,20,142,32],[148,8,143,6,"isConnected"],[148,19,143,17],[149,8,144,6,"isInternetReachable"],[149,27,144,25],[149,29,144,27],[149,33,144,31],[150,8,145,6,"type"],[150,12,145,10],[151,8,146,6,"details"],[151,15,146,13],[151,17,146,15],[152,6,147,4],[152,7,147,5],[153,6,148,4],[153,13,148,11,"state"],[153,18,148,16],[154,4,149,2],[155,4,151,2],[155,10,151,8,"state"],[155,15,151,13],[155,18,151,16],[156,6,151,18],[156,9,151,21,"baseState"],[156,18,151,30],[157,6,152,4,"isConnected"],[157,17,152,15],[157,19,152,17],[157,23,152,21],[158,6,153,4,"type"],[158,10,153,8],[158,12,153,10,"_types"],[158,18,153,16],[158,19,153,17,"NetInfoStateType"],[158,35,153,33],[158,36,153,34,"other"],[158,41,153,39],[159,6,154,4,"details"],[159,13,154,11],[159,15,154,13],[160,8,155,6,"isConnectionExpensive"],[161,6,156,4],[162,4,157,2],[162,5,157,3],[163,4,158,2],[163,11,158,9,"state"],[163,16,158,14],[164,2,159,0],[164,3,159,1],[165,2,161,0],[165,8,161,6,"handlers"],[165,16,161,14],[165,19,161,17],[165,21,161,19],[166,2,162,0],[166,8,162,6,"nativeHandlers"],[166,22,162,20],[166,25,162,23],[166,27,162,25],[167,2,163,0],[167,8,163,6,"RNCNetInfo"],[167,18,163,16],[167,21,163,19],[168,4,164,2,"addListener"],[168,15,164,13,"addListener"],[168,16,164,14,"type"],[168,20,164,18],[168,22,164,20,"handler"],[168,29,164,27],[168,31,164,29],[169,6,165,4],[169,14,165,12,"type"],[169,18,165,16],[170,8,166,6],[170,13,166,11,"_privateTypes"],[170,26,166,24],[170,27,166,25,"DEVICE_CONNECTIVITY_EVENT"],[170,52,166,50],[171,10,167,8],[172,12,168,10],[172,18,168,16,"nativeHandler"],[172,31,168,29],[172,34,168,32,"nativeHandler"],[172,35,168,32],[172,40,168,38],[173,14,169,12,"handler"],[173,21,169,19],[173,22,169,20,"getCurrentState"],[173,37,169,35],[173,38,169,36],[173,39,169,37],[173,40,169,38],[174,12,170,10],[174,13,170,11],[175,12,172,10],[175,16,172,14,"connection"],[175,26,172,24],[175,28,172,26],[176,14,173,12,"connection"],[176,24,173,22],[176,25,173,23,"addEventListener"],[176,41,173,39],[176,42,173,40],[176,50,173,48],[176,52,173,50,"nativeHandler"],[176,65,173,63],[176,66,173,64],[177,12,174,10],[177,13,174,11],[177,19,174,17],[178,14,175,12],[178,18,175,16,"isWindowPresent"],[178,33,175,31],[178,35,175,33],[179,16,176,14,"window"],[179,22,176,20],[179,23,176,21,"addEventListener"],[179,39,176,37],[179,40,176,38],[179,48,176,46],[179,50,176,48,"nativeHandler"],[179,63,176,61],[179,65,176,63],[179,70,176,68],[179,71,176,69],[180,16,177,14,"window"],[180,22,177,20],[180,23,177,21,"addEventListener"],[180,39,177,37],[180,40,177,38],[180,49,177,47],[180,51,177,49,"nativeHandler"],[180,64,177,62],[180,66,177,64],[180,71,177,69],[180,72,177,70],[181,14,178,12],[182,12,179,10],[182,13,179,11],[182,14,179,12],[184,12,182,10,"handlers"],[184,20,182,18],[184,21,182,19,"push"],[184,25,182,23],[184,26,182,24,"handler"],[184,33,182,31],[184,34,182,32],[185,12,183,10,"nativeHandlers"],[185,26,183,24],[185,27,183,25,"push"],[185,31,183,29],[185,32,183,30,"nativeHandler"],[185,45,183,43],[185,46,183,44],[186,12,184,10],[187,10,185,8],[188,6,186,4],[189,4,187,2],[189,5,187,3],[190,4,189,2,"removeListeners"],[190,19,189,17,"removeListeners"],[190,20,189,18,"type"],[190,24,189,22],[190,26,189,24,"handler"],[190,33,189,31],[190,35,189,33],[191,6,190,4],[191,14,190,12,"type"],[191,18,190,16],[192,8,191,6],[192,13,191,11,"_privateTypes"],[192,26,191,24],[192,27,191,25,"DEVICE_CONNECTIVITY_EVENT"],[192,52,191,50],[193,10,192,8],[194,12,193,10],[195,12,194,10],[195,18,194,16,"index"],[195,23,194,21],[195,26,194,24,"handlers"],[195,34,194,32],[195,35,194,33,"indexOf"],[195,42,194,40],[195,43,194,41,"handler"],[195,50,194,48],[195,51,194,49],[196,12,195,10],[196,18,195,16,"nativeHandler"],[196,31,195,29],[196,34,195,32,"nativeHandlers"],[196,48,195,46],[196,49,195,47,"index"],[196,54,195,52],[196,55,195,53],[197,12,197,10],[197,16,197,14,"connection"],[197,26,197,24],[197,28,197,26],[198,14,198,12,"connection"],[198,24,198,22],[198,25,198,23,"removeEventListener"],[198,44,198,42],[198,45,198,43],[198,53,198,51],[198,55,198,53,"nativeHandler"],[198,68,198,66],[198,69,198,67],[199,12,199,10],[199,13,199,11],[199,19,199,17],[200,14,200,12],[200,18,200,16,"isWindowPresent"],[200,33,200,31],[200,35,200,33],[201,16,201,14,"window"],[201,22,201,20],[201,23,201,21,"removeEventListener"],[201,42,201,40],[201,43,201,41],[201,51,201,49],[201,53,201,51,"nativeHandler"],[201,66,201,64],[201,67,201,65],[202,16,202,14,"window"],[202,22,202,20],[202,23,202,21,"removeEventListener"],[202,42,202,40],[202,43,202,41],[202,52,202,50],[202,54,202,52,"nativeHandler"],[202,67,202,65],[202,68,202,66],[203,14,203,12],[204,12,204,10],[204,13,204,11],[204,14,204,12],[206,12,207,10,"handlers"],[206,20,207,18],[206,21,207,19,"splice"],[206,27,207,25],[206,28,207,26,"index"],[206,33,207,31],[206,35,207,33],[206,36,207,34],[206,37,207,35],[207,12,208,10,"nativeHandlers"],[207,26,208,24],[207,27,208,25,"splice"],[207,33,208,31],[207,34,208,32,"index"],[207,39,208,37],[207,41,208,39],[207,42,208,40],[207,43,208,41],[208,12,209,10],[209,10,210,8],[210,6,211,4],[211,4,212,2],[211,5,212,3],[212,4,214,2],[212,10,214,8,"getCurrentState"],[212,25,214,23,"getCurrentState"],[212,26,214,24,"requestedInterface"],[212,44,214,42],[212,46,214,44],[213,6,215,4],[213,13,215,11,"getCurrentState"],[213,28,215,26],[213,29,215,27,"requestedInterface"],[213,47,215,45],[213,48,215,46],[214,4,216,2],[214,5,216,3],[215,4,218,2,"configure"],[215,13,218,11,"configure"],[215,14,218,11],[215,16,218,14],[216,6,219,4],[217,4,220,2],[218,2,222,0],[218,3,222,1],[219,2,223,0],[219,6,223,4,"_default"],[219,14,223,12],[219,17,223,15,"RNCNetInfo"],[219,27,223,25],[220,2,224,0,"exports"],[220,9,224,7],[220,10,224,8,"default"],[220,17,224,15],[220,20,224,18,"_default"],[220,28,224,26],[221,0,224,27],[221,3]],"functionMap":{"names":["<global>","getCurrentState","RNCNetInfo.addListener","nativeHandler","RNCNetInfo.removeListeners","RNCNetInfo.getCurrentState","RNCNetInfo.configure"],"mappings":"AAA;wBC2C;CDmH;EEK;gCCI;WDE;GFiB;EIE;GJuB;EKE;GLE;EME;GNE"},"hasCjsExports":true},"type":"js/module"}]}