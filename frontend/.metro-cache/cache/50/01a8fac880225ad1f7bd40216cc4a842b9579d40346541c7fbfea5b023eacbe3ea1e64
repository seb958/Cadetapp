{"dependencies":[{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":24,"index":348},"end":{"line":13,"column":53,"index":377}}],"key":"hzwNINXctXvFTDWG7F9rRz7wbIk=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":13,"index":393},"end":{"line":15,"column":32,"index":412}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":53,"index":468},"end":{"line":17,"column":89,"index":504}}],"key":"Cb9WZZQ2lYApksw7qyxzfvoO7Ps=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":24,"index":532},"end":{"line":19,"column":54,"index":562}}],"key":"S1M4JF0i9x6zcvs3ggNUoVkhnZ0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.filterConfig = filterConfig;\n  exports.transformIntoHandlerTags = transformIntoHandlerTags;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  var _reactNative = require(_dependencyMap[0], \"react-native-web/dist/index\");\n  var _handlersRegistry = require(_dependencyMap[1], \"./handlersRegistry\");\n  var _utils = require(_dependencyMap[2], \"../utils\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[3], \"../RNGestureHandlerModule\"));\n  var _ghQueueMicrotask = require(_dependencyMap[4], \"../ghQueueMicrotask\");\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps, defaults = {}) {\n    const filteredConfig = {\n      ...defaults\n    };\n    for (const key of validProps) {\n      let value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _utils.toArray)(handlerIDs);\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(({\n        current\n      }) => current).filter(handle => handle);\n    } // converts handler string IDs into their numeric tags\n\n    return handlerIDs.map(handlerID => {\n      var _handlerID$current;\n      return _handlersRegistry.handlerIDToTag[handlerID] || ((_handlerID$current = handlerID.current) === null || _handlerID$current === void 0 ? void 0 : _handlerID$current.handlerTag) || -1;\n    }).filter(handlerTag => handlerTag > 0);\n  }\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') {\n      return node;\n    }\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n  let flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n        _RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":77,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"filterConfig"],[7,22,6,20],[7,25,6,23,"filterConfig"],[7,37,6,35],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"transformIntoHandlerTags"],[8,34,7,32],[8,37,7,35,"transformIntoHandlerTags"],[8,61,7,59],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"findNodeHandle"],[9,24,8,22],[9,27,8,25,"findNodeHandle"],[9,41,8,39],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"scheduleFlushOperations"],[10,33,9,31],[10,36,9,34,"scheduleFlushOperations"],[10,59,9,57],[11,2,9,58],[11,6,9,58,"_reactNative"],[11,18,9,58],[11,21,9,58,"require"],[11,28,9,58],[11,29,9,58,"_dependencyMap"],[11,43,9,58],[12,2,13,0],[12,6,13,4,"_handlersRegistry"],[12,23,13,21],[12,26,13,24,"require"],[12,33,13,31],[12,34,13,31,"_dependencyMap"],[12,48,13,31],[12,73,13,52],[12,74,13,53],[13,2,15,0],[13,6,15,4,"_utils"],[13,12,15,10],[13,15,15,13,"require"],[13,22,15,20],[13,23,15,20,"_dependencyMap"],[13,37,15,20],[13,52,15,31],[13,53,15,32],[14,2,17,0],[14,6,17,4,"_RNGestureHandlerModule"],[14,29,17,27],[14,32,17,30,"_interopRequireDefault"],[14,54,17,52],[14,55,17,53,"require"],[14,62,17,60],[14,63,17,60,"_dependencyMap"],[14,77,17,60],[14,109,17,88],[14,110,17,89],[14,111,17,90],[15,2,19,0],[15,6,19,4,"_ghQueueMicrotask"],[15,23,19,21],[15,26,19,24,"require"],[15,33,19,31],[15,34,19,31,"_dependencyMap"],[15,48,19,31],[15,74,19,53],[15,75,19,54],[16,2,21,0],[16,11,21,9,"_interopRequireDefault"],[16,33,21,31,"_interopRequireDefault"],[16,34,21,32,"obj"],[16,37,21,35],[16,39,21,37],[17,4,21,39],[17,11,21,46,"obj"],[17,14,21,49],[17,18,21,53,"obj"],[17,21,21,56],[17,22,21,57,"__esModule"],[17,32,21,67],[17,35,21,70,"obj"],[17,38,21,73],[17,41,21,76],[18,6,21,78,"default"],[18,13,21,85],[18,15,21,87,"obj"],[19,4,21,91],[19,5,21,92],[20,2,21,94],[21,2,23,0],[21,11,23,9,"isConfigParam"],[21,24,23,22,"isConfigParam"],[21,25,23,23,"param"],[21,30,23,28],[21,32,23,30,"name"],[21,36,23,34],[21,38,23,36],[22,4,24,2],[23,4,25,2],[24,4,26,2],[24,11,26,9,"param"],[24,16,26,14],[24,21,26,19,"undefined"],[24,30,26,28],[24,35,26,33,"param"],[24,40,26,38],[24,45,26,43,"Object"],[24,51,26,49],[24,52,26,50,"param"],[24,57,26,55],[24,58,26,56],[24,62,26,60],[24,64,26,62],[24,76,26,74],[24,80,26,78,"param"],[24,85,26,83],[24,86,26,84],[24,87,26,85],[24,91,26,89,"name"],[24,95,26,93],[24,100,26,98],[24,122,26,120],[24,126,26,124,"name"],[24,130,26,128],[24,135,26,133],[24,151,26,149],[25,2,27,0],[26,2,29,0],[26,11,29,9,"filterConfig"],[26,23,29,21,"filterConfig"],[26,24,29,22,"props"],[26,29,29,27],[26,31,29,29,"validProps"],[26,41,29,39],[26,43,29,41,"defaults"],[26,51,29,49],[26,54,29,52],[26,55,29,53],[26,56,29,54],[26,58,29,56],[27,4,30,2],[27,10,30,8,"filteredConfig"],[27,24,30,22],[27,27,30,25],[28,6,30,27],[28,9,30,30,"defaults"],[29,4,31,2],[29,5,31,3],[30,4,33,2],[30,9,33,7],[30,15,33,13,"key"],[30,18,33,16],[30,22,33,20,"validProps"],[30,32,33,30],[30,34,33,32],[31,6,34,4],[31,10,34,8,"value"],[31,15,34,13],[31,18,34,16,"props"],[31,23,34,21],[31,24,34,22,"key"],[31,27,34,25],[31,28,34,26],[32,6,36,4],[32,10,36,8,"isConfigParam"],[32,23,36,21],[32,24,36,22,"value"],[32,29,36,27],[32,31,36,29,"key"],[32,34,36,32],[32,35,36,33],[32,37,36,35],[33,8,37,6],[33,12,37,10,"key"],[33,15,37,13],[33,20,37,18],[33,42,37,40],[33,46,37,44,"key"],[33,49,37,47],[33,54,37,52],[33,63,37,61],[33,65,37,63],[34,10,38,8,"value"],[34,15,38,13],[34,18,38,16,"transformIntoHandlerTags"],[34,42,38,40],[34,43,38,41,"props"],[34,48,38,46],[34,49,38,47,"key"],[34,52,38,50],[34,53,38,51],[34,54,38,52],[35,8,39,6],[35,9,39,7],[35,15,39,13],[35,19,39,17,"key"],[35,22,39,20],[35,27,39,25],[35,36,39,34],[35,40,39,38],[35,47,39,45,"value"],[35,52,39,50],[35,57,39,55],[35,65,39,63],[35,67,39,65],[36,10,40,8,"value"],[36,15,40,13],[36,18,40,16],[37,12,41,10,"top"],[37,15,41,13],[37,17,41,15,"value"],[37,22,41,20],[38,12,42,10,"left"],[38,16,42,14],[38,18,42,16,"value"],[38,23,42,21],[39,12,43,10,"bottom"],[39,18,43,16],[39,20,43,18,"value"],[39,25,43,23],[40,12,44,10,"right"],[40,17,44,15],[40,19,44,17,"value"],[41,10,45,8],[41,11,45,9],[42,8,46,6],[43,8,48,6,"filteredConfig"],[43,22,48,20],[43,23,48,21,"key"],[43,26,48,24],[43,27,48,25],[43,30,48,28,"value"],[43,35,48,33],[44,6,49,4],[45,4,50,2],[46,4,52,2],[46,11,52,9,"filteredConfig"],[46,25,52,23],[47,2,53,0],[48,2,55,0],[48,11,55,9,"transformIntoHandlerTags"],[48,35,55,33,"transformIntoHandlerTags"],[48,36,55,34,"handlerIDs"],[48,46,55,44],[48,48,55,46],[49,4,56,2,"handlerIDs"],[49,14,56,12],[49,17,56,15],[49,18,56,16],[49,19,56,17],[49,21,56,19,"_utils"],[49,27,56,25],[49,28,56,26,"toArray"],[49,35,56,33],[49,37,56,35,"handlerIDs"],[49,47,56,45],[49,48,56,46],[50,4,58,2],[50,8,58,6,"_reactNative"],[50,20,58,18],[50,21,58,19,"Platform"],[50,29,58,27],[50,30,58,28,"OS"],[50,32,58,30],[50,37,58,35],[50,42,58,40],[50,44,58,42],[51,6,59,4],[51,13,59,11,"handlerIDs"],[51,23,59,21],[51,24,59,22,"map"],[51,27,59,25],[51,28,59,26],[51,29,59,27],[52,8,60,6,"current"],[53,6,61,4],[53,7,61,5],[53,12,61,10,"current"],[53,19,61,17],[53,20,61,18],[53,21,61,19,"filter"],[53,27,61,25],[53,28,61,26,"handle"],[53,34,61,32],[53,38,61,36,"handle"],[53,44,61,42],[53,45,61,43],[54,4,62,2],[54,5,62,3],[54,6,62,4],[56,4,65,2],[56,11,65,9,"handlerIDs"],[56,21,65,19],[56,22,65,20,"map"],[56,25,65,23],[56,26,65,24,"handlerID"],[56,35,65,33],[56,39,65,37],[57,6,66,4],[57,10,66,8,"_handlerID$current"],[57,28,66,26],[58,6,68,4],[58,13,68,11,"_handlersRegistry"],[58,30,68,28],[58,31,68,29,"handlerIDToTag"],[58,45,68,43],[58,46,68,44,"handlerID"],[58,55,68,53],[58,56,68,54],[58,61,68,59],[58,62,68,60,"_handlerID$current"],[58,80,68,78],[58,83,68,81,"handlerID"],[58,92,68,90],[58,93,68,91,"current"],[58,100,68,98],[58,106,68,104],[58,110,68,108],[58,114,68,112,"_handlerID$current"],[58,132,68,130],[58,137,68,135],[58,142,68,140],[58,143,68,141],[58,146,68,144],[58,151,68,149],[58,152,68,150],[58,155,68,153,"_handlerID$current"],[58,173,68,171],[58,174,68,172,"handlerTag"],[58,184,68,182],[58,185,68,183],[58,189,68,187],[58,190,68,188],[58,191,68,189],[59,4,69,2],[59,5,69,3],[59,6,69,4],[59,7,69,5,"filter"],[59,13,69,11],[59,14,69,12,"handlerTag"],[59,24,69,22],[59,28,69,26,"handlerTag"],[59,38,69,36],[59,41,69,39],[59,42,69,40],[59,43,69,41],[60,2,70,0],[61,2,72,0],[61,11,72,9,"findNodeHandle"],[61,25,72,23,"findNodeHandle"],[61,26,72,24,"node"],[61,30,72,28],[61,32,72,30],[62,4,73,2],[62,8,73,6,"_reactNative"],[62,20,73,18],[62,21,73,19,"Platform"],[62,29,73,27],[62,30,73,28,"OS"],[62,32,73,30],[62,37,73,35],[62,42,73,40],[62,44,73,42],[63,6,74,4],[63,13,74,11,"node"],[63,17,74,15],[64,4,75,2],[65,4,77,2],[65,11,77,9],[65,12,77,10],[65,13,77,11],[65,15,77,13,"_reactNative"],[65,27,77,25],[65,28,77,26,"findNodeHandle"],[65,42,77,40],[65,44,77,42,"node"],[65,48,77,46],[65,49,77,47],[66,2,78,0],[67,2,80,0],[67,6,80,4,"flushOperationsScheduled"],[67,30,80,28],[67,33,80,31],[67,38,80,36],[68,2,82,0],[68,11,82,9,"scheduleFlushOperations"],[68,34,82,32,"scheduleFlushOperations"],[68,35,82,32],[68,37,82,35],[69,4,83,2],[69,8,83,6],[69,9,83,7,"flushOperationsScheduled"],[69,33,83,31],[69,35,83,33],[70,6,84,4,"flushOperationsScheduled"],[70,30,84,28],[70,33,84,31],[70,37,84,35],[71,6,85,4],[71,7,85,5],[71,8,85,6],[71,10,85,8,"_ghQueueMicrotask"],[71,27,85,25],[71,28,85,26,"ghQueueMicrotask"],[71,44,85,42],[71,46,85,44],[71,52,85,50],[72,8,86,6,"_RNGestureHandlerModule"],[72,31,86,29],[72,32,86,30,"default"],[72,39,86,37],[72,40,86,38,"flushOperations"],[72,55,86,53],[72,56,86,54],[72,57,86,55],[73,8,88,6,"flushOperationsScheduled"],[73,32,88,30],[73,35,88,33],[73,40,88,38],[74,6,89,4],[74,7,89,5],[74,8,89,6],[75,4,90,2],[76,2,91,0],[77,0,91,1],[77,3]],"functionMap":{"names":["<global>","_interopRequireDefault","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","<anonymous>"],"mappings":"AAA;ACoB,+FD;AEE;CFI;AGE;CHwB;AIE;0BCI;iBDE,SE,gBF;wBCI;GDI,SE,4BF;CJC;AOE;CPM;AQI;4CCG;KDI;CRE"},"hasCjsExports":true},"type":"js/module"}]}