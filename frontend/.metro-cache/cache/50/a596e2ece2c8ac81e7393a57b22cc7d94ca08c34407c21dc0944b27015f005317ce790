{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  class EventManager {\n    constructor(view) {\n      _defineProperty(this, \"view\", void 0);\n      _defineProperty(this, \"pointersInBounds\", []);\n      _defineProperty(this, \"activePointersCounter\", void 0);\n      this.view = view;\n      this.activePointersCounter = 0;\n    }\n    onPointerDown(_event) {}\n    onPointerAdd(_event) {}\n    onPointerUp(_event) {}\n    onPointerRemove(_event) {}\n    onPointerMove(_event) {}\n    onPointerLeave(_event) {} // Called only when pointer is pressed (or touching)\n\n    onPointerEnter(_event) {} // Called only when pointer is pressed (or touching)\n\n    onPointerCancel(_event) {// When pointer cancel is triggered and there are more pointers on the view, only one pointer is cancelled\n      // Because we want all pointers to be cancelled by that event, we are doing it manually by reseting handler and changing activePointersCounter to 0\n      // Events that correspond to removing the pointer (pointerup, touchend) have condition, that they don't perform any action when activePointersCounter\n      // is equal to 0. This prevents counter from going to negative values, when pointers are removed from view after one of them has been cancelled\n    }\n    onPointerOutOfBounds(_event) {}\n    onPointerMoveOver(_event) {}\n    onPointerMoveOut(_event) {}\n    onWheel(_event) {}\n    setOnPointerDown(callback) {\n      this.onPointerDown = callback;\n    }\n    setOnPointerAdd(callback) {\n      this.onPointerAdd = callback;\n    }\n    setOnPointerUp(callback) {\n      this.onPointerUp = callback;\n    }\n    setOnPointerRemove(callback) {\n      this.onPointerRemove = callback;\n    }\n    setOnPointerMove(callback) {\n      this.onPointerMove = callback;\n    }\n    setOnPointerLeave(callback) {\n      this.onPointerLeave = callback;\n    }\n    setOnPointerEnter(callback) {\n      this.onPointerEnter = callback;\n    }\n    setOnPointerCancel(callback) {\n      this.onPointerCancel = callback;\n    }\n    setOnPointerOutOfBounds(callback) {\n      this.onPointerOutOfBounds = callback;\n    }\n    setOnPointerMoveOver(callback) {\n      this.onPointerMoveOver = callback;\n    }\n    setOnPointerMoveOut(callback) {\n      this.onPointerMoveOut = callback;\n    }\n    setOnWheel(callback) {\n      this.onWheel = callback;\n    }\n    markAsInBounds(pointerId) {\n      if (this.pointersInBounds.indexOf(pointerId) >= 0) {\n        return;\n      }\n      this.pointersInBounds.push(pointerId);\n    }\n    markAsOutOfBounds(pointerId) {\n      const index = this.pointersInBounds.indexOf(pointerId);\n      if (index < 0) {\n        return;\n      }\n      this.pointersInBounds.splice(index, 1);\n    }\n    resetManager() {\n      // Reseting activePointersCounter is necessary to make gestures such as pinch work properly\n      // There are gestures that end when there is still one active pointer (like pinch/rotation)\n      // When these gestures end, they are reset, but they still receive events from pointer that is active\n      // This causes trouble, since only onPointerDown registers gesture in orchestrator, and while gestures receive\n      // Events from active pointer after they finished, next pointerdown event will be registered as additional pointer, not the first one\n      // This casues trouble like gestures getting stuck in END state, even though they should have gone to UNDETERMINED\n      this.activePointersCounter = 0;\n      this.pointersInBounds = [];\n    }\n  }\n  exports.default = EventManager;\n});","lineCount":110,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18],[7,25,6,23],[7,26,6,24],[8,2,8,0],[8,11,8,9,"_defineProperty"],[8,26,8,24,"_defineProperty"],[8,27,8,25,"obj"],[8,30,8,28],[8,32,8,30,"key"],[8,35,8,33],[8,37,8,35,"value"],[8,42,8,40],[8,44,8,42],[9,4,8,44],[9,8,8,48,"key"],[9,11,8,51],[9,15,8,55,"obj"],[9,18,8,58],[9,20,8,60],[10,6,8,62,"Object"],[10,12,8,68],[10,13,8,69,"defineProperty"],[10,27,8,83],[10,28,8,84,"obj"],[10,31,8,87],[10,33,8,89,"key"],[10,36,8,92],[10,38,8,94],[11,8,8,96,"value"],[11,13,8,101],[11,15,8,103,"value"],[11,20,8,108],[12,8,8,110,"enumerable"],[12,18,8,120],[12,20,8,122],[12,24,8,126],[13,8,8,128,"configurable"],[13,20,8,140],[13,22,8,142],[13,26,8,146],[14,8,8,148,"writable"],[14,16,8,156],[14,18,8,158],[15,6,8,163],[15,7,8,164],[15,8,8,165],[16,4,8,167],[16,5,8,168],[16,11,8,174],[17,6,8,176,"obj"],[17,9,8,179],[17,10,8,180,"key"],[17,13,8,183],[17,14,8,184],[17,17,8,187,"value"],[17,22,8,192],[18,4,8,194],[19,4,8,196],[19,11,8,203,"obj"],[19,14,8,206],[20,2,8,208],[22,2,10,0],[23,2,11,0],[23,8,11,6,"EventManager"],[23,20,11,18],[23,21,11,19],[24,4,12,2,"constructor"],[24,15,12,13,"constructor"],[24,16,12,14,"view"],[24,20,12,18],[24,22,12,20],[25,6,13,4,"_defineProperty"],[25,21,13,19],[25,22,13,20],[25,26,13,24],[25,28,13,26],[25,34,13,32],[25,36,13,34],[25,41,13,39],[25,42,13,40],[25,43,13,41],[26,6,15,4,"_defineProperty"],[26,21,15,19],[26,22,15,20],[26,26,15,24],[26,28,15,26],[26,46,15,44],[26,48,15,46],[26,50,15,48],[26,51,15,49],[27,6,17,4,"_defineProperty"],[27,21,17,19],[27,22,17,20],[27,26,17,24],[27,28,17,26],[27,51,17,49],[27,53,17,51],[27,58,17,56],[27,59,17,57],[27,60,17,58],[28,6,19,4],[28,10,19,8],[28,11,19,9,"view"],[28,15,19,13],[28,18,19,16,"view"],[28,22,19,20],[29,6,20,4],[29,10,20,8],[29,11,20,9,"activePointersCounter"],[29,32,20,30],[29,35,20,33],[29,36,20,34],[30,4,21,2],[31,4,23,2,"onPointerDown"],[31,17,23,15,"onPointerDown"],[31,18,23,16,"_event"],[31,24,23,22],[31,26,23,24],[31,27,23,25],[32,4,25,2,"onPointerAdd"],[32,16,25,14,"onPointerAdd"],[32,17,25,15,"_event"],[32,23,25,21],[32,25,25,23],[32,26,25,24],[33,4,27,2,"onPointerUp"],[33,15,27,13,"onPointerUp"],[33,16,27,14,"_event"],[33,22,27,20],[33,24,27,22],[33,25,27,23],[34,4,29,2,"onPointerRemove"],[34,19,29,17,"onPointerRemove"],[34,20,29,18,"_event"],[34,26,29,24],[34,28,29,26],[34,29,29,27],[35,4,31,2,"onPointerMove"],[35,17,31,15,"onPointerMove"],[35,18,31,16,"_event"],[35,24,31,22],[35,26,31,24],[35,27,31,25],[36,4,33,2,"onPointerLeave"],[36,18,33,16,"onPointerLeave"],[36,19,33,17,"_event"],[36,25,33,23],[36,27,33,25],[36,28,33,26],[36,29,33,27],[36,30,33,28],[38,4,36,2,"onPointerEnter"],[38,18,36,16,"onPointerEnter"],[38,19,36,17,"_event"],[38,25,36,23],[38,27,36,25],[38,28,36,26],[38,29,36,27],[38,30,36,28],[40,4,39,2,"onPointerCancel"],[40,19,39,17,"onPointerCancel"],[40,20,39,18,"_event"],[40,26,39,24],[40,28,39,26],[40,29,39,27],[41,6,40,4],[42,6,41,4],[43,6,42,4],[44,4,42,4],[45,4,45,2,"onPointerOutOfBounds"],[45,24,45,22,"onPointerOutOfBounds"],[45,25,45,23,"_event"],[45,31,45,29],[45,33,45,31],[45,34,45,32],[46,4,47,2,"onPointerMoveOver"],[46,21,47,19,"onPointerMoveOver"],[46,22,47,20,"_event"],[46,28,47,26],[46,30,47,28],[46,31,47,29],[47,4,49,2,"onPointerMoveOut"],[47,20,49,18,"onPointerMoveOut"],[47,21,49,19,"_event"],[47,27,49,25],[47,29,49,27],[47,30,49,28],[48,4,51,2,"onWheel"],[48,11,51,9,"onWheel"],[48,12,51,10,"_event"],[48,18,51,16],[48,20,51,18],[48,21,51,19],[49,4,53,2,"setOnPointerDown"],[49,20,53,18,"setOnPointerDown"],[49,21,53,19,"callback"],[49,29,53,27],[49,31,53,29],[50,6,54,4],[50,10,54,8],[50,11,54,9,"onPointerDown"],[50,24,54,22],[50,27,54,25,"callback"],[50,35,54,33],[51,4,55,2],[52,4,57,2,"setOnPointerAdd"],[52,19,57,17,"setOnPointerAdd"],[52,20,57,18,"callback"],[52,28,57,26],[52,30,57,28],[53,6,58,4],[53,10,58,8],[53,11,58,9,"onPointerAdd"],[53,23,58,21],[53,26,58,24,"callback"],[53,34,58,32],[54,4,59,2],[55,4,61,2,"setOnPointerUp"],[55,18,61,16,"setOnPointerUp"],[55,19,61,17,"callback"],[55,27,61,25],[55,29,61,27],[56,6,62,4],[56,10,62,8],[56,11,62,9,"onPointerUp"],[56,22,62,20],[56,25,62,23,"callback"],[56,33,62,31],[57,4,63,2],[58,4,65,2,"setOnPointerRemove"],[58,22,65,20,"setOnPointerRemove"],[58,23,65,21,"callback"],[58,31,65,29],[58,33,65,31],[59,6,66,4],[59,10,66,8],[59,11,66,9,"onPointerRemove"],[59,26,66,24],[59,29,66,27,"callback"],[59,37,66,35],[60,4,67,2],[61,4,69,2,"setOnPointerMove"],[61,20,69,18,"setOnPointerMove"],[61,21,69,19,"callback"],[61,29,69,27],[61,31,69,29],[62,6,70,4],[62,10,70,8],[62,11,70,9,"onPointerMove"],[62,24,70,22],[62,27,70,25,"callback"],[62,35,70,33],[63,4,71,2],[64,4,73,2,"setOnPointerLeave"],[64,21,73,19,"setOnPointerLeave"],[64,22,73,20,"callback"],[64,30,73,28],[64,32,73,30],[65,6,74,4],[65,10,74,8],[65,11,74,9,"onPointerLeave"],[65,25,74,23],[65,28,74,26,"callback"],[65,36,74,34],[66,4,75,2],[67,4,77,2,"setOnPointerEnter"],[67,21,77,19,"setOnPointerEnter"],[67,22,77,20,"callback"],[67,30,77,28],[67,32,77,30],[68,6,78,4],[68,10,78,8],[68,11,78,9,"onPointerEnter"],[68,25,78,23],[68,28,78,26,"callback"],[68,36,78,34],[69,4,79,2],[70,4,81,2,"setOnPointerCancel"],[70,22,81,20,"setOnPointerCancel"],[70,23,81,21,"callback"],[70,31,81,29],[70,33,81,31],[71,6,82,4],[71,10,82,8],[71,11,82,9,"onPointerCancel"],[71,26,82,24],[71,29,82,27,"callback"],[71,37,82,35],[72,4,83,2],[73,4,85,2,"setOnPointerOutOfBounds"],[73,27,85,25,"setOnPointerOutOfBounds"],[73,28,85,26,"callback"],[73,36,85,34],[73,38,85,36],[74,6,86,4],[74,10,86,8],[74,11,86,9,"onPointerOutOfBounds"],[74,31,86,29],[74,34,86,32,"callback"],[74,42,86,40],[75,4,87,2],[76,4,89,2,"setOnPointerMoveOver"],[76,24,89,22,"setOnPointerMoveOver"],[76,25,89,23,"callback"],[76,33,89,31],[76,35,89,33],[77,6,90,4],[77,10,90,8],[77,11,90,9,"onPointerMoveOver"],[77,28,90,26],[77,31,90,29,"callback"],[77,39,90,37],[78,4,91,2],[79,4,93,2,"setOnPointerMoveOut"],[79,23,93,21,"setOnPointerMoveOut"],[79,24,93,22,"callback"],[79,32,93,30],[79,34,93,32],[80,6,94,4],[80,10,94,8],[80,11,94,9,"onPointerMoveOut"],[80,27,94,25],[80,30,94,28,"callback"],[80,38,94,36],[81,4,95,2],[82,4,97,2,"setOnWheel"],[82,14,97,12,"setOnWheel"],[82,15,97,13,"callback"],[82,23,97,21],[82,25,97,23],[83,6,98,4],[83,10,98,8],[83,11,98,9,"onWheel"],[83,18,98,16],[83,21,98,19,"callback"],[83,29,98,27],[84,4,99,2],[85,4,101,2,"markAsInBounds"],[85,18,101,16,"markAsInBounds"],[85,19,101,17,"pointerId"],[85,28,101,26],[85,30,101,28],[86,6,102,4],[86,10,102,8],[86,14,102,12],[86,15,102,13,"pointersInBounds"],[86,31,102,29],[86,32,102,30,"indexOf"],[86,39,102,37],[86,40,102,38,"pointerId"],[86,49,102,47],[86,50,102,48],[86,54,102,52],[86,55,102,53],[86,57,102,55],[87,8,103,6],[88,6,104,4],[89,6,106,4],[89,10,106,8],[89,11,106,9,"pointersInBounds"],[89,27,106,25],[89,28,106,26,"push"],[89,32,106,30],[89,33,106,31,"pointerId"],[89,42,106,40],[89,43,106,41],[90,4,107,2],[91,4,109,2,"markAsOutOfBounds"],[91,21,109,19,"markAsOutOfBounds"],[91,22,109,20,"pointerId"],[91,31,109,29],[91,33,109,31],[92,6,110,4],[92,12,110,10,"index"],[92,17,110,15],[92,20,110,18],[92,24,110,22],[92,25,110,23,"pointersInBounds"],[92,41,110,39],[92,42,110,40,"indexOf"],[92,49,110,47],[92,50,110,48,"pointerId"],[92,59,110,57],[92,60,110,58],[93,6,112,4],[93,10,112,8,"index"],[93,15,112,13],[93,18,112,16],[93,19,112,17],[93,21,112,19],[94,8,113,6],[95,6,114,4],[96,6,116,4],[96,10,116,8],[96,11,116,9,"pointersInBounds"],[96,27,116,25],[96,28,116,26,"splice"],[96,34,116,32],[96,35,116,33,"index"],[96,40,116,38],[96,42,116,40],[96,43,116,41],[96,44,116,42],[97,4,117,2],[98,4,119,2,"resetManager"],[98,16,119,14,"resetManager"],[98,17,119,14],[98,19,119,17],[99,6,120,4],[100,6,121,4],[101,6,122,4],[102,6,123,4],[103,6,124,4],[104,6,125,4],[105,6,126,4],[105,10,126,8],[105,11,126,9,"activePointersCounter"],[105,32,126,30],[105,35,126,33],[105,36,126,34],[106,6,127,4],[106,10,127,8],[106,11,127,9,"pointersInBounds"],[106,27,127,25],[106,30,127,28],[106,32,127,30],[107,4,128,2],[108,2,130,0],[109,2,132,0,"exports"],[109,9,132,7],[109,10,132,8,"default"],[109,17,132,15],[109,20,132,18,"EventManager"],[109,32,132,30],[110,0,132,31],[110,3]],"functionMap":{"names":["<global>","_defineProperty","EventManager","constructor","onPointerDown","onPointerAdd","onPointerUp","onPointerRemove","onPointerMove","onPointerLeave","onPointerEnter","onPointerCancel","onPointerOutOfBounds","onPointerMoveOver","onPointerMoveOut","onWheel","setOnPointerDown","setOnPointerAdd","setOnPointerUp","setOnPointerRemove","setOnPointerMove","setOnPointerLeave","setOnPointerEnter","setOnPointerCancel","setOnPointerOutOfBounds","setOnPointerMoveOver","setOnPointerMoveOut","setOnWheel","markAsInBounds","markAsOutOfBounds","resetManager"],"mappings":"AAA;ACO,iND;AEG;ECC;GDS;EEE,wBF;EGE,uBH;EIE,sBJ;EKE,0BL;EME,wBN;EOE,yBP;EQG,yBR;ESG;GTI;EUE,+BV;EWE,4BX;EYE,2BZ;EaE,kBb;EcE;GdE;EeE;GfE;EgBE;GhBE;EiBE;GjBE;EkBE;GlBE;EmBE;GnBE;EoBE;GpBE;EqBE;GrBE;EsBE;GtBE;EuBE;GvBE;EwBE;GxBE;EyBE;GzBE;E0BE;G1BM;E2BE;G3BQ;E4BE;G5BS;CFE"},"hasCjsExports":true},"type":"js/module"}]}