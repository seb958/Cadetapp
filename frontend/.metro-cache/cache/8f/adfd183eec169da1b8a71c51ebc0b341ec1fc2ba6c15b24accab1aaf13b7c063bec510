{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":36,"index":51}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":52},"end":{"line":4,"column":33,"index":85}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":86},"end":{"line":5,"column":89,"index":175}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":176},"end":{"line":6,"column":62,"index":238}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":239},"end":{"line":7,"column":66,"index":305}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _State = require(_dependencyMap[1], \"../State\");\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _DiscreteGestureHandler = require(_dependencyMap[3], \"./DiscreteGestureHandler\");\n  var DiscreteGestureHandler = _interopDefault(_DiscreteGestureHandler);\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  class PressGestureHandler extends DiscreteGestureHandler.default {\n    initialEvent = null;\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Press;\n    }\n    shouldDelayTouches = true;\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [Hammer.default.INPUT_START]: _State.State.BEGAN,\n        [Hammer.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [Hammer.default.INPUT_END]: _State.State.END,\n        [Hammer.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      };\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent({\n        ...ev,\n        eventType: Hammer.default.INPUT_MOVE,\n        isFirst: true\n      });\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent({\n              ...ev,\n              eventType: Hammer.default.INPUT_END,\n              isFinal: true\n            });\n            // @ts-ignore -- this should explicitly support undefined\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.default.INPUT_MOVE,\n            isFinal: false\n          });\n        }\n      }\n    }\n    updateGestureConfig({\n      shouldActivateOnStart = false,\n      disallowInterruption = false,\n      shouldCancelWhenOutside = true,\n      minDurationMs = Number.NaN,\n      maxDist = Number.NaN,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n  }\n  var _default = PressGestureHandler;\n});","lineCount":165,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,147,0,"Object"],[12,8,147,0],[12,9,147,0,"defineProperty"],[12,23,147,0],[12,24,147,0,"exports"],[12,31,147,0],[13,4,147,0,"enumerable"],[13,14,147,0],[14,4,147,0,"get"],[14,7,147,0],[14,18,147,0,"get"],[14,19,147,0],[15,6,147,0],[15,13,147,0,"_default"],[15,21,147,0],[16,4,147,0],[17,2,147,0],[18,2,3,0],[18,6,3,0,"_egjsHammerjs"],[18,19,3,0],[18,22,3,0,"require"],[18,29,3,0],[18,30,3,0,"_dependencyMap"],[18,44,3,0],[19,2,3,0],[19,6,3,0,"Hammer"],[19,12,3,0],[19,15,3,0,"_interopDefault"],[19,30,3,0],[19,31,3,0,"_egjsHammerjs"],[19,44,3,0],[20,2,4,0],[20,6,4,0,"_State"],[20,12,4,0],[20,15,4,0,"require"],[20,22,4,0],[20,23,4,0,"_dependencyMap"],[20,37,4,0],[21,2,5,0],[21,6,5,0,"_constants"],[21,16,5,0],[21,19,5,0,"require"],[21,26,5,0],[21,27,5,0,"_dependencyMap"],[21,41,5,0],[22,2,6,0],[22,6,6,0,"_DiscreteGestureHandler"],[22,29,6,0],[22,32,6,0,"require"],[22,39,6,0],[22,40,6,0,"_dependencyMap"],[22,54,6,0],[23,2,6,0],[23,6,6,0,"DiscreteGestureHandler"],[23,28,6,0],[23,31,6,0,"_interopDefault"],[23,46,6,0],[23,47,6,0,"_DiscreteGestureHandler"],[23,70,6,0],[24,2,7,0],[24,6,7,0,"_utils"],[24,12,7,0],[24,15,7,0,"require"],[24,22,7,0],[24,23,7,0,"_dependencyMap"],[24,37,7,0],[25,2,8,0],[25,8,8,6,"PressGestureHandler"],[25,27,8,25],[25,36,8,34,"DiscreteGestureHandler"],[25,58,8,56],[25,59,8,56,"default"],[25,66,8,56],[25,67,8,57],[26,4,9,2,"initialEvent"],[26,16,9,14],[26,19,9,17],[26,23,9,21],[27,4,10,2],[27,8,10,6,"name"],[27,12,10,10,"name"],[27,13,10,10],[27,15,10,13],[28,6,11,4],[28,13,11,11],[28,20,11,18],[29,4,12,2],[30,4,13,2],[30,8,13,6,"minDurationMs"],[30,21,13,19,"minDurationMs"],[30,22,13,19],[30,24,13,22],[31,6,14,4],[32,6,15,4],[32,13,15,11],[32,17,15,11,"isnan"],[32,23,15,16],[32,24,15,16,"isnan"],[32,29,15,16],[32,31,15,17],[32,35,15,21],[32,36,15,22,"config"],[32,42,15,28],[32,43,15,29,"minDurationMs"],[32,56,15,42],[32,57,15,43],[32,60,15,46],[32,61,15,47],[32,64,15,50],[32,68,15,54],[32,69,15,55,"config"],[32,75,15,61],[32,76,15,62,"minDurationMs"],[32,89,15,75],[33,4,16,2],[34,4,17,2],[34,8,17,6,"maxDist"],[34,15,17,13,"maxDist"],[34,16,17,13],[34,18,17,16],[35,6,18,4],[35,13,18,11],[35,17,18,11,"isnan"],[35,23,18,16],[35,24,18,16,"isnan"],[35,29,18,16],[35,31,18,17],[35,35,18,21],[35,36,18,22,"config"],[35,42,18,28],[35,43,18,29,"maxDist"],[35,50,18,36],[35,51,18,37],[35,54,18,40],[35,55,18,41],[35,58,18,44],[35,62,18,48],[35,63,18,49,"config"],[35,69,18,55],[35,70,18,56,"maxDist"],[35,77,18,63],[36,4,19,2],[37,4,20,2],[37,8,20,6,"NativeGestureClass"],[37,26,20,24,"NativeGestureClass"],[37,27,20,24],[37,29,20,27],[38,6,21,4],[38,13,21,11,"Hammer"],[38,19,21,17],[38,20,21,17,"default"],[38,27,21,17],[38,28,21,18,"Press"],[38,33,21,23],[39,4,22,2],[40,4,23,2,"shouldDelayTouches"],[40,22,23,20],[40,25,23,23],[40,29,23,27],[41,4,24,2,"simulateCancelEvent"],[41,23,24,21,"simulateCancelEvent"],[41,24,24,22,"inputData"],[41,33,24,31],[41,35,24,33],[42,6,25,4],[43,6,26,4],[43,10,26,8],[43,11,26,9,"hasGestureFailed"],[43,27,26,25],[43,30,26,28],[43,34,26,32],[44,6,27,4],[44,10,27,8],[44,11,27,9,"cancelEvent"],[44,22,27,20],[44,23,27,21,"inputData"],[44,32,27,30],[44,33,27,31],[45,4,28,2],[46,4,29,2,"updateHasCustomActivationCriteria"],[46,37,29,35,"updateHasCustomActivationCriteria"],[46,38,29,36],[47,6,30,4,"shouldCancelWhenOutside"],[47,29,30,27],[48,6,31,4,"maxDistSq"],[49,4,32,2],[49,5,32,3],[49,7,32,5],[50,6,33,4],[50,13,33,11,"shouldCancelWhenOutside"],[50,36,33,34],[50,40,33,38],[50,41,33,39],[50,45,33,39,"isValidNumber"],[50,51,33,52],[50,52,33,52,"isValidNumber"],[50,65,33,52],[50,67,33,53,"maxDistSq"],[50,76,33,62],[50,77,33,63],[51,4,34,2],[52,4,35,2,"getState"],[52,12,35,10,"getState"],[52,13,35,11,"type"],[52,17,35,15],[52,19,35,17],[53,6,36,4],[53,13,36,11],[54,8,37,6],[54,9,37,7,"Hammer"],[54,15,37,13],[54,16,37,13,"default"],[54,23,37,13],[54,24,37,14,"INPUT_START"],[54,35,37,25],[54,38,37,28,"State"],[54,44,37,33],[54,45,37,33,"State"],[54,50,37,33],[54,51,37,34,"BEGAN"],[54,56,37,39],[55,8,38,6],[55,9,38,7,"Hammer"],[55,15,38,13],[55,16,38,13,"default"],[55,23,38,13],[55,24,38,14,"INPUT_MOVE"],[55,34,38,24],[55,37,38,27,"State"],[55,43,38,32],[55,44,38,32,"State"],[55,49,38,32],[55,50,38,33,"ACTIVE"],[55,56,38,39],[56,8,39,6],[56,9,39,7,"Hammer"],[56,15,39,13],[56,16,39,13,"default"],[56,23,39,13],[56,24,39,14,"INPUT_END"],[56,33,39,23],[56,36,39,26,"State"],[56,42,39,31],[56,43,39,31,"State"],[56,48,39,31],[56,49,39,32,"END"],[56,52,39,35],[57,8,40,6],[57,9,40,7,"Hammer"],[57,15,40,13],[57,16,40,13,"default"],[57,23,40,13],[57,24,40,14,"INPUT_CANCEL"],[57,36,40,26],[57,39,40,29,"State"],[57,45,40,34],[57,46,40,34,"State"],[57,51,40,34],[57,52,40,35,"CANCELLED"],[58,6,41,4],[58,7,41,5],[58,8,41,6,"type"],[58,12,41,10],[58,13,41,11],[59,4,42,2],[60,4,43,2,"getConfig"],[60,13,43,11,"getConfig"],[60,14,43,11],[60,16,43,14],[61,6,44,4],[61,10,44,8],[61,11,44,9],[61,15,44,13],[61,16,44,14,"hasCustomActivationCriteria"],[61,43,44,41],[61,45,44,43],[62,8,45,6],[63,8,46,6],[64,8,47,6],[64,15,47,13],[65,10,48,8,"shouldCancelWhenOutside"],[65,33,48,31],[65,35,48,33],[65,39,48,37],[66,10,49,8,"maxDistSq"],[66,19,49,17],[66,21,49,19],[67,8,50,6],[67,9,50,7],[68,6,51,4],[69,6,52,4],[69,13,52,11],[69,17,52,15],[69,18,52,16,"config"],[69,24,52,22],[70,4,53,2],[71,4,54,2,"getHammerConfig"],[71,19,54,17,"getHammerConfig"],[71,20,54,17],[71,22,54,20],[72,6,55,4],[72,13,55,11],[73,8,56,6],[73,11,56,9],[73,16,56,14],[73,17,56,15,"getHammerConfig"],[73,32,56,30],[73,33,56,31],[73,34,56,32],[74,8,57,6],[75,8,58,6,"time"],[75,12,58,10],[75,14,58,12],[75,18,58,16],[75,19,58,17,"minDurationMs"],[76,6,59,4],[76,7,59,5],[77,4,60,2],[78,4,61,2,"onGestureActivated"],[78,22,61,20,"onGestureActivated"],[78,23,61,21,"ev"],[78,25,61,23],[78,27,61,25],[79,6,62,4],[79,10,62,8],[79,11,62,9,"onGestureStart"],[79,25,62,23],[79,26,62,24,"ev"],[79,28,62,26],[79,29,62,27],[80,4,63,2],[81,4,64,2,"shouldDelayTouchForEvent"],[81,28,64,26,"shouldDelayTouchForEvent"],[81,29,64,27],[82,6,65,4,"pointerType"],[83,4,66,2],[83,5,66,3],[83,7,66,5],[84,6,67,4],[85,6,68,4],[85,13,68,11],[85,17,68,15],[85,18,68,16,"shouldDelayTouches"],[85,36,68,34],[85,40,68,38,"pointerType"],[85,51,68,49],[85,56,68,54],[85,63,68,61],[86,4,69,2],[87,4,70,2,"onGestureStart"],[87,18,70,16,"onGestureStart"],[87,19,70,17,"ev"],[87,21,70,19],[87,23,70,21],[88,6,71,4],[88,10,71,8],[88,11,71,9,"isGestureRunning"],[88,27,71,25],[88,30,71,28],[88,34,71,32],[89,6,72,4,"clearTimeout"],[89,18,72,16],[89,19,72,17],[89,23,72,21],[89,24,72,22,"visualFeedbackTimer"],[89,43,72,41],[89,44,72,42],[90,6,73,4],[90,10,73,8],[90,11,73,9,"initialEvent"],[90,23,73,21],[90,26,73,24,"ev"],[90,28,73,26],[91,6,74,4],[91,10,74,8],[91,11,74,9,"visualFeedbackTimer"],[91,30,74,28],[91,33,74,31],[91,37,74,31,"fireAfterInterval"],[91,43,74,48],[91,44,74,48,"fireAfterInterval"],[91,61,74,48],[91,63,74,49],[91,69,74,55],[92,8,75,6],[92,12,75,10],[92,13,75,11,"sendGestureStartedEvent"],[92,36,75,34],[92,37,75,35],[92,41,75,39],[92,42,75,40,"initialEvent"],[92,54,75,52],[92,55,75,53],[93,8,76,6],[93,12,76,10],[93,13,76,11,"initialEvent"],[93,25,76,23],[93,28,76,26],[93,32,76,30],[94,6,77,4],[94,7,77,5],[94,9,77,7],[94,13,77,11],[94,14,77,12,"shouldDelayTouchForEvent"],[94,38,77,36],[94,39,77,37,"ev"],[94,41,77,39],[94,42,77,40],[94,46,77,44,"CONTENT_TOUCHES_DELAY"],[94,56,77,65],[94,57,77,65,"CONTENT_TOUCHES_DELAY"],[94,78,77,65],[94,79,77,66],[95,4,78,2],[96,4,79,2,"sendGestureStartedEvent"],[96,27,79,25,"sendGestureStartedEvent"],[96,28,79,26,"ev"],[96,30,79,28],[96,32,79,30],[97,6,80,4,"clearTimeout"],[97,18,80,16],[97,19,80,17],[97,23,80,21],[97,24,80,22,"visualFeedbackTimer"],[97,43,80,41],[97,44,80,42],[98,6,81,4],[98,10,81,8],[98,11,81,9,"visualFeedbackTimer"],[98,30,81,28],[98,33,81,31],[98,37,81,35],[99,6,82,4],[99,10,82,8],[99,11,82,9,"sendEvent"],[99,20,82,18],[99,21,82,19],[100,8,83,6],[100,11,83,9,"ev"],[100,13,83,11],[101,8,84,6,"eventType"],[101,17,84,15],[101,19,84,17,"Hammer"],[101,25,84,23],[101,26,84,23,"default"],[101,33,84,23],[101,34,84,24,"INPUT_MOVE"],[101,44,84,34],[102,8,85,6,"isFirst"],[102,15,85,13],[102,17,85,15],[103,6,86,4],[103,7,86,5],[103,8,86,6],[104,4,87,2],[105,4,88,2,"forceInvalidate"],[105,19,88,17,"forceInvalidate"],[105,20,88,18,"event"],[105,25,88,23],[105,27,88,25],[106,6,89,4],[106,11,89,9],[106,12,89,10,"forceInvalidate"],[106,27,89,25],[106,28,89,26,"event"],[106,33,89,31],[106,34,89,32],[107,6,90,4,"clearTimeout"],[107,18,90,16],[107,19,90,17],[107,23,90,21],[107,24,90,22,"visualFeedbackTimer"],[107,43,90,41],[107,44,90,42],[108,6,91,4],[108,10,91,8],[108,11,91,9,"visualFeedbackTimer"],[108,30,91,28],[108,33,91,31],[108,37,91,35],[109,6,92,4],[109,10,92,8],[109,11,92,9,"initialEvent"],[109,23,92,21],[109,26,92,24],[109,30,92,28],[110,4,93,2],[111,4,94,2,"onRawEvent"],[111,14,94,12,"onRawEvent"],[111,15,94,13,"ev"],[111,17,94,15],[111,19,94,17],[112,6,95,4],[112,11,95,9],[112,12,95,10,"onRawEvent"],[112,22,95,20],[112,23,95,21,"ev"],[112,25,95,23],[112,26,95,24],[113,6,96,4],[113,10,96,8],[113,14,96,12],[113,15,96,13,"isGestureRunning"],[113,31,96,29],[113,33,96,31],[114,8,97,6],[114,12,97,10,"ev"],[114,14,97,12],[114,15,97,13,"isFinal"],[114,22,97,20],[114,24,97,22],[115,10,98,8],[115,14,98,12,"timeout"],[115,21,98,19],[116,10,99,8],[116,14,99,12],[116,18,99,16],[116,19,99,17,"visualFeedbackTimer"],[116,38,99,36],[116,40,99,38],[117,12,100,10],[118,12,101,10],[119,12,102,10],[120,12,103,10,"timeout"],[120,19,103,17],[120,22,103,20,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[120,32,103,55],[120,33,103,55,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[120,68,103,55],[121,12,104,10],[121,16,104,14],[121,17,104,15,"sendGestureStartedEvent"],[121,40,104,38],[121,41,104,39],[121,45,104,43],[121,46,104,44,"initialEvent"],[121,58,104,56],[121,59,104,57],[122,12,105,10],[122,16,105,14],[122,17,105,15,"initialEvent"],[122,29,105,27],[122,32,105,30],[122,36,105,34],[123,10,106,8],[124,10,107,8],[124,14,107,8,"fireAfterInterval"],[124,20,107,25],[124,21,107,25,"fireAfterInterval"],[124,38,107,25],[124,40,107,26],[124,46,107,32],[125,12,108,10],[125,16,108,14],[125,17,108,15,"sendEvent"],[125,26,108,24],[125,27,108,25],[126,14,109,12],[126,17,109,15,"ev"],[126,19,109,17],[127,14,110,12,"eventType"],[127,23,110,21],[127,25,110,23,"Hammer"],[127,31,110,29],[127,32,110,29,"default"],[127,39,110,29],[127,40,110,30,"INPUT_END"],[127,49,110,39],[128,14,111,12,"isFinal"],[128,21,111,19],[128,23,111,21],[129,12,112,10],[129,13,112,11],[129,14,112,12],[130,12,113,10],[131,12,114,10],[131,16,114,14],[131,17,114,15,"onGestureEnded"],[131,31,114,29],[131,32,114,30],[131,33,114,31],[132,10,115,8],[132,11,115,9],[132,13,115,11,"timeout"],[132,20,115,18],[132,21,115,19],[133,8,116,6],[133,9,116,7],[133,15,116,13],[134,10,117,8],[134,14,117,12],[134,15,117,13,"sendEvent"],[134,24,117,22],[134,25,117,23],[135,12,118,10],[135,15,118,13,"ev"],[135,17,118,15],[136,12,119,10,"eventType"],[136,21,119,19],[136,23,119,21,"Hammer"],[136,29,119,27],[136,30,119,27,"default"],[136,37,119,27],[136,38,119,28,"INPUT_MOVE"],[136,48,119,38],[137,12,120,10,"isFinal"],[137,19,120,17],[137,21,120,19],[138,10,121,8],[138,11,121,9],[138,12,121,10],[139,8,122,6],[140,6,123,4],[141,4,124,2],[142,4,125,2,"updateGestureConfig"],[142,23,125,21,"updateGestureConfig"],[142,24,125,22],[143,6,126,4,"shouldActivateOnStart"],[143,27,126,25],[143,30,126,28],[143,35,126,33],[144,6,127,4,"disallowInterruption"],[144,26,127,24],[144,29,127,27],[144,34,127,32],[145,6,128,4,"shouldCancelWhenOutside"],[145,29,128,27],[145,32,128,30],[145,36,128,34],[146,6,129,4,"minDurationMs"],[146,19,129,17],[146,22,129,20,"Number"],[146,28,129,26],[146,29,129,27,"NaN"],[146,32,129,30],[147,6,130,4,"maxDist"],[147,13,130,11],[147,16,130,14,"Number"],[147,22,130,20],[147,23,130,21,"NaN"],[147,26,130,24],[148,6,131,4,"minPointers"],[148,17,131,15],[148,20,131,18],[148,21,131,19],[149,6,132,4,"maxPointers"],[149,17,132,15],[149,20,132,18],[149,21,132,19],[150,6,133,4],[150,9,133,7,"props"],[151,4,134,2],[151,5,134,3],[151,7,134,5],[152,6,135,4],[152,13,135,11],[152,18,135,16],[152,19,135,17,"updateGestureConfig"],[152,38,135,36],[152,39,135,37],[153,8,136,6,"shouldActivateOnStart"],[153,29,136,27],[154,8,137,6,"disallowInterruption"],[154,28,137,26],[155,8,138,6,"shouldCancelWhenOutside"],[155,31,138,29],[156,8,139,6,"minDurationMs"],[156,21,139,19],[157,8,140,6,"maxDist"],[157,15,140,13],[158,8,141,6,"minPointers"],[158,19,141,17],[159,8,142,6,"maxPointers"],[159,19,142,17],[160,8,143,6],[160,11,143,9,"props"],[161,6,144,4],[161,7,144,5],[161,8,144,6],[162,4,145,2],[163,2,146,0],[164,2,147,0],[164,6,147,0,"_default"],[164,14,147,0],[164,17,147,15,"PressGestureHandler"],[164,36,147,34],[165,0,147,35],[165,3]],"functionMap":{"names":["<global>","PressGestureHandler","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","fireAfterInterval$argument_0","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA;ACO;ECE;GDE;EEC;GFG;EGC;GHE;EIC;GJE;EKE;GLI;EMC;GNK;EOC;GPO;EQC;GRU;ESC;GTM;EUC;GVE;EWC;GXK;EYC;iDCI;KDG;GZC;EcC;GdQ;EeC;GfK;EgBC;0BHa;SGQ;GhBS;EiBC;GjBoB;CDC"},"hasCjsExports":false},"type":"js/module"}]}