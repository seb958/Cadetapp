{"dependencies":[{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":36,"index":247}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":248},"end":{"line":4,"column":33,"index":281}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":282},"end":{"line":5,"column":89,"index":371}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"],"imports":1}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":372},"end":{"line":6,"column":62,"index":434}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":435},"end":{"line":7,"column":66,"index":501}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _egjsHammerjs = require(_dependencyMap[0], \"@egjs/hammerjs\");\n  var Hammer = _interopDefault(_egjsHammerjs);\n  var _State = require(_dependencyMap[1], \"../State\");\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _DiscreteGestureHandler = require(_dependencyMap[3], \"./DiscreteGestureHandler\");\n  var DiscreteGestureHandler = _interopDefault(_DiscreteGestureHandler);\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class PressGestureHandler extends DiscreteGestureHandler.default {\n    constructor(...args) {\n      super(...args);\n      _defineProperty(this, \"visualFeedbackTimer\", void 0);\n      _defineProperty(this, \"initialEvent\", null);\n      _defineProperty(this, \"shouldDelayTouches\", true);\n    }\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return Hammer.default.Press;\n    }\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [Hammer.default.INPUT_START]: _State.State.BEGAN,\n        [Hammer.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [Hammer.default.INPUT_END]: _State.State.END,\n        [Hammer.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return {\n        ...super.getHammerConfig(),\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      };\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent({\n        ...ev,\n        eventType: Hammer.default.INPUT_MOVE,\n        isFirst: true\n      });\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent({\n              ...ev,\n              eventType: Hammer.default.INPUT_END,\n              isFinal: true\n            }); // @ts-ignore -- this should explicitly support undefined\n\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent({\n            ...ev,\n            eventType: Hammer.default.INPUT_MOVE,\n            isFinal: false\n          });\n        }\n      }\n    }\n    updateGestureConfig({\n      shouldActivateOnStart = false,\n      disallowInterruption = false,\n      shouldCancelWhenOutside = true,\n      minDurationMs = Number.NaN,\n      maxDist = Number.NaN,\n      minPointers = 1,\n      maxPointers = 1,\n      ...props\n    }) {\n      return super.updateGestureConfig({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers,\n        ...props\n      });\n    }\n  }\n  var _default = PressGestureHandler;\n});","lineCount":182,"map":[[12,2,173,0,"Object"],[12,8,173,0],[12,9,173,0,"defineProperty"],[12,23,173,0],[12,24,173,0,"exports"],[12,31,173,0],[13,4,173,0,"enumerable"],[13,14,173,0],[14,4,173,0,"get"],[14,7,173,0],[14,18,173,0,"get"],[14,19,173,0],[15,6,173,0],[15,13,173,0,"_default"],[15,21,173,0],[16,4,173,0],[17,2,173,0],[18,2,3,0],[18,6,3,0,"_egjsHammerjs"],[18,19,3,0],[18,22,3,0,"require"],[18,29,3,0],[18,30,3,0,"_dependencyMap"],[18,44,3,0],[19,2,3,0],[19,6,3,0,"Hammer"],[19,12,3,0],[19,15,3,0,"_interopDefault"],[19,30,3,0],[19,31,3,0,"_egjsHammerjs"],[19,44,3,0],[20,2,4,0],[20,6,4,0,"_State"],[20,12,4,0],[20,15,4,0,"require"],[20,22,4,0],[20,23,4,0,"_dependencyMap"],[20,37,4,0],[21,2,5,0],[21,6,5,0,"_constants"],[21,16,5,0],[21,19,5,0,"require"],[21,26,5,0],[21,27,5,0,"_dependencyMap"],[21,41,5,0],[22,2,6,0],[22,6,6,0,"_DiscreteGestureHandler"],[22,29,6,0],[22,32,6,0,"require"],[22,39,6,0],[22,40,6,0,"_dependencyMap"],[22,54,6,0],[23,2,6,0],[23,6,6,0,"DiscreteGestureHandler"],[23,28,6,0],[23,31,6,0,"_interopDefault"],[23,46,6,0],[23,47,6,0,"_DiscreteGestureHandler"],[23,70,6,0],[24,2,7,0],[24,6,7,0,"_utils"],[24,12,7,0],[24,15,7,0,"require"],[24,22,7,0],[24,23,7,0,"_dependencyMap"],[24,37,7,0],[25,2,1,0],[25,11,1,9,"_defineProperty"],[25,26,1,24,"_defineProperty"],[25,27,1,25,"obj"],[25,30,1,28],[25,32,1,30,"key"],[25,35,1,33],[25,37,1,35,"value"],[25,42,1,40],[25,44,1,42],[26,4,1,44],[26,8,1,48,"key"],[26,11,1,51],[26,15,1,55,"obj"],[26,18,1,58],[26,20,1,60],[27,6,1,62,"Object"],[27,12,1,68],[27,13,1,69,"defineProperty"],[27,27,1,83],[27,28,1,84,"obj"],[27,31,1,87],[27,33,1,89,"key"],[27,36,1,92],[27,38,1,94],[28,8,1,96,"value"],[28,13,1,101],[28,15,1,103,"value"],[28,20,1,108],[29,8,1,110,"enumerable"],[29,18,1,120],[29,20,1,122],[29,24,1,126],[30,8,1,128,"configurable"],[30,20,1,140],[30,22,1,142],[30,26,1,146],[31,8,1,148,"writable"],[31,16,1,156],[31,18,1,158],[32,6,1,163],[32,7,1,164],[32,8,1,165],[33,4,1,167],[33,5,1,168],[33,11,1,174],[34,6,1,176,"obj"],[34,9,1,179],[34,10,1,180,"key"],[34,13,1,183],[34,14,1,184],[34,17,1,187,"value"],[34,22,1,192],[35,4,1,194],[36,4,1,196],[36,11,1,203,"obj"],[36,14,1,206],[37,2,1,208],[38,2,9,0],[38,8,9,6,"PressGestureHandler"],[38,27,9,25],[38,36,9,34,"DiscreteGestureHandler"],[38,58,9,56],[38,59,9,56,"default"],[38,66,9,56],[38,67,9,57],[39,4,10,2,"constructor"],[39,15,10,13,"constructor"],[39,16,10,14],[39,19,10,17,"args"],[39,23,10,21],[39,25,10,23],[40,6,11,4],[40,11,11,9],[40,12,11,10],[40,15,11,13,"args"],[40,19,11,17],[40,20,11,18],[41,6,13,4,"_defineProperty"],[41,21,13,19],[41,22,13,20],[41,26,13,24],[41,28,13,26],[41,49,13,47],[41,51,13,49],[41,56,13,54],[41,57,13,55],[41,58,13,56],[42,6,15,4,"_defineProperty"],[42,21,15,19],[42,22,15,20],[42,26,15,24],[42,28,15,26],[42,42,15,40],[42,44,15,42],[42,48,15,46],[42,49,15,47],[43,6,17,4,"_defineProperty"],[43,21,17,19],[43,22,17,20],[43,26,17,24],[43,28,17,26],[43,48,17,46],[43,50,17,48],[43,54,17,52],[43,55,17,53],[44,4,18,2],[45,4,20,2],[45,8,20,6,"name"],[45,12,20,10,"name"],[45,13,20,10],[45,15,20,13],[46,6,21,4],[46,13,21,11],[46,20,21,18],[47,4,22,2],[48,4,24,2],[48,8,24,6,"minDurationMs"],[48,21,24,19,"minDurationMs"],[48,22,24,19],[48,24,24,22],[49,6,25,4],[50,6,26,4],[50,13,26,11],[50,17,26,11,"isnan"],[50,23,26,16],[50,24,26,16,"isnan"],[50,29,26,16],[50,31,26,17],[50,35,26,21],[50,36,26,22,"config"],[50,42,26,28],[50,43,26,29,"minDurationMs"],[50,56,26,42],[50,57,26,43],[50,60,26,46],[50,61,26,47],[50,64,26,50],[50,68,26,54],[50,69,26,55,"config"],[50,75,26,61],[50,76,26,62,"minDurationMs"],[50,89,26,75],[51,4,27,2],[52,4,29,2],[52,8,29,6,"maxDist"],[52,15,29,13,"maxDist"],[52,16,29,13],[52,18,29,16],[53,6,30,4],[53,13,30,11],[53,17,30,11,"isnan"],[53,23,30,16],[53,24,30,16,"isnan"],[53,29,30,16],[53,31,30,17],[53,35,30,21],[53,36,30,22,"config"],[53,42,30,28],[53,43,30,29,"maxDist"],[53,50,30,36],[53,51,30,37],[53,54,30,40],[53,55,30,41],[53,58,30,44],[53,62,30,48],[53,63,30,49,"config"],[53,69,30,55],[53,70,30,56,"maxDist"],[53,77,30,63],[54,4,31,2],[55,4,33,2],[55,8,33,6,"NativeGestureClass"],[55,26,33,24,"NativeGestureClass"],[55,27,33,24],[55,29,33,27],[56,6,34,4],[56,13,34,11,"Hammer"],[56,19,34,17],[56,20,34,17,"default"],[56,27,34,17],[56,28,34,18,"Press"],[56,33,34,23],[57,4,35,2],[58,4,37,2,"simulateCancelEvent"],[58,23,37,21,"simulateCancelEvent"],[58,24,37,22,"inputData"],[58,33,37,31],[58,35,37,33],[59,6,38,4],[60,6,39,4],[60,10,39,8],[60,11,39,9,"hasGestureFailed"],[60,27,39,25],[60,30,39,28],[60,34,39,32],[61,6,40,4],[61,10,40,8],[61,11,40,9,"cancelEvent"],[61,22,40,20],[61,23,40,21,"inputData"],[61,32,40,30],[61,33,40,31],[62,4,41,2],[63,4,43,2,"updateHasCustomActivationCriteria"],[63,37,43,35,"updateHasCustomActivationCriteria"],[63,38,43,36],[64,6,44,4,"shouldCancelWhenOutside"],[64,29,44,27],[65,6,45,4,"maxDistSq"],[66,4,46,2],[66,5,46,3],[66,7,46,5],[67,6,47,4],[67,13,47,11,"shouldCancelWhenOutside"],[67,36,47,34],[67,40,47,38],[67,41,47,39],[67,45,47,39,"isValidNumber"],[67,51,47,52],[67,52,47,52,"isValidNumber"],[67,65,47,52],[67,67,47,53,"maxDistSq"],[67,76,47,62],[67,77,47,63],[68,4,48,2],[69,4,50,2,"getState"],[69,12,50,10,"getState"],[69,13,50,11,"type"],[69,17,50,15],[69,19,50,17],[70,6,51,4],[70,13,51,11],[71,8,52,6],[71,9,52,7,"Hammer"],[71,15,52,13],[71,16,52,13,"default"],[71,23,52,13],[71,24,52,14,"INPUT_START"],[71,35,52,25],[71,38,52,28,"State"],[71,44,52,33],[71,45,52,33,"State"],[71,50,52,33],[71,51,52,34,"BEGAN"],[71,56,52,39],[72,8,53,6],[72,9,53,7,"Hammer"],[72,15,53,13],[72,16,53,13,"default"],[72,23,53,13],[72,24,53,14,"INPUT_MOVE"],[72,34,53,24],[72,37,53,27,"State"],[72,43,53,32],[72,44,53,32,"State"],[72,49,53,32],[72,50,53,33,"ACTIVE"],[72,56,53,39],[73,8,54,6],[73,9,54,7,"Hammer"],[73,15,54,13],[73,16,54,13,"default"],[73,23,54,13],[73,24,54,14,"INPUT_END"],[73,33,54,23],[73,36,54,26,"State"],[73,42,54,31],[73,43,54,31,"State"],[73,48,54,31],[73,49,54,32,"END"],[73,52,54,35],[74,8,55,6],[74,9,55,7,"Hammer"],[74,15,55,13],[74,16,55,13,"default"],[74,23,55,13],[74,24,55,14,"INPUT_CANCEL"],[74,36,55,26],[74,39,55,29,"State"],[74,45,55,34],[74,46,55,34,"State"],[74,51,55,34],[74,52,55,35,"CANCELLED"],[75,6,56,4],[75,7,56,5],[75,8,56,6,"type"],[75,12,56,10],[75,13,56,11],[76,4,57,2],[77,4,59,2,"getConfig"],[77,13,59,11,"getConfig"],[77,14,59,11],[77,16,59,14],[78,6,60,4],[78,10,60,8],[78,11,60,9],[78,15,60,13],[78,16,60,14,"hasCustomActivationCriteria"],[78,43,60,41],[78,45,60,43],[79,8,61,6],[80,8,62,6],[81,8,63,6],[81,15,63,13],[82,10,64,8,"shouldCancelWhenOutside"],[82,33,64,31],[82,35,64,33],[82,39,64,37],[83,10,65,8,"maxDistSq"],[83,19,65,17],[83,21,65,19],[84,8,66,6],[84,9,66,7],[85,6,67,4],[86,6,69,4],[86,13,69,11],[86,17,69,15],[86,18,69,16,"config"],[86,24,69,22],[87,4,70,2],[88,4,72,2,"getHammerConfig"],[88,19,72,17,"getHammerConfig"],[88,20,72,17],[88,22,72,20],[89,6,73,4],[89,13,73,11],[90,8,73,13],[90,11,73,16],[90,16,73,21],[90,17,73,22,"getHammerConfig"],[90,32,73,37],[90,33,73,38],[90,34,73,39],[91,8,74,6],[92,8,75,6,"time"],[92,12,75,10],[92,14,75,12],[92,18,75,16],[92,19,75,17,"minDurationMs"],[93,6,76,4],[93,7,76,5],[94,4,77,2],[95,4,79,2,"onGestureActivated"],[95,22,79,20,"onGestureActivated"],[95,23,79,21,"ev"],[95,25,79,23],[95,27,79,25],[96,6,80,4],[96,10,80,8],[96,11,80,9,"onGestureStart"],[96,25,80,23],[96,26,80,24,"ev"],[96,28,80,26],[96,29,80,27],[97,4,81,2],[98,4,83,2,"shouldDelayTouchForEvent"],[98,28,83,26,"shouldDelayTouchForEvent"],[98,29,83,27],[99,6,84,4,"pointerType"],[100,4,85,2],[100,5,85,3],[100,7,85,5],[101,6,86,4],[102,6,87,4],[102,13,87,11],[102,17,87,15],[102,18,87,16,"shouldDelayTouches"],[102,36,87,34],[102,40,87,38,"pointerType"],[102,51,87,49],[102,56,87,54],[102,63,87,61],[103,4,88,2],[104,4,90,2,"onGestureStart"],[104,18,90,16,"onGestureStart"],[104,19,90,17,"ev"],[104,21,90,19],[104,23,90,21],[105,6,91,4],[105,10,91,8],[105,11,91,9,"isGestureRunning"],[105,27,91,25],[105,30,91,28],[105,34,91,32],[106,6,92,4,"clearTimeout"],[106,18,92,16],[106,19,92,17],[106,23,92,21],[106,24,92,22,"visualFeedbackTimer"],[106,43,92,41],[106,44,92,42],[107,6,93,4],[107,10,93,8],[107,11,93,9,"initialEvent"],[107,23,93,21],[107,26,93,24,"ev"],[107,28,93,26],[108,6,94,4],[108,10,94,8],[108,11,94,9,"visualFeedbackTimer"],[108,30,94,28],[108,33,94,31],[108,37,94,31,"fireAfterInterval"],[108,43,94,48],[108,44,94,48,"fireAfterInterval"],[108,61,94,48],[108,63,94,49],[108,69,94,55],[109,8,95,6],[109,12,95,10],[109,13,95,11,"sendGestureStartedEvent"],[109,36,95,34],[109,37,95,35],[109,41,95,39],[109,42,95,40,"initialEvent"],[109,54,95,52],[109,55,95,53],[110,8,96,6],[110,12,96,10],[110,13,96,11,"initialEvent"],[110,25,96,23],[110,28,96,26],[110,32,96,30],[111,6,97,4],[111,7,97,5],[111,9,97,7],[111,13,97,11],[111,14,97,12,"shouldDelayTouchForEvent"],[111,38,97,36],[111,39,97,37,"ev"],[111,41,97,39],[111,42,97,40],[111,46,97,44,"CONTENT_TOUCHES_DELAY"],[111,56,97,65],[111,57,97,65,"CONTENT_TOUCHES_DELAY"],[111,78,97,65],[111,79,97,66],[112,4,98,2],[113,4,100,2,"sendGestureStartedEvent"],[113,27,100,25,"sendGestureStartedEvent"],[113,28,100,26,"ev"],[113,30,100,28],[113,32,100,30],[114,6,101,4,"clearTimeout"],[114,18,101,16],[114,19,101,17],[114,23,101,21],[114,24,101,22,"visualFeedbackTimer"],[114,43,101,41],[114,44,101,42],[115,6,102,4],[115,10,102,8],[115,11,102,9,"visualFeedbackTimer"],[115,30,102,28],[115,33,102,31],[115,37,102,35],[116,6,103,4],[116,10,103,8],[116,11,103,9,"sendEvent"],[116,20,103,18],[116,21,103,19],[117,8,103,21],[117,11,103,24,"ev"],[117,13,103,26],[118,8,104,6,"eventType"],[118,17,104,15],[118,19,104,17,"Hammer"],[118,25,104,23],[118,26,104,23,"default"],[118,33,104,23],[118,34,104,24,"INPUT_MOVE"],[118,44,104,34],[119,8,105,6,"isFirst"],[119,15,105,13],[119,17,105,15],[120,6,106,4],[120,7,106,5],[120,8,106,6],[121,4,107,2],[122,4,109,2,"forceInvalidate"],[122,19,109,17,"forceInvalidate"],[122,20,109,18,"event"],[122,25,109,23],[122,27,109,25],[123,6,110,4],[123,11,110,9],[123,12,110,10,"forceInvalidate"],[123,27,110,25],[123,28,110,26,"event"],[123,33,110,31],[123,34,110,32],[124,6,111,4,"clearTimeout"],[124,18,111,16],[124,19,111,17],[124,23,111,21],[124,24,111,22,"visualFeedbackTimer"],[124,43,111,41],[124,44,111,42],[125,6,112,4],[125,10,112,8],[125,11,112,9,"visualFeedbackTimer"],[125,30,112,28],[125,33,112,31],[125,37,112,35],[126,6,113,4],[126,10,113,8],[126,11,113,9,"initialEvent"],[126,23,113,21],[126,26,113,24],[126,30,113,28],[127,4,114,2],[128,4,116,2,"onRawEvent"],[128,14,116,12,"onRawEvent"],[128,15,116,13,"ev"],[128,17,116,15],[128,19,116,17],[129,6,117,4],[129,11,117,9],[129,12,117,10,"onRawEvent"],[129,22,117,20],[129,23,117,21,"ev"],[129,25,117,23],[129,26,117,24],[130,6,119,4],[130,10,119,8],[130,14,119,12],[130,15,119,13,"isGestureRunning"],[130,31,119,29],[130,33,119,31],[131,8,120,6],[131,12,120,10,"ev"],[131,14,120,12],[131,15,120,13,"isFinal"],[131,22,120,20],[131,24,120,22],[132,10,121,8],[132,14,121,12,"timeout"],[132,21,121,19],[133,10,123,8],[133,14,123,12],[133,18,123,16],[133,19,123,17,"visualFeedbackTimer"],[133,38,123,36],[133,40,123,38],[134,12,124,10],[135,12,125,10],[136,12,126,10],[137,12,127,10,"timeout"],[137,19,127,17],[137,22,127,20,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[137,32,127,55],[137,33,127,55,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[137,68,127,55],[138,12,128,10],[138,16,128,14],[138,17,128,15,"sendGestureStartedEvent"],[138,40,128,38],[138,41,128,39],[138,45,128,43],[138,46,128,44,"initialEvent"],[138,58,128,56],[138,59,128,57],[139,12,129,10],[139,16,129,14],[139,17,129,15,"initialEvent"],[139,29,129,27],[139,32,129,30],[139,36,129,34],[140,10,130,8],[141,10,132,8],[141,14,132,8,"fireAfterInterval"],[141,20,132,25],[141,21,132,25,"fireAfterInterval"],[141,38,132,25],[141,40,132,26],[141,46,132,32],[142,12,133,10],[142,16,133,14],[142,17,133,15,"sendEvent"],[142,26,133,24],[142,27,133,25],[143,14,133,27],[143,17,133,30,"ev"],[143,19,133,32],[144,14,134,12,"eventType"],[144,23,134,21],[144,25,134,23,"Hammer"],[144,31,134,29],[144,32,134,29,"default"],[144,39,134,29],[144,40,134,30,"INPUT_END"],[144,49,134,39],[145,14,135,12,"isFinal"],[145,21,135,19],[145,23,135,21],[146,12,136,10],[146,13,136,11],[146,14,136,12],[146,15,136,13],[146,16,136,14],[148,12,138,10],[148,16,138,14],[148,17,138,15,"onGestureEnded"],[148,31,138,29],[148,32,138,30],[148,33,138,31],[149,10,139,8],[149,11,139,9],[149,13,139,11,"timeout"],[149,20,139,18],[149,21,139,19],[150,8,140,6],[150,9,140,7],[150,15,140,13],[151,10,141,8],[151,14,141,12],[151,15,141,13,"sendEvent"],[151,24,141,22],[151,25,141,23],[152,12,141,25],[152,15,141,28,"ev"],[152,17,141,30],[153,12,142,10,"eventType"],[153,21,142,19],[153,23,142,21,"Hammer"],[153,29,142,27],[153,30,142,27,"default"],[153,37,142,27],[153,38,142,28,"INPUT_MOVE"],[153,48,142,38],[154,12,143,10,"isFinal"],[154,19,143,17],[154,21,143,19],[155,10,144,8],[155,11,144,9],[155,12,144,10],[156,8,145,6],[157,6,146,4],[158,4,147,2],[159,4,149,2,"updateGestureConfig"],[159,23,149,21,"updateGestureConfig"],[159,24,149,22],[160,6,150,4,"shouldActivateOnStart"],[160,27,150,25],[160,30,150,28],[160,35,150,33],[161,6,151,4,"disallowInterruption"],[161,26,151,24],[161,29,151,27],[161,34,151,32],[162,6,152,4,"shouldCancelWhenOutside"],[162,29,152,27],[162,32,152,30],[162,36,152,34],[163,6,153,4,"minDurationMs"],[163,19,153,17],[163,22,153,20,"Number"],[163,28,153,26],[163,29,153,27,"NaN"],[163,32,153,30],[164,6,154,4,"maxDist"],[164,13,154,11],[164,16,154,14,"Number"],[164,22,154,20],[164,23,154,21,"NaN"],[164,26,154,24],[165,6,155,4,"minPointers"],[165,17,155,15],[165,20,155,18],[165,21,155,19],[166,6,156,4,"maxPointers"],[166,17,156,15],[166,20,156,18],[166,21,156,19],[167,6,157,4],[167,9,157,7,"props"],[168,4,158,2],[168,5,158,3],[168,7,158,5],[169,6,159,4],[169,13,159,11],[169,18,159,16],[169,19,159,17,"updateGestureConfig"],[169,38,159,36],[169,39,159,37],[170,8,160,6,"shouldActivateOnStart"],[170,29,160,27],[171,8,161,6,"disallowInterruption"],[171,28,161,26],[172,8,162,6,"shouldCancelWhenOutside"],[172,31,162,29],[173,8,163,6,"minDurationMs"],[173,21,163,19],[174,8,164,6,"maxDist"],[174,15,164,13],[175,8,165,6,"minPointers"],[175,19,165,17],[176,8,166,6,"maxPointers"],[176,19,166,17],[177,8,167,6],[177,11,167,9,"props"],[178,6,168,4],[178,7,168,5],[178,8,168,6],[179,4,169,2],[180,2,171,0],[181,2,173,0],[181,6,173,0,"_default"],[181,14,173,0],[181,17,173,15,"PressGestureHandler"],[181,36,173,34],[182,0,173,35],[182,3]],"functionMap":{"names":["_defineProperty","<global>","PressGestureHandler","constructor","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","fireAfterInterval$argument_0","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA,iNC;ACQ;ECC;GDQ;EEE;GFE;EGE;GHG;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPK;EQE;GRO;ESE;GTW;EUE;GVK;EWE;GXE;EYE;GZK;EaE;iDCI;KDG;GbC;EeE;GfO;EgBE;GhBK;EiBE;0BHgB;SGO;GjBQ;EkBE;GlBoB;CDE"},"hasCjsExports":false},"type":"js/module"}]}